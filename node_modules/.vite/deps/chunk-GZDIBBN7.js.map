{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/components/conditionalSlot.js"],
  "sourcesContent": ["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.6\n */\nimport { forceUpdate } from '@stencil/core/internal/client/index.js';\nimport { c as createObserver } from './observers.js';\n\nconst observed = new Set();\nlet mutationObserver;\nconst observerOptions = { childList: true };\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction connectConditionalSlotComponent(component) {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n  mutationObserver.observe(component.el, observerOptions);\n}\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nfunction disconnectConditionalSlotComponent(component) {\n  observed.delete(component.el);\n  // we explicitly process queued mutations and disconnect and reconnect\n  // the observer until MutationObserver gets an `unobserve` method\n  // see https://github.com/whatwg/dom/issues/126\n  processMutations(mutationObserver.takeRecords());\n  mutationObserver.disconnect();\n  for (const [element] of observed.entries()) {\n    mutationObserver.observe(element, observerOptions);\n  }\n}\nfunction processMutations(mutations) {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n\nexport { connectConditionalSlotComponent as c, disconnectConditionalSlotComponent as d };\n"],
  "mappings": ";;;;;;;;AAQA,IAAM,WAAW,oBAAI,IAAI;AACzB,IAAI;AACJ,IAAM,kBAAkB,EAAE,WAAW,KAAK;AAW1C,SAAS,gCAAgC,WAAW;AAClD,MAAI,CAAC,kBAAkB;AACrB,uBAAmB,eAAe,YAAY,gBAAgB;AAAA,EAChE;AACA,mBAAiB,QAAQ,UAAU,IAAI,eAAe;AACxD;AAWA,SAAS,mCAAmC,WAAW;AACrD,WAAS,OAAO,UAAU,EAAE;AAI5B,mBAAiB,iBAAiB,YAAY,CAAC;AAC/C,mBAAiB,WAAW;AAC5B,aAAW,CAAC,OAAO,KAAK,SAAS,QAAQ,GAAG;AAC1C,qBAAiB,QAAQ,SAAS,eAAe;AAAA,EACnD;AACF;AACA,SAAS,iBAAiB,WAAW;AACnC,YAAU,QAAQ,CAAC,EAAE,OAAO,MAAM;AAChC,gBAAY,MAAM;AAAA,EACpB,CAAC;AACH;",
  "names": []
}
