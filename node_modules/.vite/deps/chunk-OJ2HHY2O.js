// node_modules/@arcgis/core/core/byteSizeEstimations.js
function n(n2) {
  return 32 + n2.length;
}
function r(n2) {
  return 16;
}
function t(t2) {
  if (!t2)
    return 0;
  let e2 = f;
  for (const o2 in t2)
    if (t2.hasOwnProperty(o2)) {
      const u2 = t2[o2];
      switch (typeof u2) {
        case "string":
          e2 += n(u2);
          break;
        case "number":
          e2 += r();
          break;
        case "boolean":
          e2 += 4;
      }
    }
  return e2;
}
function e(n2) {
  if (!n2)
    return 0;
  if (Array.isArray(n2))
    return o(n2);
  let r2 = f;
  for (const t2 in n2)
    n2.hasOwnProperty(t2) && (r2 += u(n2[t2]));
  return r2;
}
function o(n2) {
  const r2 = n2.length;
  if (0 === r2 || "number" == typeof n2[0])
    return 32 + 8 * r2;
  let t2 = i;
  for (let e2 = 0; e2 < r2; e2++)
    t2 += u(n2[e2]);
  return t2;
}
function u(t2) {
  switch (typeof t2) {
    case "object":
      return e(t2);
    case "string":
      return n(t2);
    case "number":
      return r();
    case "boolean":
      return 4;
    default:
      return 8;
  }
}
function c(n2, r2) {
  return i + n2.length * r2;
}
var f = 32;
var i = 32;
var s;
!function(n2) {
  n2[n2.KILOBYTES = 1024] = "KILOBYTES", n2[n2.MEGABYTES = 1048576] = "MEGABYTES", n2[n2.GIGABYTES = 1073741824] = "GIGABYTES";
}(s || (s = {}));

export {
  t,
  e,
  c,
  s
};
//# sourceMappingURL=chunk-OJ2HHY2O.js.map
