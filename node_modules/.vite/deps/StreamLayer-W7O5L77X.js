import {
  n as n4,
  p as p6
} from "./chunk-RQPDRERN.js";
import "./chunk-MBLYC2KR.js";
import "./chunk-XGEPEYGB.js";
import {
  i as i2,
  j
} from "./chunk-2T7LFOXQ.js";
import "./chunk-NCONZRBI.js";
import "./chunk-76CXRT5P.js";
import {
  s as s4
} from "./chunk-LZKCWJVH.js";
import "./chunk-7Q5M7ANT.js";
import {
  a
} from "./chunk-LPRQBCQL.js";
import "./chunk-QR4K7IDQ.js";
import {
  o as o3
} from "./chunk-7N45W3EA.js";
import {
  p as p7
} from "./chunk-MQVQXXLV.js";
import {
  p as p5
} from "./chunk-HAVCYBU2.js";
import "./chunk-A4HIS5ZJ.js";
import {
  x as x2
} from "./chunk-AMLHWG76.js";
import "./chunk-OFQYIOO7.js";
import {
  v as v2
} from "./chunk-G3HEFWHV.js";
import {
  p as p2
} from "./chunk-3GENFQBG.js";
import {
  c as c2
} from "./chunk-FX6IXM55.js";
import {
  O
} from "./chunk-QFFP6A5Q.js";
import {
  t
} from "./chunk-O5PXWHV2.js";
import "./chunk-J5VTDQTQ.js";
import {
  n as n3,
  o as o2,
  p as p3,
  p2 as p4
} from "./chunk-JP3KAUQB.js";
import "./chunk-INL7BDTP.js";
import {
  C
} from "./chunk-PDEVQZ7U.js";
import "./chunk-7XXQ7762.js";
import "./chunk-DVGM5RQS.js";
import "./chunk-R6OA44DQ.js";
import "./chunk-QTYVDCOW.js";
import {
  I,
  c,
  f,
  l as l2,
  m,
  p,
  v
} from "./chunk-YGVY4EIZ.js";
import "./chunk-HSDU7DIL.js";
import "./chunk-FWRLW4G5.js";
import "./chunk-JNNRJ7GQ.js";
import "./chunk-E52E6T7N.js";
import "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-GY2AJLN6.js";
import "./chunk-W62B63EU.js";
import "./chunk-N43PI2UO.js";
import "./chunk-O6VYMEIX.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-HUQX7WZO.js";
import "./chunk-BYSA56OH.js";
import "./chunk-US2IWMHE.js";
import "./chunk-ZPYDYUP5.js";
import {
  n as n2
} from "./chunk-TDV3ZXCQ.js";
import {
  t as t2
} from "./chunk-XJCUKRCO.js";
import {
  b
} from "./chunk-SOEQPPQP.js";
import "./chunk-22F6X66Z.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import {
  x
} from "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import "./chunk-J6LQZWZI.js";
import {
  M
} from "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import {
  k as k2
} from "./chunk-FUPLN7UM.js";
import {
  F,
  x as x3
} from "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import {
  i
} from "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import {
  w2
} from "./chunk-UWG37XSU.js";
import {
  k2 as k
} from "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import "./chunk-HLM6QCL2.js";
import {
  o
} from "./chunk-RXYULINL.js";
import "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-XQN7F674.js";
import {
  U
} from "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import {
  l
} from "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n,
  s4 as s3,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import {
  w
} from "./chunk-MJXQTGI2.js";
import {
  s as s2
} from "./chunk-LIZHLHNA.js";
import {
  T
} from "./chunk-BTUHYGXO.js";
import {
  s2 as s
} from "./chunk-UA3YPL2R.js";
import "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  r
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/layers/support/PurgeOptions.js
var t3;
var i3 = t3 = class extends l {
  constructor() {
    super(...arguments), this.age = null, this.ageReceived = null, this.displayCount = null, this.maxObservations = 1;
  }
  clone() {
    return new t3({ age: this.age, ageReceived: this.ageReceived, displayCount: this.displayCount, maxObservations: this.maxObservations });
  }
};
e([y({ type: Number, json: { write: true } })], i3.prototype, "age", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "ageReceived", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "displayCount", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "maxObservations", void 0), i3 = t3 = e([n("esri.layers.support.PurgeOptions")], i3);
var p8 = i3;

// node_modules/@arcgis/core/layers/StreamLayer.js
var X = s4();
var Y = class extends n4(p6(n2(a(t2(p2(p5(c2(v2(O(o3(b))))))))))) {
  constructor(...e2) {
    super(...e2), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.geometryDefinition = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.maxReconnectionAttempts = 0, this.maxReconnectionInterval = 20, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.operationalLayerType = "ArcGISStreamLayer", this.popupEnabled = true, this.popupTemplate = null, this.purgeOptions = new p8(), this.screenSizePerspectiveEnabled = true, this.sourceJSON = null, this.spatialReference = k.WGS84, this.type = "stream", this.url = null, this.updateInterval = 300, this.webSocketUrl = null;
  }
  normalizeCtorArgs(e2, r2) {
    return "string" == typeof e2 ? { url: e2, ...r2 } : e2;
  }
  load(e2) {
    if (!("WebSocket" in globalThis))
      return this.addResolvingPromise(Promise.reject(new s2("stream-layer:websocket-unsupported", "WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))), Promise.resolve(this);
    const r2 = r(e2) ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Stream Service", "Feed"] }, e2).catch(w).then(() => this._fetchService(r2))), Promise.resolve(this);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set renderer(e2) {
    F(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  readRenderer(e2, r2, s5) {
    const n5 = (r2 = r2.layerDefinition || r2).drawingInfo && r2.drawingInfo.renderer || void 0;
    if (n5) {
      const e3 = o2(n5, r2, s5) || void 0;
      return e3 || s.getLogger(this.declaredClass).error("Failed to create renderer", { rendererDefinition: r2.drawingInfo.renderer, layer: this, context: s5 }), e3;
    }
    if (r2.defaultSymbol)
      return r2.types && r2.types.length ? new C({ defaultSymbol: Z(r2.defaultSymbol, r2, s5), field: r2.typeIdField, uniqueValueInfos: r2.types.map((e3) => ({ id: e3.id, symbol: Z(e3.symbol, e3, s5) })) }) : new p3({ symbol: Z(r2.defaultSymbol, r2, s5) });
  }
  async connect(e2) {
    const [{ createConnection: r2 }] = await Promise.all([import("./createConnection-ZBWSFKGI.js"), this.load()]), t4 = i.toJSON(this.geometryType), { customParameters: o4 = null, definitionExpression: i4 = null, geometryDefinition: s5 = null, maxReconnectionAttempts: n5 = 0, maxReconnectionInterval: p9 = 20, spatialReference: a2 = this.spatialReference } = e2 || this.createConnectionParameters();
    return r2(this.parsedUrl, this.spatialReference, a2, t4, { geometry: s5, where: i4 }, n5, p9, o4);
  }
  createConnectionParameters() {
    return { spatialReference: this.spatialReference, customParameters: this.customParameters, definitionExpression: this.definitionExpression, geometryDefinition: this.geometryDefinition, maxReconnectionAttempts: this.maxReconnectionAttempts, maxReconnectionInterval: this.maxReconnectionInterval };
  }
  createPopupTemplate(e2) {
    return p7(this, e2);
  }
  createQuery() {
    const e2 = new x2();
    return e2.returnGeometry = true, e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1", e2;
  }
  getFieldDomain(e2, r2) {
    if (!this.fields)
      return null;
    let t4 = null;
    return this.fields.some((r3) => (r3.name === e2 && (t4 = r3.domain), !!t4)), t4;
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  serviceSupportsSpatialReference(e2) {
    return true;
  }
  async _fetchService(e2) {
    var _a, _b;
    if (!!this.webSocketUrl) {
      if (!((_a = this.timeInfo) == null ? void 0 : _a.trackIdField))
        throw new s2("stream-layer:missing-metadata", "The stream layer trackIdField must be specified.");
      if (!this.objectIdField)
        throw new s2("stream-layer:missing-metadata", "The stream layer objectIdField must be specified.");
      if (!this.fields)
        throw new s2("stream-layer:missing-metadata", "The stream layer fields must be specified.");
      if (!this.geometryType)
        throw new s2("stream-layer:missing-metadata", "The stream layer geometryType must be specified.");
      this.url = this.webSocketUrl;
    } else if (!this.sourceJSON) {
      const { data: r2 } = await U(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, ...this.parsedUrl.query }, responseType: "json", signal: e2 });
      this.sourceJSON = r2;
    }
    return this.sourceJSON = { ...(_b = this.sourceJSON) != null ? _b : {}, objectIdField: "__esri_stream_id__" }, this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl }), F(this.renderer, this.fieldsIndex), x3(this.timeInfo, this.fieldsIndex), t(this, { origin: "service" });
  }
};
e([y({ type: String })], Y.prototype, "copyright", void 0), e([y({ readOnly: true })], Y.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], Y.prototype, "definitionExpression", void 0), e([y({ type: String })], Y.prototype, "displayField", void 0), e([y({ type: x })], Y.prototype, "elevationInfo", void 0), e([y(X.fields)], Y.prototype, "fields", void 0), e([y(X.fieldsIndex)], Y.prototype, "fieldsIndex", void 0), e([y({ type: w2 })], Y.prototype, "geometryDefinition", void 0), e([y({ type: i.apiValues, json: { read: { reader: i.read } } })], Y.prototype, "geometryType", void 0), e([y(m)], Y.prototype, "labelsVisible", void 0), e([y({ type: [j], json: { read: { source: "layerDefinition.drawingInfo.labelingInfo", reader: i2 }, write: { target: "layerDefinition.drawingInfo.labelingInfo" } } })], Y.prototype, "labelingInfo", void 0), e([y(c)], Y.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], Y.prototype, "listMode", void 0), e([y({ type: T })], Y.prototype, "maxReconnectionAttempts", void 0), e([y({ type: T })], Y.prototype, "maxReconnectionInterval", void 0), e([y(I)], Y.prototype, "maxScale", void 0), e([y(v)], Y.prototype, "minScale", void 0), e([y({ type: String })], Y.prototype, "objectIdField", void 0), e([y({ value: "ArcGISStreamLayer", type: ["ArcGISStreamLayer"] })], Y.prototype, "operationalLayerType", void 0), e([y(p)], Y.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], Y.prototype, "popupTemplate", void 0), e([y({ type: p8 })], Y.prototype, "purgeOptions", void 0), e([y({ types: p4, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { name: "layerDefinition.drawingInfo.renderer", types: n3, write: true } }, write: { target: "layerDefinition.drawingInfo.renderer" } } })], Y.prototype, "renderer", null), e([o("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], Y.prototype, "readRenderer", null), e([y(l2)], Y.prototype, "screenSizePerspectiveEnabled", void 0), e([y()], Y.prototype, "sourceJSON", void 0), e([y({ type: k, json: { origins: { service: { read: { source: "spatialReference" } } } } })], Y.prototype, "spatialReference", void 0), e([y({ json: { read: false } })], Y.prototype, "type", void 0), e([y(f)], Y.prototype, "url", void 0), e([y({ type: Number })], Y.prototype, "updateInterval", void 0), e([y({ type: String })], Y.prototype, "webSocketUrl", void 0), Y = e([n("esri.layers.StreamLayer")], Y);
var Z = s3({ types: M });
var $ = Y;
export {
  $ as default
};
//# sourceMappingURL=StreamLayer-W7O5L77X.js.map
