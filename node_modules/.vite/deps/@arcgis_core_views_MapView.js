import "./chunk-2GNI5SZ3.js";
import {
  g as g4,
  h as h6
} from "./chunk-RSD4VYC6.js";
import {
  o as o6
} from "./chunk-KXA4TECI.js";
import {
  v as v6
} from "./chunk-Y3Q6KWWE.js";
import {
  e as e9,
  e2 as e13,
  l as l10,
  r as r12,
  s as s9,
  w as w5
} from "./chunk-AE5K4SOQ.js";
import {
  Gt,
  H,
  St,
  Y,
  Z,
  _ as _2,
  ft,
  gt,
  ht,
  jt,
  lt,
  ot,
  pt,
  tt,
  ut,
  wt,
  xt,
  yt
} from "./chunk-FVJU3I6I.js";
import {
  e as e12
} from "./chunk-VHXWATHW.js";
import "./chunk-7DLBSBVE.js";
import "./chunk-4XFEPZ26.js";
import "./chunk-FERTI5PU.js";
import {
  d as d3
} from "./chunk-WSICXEIO.js";
import {
  h as h5
} from "./chunk-VWCRJ6R6.js";
import "./chunk-MKNNZ33G.js";
import "./chunk-JQUWFKNU.js";
import "./chunk-UVQQJ3R6.js";
import "./chunk-QU433TMZ.js";
import "./chunk-IIAN3QNN.js";
import {
  l as l8
} from "./chunk-GX2FDWTU.js";
import {
  r as r9,
  t as t11
} from "./chunk-5FHRTN6L.js";
import "./chunk-TFHLTN6F.js";
import {
  t as t10
} from "./chunk-UDYHZLTE.js";
import {
  e as e7
} from "./chunk-IQBIGNPU.js";
import {
  r as r8
} from "./chunk-4JNOVZUK.js";
import "./chunk-OJ2HHY2O.js";
import "./chunk-6FXLJAMI.js";
import {
  M as M3,
  h as h4,
  i as i9,
  r as r7,
  s as s8
} from "./chunk-ZNRXLY4R.js";
import {
  a2 as a8,
  s as s7
} from "./chunk-GNLPM47O.js";
import "./chunk-UKETAWZI.js";
import "./chunk-HKYKZCGY.js";
import "./chunk-5MBCFCGH.js";
import {
  b as b5,
  x as x2
} from "./chunk-SI2PF7MG.js";
import "./chunk-NF6EUNPP.js";
import "./chunk-RQ3CU5II.js";
import {
  n as n10
} from "./chunk-JEA4MMTV.js";
import {
  e as e8,
  f as f4,
  i as i12,
  r as r10
} from "./chunk-RG3AHHRL.js";
import "./chunk-O7LTV6XN.js";
import "./chunk-4TWWY75O.js";
import "./chunk-SQSR6K2M.js";
import "./chunk-UAJ2SDPQ.js";
import {
  e as e10
} from "./chunk-4RQKL5NC.js";
import {
  i as i14,
  n as n12,
  o as o7,
  r as r11
} from "./chunk-HSH7J5EL.js";
import {
  P,
  i as i13,
  o as o5,
  u as u4
} from "./chunk-757322TP.js";
import "./chunk-P3W4YLFD.js";
import {
  a as a9,
  m as m6,
  o as o4,
  r as r6,
  z
} from "./chunk-75RMBUYZ.js";
import "./chunk-TJ2I6XQT.js";
import "./chunk-EDHROVWI.js";
import "./chunk-34YPGGJT.js";
import "./chunk-TWJNUVV2.js";
import "./chunk-NCXAKZRR.js";
import {
  L as L3,
  m as m7
} from "./chunk-XWL2KVTH.js";
import "./chunk-TM6KXMYT.js";
import "./chunk-APU7GFNJ.js";
import {
  l as l5
} from "./chunk-E4KPV765.js";
import "./chunk-DUCSW4OU.js";
import "./chunk-WVDA5Z37.js";
import {
  I as I2,
  y as y2
} from "./chunk-LT5KLTS5.js";
import "./chunk-SERWCSJG.js";
import {
  l as l6
} from "./chunk-MFXTPFHI.js";
import {
  j as j5,
  p as p3
} from "./chunk-OOOPZLJE.js";
import "./chunk-U2WD23Z5.js";
import "./chunk-RW4M3CI3.js";
import {
  n as n9
} from "./chunk-ZEEU5HOK.js";
import "./chunk-K3N3RUKL.js";
import "./chunk-3KEVP6XQ.js";
import "./chunk-745B43YA.js";
import "./chunk-CN5IW2C7.js";
import "./chunk-RLIJP6DT.js";
import {
  An,
  en,
  rn,
  tn
} from "./chunk-FFVIDMFN.js";
import {
  e as e11
} from "./chunk-EKKHTIQT.js";
import {
  u as u3
} from "./chunk-VQXS4XNR.js";
import "./chunk-ZN2ROKCE.js";
import {
  n as n11
} from "./chunk-VJ7HYCLP.js";
import {
  e as e6,
  t as t9
} from "./chunk-QXHTRQEZ.js";
import {
  n as n8,
  r as r5
} from "./chunk-KYSY3ZPW.js";
import {
  t as t8
} from "./chunk-RDNOEC45.js";
import {
  e as e5
} from "./chunk-QRBRKBU3.js";
import {
  M as M2,
  e as e3,
  e2 as e4,
  o as o3,
  r as r4,
  t as t7
} from "./chunk-NWBHRPMR.js";
import {
  f as f3,
  h as h3,
  i as i3,
  n2 as n7,
  v as v4,
  w as w4
} from "./chunk-IIUWTGWW.js";
import "./chunk-K6AYGXUT.js";
import "./chunk-BHXTNOEK.js";
import "./chunk-IS4TIT4N.js";
import "./chunk-I4RYNNL6.js";
import {
  Ze
} from "./chunk-53VWTVL2.js";
import "./chunk-6CR2FXC5.js";
import "./chunk-VYG3YGZX.js";
import "./chunk-65SMURZR.js";
import "./chunk-VGNX3TFX.js";
import "./chunk-TZTENXCS.js";
import "./chunk-RQPDRERN.js";
import "./chunk-MBLYC2KR.js";
import "./chunk-XGEPEYGB.js";
import "./chunk-6BYMCM5A.js";
import "./chunk-BR5PSTJI.js";
import "./chunk-2T7LFOXQ.js";
import "./chunk-NCONZRBI.js";
import "./chunk-76CXRT5P.js";
import "./chunk-LZKCWJVH.js";
import "./chunk-7Q5M7ANT.js";
import "./chunk-LPRQBCQL.js";
import "./chunk-QR4K7IDQ.js";
import "./chunk-7N45W3EA.js";
import "./chunk-MQVQXXLV.js";
import {
  v as v5
} from "./chunk-YTOF4Z6B.js";
import "./chunk-HAVCYBU2.js";
import "./chunk-4HXPP4EA.js";
import "./chunk-M3NPSHCI.js";
import "./chunk-SBKKCBDN.js";
import {
  c as c8,
  d as d2
} from "./chunk-MLVV3H5S.js";
import "./chunk-A4HIS5ZJ.js";
import {
  m as m5,
  x
} from "./chunk-AMLHWG76.js";
import "./chunk-OFQYIOO7.js";
import "./chunk-ZJZBAYFU.js";
import "./chunk-G3HEFWHV.js";
import "./chunk-3GENFQBG.js";
import "./chunk-FX6IXM55.js";
import "./chunk-QFFP6A5Q.js";
import "./chunk-O5PXWHV2.js";
import "./chunk-J5VTDQTQ.js";
import "./chunk-YF2CRSQX.js";
import "./chunk-JP3KAUQB.js";
import "./chunk-INL7BDTP.js";
import "./chunk-PDEVQZ7U.js";
import "./chunk-7XXQ7762.js";
import "./chunk-DVGM5RQS.js";
import "./chunk-R6OA44DQ.js";
import "./chunk-QTYVDCOW.js";
import "./chunk-YGVY4EIZ.js";
import "./chunk-HSDU7DIL.js";
import "./chunk-FWRLW4G5.js";
import "./chunk-JNNRJ7GQ.js";
import "./chunk-E52E6T7N.js";
import "./chunk-UK3I5WXR.js";
import "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-GY2AJLN6.js";
import "./chunk-W62B63EU.js";
import "./chunk-N43PI2UO.js";
import "./chunk-O6VYMEIX.js";
import "./chunk-NDQ5FHGV.js";
import {
  b as b3,
  j as j4
} from "./chunk-HUQX7WZO.js";
import "./chunk-BYSA56OH.js";
import "./chunk-ZWUEORSX.js";
import {
  T
} from "./chunk-US2IWMHE.js";
import {
  l as l9
} from "./chunk-ZL4T4NIV.js";
import "./chunk-NAKEKTIK.js";
import "./chunk-QWNKYSI4.js";
import {
  s as s5
} from "./chunk-FMJZBZWF.js";
import "./chunk-GOYVJTGW.js";
import {
  a as a4
} from "./chunk-ZPYDYUP5.js";
import {
  a as a10,
  i as i10,
  l as l7
} from "./chunk-CYI2FLSH.js";
import "./chunk-TDV3ZXCQ.js";
import "./chunk-XJCUKRCO.js";
import {
  b as b4
} from "./chunk-SOEQPPQP.js";
import "./chunk-22F6X66Z.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import {
  a as a7,
  c as c7,
  d
} from "./chunk-REIQNAQW.js";
import {
  g as g3
} from "./chunk-J6LQZWZI.js";
import "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import {
  I,
  c as c3,
  c2 as c4,
  c4 as c5,
  i2 as i6,
  i3 as i7,
  i4 as i8,
  u as u2
} from "./chunk-FUPLN7UM.js";
import {
  he,
  ie,
  xe
} from "./chunk-376OPXM4.js";
import {
  i as i11
} from "./chunk-DER356EU.js";
import {
  a as a5,
  a2 as a6,
  c as c6
} from "./chunk-MZIWIEIR.js";
import {
  S as S2
} from "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import {
  c as c2
} from "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import {
  m as m4
} from "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import {
  i as i5
} from "./chunk-KXVMEIWT.js";
import {
  j as j3
} from "./chunk-UDND2Z3V.js";
import {
  i as i4,
  s as s6
} from "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import {
  l
} from "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import {
  a,
  b
} from "./chunk-C5H57NTD.js";
import {
  g
} from "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import {
  r as r2
} from "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import {
  i as i2,
  v2 as v3
} from "./chunk-3MNMDUQZ.js";
import {
  M,
  R,
  c2 as c,
  r as r3,
  w,
  w2
} from "./chunk-UWG37XSU.js";
import {
  E as E2,
  k2 as k
} from "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import "./chunk-HLM6QCL2.js";
import "./chunk-RXYULINL.js";
import {
  U as U2,
  a as a3,
  f as f2,
  h as h2,
  j as j2,
  l as l3,
  w as w3
} from "./chunk-5NXILPDI.js";
import {
  n as n6
} from "./chunk-THVR7IAM.js";
import {
  _,
  m as m3
} from "./chunk-ZWJJTUFL.js";
import {
  L as L2,
  S,
  m as m2,
  u
} from "./chunk-XQN7F674.js";
import {
  U as U3
} from "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import {
  l as l4
} from "./chunk-4FEGON7M.js";
import {
  s as s4
} from "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import {
  l as l2
} from "./chunk-7QMMKGW4.js";
import {
  A as A2,
  e as e2,
  m,
  n as n3,
  n2 as n4,
  n5,
  o3 as o2,
  t2,
  t4 as t3,
  t5 as t4,
  v as v2,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import {
  t as t5
} from "./chunk-U2XHEJM7.js";
import {
  A,
  C,
  E,
  L,
  U,
  a as a2,
  b as b2,
  f,
  g as g2,
  i,
  j,
  p as p2,
  t as t6,
  v
} from "./chunk-MJXQTGI2.js";
import {
  s as s3
} from "./chunk-LIZHLHNA.js";
import {
  n as n2
} from "./chunk-BTUHYGXO.js";
import {
  s2
} from "./chunk-UA3YPL2R.js";
import {
  has,
  n2 as n
} from "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  e,
  h,
  o,
  p,
  r,
  s,
  t
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/views/BreakpointsOwner.js
var n13 = { widthBreakpoint: { getValue(e25) {
  const i33 = e25.viewSize[0], s24 = e25.breakpoints, a32 = this.values;
  return i33 <= s24.xsmall ? a32.xsmall : i33 <= s24.small ? a32.small : i33 <= s24.medium ? a32.medium : i33 <= s24.large ? a32.large : a32.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-width-xsmall esri-view-width-less-than-small esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", small: "esri-view-width-small esri-view-width-greater-than-xsmall esri-view-width-less-than-medium esri-view-width-less-than-large esri-view-width-less-than-xlarge", medium: "esri-view-width-medium esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-less-than-large esri-view-width-less-than-xlarge", large: "esri-view-width-large esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-less-than-xlarge", xlarge: "esri-view-width-xlarge esri-view-width-greater-than-xsmall esri-view-width-greater-than-small esri-view-width-greater-than-medium esri-view-width-greater-than-large" } }, heightBreakpoint: { getValue(e25) {
  const i33 = e25.viewSize[1], s24 = e25.breakpoints, a32 = this.values;
  return i33 <= s24.xsmall ? a32.xsmall : i33 <= s24.small ? a32.small : i33 <= s24.medium ? a32.medium : i33 <= s24.large ? a32.large : a32.xlarge;
}, values: { xsmall: "xsmall", small: "small", medium: "medium", large: "large", xlarge: "xlarge" }, valueToClassName: { xsmall: "esri-view-height-xsmall esri-view-height-less-than-small esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", small: "esri-view-height-small esri-view-height-greater-than-xsmall esri-view-height-less-than-medium esri-view-height-less-than-large esri-view-height-less-than-xlarge", medium: "esri-view-height-medium esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-less-than-large esri-view-height-less-than-xlarge", large: "esri-view-height-large esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-less-than-xlarge", xlarge: "esri-view-height-xlarge esri-view-height-greater-than-xsmall esri-view-height-greater-than-small esri-view-height-greater-than-medium esri-view-height-greater-than-large" } }, orientation: { getValue(e25) {
  const i33 = e25.viewSize, s24 = i33[0], a32 = i33[1], t23 = this.values;
  return a32 >= s24 ? t23.portrait : t23.landscape;
}, values: { portrait: "portrait", landscape: "landscape" }, valueToClassName: { portrait: "esri-view-orientation-portrait", landscape: "esri-view-orientation-landscape" } } };
var o8 = { xsmall: 544, small: 768, medium: 992, large: 1200 };
function m8(e25) {
  const i33 = e25;
  return i33 && i33.xsmall < i33.small && i33.small < i33.medium && i33.medium < i33.large;
}
function g5(e25, i33) {
  return i33 ? n13[e25].valueToClassName[i33].split(" ") : [];
}
var w6 = (w17) => {
  let d16 = class extends w17 {
    constructor(...e25) {
      super(...e25), this._breakpointsHandles = new t4(), this.orientation = null, this.widthBreakpoint = null, this.heightBreakpoint = null, this.breakpoints = o8;
    }
    initialize() {
      this._breakpointsHandles.add(l3(() => [this.breakpoints, this.size], () => this._updateClassNames(), h2));
    }
    destroy() {
      this.destroyed || (this._removeActiveClassNames(), this._breakpointsHandles = s(this._breakpointsHandles));
    }
    set breakpoints(e25) {
      if (e25 === this._get("breakpoints"))
        return;
      const i33 = m8(e25);
      if (!i33) {
        const e26 = JSON.stringify(o8, null, 2);
        console.warn("provided breakpoints are not valid, using defaults:" + e26);
      }
      e25 = i33 ? e25 : o8, this._set("breakpoints", { ...e25 });
    }
    _updateClassNames() {
      if (!this.container)
        return;
      const e25 = t5.acquire(), s24 = t5.acquire();
      let a32, t23 = false;
      for (a32 in n13) {
        const i33 = this[a32], r23 = n13[a32].getValue({ viewSize: this.size, breakpoints: this.breakpoints });
        i33 !== r23 && (t23 = true, this[a32] = r23, g5(a32, i33).forEach((e26) => s24.push(e26)), g5(a32, r23).forEach((i34) => e25.push(i34)));
      }
      t23 && (this._applyClassNameChanges(e25, s24), t5.release(e25), t5.release(s24));
    }
    _applyClassNameChanges(e25, i33) {
      const s24 = this.container;
      s24 && (i33.forEach((e26) => s24.classList.remove(e26)), e25.forEach((e26) => s24.classList.add(e26)));
    }
    _removeActiveClassNames() {
      const e25 = this.container;
      if (!e25)
        return;
      let i33;
      for (i33 in n13)
        g5(i33, this[i33]).forEach((i34) => e25.classList.remove(i34));
    }
  };
  return e2([y()], d16.prototype, "breakpoints", null), e2([y()], d16.prototype, "orientation", void 0), e2([y()], d16.prototype, "widthBreakpoint", void 0), e2([y()], d16.prototype, "heightBreakpoint", void 0), d16 = e2([n4("esri.views.BreakpointsOwner")], d16), d16;
};

// node_modules/@arcgis/core/views/overlay/ViewOverlay.js
var a11 = class extends m {
  constructor() {
    super(...arguments), this.items = new j3(), this._watchUpdatingTracking = new c7(), this._callbacks = /* @__PURE__ */ new Map(), this._projector = i3(), this._hiddenProjector = i3();
  }
  get needsRender() {
    return this.items.length > 0;
  }
  get updating() {
    var _a, _b;
    return (_b = (_a = this._watchUpdatingTracking) == null ? void 0 : _a.updating) != null ? _b : false;
  }
  initialize() {
    const t23 = document.createElement("div");
    t23.className = "esri-overlay-surface", this._set("surface", t23), this._hiddenSurface = document.createElement("div"), this._hiddenSurface.setAttribute("style", "visibility: hidden;"), t23.appendChild(this._hiddenSurface), this._watchUpdatingTracking.addOnCollectionChange(() => this.items, (t24) => {
      for (const e25 of t24.added) {
        const t25 = () => e25.render();
        this._callbacks.set(e25, t25), this._projector.append(this.surface, t25);
      }
      for (const e25 of t24.removed) {
        const t25 = this._projector.detach(this._callbacks.get(e25));
        this.surface.removeChild(t25.domNode), this._callbacks.delete(e25);
      }
    });
  }
  addItem(t23) {
    this.items.add(t23);
  }
  removeItem(t23) {
    this.items.remove(t23);
  }
  destroy() {
    this.items.removeAll(), this._callbacks.forEach((t23) => this._projector.detach(t23)), this._callbacks = null, this._projector = null, this._watchUpdatingTracking.destroy();
  }
  render() {
    this._projector.renderNow();
  }
  computeBoundingRect(t23) {
    const e25 = this._hiddenSurface, r23 = this._hiddenProjector;
    let o24 = null;
    const s24 = () => (o24 = t23.render(), o24);
    r23.append(e25, s24), r23.renderNow();
    const i33 = { left: 0, top: 0, right: 0, bottom: 0 };
    if (o24 && o24.domNode) {
      const t24 = o24.domNode.getBoundingClientRect();
      i33.left = t24.left, i33.top = t24.top, i33.right = t24.right, i33.bottom = t24.bottom;
    }
    for (r23.detach(s24); e25.firstChild; )
      e25.removeChild(e25.firstChild);
    return i33;
  }
  overlaps(t23, e25) {
    const r23 = this.computeBoundingRect(t23), o24 = this.computeBoundingRect(e25);
    return Math.max(r23.left, o24.left) <= Math.min(r23.right, o24.right) && Math.max(r23.top, o24.top) <= Math.min(r23.bottom, o24.bottom);
  }
  get hasVisibleItems() {
    return this.items.some((t23) => t23.visible);
  }
  async prepare() {
    await document.fonts.load(this._fontString()).catch(() => {
    });
  }
  renderCanvas(t23) {
    if (!this.items.some((t24) => t24.visible))
      return;
    const e25 = t23.getContext("2d");
    e25.save(), e25.font = this._fontString(), this.items.forEach((t24) => {
      e25.save(), t24.renderCanvas(e25), e25.restore();
    }), e25.restore();
  }
  _fontString() {
    return `10px ${getComputedStyle(this.surface).fontFamily}`;
  }
};
e2([y({ readOnly: true })], a11.prototype, "surface", void 0), e2([y({ readOnly: true })], a11.prototype, "items", void 0), e2([y({ readOnly: true })], a11.prototype, "needsRender", null), e2([y({ readOnly: true })], a11.prototype, "_watchUpdatingTracking", void 0), e2([y({ readOnly: true })], a11.prototype, "updating", null), a11 = e2([n4("esri.views.overlay.ViewOverlay")], a11);
var c9 = a11;

// node_modules/@arcgis/core/widgets/Feature/support/featureUtils.js
var d4 = "esri.widgets.Feature.support.featureUtils";
var p4 = s2.getLogger(d4);
var m9 = /href=(""|'')/gi;
var y3 = /(\{([^\{\r\n]+)\})/g;
var g6 = /\'/g;
var h7 = /^\s*expression\//i;
var I3 = /(\n)/gi;
var b6 = /[\u00A0-\u9999<>\&]/gim;
var F = /href\s*=\s*(?:\"([^\"]+)\"|\'([^\']+)\')/gi;
var w7 = /^(?:mailto:|tel:)/;
var N = "relationships/";
var E3 = S("short-date-short-time");
function T2(e25) {
  if (!t(e25))
    return e25.get("sourceLayer") || e25.get("layer");
}
async function j6(e25, t23) {
  return "function" == typeof e25 ? e25.call(null, t23) : e25;
}
function x3(e25 = "") {
  if (e25)
    return !w7.test(e25.trim().toLowerCase());
}
function C2(e25) {
  return !!e25 && h7.test(e25);
}
function M4(e25, t23) {
  if (!C2(t23) || !e25)
    return null;
  const r23 = t23.replace(h7, "").toLowerCase();
  let n30;
  return e25.some((e26) => e26.name.toLowerCase() === r23 && (n30 = e26, true)), n30;
}
function q(e25, t23) {
  const r23 = M4(t23, e25 == null ? void 0 : e25.fieldName);
  return r23 ? r23.title || null : e25 ? e25.label || e25.fieldName : null;
}
function R2(e25, t23) {
  const r23 = t23.get(e25.toLowerCase());
  return `{${r23 && r23.fieldName || e25}}`;
}
function v7(e25) {
  return e25.replace(m9, "");
}
function D(e25, t23) {
  const r23 = A3(t23, e25);
  return r23 ? r23.name : e25;
}
function L4(e25, t23) {
  return e25 && e25.map((e26) => D(e26, t23));
}
function A3(e25, t23) {
  return e25 && "function" == typeof e25.getField ? e25.getField(t23) : null;
}
function U4(e25) {
  return `${e25}`.trim();
}
function $({ attributes: e25, globalAttributes: t23, layer: r23, text: n30, expressionAttributes: i33, fieldInfoMap: o24 }) {
  return n30 ? S3({ formattedAttributes: t23, template: _3(n30, { ...t23, ...i33, ...e25 }, r23), fieldInfoMap: o24 }) : "";
}
function S3({ formattedAttributes: e25, template: t23, fieldInfoMap: r23 }) {
  return U4(v7(n(n(t23, (e26) => R2(e26, r23)), e25)));
}
function G(e25, t23, r23 = false) {
  const n30 = t23[e25];
  if ("string" == typeof n30) {
    const i33 = "%27", o24 = (r23 ? encodeURIComponent(n30) : n30).replace(g6, i33);
    t23[e25] = o24;
  }
}
function k2(e25, t23 = false) {
  const r23 = { ...e25 };
  return Object.keys(r23).forEach((e26) => G(e26, r23, t23)), r23;
}
function O(e25, t23, r23) {
  const i33 = (t23 = U4(t23)) && "{" !== t23[0];
  return n(e25, k2(r23, i33));
}
function P2(e25, t23) {
  return e25.replace(y3, (e26, r23, n30) => {
    const i33 = A3(t23, n30);
    return i33 ? `{${i33.name}}` : r23;
  });
}
function _3(e25, t23, r23) {
  const n30 = P2(e25, r23);
  return n30 ? n30.replace(F, (e26, r24, n31) => O(e26, r24 || n31, t23)) : n30;
}
function z2(e25, t23) {
  if ("string" == typeof e25 && t23 && null == t23.dateFormat && (null != t23.places || null != t23.digitSeparator)) {
    const t24 = Number(e25);
    if (!isNaN(t24))
      return t24;
  }
  return e25;
}
function H2(e25) {
  return "feature" === (e25 == null ? void 0 : e25.type);
}
function Q(e25) {
  return !!(e25 == null ? void 0 : e25.layer);
}
function Z2(e25) {
  return "map-image" === (e25 == null ? void 0 : e25.type);
}
function V(e25, t23) {
  var _a;
  const r23 = t23.fieldInfos, n30 = t23.fieldName, i33 = (_a = B(r23, n30)) == null ? void 0 : _a.clone(), o24 = t23.preventPlacesFormatting, s24 = t23.layer, c36 = A3(s24, n30);
  if (i33 && "date" === (c36 == null ? void 0 : c36.type)) {
    const e26 = i33.format || new u2();
    e26.dateFormat = e26.dateFormat || "short-date-short-time", e26.dateTimeFormatOptions = !Q(s24) && H2(s24) && s24.datesInUnknownTimezone || Q(s24) && Z2(s24.layer) && s24.layer.datesInUnknownTimezone ? { timeZone: "UTC" } : null, i33.format = e26;
  }
  const d16 = i33 && i33.format;
  return "string" == typeof e25 && he(n30) && d16 ? d16.formatRasterPixelValue(e25) : "string" == typeof (e25 = z2(e25, d16)) || null == e25 || null == d16 ? te(e25) : o24 ? m2(e25, { ...u(d16), minimumFractionDigits: 0, maximumFractionDigits: 20 }) : d16.format(e25);
}
function B(e25, t23) {
  if (!e25 || !e25.length || !t23)
    return;
  const r23 = t23.toLowerCase();
  let n30;
  return e25.some((e26) => !(!e26.fieldName || e26.fieldName.toLowerCase() !== r23) && (n30 = e26, true)), n30;
}
function J({ fieldName: e25, graphic: t23, layer: r23 }) {
  if (le(e25))
    return null;
  if (!r23 || "function" != typeof r23.getFeatureType)
    return null;
  const { typeIdField: n30 } = r23;
  if (!n30 || e25 !== n30)
    return null;
  const i33 = r23.getFeatureType(t23);
  return i33 ? i33.name : null;
}
function K({ fieldName: e25, value: t23, graphic: r23, layer: n30 }) {
  if (le(e25))
    return null;
  if (!n30 || "function" != typeof n30.getFieldDomain)
    return null;
  const i33 = n30.getFieldDomain(e25, { feature: r23 });
  return i33 && "coded-value" === i33.type ? i33.getName(t23) : null;
}
function W(e25, t23) {
  const { creatorField: r23, creationDateField: n30, editorField: o24, editDateField: a32 } = e25;
  if (!t23)
    return;
  const l27 = t23[a32];
  if ("number" == typeof l27) {
    const e26 = t23[o24];
    return { type: "edit", date: L2(l27, E3), user: e26 };
  }
  const u19 = t23[n30];
  if ("number" == typeof u19) {
    const e26 = t23[r23];
    return { type: "create", date: L2(u19, E3), user: e26 };
  }
  return null;
}
function X(e25, t23) {
  const r23 = /* @__PURE__ */ new Map();
  return e25 && e25.forEach((e26) => {
    const n30 = D(e26.fieldName, t23);
    e26.fieldName = n30, r23.set(n30.toLowerCase(), e26);
  }), r23;
}
function Y2(e25) {
  const t23 = [];
  if (!e25)
    return t23;
  const { fieldInfos: r23, content: n30 } = e25;
  return r23 && t23.push(...r23), n30 && Array.isArray(n30) ? (n30.forEach((e26) => {
    if ("fields" === e26.type) {
      const r24 = e26 && e26.fieldInfos;
      r24 && t23.push(...r24);
    }
  }), t23) : t23;
}
function ee(e25) {
  return e25.replace(b6, (e26) => `&#${e26.charCodeAt(0)};`);
}
function te(e25) {
  return "string" == typeof e25 ? e25.replace(I3, '<br class="esri-text-new-line" />') : e25;
}
function re(e25) {
  const { value: t23, fieldName: r23, fieldInfos: n30, fieldInfoMap: o24, layer: a32, graphic: l27 } = e25;
  if (null == t23)
    return "";
  const u19 = K({ fieldName: r23, value: t23, graphic: l27, layer: a32 });
  if (u19)
    return u19;
  const s24 = J({ fieldName: r23, graphic: l27, layer: a32 });
  if (s24)
    return s24;
  if (o24.get(r23.toLowerCase()))
    return V(t23, { fieldInfos: n30 || Array.from(o24.values()), fieldName: r23, layer: a32 });
  const f15 = a32 && a32.fieldsIndex;
  return f15 && f15.isDateField(r23) ? L2(t23, E3) : te(t23);
}
function ne({ fieldInfos: e25, attributes: t23, layer: r23, graphic: n30, fieldInfoMap: i33, relatedInfos: o24 }) {
  const a32 = {};
  return o24 == null ? void 0 : o24.forEach((t24) => fe({ attributes: a32, relatedInfo: t24, fieldInfoMap: i33, fieldInfos: e25, layer: r23 })), Object.keys(t23).forEach((o25) => {
    const l27 = t23[o25];
    a32[o25] = re({ fieldName: o25, fieldInfos: e25, fieldInfoMap: i33, layer: r23, value: l27, graphic: n30 });
  }), a32;
}
async function ie2(e25, t23) {
  var _a, _b;
  const { layer: r23, graphic: n30, outFields: i33, objectIds: o24, returnGeometry: a32, spatialReference: l27 } = e25, u19 = o24[0];
  if ("number" != typeof u19 && "string" != typeof u19) {
    const e26 = "Could not query required fields for the specified feature. The feature's ID is invalid.", t24 = { layer: r23, graphic: n30, objectId: u19, requiredFields: i33 };
    return p4.warn(e26, t24), null;
  }
  if (!((_b = (_a = r23.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsQuery)) {
    const e26 = "The specified layer cannot be queried. The following fields will not be available.", t24 = { layer: r23, graphic: n30, requiredFields: i33, returnGeometry: a32 };
    return p4.warn(e26, t24), null;
  }
  const s24 = r23.createQuery();
  s24.objectIds = o24, s24.outFields = (i33 == null ? void 0 : i33.length) ? i33 : [r23.objectIdField], s24.returnGeometry = !!a32, s24.returnZ = !!a32, s24.returnM = !!a32, s24.outSpatialReference = l27;
  return (await r23.queryFeatures(s24, t23)).features[0];
}
async function oe(e25) {
  var _a;
  if (!((_a = e25.expressionInfos) == null ? void 0 : _a.length))
    return false;
  const t23 = await i11(), { arcadeUtils: { hasGeometryFunctions: r23 } } = t23;
  return r23(e25);
}
async function ae({ graphic: e25, popupTemplate: t23, layer: r23, spatialReference: n30 }, i33) {
  if (!r23 || !t23)
    return;
  if ("function" == typeof r23.load && await r23.load(i33), !e25.attributes)
    return;
  const o24 = e25.attributes[r23.objectIdField];
  if (null == o24)
    return;
  const a32 = [o24], l27 = await t23.getRequiredFields(r23.fieldsIndex), u19 = xe(l27, e25), f15 = u19 ? [] : l27, c36 = t23.returnGeometry || await oe(t23);
  if (u19 && !c36)
    return;
  const d16 = await ie2({ layer: r23, graphic: e25, outFields: f15, objectIds: a32, returnGeometry: c36, spatialReference: n30 }, i33);
  d16 && (d16.geometry && (e25.geometry = d16.geometry), d16.attributes && (e25.attributes = { ...e25.attributes, ...d16.attributes }));
}
function le(e25 = "") {
  return !!e25 && e25.includes(N);
}
function ue(e25) {
  return e25 ? `${N}${e25.layerId}/${e25.fieldName}` : "";
}
function se({ attributes: e25, graphic: t23, relatedInfo: r23, fieldInfos: n30, fieldInfoMap: i33, layer: o24 }) {
  e25 && t23 && r23 && Object.keys(t23.attributes).forEach((a32) => {
    const l27 = ue({ layerId: r23.relation.id.toString(), fieldName: a32 }), u19 = t23.attributes[a32];
    e25[l27] = re({ fieldName: l27, fieldInfos: n30, fieldInfoMap: i33, layer: o24, value: u19, graphic: t23 });
  });
}
function fe({ attributes: e25, relatedInfo: t23, fieldInfoMap: r23, fieldInfos: n30, layer: i33 }) {
  e25 && t23 && (t23.relatedFeatures && t23.relatedFeatures && t23.relatedFeatures.forEach((o24) => se({ attributes: e25, graphic: o24, relatedInfo: t23, fieldInfoMap: r23, fieldInfos: n30, layer: i33 })), t23.relatedStatsFeatures && t23.relatedStatsFeatures && t23.relatedStatsFeatures.forEach((o24) => se({ attributes: e25, graphic: o24, relatedInfo: t23, fieldInfoMap: r23, fieldInfos: n30, layer: i33 })));
}
var ce = (e25) => {
  if (!e25)
    return false;
  const t23 = e25.toUpperCase();
  return t23.includes("CURRENT_TIMESTAMP") || t23.includes("CURRENT_DATE") || t23.includes("CURRENT_TIME");
};
var de = ({ layer: e25, method: t23, query: n30, definitionExpression: i33 }) => {
  var _a, _b;
  if (!((_b = (_a = e25.capabilities) == null ? void 0 : _a.query) == null ? void 0 : _b.supportsCacheHint) || "attachments" === t23)
    return;
  const o24 = r(n30.where) && n30.where, a32 = r(n30.geometry) && n30.geometry;
  ce(i33) || ce(o24) || "extent" === (a32 == null ? void 0 : a32.type) || "tile" === n30.resultType || (n30.cacheHint = true);
};
var pe = ({ query: e25, layer: t23, method: r23 }) => {
  de({ layer: t23, method: r23, query: e25, definitionExpression: `${t23.definitionExpression} ${t23.serviceDefinitionExpression}` });
};
var me = ({ queryPayload: e25, layer: t23, method: r23 }) => {
  de({ layer: t23, method: r23, query: e25, definitionExpression: `${t23.definitionExpression} ${t23.serviceDefinitionExpression}` });
};
function ye(e25, t23, r23) {
  return e25 && t23 && r23 ? ge(e25.allLayers, t23, r23) || ge(e25.allTables, t23, r23) : null;
}
function ge(e25, t23, r23) {
  return e25.find((e26) => e26 !== t23 && "feature" === e26.type && e26.url === t23.url && e26.layerId === r23.relatedTableId);
}

// node_modules/@arcgis/core/widgets/Attachments/AttachmentsViewModel.js
var f5 = { editing: false, operations: { add: true, update: true, delete: true } };
var u5 = j3.ofType(a8);
var y4 = class extends m {
  constructor(t23) {
    super(t23), this._getAttachmentsPromise = null, this._attachmentLayer = null, this.abilities = { ...f5 }, this.activeAttachmentInfo = null, this.activeFileInfo = null, this.attachmentInfos = new u5(), this.fileInfos = new j3(), this.graphic = null, this.mode = "view", this.filesEnabled = false, this.addHandles(l3(() => this.graphic, () => this._graphicChanged(), h2));
  }
  destroy() {
    this._attachmentLayer = null, this.graphic = null;
  }
  castAbilities(t23) {
    return { ...f5, ...t23 };
  }
  get state() {
    return this._getAttachmentsPromise ? "loading" : this.graphic ? "ready" : "disabled";
  }
  get supportsResizeAttachments() {
    const { graphic: t23 } = this;
    if (!t23)
      return false;
    const e25 = t23.layer || t23.sourceLayer;
    return (e25 == null ? void 0 : e25.loaded) && "capabilities" in e25 && "operations" in e25.capabilities && "supportsResizeAttachments" in e25.capabilities.operations && e25.capabilities.operations.supportsResizeAttachments || false;
  }
  async getAttachments() {
    const { _attachmentLayer: t23, attachmentInfos: e25 } = this;
    if (!t23 || "function" != typeof t23.queryAttachments)
      throw new s3("invalid-layer", "getAttachments(): A valid layer is required.");
    const i33 = this._getObjectId(), a32 = new c8({ objectIds: [i33], returnMetadata: true }), s24 = [], r23 = t23.queryAttachments(a32).then((t24) => t24[i33] || s24).catch(() => s24);
    this._getAttachmentsPromise = r23, this.notifyChange("state");
    const o24 = await r23;
    return e25.removeAll(), o24.length && e25.addMany(o24), this._getAttachmentsPromise = null, this.notifyChange("state"), o24;
  }
  async addAttachment(t23, e25 = this.graphic) {
    const { _attachmentLayer: i33, attachmentInfos: a32, abilities: s24 } = this;
    if (!e25)
      throw new s3("invalid-graphic", "addAttachment(): A valid graphic is required.", { graphic: e25 });
    if (!t23)
      throw new s3("invalid-attachment", "addAttachment(): An attachment is required.", { attachment: t23 });
    if (!s24.operations.add)
      throw new s3("invalid-abilities", "addAttachment(): add abilities are required.");
    if (!i33 || "function" != typeof i33.addAttachment)
      throw new s3("invalid-layer", "addAttachment(): A valid layer is required.");
    const r23 = i33.addAttachment(e25, t23).then((t24) => this._queryAttachment(t24.objectId, e25)), o24 = await r23;
    return a32.add(o24), o24;
  }
  async deleteAttachment(t23) {
    const { _attachmentLayer: e25, attachmentInfos: i33, graphic: a32, abilities: s24 } = this;
    if (!t23)
      throw new s3("invalid-attachment-info", "deleteAttachment(): An attachmentInfo is required.", { attachmentInfo: t23 });
    if (!s24.operations.delete)
      throw new s3("invalid-abilities", "deleteAttachment(): delete abilities are required.");
    if (!e25 || "function" != typeof e25.deleteAttachments)
      throw new s3("invalid-layer", "deleteAttachment(): A valid layer is required.");
    const r23 = e25.deleteAttachments(a32, [t23.id]).then(() => t23), o24 = await r23;
    return i33.remove(o24), o24;
  }
  async updateAttachment(t23, e25 = this.activeAttachmentInfo) {
    const { _attachmentLayer: i33, attachmentInfos: a32, graphic: s24, abilities: r23 } = this;
    if (!t23)
      throw new s3("invalid-attachment", "updateAttachment(): An attachment is required.", { attachment: t23 });
    if (!e25)
      throw new s3("invalid-attachment-info", "updateAttachment(): An attachmentInfo is required.", { attachmentInfo: e25 });
    if (!r23.operations.update)
      throw new s3("invalid-abilities", "updateAttachment(): Update abilities are required.");
    const o24 = a32.findIndex((t24) => t24 === e25);
    if (!i33 || "function" != typeof i33.updateAttachment)
      throw new s3("invalid-layer", "updateAttachment(): A valid layer is required.");
    const c36 = i33.updateAttachment(s24, e25.id, t23).then((t24) => this._queryAttachment(t24.objectId)), h18 = await c36;
    return a32.splice(o24, 1, h18), h18;
  }
  async commitFiles() {
    return await Promise.all(this.fileInfos.items.map((t23) => this.addAttachment(t23.form))), this.fileInfos.removeAll(), this.getAttachments();
  }
  addFile(t23, e25) {
    if (!t23 || !e25)
      return null;
    const i33 = { file: t23, form: e25 };
    return this.fileInfos.add(i33), i33;
  }
  updateFile(t23, e25, i33 = this.activeFileInfo) {
    if (!t23 || !e25 || !i33)
      return null;
    const a32 = this.fileInfos.findIndex((t24) => i33 === t24);
    return a32 > -1 && this.fileInfos.splice(a32, 1, { file: t23, form: e25 }), this.fileInfos.items[a32];
  }
  deleteFile(t23) {
    var _a;
    const e25 = this.fileInfos.find((e26) => e26.file === t23);
    return (_a = this.fileInfos.remove(e25)) != null ? _a : null;
  }
  async _queryAttachment(t23, e25) {
    if (!t23)
      throw new s3("invalid-attachment-id", "Could not query attachment.");
    const { _attachmentLayer: i33 } = this, a32 = this._getObjectId(e25), s24 = new c8({ objectIds: [a32], attachmentsWhere: `AttachmentId=${t23}`, returnMetadata: true });
    return i33.queryAttachments(s24).then((t24) => t24[a32][0]);
  }
  _getObjectId(t23 = this.graphic) {
    var _a;
    return (_a = t23 == null ? void 0 : t23.getObjectId()) != null ? _a : null;
  }
  _graphicChanged() {
    this.graphic && (this._setAttachmentLayer(), this.getAttachments().catch(() => {
    }));
  }
  _setAttachmentLayer() {
    const { graphic: t23 } = this, e25 = T2(t23);
    this._attachmentLayer = e25 ? "scene" === e25.type && r(e25.associatedLayer) ? e25.associatedLayer : e25 : null;
  }
};
e2([y()], y4.prototype, "abilities", void 0), e2([s4("abilities")], y4.prototype, "castAbilities", null), e2([y()], y4.prototype, "activeAttachmentInfo", void 0), e2([y()], y4.prototype, "activeFileInfo", void 0), e2([y({ readOnly: true, type: u5 })], y4.prototype, "attachmentInfos", void 0), e2([y()], y4.prototype, "fileInfos", void 0), e2([y({ type: g3 })], y4.prototype, "graphic", void 0), e2([y()], y4.prototype, "mode", void 0), e2([y({ readOnly: true })], y4.prototype, "state", null), e2([y()], y4.prototype, "filesEnabled", void 0), e2([y({ readOnly: true })], y4.prototype, "supportsResizeAttachments", null), y4 = e2([n4("esri.widgets.Attachments.AttachmentsViewModel")], y4);
var A4 = y4;

// node_modules/@arcgis/core/widgets/Attachments/support/attachmentUtils.js
function e14(i33) {
  const e25 = i33.toLowerCase();
  return "image/bmp" === e25 || "image/emf" === e25 || "image/exif" === e25 || "image/gif" === e25 || "image/x-icon" === e25 || "image/jpeg" === e25 || "image/png" === e25 || "image/tiff" === e25 || "image/x-wmf" === e25;
}
function p5(e25) {
  const p34 = a4("esri/themes/base/images/files/");
  return e25 ? "text/plain" === e25 ? `${p34}text-32.svg` : "application/pdf" === e25 ? `${p34}pdf-32.svg` : "text/csv" === e25 ? `${p34}csv-32.svg` : "application/gpx+xml" === e25 ? `${p34}gpx-32.svg` : "application/x-dwf" === e25 ? `${p34}cad-32.svg` : "application/postscript" === e25 || "application/json" === e25 || "text/xml" === e25 || "model/vrml" === e25 ? `${p34}code-32.svg` : "application/x-zip-compressed" === e25 || "application/x-7z-compressed" === e25 || "application/x-gzip" === e25 || "application/x-tar" === e25 || "application/x-gtar" === e25 || "application/x-bzip2" === e25 || "application/gzip" === e25 || "application/x-compress" === e25 || "application/x-apple-diskimage" === e25 || "application/x-rar-compressed" === e25 || "application/zip" === e25 ? `${p34}zip-32.svg` : e25.includes("image/") ? `${p34}image-32.svg` : e25.includes("audio/") ? `${p34}sound-32.svg` : e25.includes("video/") ? `${p34}video-32.svg` : e25.includes("msexcel") || e25.includes("ms-excel") || e25.includes("spreadsheetml") ? `${p34}excel-32.svg` : e25.includes("msword") || e25.includes("ms-word") || e25.includes("wordprocessingml") ? `${p34}word-32.svg` : e25.includes("powerpoint") || e25.includes("presentationml") ? `${p34}report-32.svg` : `${p34}generic-32.svg` : `${p34}generic-32.svg`;
}

// node_modules/@arcgis/core/widgets/Attachments.js
var v8 = { addButton: true, addSubmitButton: true, cancelAddButton: true, cancelUpdateButton: true, deleteButton: true, errorMessage: true, progressBar: true, updateButton: true };
var y5 = { base: "esri-attachments", loaderContainer: "esri-attachments__loader-container", loader: "esri-attachments__loader", fadeIn: "esri-attachments--fade-in", container: "esri-attachments__container", containerList: "esri-attachments__container--list", containerPreview: "esri-attachments__container--preview", actions: "esri-attachments__actions", deleteButton: "esri-attachments__delete-button", addAttachmentButton: "esri-attachments__add-attachment-button", errorMessage: "esri-attachments__error-message", items: "esri-attachments__items", item: "esri-attachments__item", itemButton: "esri-attachments__item-button", itemMask: "esri-attachments__item-mask", itemMaskIcon: "esri-attachments__item-mask--icon", itemImage: "esri-attachments__image", itemImageResizable: "esri-attachments__image--resizable", itemLabel: "esri-attachments__label", itemFilename: "esri-attachments__filename", itemChevronIcon: "esri-attachments__item-chevron-icon", itemLink: "esri-attachments__item-link", itemLinkOverlay: "esri-attachments__item-link-overlay", itemLinkOverlayIcon: "esri-attachments__item-link-overlay-icon", itemEditIcon: "esri-attachments__item-edit-icon", itemAddIcon: "esri-attachments__item-add-icon", itemAddButton: "esri-attachments__item-add-button", formNode: "esri-attachments__form-node", fileFieldset: "esri-attachments__file-fieldset", fileLabel: "esri-attachments__file-label", fileName: "esri-attachments__file-name", fileInput: "esri-attachments__file-input", metadata: "esri-attachments__metadata", metadataFieldset: "esri-attachments__metadata-fieldset", progressBar: "esri-attachments__progress-bar", esriWidget: "esri-widget", esriButton: "esri-button", buttonDisabled: "esri-button--disabled", esriButtonSecondary: "esri-button--secondary", esriButtonTertiary: "esri-button--tertiary", esriButtonThird: "esri-button--third", esriButtonSmall: "esri-button--small", esriButtonHalf: "esri-button--half", empty: "esri-widget__content--empty", iconExternalLink: "esri-icon-link-external", iconEdit: "esri-icon-edit", iconRight: "esri-icon-right", iconLeft: "esri-icon-left", iconPlus: "esri-icon-plus" };
var A5 = window.CSS;
var w8 = class extends M2 {
  constructor(e25, t23) {
    super(e25, t23), this.displayType = "auto", this.messages = null, this.messagesUnits = null, this.selectedFile = null, this.submitting = false, this.viewModel = new A4(), this.visibleElements = { ...v8 }, this._supportsImageOrientation = A5 && A5.supports && A5.supports("image-orientation", "from-image"), this._addAttachmentForm = null, this._updateAttachmentForm = null;
  }
  initialize() {
    this.addHandles([a3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.attachmentInfos;
    }, "change", () => this.scheduleRender()), a3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.fileInfos;
    }, "change", () => this.scheduleRender()), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.mode;
    }, () => this._modeChanged(), h2)]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-icon-D7JSDQFP.js")]);
  }
  get abilities() {
    return this.viewModel.abilities;
  }
  set abilities(e25) {
    this.viewModel.abilities = e25;
  }
  get effectiveDisplayType() {
    const { displayType: e25 } = this;
    return e25 && "auto" !== e25 ? e25 : this.viewModel.supportsResizeAttachments ? "preview" : "list";
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e25) {
    this.viewModel.graphic = e25;
  }
  get label() {
    var _a, _b;
    return (_b = (_a = this.messages) == null ? void 0 : _a.widgetLabel) != null ? _b : "";
  }
  set label(e25) {
    this._overrideIfSome("label", e25);
  }
  castVisibleElements(e25) {
    return { ...v8, ...e25 };
  }
  addAttachment() {
    const { _addAttachmentForm: e25, viewModel: s24 } = this;
    return this._set("submitting", true), this._set("error", null), s24.addAttachment(e25).then((e26) => (this._set("submitting", false), this._set("error", null), s24.mode = "view", e26)).catch((e26) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:add-attachment", this.messages.addErrorMessage, e26)), e26;
    });
  }
  deleteAttachment(e25) {
    const { viewModel: s24 } = this;
    return this._set("submitting", true), this._set("error", null), s24.deleteAttachment(e25).then((e26) => (this._set("submitting", false), this._set("error", null), s24.mode = "view", e26)).catch((e26) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:delete-attachment", this.messages.deleteErrorMessage, e26)), e26;
    });
  }
  updateAttachment() {
    const { viewModel: e25 } = this, { _updateAttachmentForm: s24 } = this;
    return this._set("submitting", true), this._set("error", null), e25.updateAttachment(s24).then((t23) => (this._set("submitting", false), this._set("error", null), e25.mode = "view", t23)).catch((e26) => {
      throw this._set("submitting", false), this._set("error", new s3("attachments:update-attachment", this.messages.updateErrorMessage, e26)), e26;
    });
  }
  addFile() {
    const e25 = this.viewModel.addFile(this.selectedFile, this._addAttachmentForm);
    return this.viewModel.mode = "view", e25;
  }
  updateFile() {
    const { viewModel: e25 } = this, t23 = e25.updateFile(this.selectedFile, this._updateAttachmentForm, e25.activeFileInfo);
    return e25.mode = "view", t23;
  }
  deleteFile(e25) {
    const t23 = this.viewModel.deleteFile(e25 || this.viewModel.activeFileInfo.file);
    return this.viewModel.mode = "view", t23;
  }
  render() {
    const { submitting: e25, viewModel: t23 } = this, { state: s24 } = t23;
    return n7("div", { class: this.classes(y5.base, y5.esriWidget) }, e25 ? this.renderProgressBar() : null, "loading" === s24 ? this.renderLoading() : this.renderAttachments(), this.renderErrorMessage());
  }
  renderErrorMessage() {
    const { error: e25, visibleElements: t23 } = this;
    return e25 && t23.errorMessage ? n7("div", { key: "error-message", class: y5.errorMessage }, e25.message) : null;
  }
  renderAttachments() {
    const { activeFileInfo: e25, mode: t23, activeAttachmentInfo: s24 } = this.viewModel;
    return "add" === t23 ? this.renderAddForm() : "edit" === t23 ? this.renderDetailsForm(s24 || e25) : this.renderAttachmentContainer();
  }
  renderLoading() {
    return n7("div", { class: y5.loaderContainer, key: "loader" }, n7("div", { class: y5.loader }));
  }
  renderProgressBar() {
    return this.visibleElements.progressBar ? n7("div", { class: y5.progressBar, key: "progress-bar" }) : null;
  }
  renderAddForm() {
    const { submitting: e25, selectedFile: t23 } = this, s24 = e25 || !t23, i33 = this.visibleElements.cancelAddButton ? n7("button", { type: "button", bind: this, disabled: e25, onclick: this._cancelForm, class: this.classes(y5.esriButton, y5.esriButtonTertiary, y5.esriButtonSmall, y5.esriButtonHalf, e25 && y5.buttonDisabled) }, this.messages.cancel) : null, a32 = this.visibleElements.addSubmitButton ? n7("button", { type: "submit", disabled: s24, class: this.classes(y5.esriButton, y5.esriButtonSecondary, y5.esriButtonSmall, y5.esriButtonHalf, { [y5.buttonDisabled]: s24 }) }, this.messages.add) : null, n30 = t23 ? n7("span", { key: "file-name", class: y5.fileName }, t23.name) : null, r23 = n7("form", { bind: this, afterCreate: v4, afterRemoved: h3, "data-node-ref": "_addAttachmentForm", onsubmit: this._submitAddAttachment }, n7("fieldset", { class: y5.fileFieldset }, n30, n7("label", { class: this.classes(y5.fileLabel, y5.esriButton, y5.esriButtonSecondary) }, t23 ? this.messages.changeFile : this.messages.selectFile, n7("input", { class: y5.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))), a32, i33);
    return n7("div", { key: "add-form-container", class: y5.formNode }, r23);
  }
  renderDetailsForm(e25) {
    const { visibleElements: t23, viewModel: i33, selectedFile: a32, submitting: n30 } = this, { abilities: l27 } = i33, o24 = n30 || !a32;
    let d16, c36, m25, h18;
    a32 ? (d16 = a32.type, c36 = a32.name, m25 = a32.size) : "file" in e25 ? (d16 = e25.file.type, c36 = e25.file.name, m25 = e25.file.size) : (d16 = e25.contentType, c36 = e25.name, m25 = e25.size, h18 = e25.url);
    const u19 = l27.editing && l27.operations.delete && t23.deleteButton ? n7("button", { key: "delete-button", type: "button", disabled: n30, bind: this, onclick: (t24) => this._submitDeleteAttachment(t24, e25), class: this.classes(y5.esriButton, y5.esriButtonSmall, y5.esriButtonTertiary, y5.deleteButton, { [y5.buttonDisabled]: n30 }) }, this.messages.delete) : void 0, g18 = l27.editing && l27.operations.update && t23.updateButton ? n7("button", { disabled: o24, key: "update-button", type: "submit", class: this.classes(y5.esriButton, y5.esriButtonSmall, y5.esriButtonThird, { [y5.buttonDisabled]: o24 }) }, this.messages.update) : void 0, _11 = this.visibleElements.cancelUpdateButton ? n7("button", { disabled: n30, key: "cancel-button", type: "button", bind: this, onclick: this._cancelForm, class: this.classes(y5.esriButton, y5.esriButtonSmall, y5.esriButtonTertiary, y5.esriButtonThird, { [y5.buttonDisabled]: n30 }) }, this.messages.cancel) : void 0, v14 = l27.editing && l27.operations.update ? n7("fieldset", { key: "file", class: y5.fileFieldset }, n7("span", { key: "file-name", class: y5.fileName }, c36), n7("label", { class: this.classes(y5.fileLabel, y5.esriButton, y5.esriButtonSecondary) }, this.messages.changeFile, n7("input", { class: y5.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))) : void 0, A6 = n7("fieldset", { key: "size", class: y5.metadataFieldset }, n7("label", null, v6(this.messagesUnits, m25))), w17 = n7("fieldset", { key: "content-type", class: y5.metadataFieldset }, n7("label", null, d16)), F4 = r(h18) ? n7("a", { class: y5.itemLink, href: h18, rel: "noreferrer", target: "_blank" }, this.renderImageMask(e25, 400), n7("div", { class: y5.itemLinkOverlay }, n7("span", { class: y5.itemLinkOverlayIcon }, n7("calcite-icon", { icon: "launch" })))) : this.renderImageMask(e25, 400), k4 = n7("form", { bind: this, afterCreate: v4, afterRemoved: h3, "data-node-ref": "_updateAttachmentForm", onsubmit: (t24) => this._submitUpdateAttachment(t24, e25) }, n7("div", { class: y5.metadata }, A6, w17), v14, n7("div", { class: y5.actions }, u19, _11, g18));
    return n7("div", { key: "edit-form-container", class: y5.formNode }, F4, k4);
  }
  renderImageMask(e25, t23) {
    return "file" in e25 ? this.renderGenericImageMask(e25.file.name, e25.file.type) : this.renderImageMaskForAttachment(e25, t23);
  }
  renderGenericImageMask(e25, t23) {
    const { supportsResizeAttachments: s24 } = this.viewModel, i33 = p5(t23), a32 = { [y5.itemImageResizable]: s24 };
    return n7("div", { class: this.classes(y5.itemMaskIcon, y5.itemMask) }, n7("img", { title: e25, alt: e25, src: i33, class: this.classes(a32, y5.itemImage) }));
  }
  renderImageMaskForAttachment(e25, t23) {
    const { supportsResizeAttachments: s24 } = this.viewModel, { contentType: i33, name: a32, url: n30 } = e25;
    if (!s24 || !e14(i33))
      return this.renderGenericImageMask(a32, i33);
    const r23 = this._getCSSTransform(e25), l27 = r23 ? { transform: r23, "image-orientation": "none" } : {}, o24 = `${n30}${n30.includes("?") ? "&" : "?"}w=${t23}`, d16 = { [y5.itemImageResizable]: s24 };
    return n7("div", { class: this.classes(y5.itemMask) }, n7("img", { styles: l27, alt: a32, title: a32, src: o24, class: this.classes(d16, y5.itemImage) }));
  }
  renderFile(e25) {
    const { file: t23 } = e25;
    return n7("li", { class: y5.item, key: t23 }, n7("button", { key: "details-button", bind: this, class: y5.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, onclick: () => this._startEditFile(e25), type: "button" }, this.renderImageMask(e25), n7("label", { class: y5.itemLabel }, n7("span", { class: y5.itemFilename }, t23.name || this.messages.noTitle), n7("span", { "aria-hidden": "true", class: this.classes(y5.itemChevronIcon, f3(this.container) ? y5.iconLeft : y5.iconRight) }))));
  }
  renderAttachmentInfo({ attachmentInfo: e25, displayType: t23 }) {
    const { viewModel: s24, effectiveDisplayType: i33 } = this, { abilities: a32, supportsResizeAttachments: n30 } = s24, { contentType: r23, name: l27, url: o24 } = e25, d16 = this.renderImageMask(e25, "list" === t23 ? 48 : 400), c36 = a32.editing ? n7("span", { "aria-hidden": "true", class: this.classes(y5.itemChevronIcon, f3(this.container) ? y5.iconLeft : y5.iconRight) }) : null, m25 = [d16, "preview" === i33 && n30 && e14(r23) ? null : n7("label", { class: y5.itemLabel }, n7("span", { class: y5.itemFilename }, l27 || this.messages.noTitle), c36)], h18 = a32.editing ? n7("button", { key: "details-button", bind: this, class: y5.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, "data-attachment-info-id": e25.id, onclick: () => this._startEditAttachment(e25), type: "button" }, m25) : n7("a", { key: "details-link", class: y5.itemButton, href: o24, target: "_blank" }, m25);
    return n7("li", { class: y5.item, key: e25 }, h18);
  }
  renderAttachmentContainer() {
    const { effectiveDisplayType: e25, viewModel: t23, visibleElements: s24 } = this, { attachmentInfos: i33, abilities: a32, fileInfos: n30 } = t23, r23 = !!(i33 == null ? void 0 : i33.length), l27 = !!(n30 == null ? void 0 : n30.length), o24 = { [y5.containerList]: "preview" !== e25, [y5.containerPreview]: "preview" === e25 }, d16 = a32.editing && a32.operations.add && s24.addButton ? n7("button", { bind: this, onclick: () => this._startAddAttachment(), class: this.classes(y5.esriButton, y5.esriButtonTertiary, y5.addAttachmentButton), type: "button" }, n7("span", { "aria-hidden": "true", class: this.classes(y5.itemAddIcon, y5.iconPlus) }), this.messages.add) : void 0, c36 = r23 ? n7("ul", { key: "attachments-list", class: y5.items }, i33.toArray().map((t24) => this.renderAttachmentInfo({ attachmentInfo: t24, displayType: e25 }))) : void 0, m25 = l27 ? n7("ul", { key: "file-list", class: y5.items }, n30.toArray().map((e26) => this.renderFile(e26))) : void 0, h18 = l27 || r23 ? void 0 : n7("div", { class: y5.empty }, this.messages.noAttachments);
    return n7("div", { key: "attachments-container", class: this.classes(y5.container, o24) }, c36, m25, h18, d16);
  }
  _modeChanged() {
    this._set("error", null), this._set("selectedFile", null);
  }
  _handleFileInputChange(e25) {
    const t23 = e25.target, s24 = t23 && t23.files && t23.files.item(0);
    this._set("selectedFile", s24);
  }
  _submitDeleteAttachment(e25, t23) {
    e25.preventDefault(), "file" in t23 ? this.deleteFile(t23.file) : this.deleteAttachment(t23);
  }
  _submitAddAttachment(e25) {
    e25.preventDefault(), this.viewModel.filesEnabled ? this.addFile() : this.addAttachment();
  }
  _submitUpdateAttachment(e25, t23) {
    e25.preventDefault(), "file" in t23 ? this.updateFile() : this.updateAttachment();
  }
  _startEditAttachment(e25) {
    const { viewModel: t23 } = this;
    t23.activeFileInfo = null, t23.activeAttachmentInfo = e25, t23.mode = "edit";
  }
  _startEditFile(e25) {
    const { viewModel: t23 } = this;
    t23.activeAttachmentInfo = null, t23.activeFileInfo = e25, t23.mode = "edit";
  }
  _startAddAttachment() {
    this.viewModel.mode = "add";
  }
  _cancelForm(e25) {
    e25.preventDefault(), this.viewModel.mode = "view";
  }
  _getCSSTransform(e25) {
    const { orientationInfo: t23 } = e25;
    return !this._supportsImageOrientation && t23 ? [t23.rotation ? `rotate(${t23.rotation}deg)` : "", t23.mirrored ? "scaleX(-1)" : ""].join(" ") : "";
  }
};
e2([y()], w8.prototype, "abilities", null), e2([y()], w8.prototype, "displayType", void 0), e2([y({ readOnly: true })], w8.prototype, "effectiveDisplayType", null), e2([y()], w8.prototype, "graphic", null), e2([y()], w8.prototype, "label", null), e2([y(), e4("esri/widgets/Attachments/t9n/Attachments")], w8.prototype, "messages", void 0), e2([y(), e4("esri/core/t9n/Units")], w8.prototype, "messagesUnits", void 0), e2([y({ readOnly: true })], w8.prototype, "selectedFile", void 0), e2([y({ readOnly: true })], w8.prototype, "submitting", void 0), e2([y({ readOnly: true })], w8.prototype, "error", void 0), e2([y({ type: A4 })], w8.prototype, "viewModel", void 0), e2([y()], w8.prototype, "visibleElements", void 0), e2([s4("visibleElements")], w8.prototype, "castVisibleElements", null), w8 = e2([n4("esri.widgets.Attachments")], w8);
var F2 = w8;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments/FeatureAttachmentsViewModel.js
var o9 = class extends A4 {
  constructor(t23) {
    super(t23), this.description = null, this.title = null;
  }
};
e2([y()], o9.prototype, "description", void 0), e2([y()], o9.prototype, "title", void 0), o9 = e2([n4("esri.widgets.Feature.FeatureAttachments.FeatureAttachmentsViewModel")], o9);
var c10 = o9;

// node_modules/@arcgis/core/widgets/Feature/support/FeatureElementInfo.js
var p6 = { base: "esri-feature-element-info", title: "esri-feature-element-info__title", description: "esri-feature-element-info__description" };
var n14 = class extends M2 {
  constructor(e25, t23) {
    super(e25, t23), this.description = null, this.headingLevel = 2, this.title = null;
  }
  render() {
    return n7("div", { class: p6.base }, this.renderTitle(), this.renderDescription());
  }
  renderTitle() {
    const { title: e25 } = this;
    return e25 ? n7(n11, { level: this.headingLevel, class: p6.title }, e25) : null;
  }
  renderDescription() {
    const { description: e25 } = this;
    return e25 ? n7("div", { key: "description", class: p6.description }, e25) : null;
  }
};
e2([y()], n14.prototype, "description", void 0), e2([y()], n14.prototype, "headingLevel", void 0), e2([y()], n14.prototype, "title", void 0), n14 = e2([n4("esri.widgets.Feature.support.FeatureElementInfo")], n14);
var l11 = n14;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments.js
var d5 = { base: "esri-feature-attachments" };
var c11 = class extends M2 {
  constructor(e25, t23) {
    super(e25, t23), this._featureElementInfo = null, this.attachmentsWidget = new F2(), this.headingLevel = 2, this.viewModel = new c10();
  }
  initialize() {
    this._featureElementInfo = new l11(), this.addHandles([l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title, this.headingLevel];
    }, () => this._setupFeatureElementInfo(), h2), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.graphic;
    }, (e25) => this.attachmentsWidget.graphic = e25, h2)]);
  }
  destroy() {
    this.attachmentsWidget.destroy(), this._featureElementInfo.destroy();
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e25) {
    this.viewModel.description = e25;
  }
  get displayType() {
    return this.attachmentsWidget.displayType;
  }
  set displayType(e25) {
    this.attachmentsWidget.displayType = e25;
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e25) {
    this.viewModel.graphic = e25;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e25) {
    this.viewModel.title = e25;
  }
  render() {
    var _a;
    const { attachmentsWidget: e25 } = this;
    return n7("div", { class: d5.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), e25 == null ? void 0 : e25.render());
  }
  _setupFeatureElementInfo() {
    const { description: e25, title: t23, headingLevel: i33 } = this;
    this._featureElementInfo.set({ description: e25, title: t23, headingLevel: i33 });
  }
};
e2([y({ readOnly: true })], c11.prototype, "attachmentsWidget", void 0), e2([y()], c11.prototype, "description", null), e2([y()], c11.prototype, "displayType", null), e2([y()], c11.prototype, "graphic", null), e2([y()], c11.prototype, "headingLevel", void 0), e2([y()], c11.prototype, "title", null), e2([y({ type: c10 })], c11.prototype, "viewModel", void 0), c11 = e2([n4("esri.widgets.Feature.FeatureAttachments")], c11);
var h8 = c11;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent/FeatureContentViewModel.js
var p7 = class extends a7(m) {
  constructor(t23) {
    super(t23), this._loadingPromise = null, this.created = null, this.creator = null, this.destroyer = null, this.graphic = null, this.handles.add(l3(() => this.creator, (t24) => {
      this._destroyContent(), this._createContent(t24);
    }, h2));
  }
  destroy() {
    this._destroyContent();
  }
  get state() {
    return this._loadingPromise ? "loading" : "ready";
  }
  _destroyContent() {
    const { created: t23, graphic: e25, destroyer: r23 } = this;
    t23 && (j6(r23, { graphic: e25 }).catch(() => null), this._set("created", null));
  }
  async _createContent(t23) {
    const { graphic: e25 } = this, r23 = j6(t23, { graphic: e25 }).catch(() => null);
    this._loadingPromise = r23, this.notifyChange("state");
    const o24 = await r23;
    r23 === this._loadingPromise && (this._loadingPromise = null, this.notifyChange("state"), this._set("created", o24));
  }
};
e2([y({ readOnly: true })], p7.prototype, "created", void 0), e2([y()], p7.prototype, "creator", void 0), e2([y()], p7.prototype, "destroyer", void 0), e2([y({ type: g3 })], p7.prototype, "graphic", void 0), e2([y({ readOnly: true })], p7.prototype, "state", null), p7 = e2([n4("esri.widgets.Feature.FeatureContent.FeatureContentViewModel")], p7);
var l12 = p7;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent.js
var d6 = { base: "esri-feature-content", loaderContainer: "esri-feature-content__loader-container", loader: "esri-feature-content__loader" };
var c12 = class extends M2 {
  constructor(e25, r23) {
    super(e25, r23), this.viewModel = null, this._addTargetToAnchors = (e26) => {
      Array.from(e26.querySelectorAll("a")).forEach((e27) => {
        x3(e27.href) && !e27.hasAttribute("target") && e27.setAttribute("target", "_blank");
      });
    };
  }
  get creator() {
    return this.viewModel.creator;
  }
  set creator(e25) {
    this.viewModel.creator = e25;
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e25) {
    this.viewModel.graphic = e25;
  }
  renderLoading() {
    return n7("div", { class: d6.loaderContainer, key: "loader" }, n7("div", { class: d6.loader }));
  }
  renderCreated() {
    var _a;
    const e25 = (_a = this.viewModel) == null ? void 0 : _a.created;
    return e25 ? e25 instanceof HTMLElement ? n7("div", { key: e25, bind: e25, afterCreate: this._attachToNode }) : e6(e25) ? n7("div", { key: e25 }, !e25.destroyed && e25.render()) : n7("div", { key: e25, innerHTML: e25, afterCreate: this._addTargetToAnchors }) : null;
  }
  render() {
    var _a;
    const e25 = (_a = this.viewModel) == null ? void 0 : _a.state;
    return n7("div", { class: d6.base }, "loading" === e25 ? this.renderLoading() : this.renderCreated());
  }
  _attachToNode(e25) {
    const r23 = this;
    e25.appendChild(r23);
  }
};
e2([y()], c12.prototype, "creator", null), e2([y()], c12.prototype, "graphic", null), e2([y({ type: l12 })], c12.prototype, "viewModel", void 0), c12 = e2([n4("esri.widgets.Feature.FeatureContent")], c12);
var l13 = c12;

// node_modules/@arcgis/core/widgets/Feature/FeatureFields/FeatureFieldsViewModel.js
var l14 = class extends m {
  constructor(o24) {
    super(o24), this.attributes = null, this.expressionInfos = null, this.description = null, this.fieldInfos = null, this.title = null;
  }
  get formattedFieldInfos() {
    const { expressionInfos: o24, fieldInfos: e25 } = this, s24 = [];
    return e25 == null ? void 0 : e25.forEach((e26) => {
      if (!(!e26.hasOwnProperty("visible") || e26.visible))
        return;
      const t23 = e26.clone();
      t23.label = q(t23, o24), s24.push(t23);
    }), s24;
  }
};
e2([y()], l14.prototype, "attributes", void 0), e2([y({ type: [i8] })], l14.prototype, "expressionInfos", void 0), e2([y()], l14.prototype, "description", void 0), e2([y({ type: [c3] })], l14.prototype, "fieldInfos", void 0), e2([y({ readOnly: true })], l14.prototype, "formattedFieldInfos", null), e2([y()], l14.prototype, "title", void 0), l14 = e2([n4("esri.widgets.Feature.FeatureFields.FeatureFieldsViewModel")], l14);
var n15 = l14;

// node_modules/@arcgis/core/widgets/support/uriUtils.js
var s10 = [{ pattern: /^\s*(https?:\/\/([^\s]+))\s*$/i, target: "_blank", label: "{messages.view}" }, { pattern: /^\s*(tel:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(mailto:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(arcgis-appstudio-player:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "App Studio Player" }, { pattern: /^\s*(arcgis-collector:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Collector" }, { pattern: /^\s*(arcgis-explorer:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Explorer" }, { pattern: /^\s*(arcgis-navigator:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Navigator" }, { pattern: /^\s*(arcgis-survey123:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Survey123" }, { pattern: /^\s*(arcgis-trek2there:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Trek2There" }, { pattern: /^\s*(arcgis-workforce:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Workforce" }, { pattern: /^\s*(iform:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "iForm" }, { pattern: /^\s*(flow:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "FlowFinity" }, { pattern: /^\s*(lfmobile:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Laserfische" }, { pattern: /^\s*(mspbi:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Microsoft Power Bi" }];
function a12(e25) {
  let a32 = null;
  return s10.some((s24) => (s24.pattern.test(e25) && (a32 = s24), !!a32)), a32;
}
function p8(s24, p34) {
  if ("string" != typeof p34 || !p34)
    return p34;
  const r23 = a12(p34);
  if (!r23)
    return p34;
  const t23 = p34.match(r23.pattern), n30 = t23 && t23[2], l27 = n(n(r23.label, { messages: s24, hierPart: n30 }), { appName: r23.appName }), i33 = r23.target ? ` target="${r23.target}"` : "", o24 = "_blank" === r23.target ? ' rel="noreferrer"' : "";
  return p34.replace(r23.pattern, `<a${i33} href="$1"${o24}>${l27}</a>`);
}

// node_modules/@arcgis/core/widgets/Feature/FeatureFields.js
var p9 = { base: "esri-feature-fields", fieldHeader: "esri-feature-fields__field-header", fieldData: "esri-feature-fields__field-data", fieldDataDate: "esri-feature-fields__field-data--date", esriTable: "esri-widget__table" };
var u6 = class extends M2 {
  constructor(e25, t23) {
    super(e25, t23), this._featureElementInfo = null, this.viewModel = new n15(), this.messages = null, this.messagesURIUtils = null;
  }
  initialize() {
    this._featureElementInfo = new l11(), this.addHandles(l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h2));
  }
  destroy() {
    this._featureElementInfo.destroy();
  }
  get attributes() {
    return this.viewModel.attributes;
  }
  set attributes(e25) {
    this.viewModel.attributes = e25;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e25) {
    this.viewModel.description = e25;
  }
  get expressionInfos() {
    return this.viewModel.expressionInfos;
  }
  set expressionInfos(e25) {
    this.viewModel.expressionInfos = e25;
  }
  get fieldInfos() {
    return this.viewModel.fieldInfos;
  }
  set fieldInfos(e25) {
    this.viewModel.fieldInfos = e25;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e25) {
    this.viewModel.title = e25;
  }
  renderFieldInfo(e25, t23) {
    const { attributes: s24 } = this.viewModel, i33 = e25.fieldName, r23 = e25.label || i33, o24 = s24 ? null == s24[i33] ? "" : s24[i33] : "", l27 = !(!e25.format || !e25.format.dateFormat), n30 = "number" == typeof o24 && !l27 ? this._forceLTR(o24) : p8(this.messagesURIUtils, o24), a32 = { [p9.fieldDataDate]: l27 };
    return n7("tr", { key: `fields-element-info-row-${i33}-${t23}` }, n7("th", { key: `fields-element-info-row-header-${i33}-${t23}`, class: p9.fieldHeader, innerHTML: r23 }), n7("td", { key: `fields-element-info-row-data-${i33}-${t23}`, class: this.classes(p9.fieldData, a32), innerHTML: n30 }));
  }
  renderFields() {
    const { formattedFieldInfos: e25 } = this.viewModel;
    return (e25 == null ? void 0 : e25.length) ? n7("table", { class: p9.esriTable, summary: this.messages.fieldsSummary }, n7("tbody", null, e25.map((e26, t23) => this.renderFieldInfo(e26, t23)))) : null;
  }
  render() {
    var _a;
    return n7("div", { class: p9.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderFields());
  }
  _setupFeatureElementInfo() {
    const { description: e25, title: t23 } = this;
    this._featureElementInfo.set({ description: e25, title: t23 });
  }
  _forceLTR(e25) {
    return `&lrm;${e25}`;
  }
};
e2([y()], u6.prototype, "attributes", null), e2([y()], u6.prototype, "description", null), e2([y()], u6.prototype, "expressionInfos", null), e2([y()], u6.prototype, "fieldInfos", null), e2([y()], u6.prototype, "title", null), e2([y({ type: n15, nonNullable: true })], u6.prototype, "viewModel", void 0), e2([y(), e4("esri/widgets/Feature/t9n/Feature")], u6.prototype, "messages", void 0), e2([y(), e4("esri/widgets/support/t9n/uriUtils")], u6.prototype, "messagesURIUtils", void 0), u6 = e2([n4("esri.widgets.Feature.FeatureFields")], u6);
var m10 = u6;

// node_modules/@arcgis/core/widgets/Feature/support/relatedFeatureUtils.js
var p10 = "esri.widgets.Feature.support.relatedFeatureUtils";
var c13 = s2.getLogger(p10);
var f6 = /* @__PURE__ */ new Map();
function d7(e25) {
  if (!le(e25))
    return null;
  const [t23, r23] = e25.split("/").slice(1);
  return { layerId: t23, fieldName: r23 };
}
function m11(e25, t23) {
  if (!t23.relationships)
    return null;
  let r23 = null;
  const { relationships: s24 } = t23;
  return s24.some((t24) => t24.id === parseInt(e25, 10) && (r23 = t24, true)), r23;
}
function y6({ originRelationship: e25, relationships: t23, layerId: r23 }) {
  let s24;
  return t23 && t23.some((t24) => (`${t24.relatedTableId}` === r23 && t24.id === e25.id && (s24 = t24), !!s24)), s24;
}
function j7(e25, t23) {
  const r23 = t23.toLowerCase();
  for (const s24 in e25)
    if (s24.toLowerCase() === r23)
      return e25[s24];
  return null;
}
function h9(e25, t23) {
  const r23 = m11(e25, t23);
  if (!r23)
    return;
  return { url: `${t23.url}/${r23.relatedTableId}`, sourceSpatialReference: t23.spatialReference, relation: r23, relatedFields: [], outStatistics: [] };
}
function g7(e25, t23) {
  if (!t23)
    return;
  if (!e25)
    return;
  const { features: r23, statsFeatures: s24 } = e25, o24 = r23 && r23.value;
  t23.relatedFeatures = o24 ? o24.features : [];
  const i33 = s24 && s24.value;
  t23.relatedStatsFeatures = i33 ? i33.features : [];
}
function F3(e25, t23, r23, s24) {
  const o24 = new d2();
  return o24.outFields = ["*"], o24.relationshipId = "number" == typeof t23.id ? t23.id : parseInt(t23.id, 10), o24.objectIds = [e25.attributes[r23.objectIdField]], r23.queryRelatedFeatures(o24, s24);
}
function I4(e25, t23, r23) {
  let s24 = 0;
  const o24 = [];
  for (; s24 < t23.length; )
    o24.push(`${e25} IN (${t23.slice(s24, r23 + s24)})`), s24 += r23;
  return o24.join(" OR ");
}
async function S4(e25, t23, r23, a32) {
  const l27 = r23.layerId.toString(), { layerInfo: u19, relation: p34, relatedFields: c36, outStatistics: f15, url: d16, sourceSpatialReference: m25 } = t23, h18 = y6({ originRelationship: p34, relationships: u19.relationships, layerId: l27 });
  if (h18.relationshipTableId && h18.keyFieldInRelationshipTable) {
    const t24 = (await F3(e25, h18, r23, a32))[e25.attributes[r23.objectIdField]];
    if (!t24)
      return null;
    const o24 = t24.features.map((e26) => e26.attributes[u19.objectIdField]);
    if ((f15 == null ? void 0 : f15.length) > 0 && u19.supportsStatistics) {
      const e26 = new x();
      e26.where = I4(u19.objectIdField, o24, 1e3), e26.outFields = c36, e26.outStatistics = f15, e26.sourceSpatialReference = m25;
      const r24 = { features: Promise.resolve(t24), statsFeatures: s7(d16, e26) };
      return E(r24);
    }
  }
  const g18 = h18 == null ? void 0 : h18.keyField;
  if (g18) {
    const r24 = ie(U5(u19.fields, g18)), l28 = j7(e25.attributes, p34.keyField), c37 = r24 ? `${g18}=${l28}` : `${g18}='${l28}'`, f16 = s7(d16, new x({ where: c37, outFields: t23.relatedFields, sourceSpatialReference: m25 }), a32), y15 = t23.outStatistics && t23.outStatistics.length > 0 && u19.supportsStatistics ? s7(d16, new x({ where: c37, outFields: t23.relatedFields, outStatistics: t23.outStatistics, sourceSpatialReference: m25 }), a32) : null, h19 = { features: f16 };
    return y15 && (h19.statsFeatures = y15), E(h19);
  }
  return null;
}
function w9(t23, r23) {
  return U3(t23, { query: { f: "json" }, signal: r23 && r23.signal });
}
function b7({ relatedInfos: e25, layer: r23 }, o24) {
  const i33 = {};
  return e25.forEach((e26, s24) => {
    const { relation: n30 } = e26;
    if (!n30) {
      const e27 = new s3("relation-required", "A relation is required on a layer to retrieve related records.");
      throw c13.error(e27), e27;
    }
    const { relatedTableId: a32 } = n30;
    if ("number" != typeof a32) {
      const e27 = new s3("A related table ID is required on a layer to retrieve related records.");
      throw c13.error(e27), e27;
    }
    const l27 = `${r23.url}/${a32}`, u19 = f6.get(l27), p34 = u19 || w9(l27, o24);
    u19 || f6.set(l27, p34), i33[s24] = p34;
  }), E(i33);
}
function R3({ graphic: e25, relatedInfos: t23, layer: r23 }, o24) {
  const i33 = {};
  return t23.forEach((t24, s24) => {
    t24.layerInfo && (i33[s24] = S4(e25, t24, r23, o24));
  }), E(i33);
}
function $2({ relatedInfo: e25, fieldName: t23, fieldInfo: r23 }) {
  if (e25.relatedFields.push(t23), r23.statisticType) {
    const s24 = new m5({ statisticType: r23.statisticType, onStatisticField: t23, outStatisticFieldName: t23 });
    e25.outStatistics.push(s24);
  }
}
function U5(e25, t23) {
  if (null != e25) {
    t23 = t23.toLowerCase();
    for (const r23 of e25)
      if (r23 && r23.name.toLowerCase() === t23)
        return r23;
  }
  return null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia/FeatureMediaViewModel.js
var y7 = { chartAnimation: true };
var I5 = class extends m {
  constructor(t23) {
    super(t23), this.abilities = { ...y7 }, this.activeMediaInfoIndex = 0, this.attributes = null, this.description = null, this.fieldInfoMap = null, this.formattedAttributes = null, this.expressionAttributes = null, this.layer = null, this.mediaInfos = null, this.popupTemplate = null, this.relatedInfos = null, this.title = null;
  }
  castAbilities(t23) {
    return { ...y7, ...t23 };
  }
  get activeMediaInfo() {
    return this.formattedMediaInfos[this.activeMediaInfoIndex] || null;
  }
  get formattedMediaInfos() {
    return this._formatMediaInfos() || [];
  }
  get formattedMediaInfoCount() {
    return this.formattedMediaInfos.length;
  }
  setActiveMedia(t23) {
    this._setContentElementMedia(t23);
  }
  next() {
    this._pageContentElementMedia(1);
  }
  previous() {
    this._pageContentElementMedia(-1);
  }
  _setContentElementMedia(t23) {
    const { formattedMediaInfoCount: e25 } = this, i33 = (t23 + e25) % e25;
    this.activeMediaInfoIndex = i33;
  }
  _pageContentElementMedia(t23) {
    const { activeMediaInfoIndex: e25 } = this, i33 = e25 + t23;
    this._setContentElementMedia(i33);
  }
  _formatMediaInfos() {
    const { attributes: t23, mediaInfos: e25, formattedAttributes: i33, expressionAttributes: o24, fieldInfoMap: r23, layer: a32 } = this;
    return e25 == null ? void 0 : e25.map((e26) => {
      const s24 = e26 == null ? void 0 : e26.clone();
      if (!s24)
        return null;
      if (s24.title = $({ attributes: t23, fieldInfoMap: r23, globalAttributes: i33, expressionAttributes: o24, layer: a32, text: s24.title }), s24.caption = $({ attributes: t23, fieldInfoMap: r23, globalAttributes: i33, expressionAttributes: o24, layer: a32, text: s24.caption }), s24.altText = $({ attributes: t23, fieldInfoMap: r23, globalAttributes: i33, expressionAttributes: o24, layer: a32, text: s24.altText }), "image" === s24.type) {
        const { value: t24 } = s24;
        return this._setImageValue({ value: t24, formattedAttributes: i33, layer: a32 }), s24.value.sourceURL ? s24 : void 0;
      }
      if ("pie-chart" === s24.type || "line-chart" === s24.type || "column-chart" === s24.type || "bar-chart" === s24.type) {
        const { value: e27 } = s24;
        return this._setChartValue({ value: e27, chartType: s24.type, attributes: t23, formattedAttributes: i33, layer: a32, expressionAttributes: o24 }), s24;
      }
      return null;
    }).filter(Boolean);
  }
  _setImageValue(t23) {
    const { fieldInfoMap: e25 } = this, { value: i33, formattedAttributes: o24, layer: r23 } = t23, { linkURL: a32, sourceURL: s24 } = i33;
    if (s24) {
      const t24 = P2(s24, r23);
      i33.sourceURL = S3({ formattedAttributes: o24, template: t24, fieldInfoMap: e25 });
    }
    if (a32) {
      const t24 = P2(a32, r23);
      i33.linkURL = S3({ formattedAttributes: o24, template: t24, fieldInfoMap: e25 });
    }
  }
  _setChartValue(t23) {
    const { value: e25, attributes: i33, formattedAttributes: o24, chartType: r23, layer: a32, expressionAttributes: s24 } = t23, { popupTemplate: l27, relatedInfos: n30 } = this, { fields: p34, normalizeField: c36 } = e25;
    e25.fields = L4(p34, a32), c36 && (e25.normalizeField = D(c36, a32));
    if (!p34.some((t24) => !!(null != o24[t24] || le(t24) && n30.size)))
      return;
    const m25 = l27 == null ? void 0 : l27.fieldInfos;
    p34.forEach((t24) => {
      if (le(t24))
        return void (e25.series = [...e25.series, ...this._getRelatedChartInfos({ fieldInfos: m25, fieldName: t24, formattedAttributes: o24, chartType: r23, value: e25 })]);
      const a33 = this._getChartOption({ value: e25, attributes: i33, chartType: r23, formattedAttributes: o24, expressionAttributes: s24, fieldName: t24, fieldInfos: m25 });
      e25.series.push(a33);
    });
  }
  _getRelatedChartInfos(t23) {
    var _a;
    const { fieldInfos: e25, fieldName: i33, formattedAttributes: o24, chartType: r23, value: a32 } = t23, s24 = [], l27 = d7(i33), { layerId: n30, fieldName: p34 } = l27, d16 = (_a = this.relatedInfos) == null ? void 0 : _a.get(n30.toString());
    if (!d16)
      return s24;
    const { relatedFeatures: u19, relation: f15 } = d16;
    if (!f15 || !u19)
      return s24;
    const { cardinality: c36 } = f15;
    u19.forEach((t24) => {
      const { attributes: l28 } = t24;
      l28 && Object.keys(l28).forEach((t25) => {
        t25 === p34 && s24.push(this._getChartOption({ value: a32, attributes: l28, formattedAttributes: o24, fieldName: i33, chartType: r23, relatedFieldName: t25, fieldInfos: e25 }));
      });
    });
    return "one-to-many" === c36 || "many-to-many" === c36 ? s24 : [s24[0]];
  }
  _getTooltip({ label: t23, value: e25, chartType: i33 }) {
    return "pie-chart" === i33 ? `${t23}` : `${t23}: ${e25}`;
  }
  _getChartOption(t23) {
    var _a, _b, _c, _d, _e2, _f;
    const { value: e25, attributes: i33, formattedAttributes: o24, expressionAttributes: r23, fieldName: l27, relatedFieldName: n30, fieldInfos: p34, chartType: d16 } = t23, { layer: y15, fieldInfoMap: I7 } = this, { normalizeField: v14, tooltipField: M6 } = e25, A6 = v14 ? le(v14) ? i33[d7(v14).fieldName] : i33[v14] : null, g18 = C2(l27) && r23 && void 0 !== r23[l27] ? r23[l27] : n30 && void 0 !== i33[n30] ? i33[n30] : void 0 !== i33[l27] ? i33[l27] : o24[l27], x5 = new i7({ fieldName: l27, value: void 0 === g18 ? null : g18 && A6 ? g18 / A6 : g18 });
    if (le(l27)) {
      const t24 = I7.get(l27.toLowerCase()), e26 = I7.get(M6.toLowerCase()), i34 = (_a = t24 == null ? void 0 : t24.fieldName) != null ? _a : l27, r24 = (_e2 = (_d = (_c = o24[(_b = e26 == null ? void 0 : e26.fieldName) != null ? _b : M6]) != null ? _c : t24 == null ? void 0 : t24.label) != null ? _d : t24 == null ? void 0 : t24.fieldName) != null ? _e2 : n30, a32 = o24[i34];
      return x5.tooltip = this._getTooltip({ label: r24, value: a32, chartType: d16 }), x5;
    }
    const _11 = B(p34, l27), C9 = D(l27, y15), T4 = M6 && void 0 !== o24[M6] ? o24[M6] : q(_11 || new c3({ fieldName: C9 }), (_f = this.popupTemplate) == null ? void 0 : _f.expressionInfos), N3 = o24[C9];
    return x5.tooltip = this._getTooltip({ label: T4, value: N3, chartType: d16 }), x5;
  }
};
e2([y()], I5.prototype, "abilities", void 0), e2([s4("abilities")], I5.prototype, "castAbilities", null), e2([y()], I5.prototype, "activeMediaInfoIndex", void 0), e2([y({ readOnly: true })], I5.prototype, "activeMediaInfo", null), e2([y()], I5.prototype, "attributes", void 0), e2([y()], I5.prototype, "description", void 0), e2([y()], I5.prototype, "fieldInfoMap", void 0), e2([y()], I5.prototype, "formattedAttributes", void 0), e2([y()], I5.prototype, "expressionAttributes", void 0), e2([y({ readOnly: true })], I5.prototype, "formattedMediaInfos", null), e2([y()], I5.prototype, "layer", void 0), e2([y({ readOnly: true })], I5.prototype, "formattedMediaInfoCount", null), e2([y()], I5.prototype, "mediaInfos", void 0), e2([y()], I5.prototype, "popupTemplate", void 0), e2([y()], I5.prototype, "relatedInfos", void 0), e2([y()], I5.prototype, "title", void 0), I5 = e2([n4("esri.widgets.Feature.FeatureMedia.FeatureMediaViewModel")], I5);
var v9 = I5;

// node_modules/@esri/calcite-colors/dist/colors.module.js
var f7 = ["#ffffff", "#858585", "#ffbebe", "#ffebbe", "#ffebaf", "#ffffbe", "#e9ffbe", "#d3ffbe", "#beffe8", "#bee8ff", "#bed2ff", "#e8beff", "#ffbee8", "#ebebeb", "#707070", "#ff7f7f", "#ffa77f", "#ffd37f", "#ffff73", "#d1ff73", "#a3ff73", "#73ffdf", "#73dfff", "#73b2ff", "#df73ff", "#ff73df", "#d6d6d6", "#5c5c5c", "#ff0000", "#ff5500", "#ffaa00", "#ffff00", "#aaff00", "#55ff00", "#00ffc5", "#00c5ff", "#0070ff", "#c500ff", "#ff00c5", "#c2c2c2", "#474747", "#e60000", "#e64c00", "#e69800", "#e6e600", "#98e600", "#4ce600", "#00e6a9", "#00a9e6", "#005ce6", "#a900e6", "#e600a9", "#adadad", "#242424", "#a80000", "#a83800", "#a87000", "#a8a800", "#70a800", "#38a800", "#00a884", "#0084a8", "#004da8", "#8400a8", "#a80084", "#999999", "#1a1a1a", "#730000", "#732600", "#734c00", "#737300", "#4c7300", "#267300", "#00734c", "#004c73", "#002673", "#4c0073", "#73004"];
var b8 = [].concat(f7.slice(30, 39), f7.slice(28, 30).reverse());
var e15 = [{ name: "default", colors: b8 }, { name: "cat-dark", colors: ["#ed5151", "#149ece", "#a7c636", "#9e559c", "#fc921f", "#ffde3e", "#f789d8", "#b7814a", "#3caf99", "#6b6bd6", "#b54779", "#7f7f7f"] }, { name: "tropical-bliss", colors: ["#fce138", "#ff9399", "#fcd27e", "#f1983c", "#a553b7", "#b1a9d0", "#6ecffc", "#4c81cd", "#fc6f84", "#fc3e5a", "#6af689", "#48885c"] }, { name: "desert-blooms", colors: ["#102432", "#144d59", "#ffc730", "#ed9310", "#a64f1b", "#661510", "#d9351a", "#b31515", "#4a0932", "#8c213f", "#18382e", "#2c6954"] }, { name: "under-the-sea", colors: ["#bf9727", "#607100", "#00734c", "#704489", "#01acca", "#024e76", "#f09100", "#ea311f", "#c6004b", "#7570b3", "#666666", "#333333"] }, { name: "vibrant-rainbow", colors: ["#fffb00", "#f5cb11", "#9fd40c", "#46e39c", "#32b8a6", "#7ff2fa", "#ac08cc", "#dd33ff", "#eb7200", "#e8a784", "#bf2e2e", "#6c7000"] }, { name: "ocean-bay", colors: ["#191921", "#11495c", "#78b1c2", "#454f4b", "#8f8f82", "#9be0c0", "#87b051", "#f7ec88", "#ebdcc1", "#dbb658", "#c43541", "#75351e"] }, { name: "prairie-summer", colors: ["#332424", "#751555", "#d47013", "#d68989", "#211173", "#82aad6", "#7bfaeb", "#6ec9a8", "#6b6408", "#eada40", "#ccc54a", "#1fc235"] }, { name: "pastel-chalk", colors: ["#fffd99", "#f5e6a4", "#c1d48c", "#b8e3d0", "#a0b8b5", "#cbf7fa", "#d791f2", "#dfc1eb", "#f2b983", "#e8c4b2", "#bf8e8e", "#94995c"] }, { name: "seq-yellow-orange-red-bright", colors: ["#910000", "#b1260b", "#c0370f", "#e05919", "#ef6a1d", "#ff7b22", "#ffa143", "#ffb454", "#ffda74", "#ffed85"] }, { name: "seq-reds-bright", colors: ["#57453b", "#7b4238", "#9f4036", "#c23d33", "#d7483c", "#ec5244", "#f3696c", "#f9816c", "#ffc4ae", "#fff0dc"] }, { name: "seq-purples-bright", colors: ["#4e465c", "#5a4a78", "#695291", "#775baa", "#8663c3", "#946bdc", "#aa89e8", "#c1a6f3", "#d7c4ff", "#e6e1ff"] }, { name: "seq-blues-bright", colors: ["#404d54", "#435c6c", "#48799d", "#4b88b6", "#4d96ce", "#50a5e7", "#74bbed", "#98d0f3", "#bce6f9", "#e6faff"] }, { name: "seq-greens-bright", colors: ["#39544c", "#386757", "#368165", "#359b73", "#33b581", "#4bc392", "#64d2a2", "#7ce0b3", "#cbf6d9", "#f4ffea"] }, { name: "seq-browns-bright", colors: ["#524834", "#715b38", "#8f6e3c", "#ae8140", "#cc9444", "#eba748", "#eeb664", "#f0c47f", "#f9e0b7", "#fff8eb"] }];

// node_modules/@arcgis/core/widgets/support/chartUtils.js
var n16 = "en-us";
var h10 = /* @__PURE__ */ new Map([["ar", () => import("./ar-AT37GLL7.js").then((t23) => t23.a)], ["bg-bg", () => import("./bg_BG-LXCDZMYM.js").then((t23) => t23.b)], ["bs-ba", () => import("./bs_BA-HHIFFQUM.js").then((t23) => t23.b)], ["ca-es", () => import("./ca_ES-ENR3TIA7.js").then((t23) => t23.c)], ["cs-cz", () => import("./cs_CZ-IUK574CJ.js").then((t23) => t23.c)], ["da-dk", () => import("./da_DK-56NXYKCJ.js").then((t23) => t23.d)], ["de-de", () => import("./de_DE-FDY57Q6S.js").then((t23) => t23.d)], ["de-ch", () => import("./de_CH-3RK4WP6Y.js").then((t23) => t23.d)], ["el-gr", () => import("./el_GR-VQ4EQCIA.js").then((t23) => t23.e)], ["en-us", () => import("./en_US-ZKFELZCC.js").then((t23) => t23.e)], ["en-ca", () => import("./en_CA-LBOZMYBS.js").then((t23) => t23.e)], ["es-es", () => import("./es_ES-IG4SJ5Q7.js").then((t23) => t23.e)], ["et-ee", () => import("./et_EE-YY3AT5EJ.js").then((t23) => t23.e)], ["fi-fi", () => import("./fi_FI-VCXDXZCF.js").then((t23) => t23.f)], ["fr-fr", () => import("./fr_FR-GPPTHU6D.js").then((t23) => t23.f)], ["he-il", () => import("./he_IL-6TENKX5A.js").then((t23) => t23.h)], ["hr-hr", () => import("./hr_HR-2I7B7WLW.js").then((t23) => t23.h)], ["hu-hu", () => import("./hu_HU-XN7CXGY5.js").then((t23) => t23.h)], ["id-id", () => import("./id_ID-IVYWWGRK.js").then((t23) => t23.i)], ["it-it", () => import("./it_IT-BIOIC22U.js").then((t23) => t23.i)], ["ja-jp", () => import("./ja_JP-3HL7C4ZE.js").then((t23) => t23.j)], ["ko-kr", () => import("./ko_KR-VTEOXKJ7.js").then((t23) => t23.k)], ["lt-lt", () => import("./lt_LT-TSX35HBF.js").then((t23) => t23.l)], ["lv-lv", () => import("./lv_LV-DMJLTK7E.js").then((t23) => t23.l)], ["nb-no", () => import("./nb_NO-NB3DCDFM.js").then((t23) => t23.n)], ["nl-nl", () => import("./nl_NL-SG5X4S67.js").then((t23) => t23.n)], ["pl-pl", () => import("./pl_PL-OVSEWA2N.js").then((t23) => t23.p)], ["pt-br", () => import("./pt_BR-67ZLQ3AH.js").then((t23) => t23.p)], ["pt-pt", () => import("./pt_PT-4RVYHKEZ.js").then((t23) => t23.p)], ["ro-ro", () => import("./ro_RO-MZD6DGHP.js").then((t23) => t23.r)], ["ru-ru", () => import("./ru_RU-J74G2TQP.js").then((t23) => t23.r)], ["sk-sk", () => import("./sk_SK-33VYXHF3.js").then((t23) => t23.s)], ["sl-sl", () => import("./sl_SL-EBOXH2I3.js").then((t23) => t23.s)], ["sr-rs", () => import("./sr_RS-MG2N2PG6.js").then((t23) => t23.s)], ["sv-se", () => import("./sv_SE-Z5VQNWVQ.js").then((t23) => t23.s)], ["th-th", () => import("./th_TH-LETJL64B.js").then((t23) => t23.t)], ["tr-tr", () => import("./tr_TR-QRRWV2MM.js").then((t23) => t23.t)], ["uk-ua", () => import("./uk_UA-VRD23ENR.js").then((t23) => t23.u)], ["vi-vn", () => import("./vi_VN-T5NN32DI.js").then((t23) => t23.v)], ["zh-cn", () => import("./zh_Hans-VB6L3Z4C.js").then((t23) => t23.z)], ["zh-hk", () => import("./zh_Hant-GBE36NE7.js").then((t23) => t23.z)], ["zh-tw", () => import("./zh_Hant-GBE36NE7.js").then((t23) => t23.z)]]);
function e16(t23) {
  const s24 = t23.split("-")[0].toLowerCase();
  let n30 = null;
  for (const e25 of h10.keys())
    if (e25.startsWith(s24)) {
      n30 = e25;
      break;
    }
  return n30;
}
function r13(t23) {
  return t23 ? h10.has(t23.toLowerCase()) ? t23.toLowerCase() : e16(t23) || n16 : n16;
}
var o10;
var i15;
async function c14(t23 = l4()) {
  if (t23 = r13(t23), o10 && t23 === i15)
    return o10;
  o10 = import("./chunks-6WE5LMVX.js").then((t24) => t24.i), i15 = t23;
  try {
    const [s24, n30] = await Promise.all([o10, h10.get(i15)()]);
    i15 === t23 && (s24.am4core.options.defaultLocale = n30.default), s24.am4core.options.suppressWarnings = true, s24.am4core.options.autoDispose = true;
  } catch {
    return o10 = null, i15 = null, null;
  }
  return o10;
}
function u7(s24, n30 = "default") {
  const h18 = e15.find((t23) => t23.name === n30);
  return h18 ? h18.colors.map((t23) => s24.color(t23)) : null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia.js
var M5 = { base: "esri-feature-media", mediaContainer: "esri-feature-media__container", mediaItemContainer: "esri-feature-media__item-container", mediaItem: "esri-feature-media__item", mediaItemTitle: "esri-feature-media__item-title", mediaItemCaption: "esri-feature-media__item-caption", mediaPrevious: "esri-feature-media__previous", mediaPreviousIconLTR: "esri-feature-media__previous-icon", mediaPreviousIconRTL: "esri-feature-media__previous-icon--rtl", mediaNext: "esri-feature-media__next", mediaNextIconLTR: "esri-feature-media__next-icon", mediaNextIconRTL: "esri-feature-media__next-icon--rtl", mediaChart: "esri-feature-media__chart", mediaButton: "esri-feature-media__button", mediaIcon: "esri-feature-media__icon", iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow" };
var I6 = 0.05;
var _4 = 0.95;
var w10 = 15;
var g8 = "color";
var y8 = "tooltip";
var T3 = "value";
var b9 = "default-line-value";
var C3 = class extends M2 {
  constructor(e25, t23) {
    super(e25, t23), this._refreshTimer = null, this._refreshIntervalInfo = null, this._featureElementInfo = null, this.viewModel = new v9(), this.messages = null, this._getChartDependencies = async (e26) => {
      const t24 = await c14(), { destroyed: i33, viewModel: r23 } = this;
      if (i33 || !r23 || !e26)
        return;
      const { activeMediaInfo: s24 } = r23, a32 = await this._getRendererColors(t24);
      this._renderChart({ chartDiv: e26, mediaInfo: s24, chartsModule: t24, colorMap: a32 });
    };
  }
  initialize() {
    this._featureElementInfo = new l11(), this.addHandles([l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.activeMediaInfo, (_b = this.viewModel) == null ? void 0 : _b.activeMediaInfoIndex];
    }, () => this._setupMediaRefreshTimer(), h2), l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h2)]);
  }
  destroy() {
    this._clearMediaRefreshTimer(), this._featureElementInfo.destroy();
  }
  get attributes() {
    return this.viewModel.attributes;
  }
  set attributes(e25) {
    this.viewModel.attributes = e25;
  }
  get activeMediaInfoIndex() {
    return this.viewModel.activeMediaInfoIndex;
  }
  set activeMediaInfoIndex(e25) {
    this.viewModel.activeMediaInfoIndex = e25;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e25) {
    this.viewModel.description = e25;
  }
  get fieldInfoMap() {
    return this.viewModel.fieldInfoMap;
  }
  set fieldInfoMap(e25) {
    this.viewModel.fieldInfoMap = e25;
  }
  get layer() {
    return this.viewModel.layer;
  }
  set layer(e25) {
    this.viewModel.layer = e25;
  }
  get mediaInfos() {
    return this.viewModel.mediaInfos;
  }
  set mediaInfos(e25) {
    this.viewModel.mediaInfos = e25;
  }
  get popupTemplate() {
    return this.viewModel.popupTemplate;
  }
  set popupTemplate(e25) {
    this.viewModel.popupTemplate = e25;
  }
  get relatedInfos() {
    return this.viewModel.relatedInfos;
  }
  set relatedInfos(e25) {
    this.viewModel.relatedInfos = e25;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e25) {
    this.viewModel.title = e25;
  }
  render() {
    var _a;
    return n7("div", { bind: this, class: M5.base, onkeyup: this._handleMediaKeyup }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderMedia());
  }
  renderMedia() {
    const { formattedMediaInfoCount: e25 } = this.viewModel;
    return e25 ? n7("div", { key: "media-element-container", class: M5.mediaContainer }, this.renderMediaPageButton("previous"), this.renderMediaInfo(), this.renderMediaPageButton("next")) : null;
  }
  renderImageMediaInfo(e25) {
    const { _refreshIntervalInfo: t23 } = this, { activeMediaInfoIndex: i33, formattedMediaInfoCount: r23 } = this.viewModel, { value: s24, refreshInterval: a32, altText: o24, title: n30, type: l27 } = e25, { sourceURL: d16, linkURL: m25 } = s24, u19 = x3(m25) ? "_blank" : "_self", p34 = "_blank" === u19 ? "noreferrer" : "", h18 = a32 ? t23 : null, v14 = h18 ? h18.timestamp : 0, M6 = h18 ? h18.sourceURL : d16, I7 = n7("img", { alt: o24 || n30, key: `media-${l27}-${i33}-${r23}-${v14}`, src: M6 }), _11 = m25 ? n7("a", { title: n30, href: m25, rel: p34, target: u19 }, I7) : null;
    return _11 || I7;
  }
  renderChartMediaInfo(e25) {
    const { activeMediaInfoIndex: t23, formattedMediaInfoCount: i33 } = this.viewModel;
    return n7("div", { key: `media-${e25.type}-${t23}-${i33}`, bind: this, class: M5.mediaChart, afterCreate: this._getChartDependencies });
  }
  renderMediaInfoType() {
    const { activeMediaInfo: e25 } = this.viewModel;
    return e25 ? "image" === e25.type ? this.renderImageMediaInfo(e25) : e25.type.includes("chart") ? this.renderChartMediaInfo(e25) : null : null;
  }
  renderMediaInfo() {
    const { activeMediaInfo: e25 } = this.viewModel;
    if (!e25)
      return null;
    const t23 = e25.title ? n7("div", { key: "media-title", class: M5.mediaItemTitle, innerHTML: e25.title }) : null, i33 = e25.caption ? n7("div", { key: "media-caption", class: M5.mediaItemCaption, innerHTML: e25.caption }) : null;
    return n7("div", { key: "media-container", class: M5.mediaItemContainer }, n7("div", { key: "media-item-container", class: M5.mediaItem }, this.renderMediaInfoType()), t23, i33);
  }
  renderMediaPageButton(e25) {
    if (this.viewModel.formattedMediaInfoCount < 2)
      return null;
    const t23 = "previous" === e25, i33 = t23 ? this.messages.previous : this.messages.next, r23 = t23 ? this.classes(M5.mediaButton, M5.mediaPrevious) : this.classes(M5.mediaButton, M5.mediaNext), s24 = t23 ? this.classes(M5.mediaIcon, M5.mediaPreviousIconLTR, M5.iconLeftTriangleArrow) : this.classes(M5.mediaIcon, M5.mediaNextIconLTR, M5.iconRightTriangleArrow), a32 = t23 ? this.classes(M5.mediaIcon, M5.mediaPreviousIconRTL, M5.iconRightTriangleArrow) : this.classes(M5.mediaIcon, M5.mediaNextIconRTL, M5.iconLeftTriangleArrow), o24 = t23 ? "media-previous" : "media-next", n30 = t23 ? this._previous : this._next;
    return n7("button", { type: "button", key: o24, title: i33, "aria-label": i33, tabIndex: 0, class: r23, bind: this, onclick: n30 }, n7("span", { "aria-hidden": "true", class: s24 }), n7("span", { "aria-hidden": "true", class: a32 }));
  }
  _setupFeatureElementInfo() {
    const { description: e25, title: t23 } = this;
    this._featureElementInfo.set({ description: e25, title: t23 });
  }
  _next() {
    this.viewModel.next();
  }
  _previous() {
    this.viewModel.previous();
  }
  async _getRendererColors(e25) {
    var _a, _b;
    const { am4core: t23 } = e25, i33 = /* @__PURE__ */ new Map(), r23 = (_b = (_a = this.viewModel) == null ? void 0 : _a.layer) == null ? void 0 : _b.renderer, s24 = "default";
    if (!r23)
      return i33;
    const a32 = await b5(r23);
    a32.delete(s24);
    return Array.from(a32.values()).every((e26) => 1 === (e26 == null ? void 0 : e26.length)) ? (i33.set(b9, t23.color({ r: 50, g: 50, b: 50, a: 1 })), Array.from(a32.keys()).forEach((e26) => {
      e26 && i33.set(e26, t23.color(a32.get(e26)[0].toCss(true)));
    }), i33) : i33;
  }
  _handleMediaKeyup(e25) {
    const i33 = i(e25);
    "ArrowLeft" === i33 && (e25.stopPropagation(), this.viewModel.previous()), "ArrowRight" === i33 && (e25.stopPropagation(), this.viewModel.next());
  }
  _renderChart(e25) {
    const { abilities: t23 } = this.viewModel, { chartsModule: i33, chartDiv: r23, mediaInfo: s24, colorMap: a32 } = e25, { value: o24, type: n30 } = s24, { am4core: l27 } = i33, d16 = u7(l27);
    function c36(e26) {
      e26 instanceof l27.ColorSet && d16 && (e26.list = d16);
    }
    r5() && l27.useTheme(i33.am4themes_dark);
    const m25 = window.matchMedia("(prefers-reduced-motion: reduce)");
    t23.chartAnimation && !m25.matches ? l27.useTheme(i33.am4themes_animated) : l27.unuseTheme(i33.am4themes_animated), l27.useTheme(c36);
    const p34 = "pie-chart" === n30 ? this._createPieChart(e25) : this._createXYChart(e25);
    r23.setAttribute("aria-label", s24.altText || s24.title), p34.data = o24.series.map((e26) => ({ [y8]: e26.tooltip, [T3]: e26.value, [g8]: a32.get(e26.fieldName) })).filter((e26) => "pie-chart" !== n30 || e26.value > 0);
  }
  _customizeChartTooltip(e25, t23) {
    e25.label.wrap = true, e25.label.maxWidth = 200, e25.autoTextColor = false, e25.getFillFromObject = false, e25.label.fill = t23.color("#ffffff"), e25.background.fill = t23.color({ r: 0, g: 0, b: 0, a: 0.7 });
  }
  _createPieChart(e25) {
    const { chartDiv: t23, chartsModule: i33 } = e25, { am4core: r23, am4charts: s24 } = i33, a32 = r23.create(t23, s24.PieChart);
    a32.rtl = f3(this.container);
    const o24 = a32.series.push(new s24.PieSeries());
    return o24.labels.template.disabled = true, o24.ticks.template.disabled = true, o24.dataFields.value = T3, o24.dataFields.category = y8, this._customizeChartTooltip(o24.tooltip, r23), o24.slices.template.propertyFields.fill = g8, o24.slices.template.propertyFields.stroke = g8, a32;
  }
  _getMinSeriesValue(e25) {
    let t23 = 0;
    return e25.forEach((e26) => t23 = Math.min(e26.value, t23)), t23;
  }
  _createColumnChart(e25, t23) {
    const { chartsModule: i33, mediaInfo: r23 } = t23, { value: s24 } = r23, { am4core: a32, am4charts: o24 } = i33, n30 = e25.xAxes.push(new o24.CategoryAxis());
    n30.dataFields.category = y8, n30.renderer.labels.template.disabled = true, this._customizeChartTooltip(n30.tooltip, a32), n30.tooltip.events.on("sizechanged", () => {
      n30.tooltip.dy = -n30.tooltip.contentHeight;
    });
    const l27 = e25.yAxes.push(new o24.ValueAxis()), d16 = l27.renderer.labels.template;
    l27.renderer.minLabelPosition = I6, l27.renderer.maxLabelPosition = _4, l27.min = this._getMinSeriesValue(s24.series), this._customizeChartTooltip(l27.tooltip, a32), d16.wrap = true;
    const c36 = e25.series.push(new o24.ColumnSeries());
    c36.dataFields.valueY = T3, c36.dataFields.categoryX = y8, c36.columns.template.propertyFields.fill = g8, c36.columns.template.propertyFields.stroke = g8, e25.cursor = new o24.XYCursor(), s24.series.length > w10 && (e25.scrollbarX = new a32.Scrollbar());
  }
  _createBarChart(e25, t23) {
    const { chartsModule: i33, mediaInfo: r23 } = t23, { value: s24 } = r23, { am4core: a32, am4charts: o24 } = i33, n30 = e25.yAxes.push(new o24.CategoryAxis());
    n30.dataFields.category = y8, n30.renderer.inversed = true, n30.renderer.labels.template.disabled = true, this._customizeChartTooltip(n30.tooltip, a32), n30.tooltip.events.on("sizechanged", () => {
      n30.tooltip.dx = n30.tooltip.contentWidth;
    });
    const l27 = e25.xAxes.push(new o24.ValueAxis()), d16 = l27.renderer.labels.template;
    l27.renderer.minLabelPosition = I6, l27.renderer.maxLabelPosition = _4, l27.min = this._getMinSeriesValue(s24.series), this._customizeChartTooltip(l27.tooltip, a32), d16.wrap = true;
    const c36 = e25.series.push(new o24.ColumnSeries());
    c36.dataFields.valueX = T3, c36.dataFields.categoryY = y8, c36.columns.template.propertyFields.fill = g8, c36.columns.template.propertyFields.stroke = g8, e25.cursor = new o24.XYCursor(), s24.series.length > w10 && (e25.scrollbarY = new a32.Scrollbar());
  }
  _createLineChart(e25, t23) {
    const { chartsModule: i33, mediaInfo: r23, colorMap: s24 } = t23, { value: a32 } = r23, { am4core: o24, am4charts: n30 } = i33, l27 = e25.xAxes.push(new n30.CategoryAxis());
    l27.dataFields.category = y8, l27.renderer.labels.template.disabled = true, this._customizeChartTooltip(l27.tooltip, o24), l27.tooltip.events.on("sizechanged", () => {
      l27.tooltip.dy = -l27.tooltip.contentHeight;
    });
    const d16 = e25.yAxes.push(new n30.ValueAxis()), c36 = d16.renderer.labels.template;
    d16.renderer.minLabelPosition = I6, d16.renderer.maxLabelPosition = _4, d16.min = this._getMinSeriesValue(a32.series), this._customizeChartTooltip(d16.tooltip, o24), c36.wrap = true;
    const m25 = e25.series.push(new n30.LineSeries());
    m25.dataFields.categoryX = y8, m25.dataFields.valueY = T3, m25.strokeWidth = 1;
    const u19 = s24.get(b9);
    u19 && (m25.stroke = u19);
    const p34 = m25.bullets.push(new n30.CircleBullet());
    p34.propertyFields.fill = g8, p34.propertyFields.stroke = g8, e25.cursor = new n30.XYCursor(), a32.series.length > w10 && (e25.scrollbarX = new o24.Scrollbar());
  }
  _createXYChart(e25) {
    const { chartDiv: t23, chartsModule: i33, mediaInfo: r23 } = e25, { type: s24 } = r23, { am4core: a32, am4charts: o24 } = i33, n30 = a32.create(t23, o24.XYChart);
    return n30.rtl = f3(this.container), "column-chart" === s24 && this._createColumnChart(n30, e25), "bar-chart" === s24 && this._createBarChart(n30, e25), "line-chart" === s24 && this._createLineChart(n30, e25), n30;
  }
  _clearMediaRefreshTimer() {
    const { _refreshTimer: e25 } = this;
    e25 && (clearTimeout(e25), this._refreshTimer = null);
  }
  _updateMediaInfoTimestamp(e25) {
    const t23 = Date.now();
    this._refreshIntervalInfo = { timestamp: t23, sourceURL: this._getImageSource(e25, t23) }, this.scheduleRender();
  }
  _setupMediaRefreshTimer() {
    this._clearMediaRefreshTimer();
    const { activeMediaInfo: e25 } = this.viewModel;
    e25 && "image" === e25.type && e25.refreshInterval && this._setRefreshTimeout(e25);
  }
  _setRefreshTimeout(e25) {
    const { refreshInterval: t23, value: i33 } = e25;
    if (!t23)
      return;
    const r23 = 6e4 * t23;
    this._updateMediaInfoTimestamp(i33.sourceURL);
    const s24 = setInterval(() => {
      this._updateMediaInfoTimestamp(i33.sourceURL);
    }, r23);
    this._refreshTimer = s24;
  }
  _getImageSource(e25, t23) {
    const i33 = e25.includes("?") ? "&" : "?", [r23, s24 = ""] = e25.split("#");
    return `${r23}${i33}timestamp=${t23}${s24 ? "#" : ""}${s24}`;
  }
};
e2([y()], C3.prototype, "attributes", null), e2([y()], C3.prototype, "activeMediaInfoIndex", null), e2([y()], C3.prototype, "description", null), e2([y()], C3.prototype, "fieldInfoMap", null), e2([y()], C3.prototype, "layer", null), e2([y()], C3.prototype, "mediaInfos", null), e2([y()], C3.prototype, "popupTemplate", null), e2([y()], C3.prototype, "relatedInfos", null), e2([y()], C3.prototype, "title", null), e2([y({ type: v9 })], C3.prototype, "viewModel", void 0), e2([y(), e4("esri/widgets/Feature/t9n/Feature")], C3.prototype, "messages", void 0), C3 = e2([n4("esri.widgets.Feature.FeatureMedia")], C3);
var x4 = C3;

// node_modules/@arcgis/core/widgets/Feature/support/arcadeFeatureUtils.js
var s11 = ["$datastore", "$map", "$layer", "$aggregatedfeatures"];
var n17 = "esri.widgets.Feature.support.arcadeFeatureUtils";
var o11 = s2.getLogger(n17);
function c15(e25) {
  return "string" == typeof e25 ? te(ee(e25)) : Array.isArray(e25) ? p11(e25) : "esri.arcade.Dictionary" === (e25 == null ? void 0 : e25.declaredClass) ? l15(e25) : e25;
}
function p11(e25) {
  return `<ul class="esri-widget__list">${e25.map((e26) => `<li>${"string" == typeof e26 ? te(ee(e26)) : e26}</li>`).join("")}</ul>`;
}
function l15(e25) {
  return `<table class="esri-widget__table">${e25.keys().map((r23) => {
    const t23 = e25.field(r23);
    return `<tr><th>${r23}</th><td>${"string" == typeof t23 ? te(ee(t23)) : t23}</td></tr>`;
  }).join("")}</table>`;
}
function u8({ aggregatedFeatures: e25, arcadeUtils: r23, featureSetVars: a32, context: i33, viewInfo: s24, map: n30, graphic: o24, interceptor: c36 }) {
  a32.forEach((a33) => {
    const p34 = a33.toLowerCase(), l27 = { map: n30, spatialReference: s24.sr, interceptor: c36 };
    if ("$map" === p34 && (i33.vars[p34] = r23.convertMapToFeatureSetCollection(l27)), "$layer" === p34 && (i33.vars[p34] = r23.convertFeatureLayerToFeatureSet({ layer: o24.sourceLayer, spatialReference: s24.sr, interceptor: c36 })), "$datastore" === p34 && (i33.vars[p34] = r23.convertServiceUrlToWorkspace({ url: o24.sourceLayer.url, spatialReference: s24.sr, interceptor: c36 })), "$aggregatedfeatures" === p34) {
      const a34 = o24.layer, { fields: n31, objectIdField: l28, geometryType: u19, spatialReference: f15, displayField: g18 } = a34, y15 = new Ze({ fields: n31, objectIdField: l28, geometryType: u19, spatialReference: f15, displayField: g18, ..."feature" === a34.type ? { templates: a34.templates, typeIdField: a34.typeIdField, types: a34.types } : null, source: e25 });
      i33.vars[p34] = r23.convertFeatureLayerToFeatureSet({ layer: y15, spatialReference: s24.sr, interceptor: c36 });
    }
  });
}
function f8() {
  return import("./arcadeUtils-E27FLIND.js");
}
function g9(e25) {
  return "createQuery" in e25 && "queryFeatures" in e25;
}
async function y9({ graphic: e25, view: r23 }) {
  const { isAggregate: t23, layer: a32 } = e25;
  if (!t23 || !a32 || "2d" !== (r23 == null ? void 0 : r23.type))
    return [];
  const i33 = await r23.whenLayerView(a32);
  if (!g9(i33))
    return [];
  const s24 = i33.createQuery();
  s24.aggregateIds = [e25.getObjectId()];
  const { features: n30 } = await i33.queryFeatures(s24);
  return n30;
}
async function d8({ expressionInfo: e25, arcadeUtils: r23, interceptor: t23, spatialReference: a32, map: i33, graphic: n30, view: c36 }) {
  if (!e25 || !e25.expression)
    return null;
  const p34 = r23.createSyntaxTree(e25.expression), l27 = s11.filter((e26) => r23.hasVariable(p34, e26)), [f15] = await Promise.all([y9({ graphic: n30, view: c36 }), r23.loadScriptDependencies(p34, true, l27)]), g18 = r23.getViewInfo({ spatialReference: a32 }), d16 = r23.createExecContext(n30, g18);
  d16.interceptor = t23, d16.useAsync = true, u8({ aggregatedFeatures: f15, arcadeUtils: r23, featureSetVars: l27, context: d16, viewInfo: g18, map: i33, graphic: n30, interceptor: t23 });
  const m25 = r23.createFunction(p34, d16);
  return r23.executeAsyncFunction(m25, d16).catch((r24) => o11.error("arcade-execution-error", { error: r24, graphic: n30, expressionInfo: e25 }));
}
async function m12({ expressionInfos: e25, spatialReference: t23, graphic: a32, interceptor: i33, map: s24, view: n30 }) {
  if (!e25 || !e25.length)
    return {};
  const o24 = await f8(), p34 = {};
  for (const r23 of e25)
    p34[`expression/${r23.name}`] = d8({ expressionInfo: r23, arcadeUtils: o24, interceptor: i33, spatialReference: t23, map: s24, graphic: a32, view: n30 });
  const l27 = await E(p34), u19 = {};
  for (const r23 in l27)
    u19[r23] = c15(l27[r23].value);
  return u19;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression/FeatureExpressionViewModel.js
var w11 = 1;
var j8 = class extends a7(m) {
  constructor(t23) {
    super(t23), this._abortController = null, this.expressionInfo = null, this.graphic = null, this.contentElement = null, this.contentElementViewModel = null, this.interceptor = null, this.view = null, this._cancelQuery = () => {
      const { _abortController: t24 } = this;
      t24 && t24.abort(), this._abortController = null;
    }, this._createVM = () => {
      var _a, _b;
      const t24 = (_a = this.contentElement) == null ? void 0 : _a.type;
      (_b = this.contentElementViewModel) == null ? void 0 : _b.destroy();
      const e25 = "fields" === t24 ? new n15() : "media" === t24 ? new v9() : "text" === t24 ? new l12() : null;
      this._set("contentElementViewModel", e25);
    }, this._compile = async () => {
      this._cancelQuery();
      const t24 = new AbortController();
      this._abortController = t24, await this._compileExpression(), this._abortController === t24 && (this._abortController = null);
    }, this._compileThrottled = e9(this._compile, w11, this), this._compileExpression = async () => {
      const { expressionInfo: t24, graphic: e25, interceptor: o24, spatialReference: r23, map: n30, view: s24, _abortController: i33 } = this;
      if (!(t24 && e25 && r23 && n30))
        return void this._set("contentElement", null);
      const l27 = await f8();
      if (i33 !== this._abortController)
        return;
      const p34 = await d8({ arcadeUtils: l27, expressionInfo: t24, graphic: e25, interceptor: o24, map: n30, spatialReference: r23, view: s24 });
      if (!p34 || "esri.arcade.Dictionary" !== p34.declaredClass)
        return void this._set("contentElement", null);
      const h18 = await p34.castAsJsonAsync(i33.signal), u19 = h18 == null ? void 0 : h18.type, d16 = "media" === u19 ? I.fromJSON(h18) : "text" === u19 ? c5.fromJSON(h18) : "fields" === u19 ? c4.fromJSON(h18) : null;
      this._set("contentElement", d16);
    }, this.handles.add([l3(() => [this.expressionInfo, this.graphic, this.map, this.spatialReference, this.view], () => this._compileThrottled(), h2), l3(() => [this.contentElement], () => this._createVM(), h2)]);
  }
  destroy() {
    var _a;
    this._cancelQuery(), (_a = this.contentElementViewModel) == null ? void 0 : _a.destroy(), this._set("contentElementViewModel", null), this._set("contentElement", null);
  }
  get spatialReference() {
    var _a, _b;
    return (_b = (_a = this.view) == null ? void 0 : _a.spatialReference) != null ? _b : null;
  }
  set spatialReference(t23) {
    this._override("spatialReference", t23);
  }
  get state() {
    const { _abortController: t23, contentElement: e25, contentElementViewModel: o24 } = this;
    return t23 ? "loading" : e25 || o24 ? "ready" : "disabled";
  }
  get map() {
    var _a, _b;
    return (_b = (_a = this.view) == null ? void 0 : _a.map) != null ? _b : null;
  }
  set map(t23) {
    this._override("map", t23);
  }
};
e2([y()], j8.prototype, "_abortController", void 0), e2([y({ type: i6 })], j8.prototype, "expressionInfo", void 0), e2([y({ type: g3 })], j8.prototype, "graphic", void 0), e2([y({ readOnly: true })], j8.prototype, "contentElement", void 0), e2([y({ readOnly: true })], j8.prototype, "contentElementViewModel", void 0), e2([y()], j8.prototype, "interceptor", void 0), e2([y()], j8.prototype, "spatialReference", null), e2([y({ readOnly: true })], j8.prototype, "state", null), e2([y()], j8.prototype, "map", null), e2([y()], j8.prototype, "view", void 0), j8 = e2([n4("esri.widgets.Feature.FeatureExpression.FeatureExpressionViewModel")], j8);
var C4 = j8;

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression.js
var c16 = { iconLoading: "esri-icon-loading-indicator esri-rotating", base: "esri-feature-expression", loadingSpinnerContainer: "esri-feature__loading-container", spinner: "esri-feature__loading-spinner" };
var u9 = class extends M2 {
  constructor(e25, t23) {
    super(e25, t23), this.viewModel = new C4();
  }
  initialize() {
    this.addHandles(l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentElementViewModel;
    }, () => this._setupExpressionWidget(), h2));
  }
  destroy() {
    this._destroyContentWidget();
  }
  renderLoading() {
    return n7("div", { key: "loading-container", class: c16.loadingSpinnerContainer }, n7("span", { class: this.classes(c16.iconLoading, c16.spinner) }));
  }
  render() {
    var _a;
    const { state: e25 } = this.viewModel;
    return n7("div", { class: c16.base }, "loading" === e25 ? this.renderLoading() : "disabled" === e25 ? null : (_a = this._contentWidget) == null ? void 0 : _a.render());
  }
  _destroyContentWidget() {
    const { _contentWidget: e25 } = this;
    e25 && (e25.viewModel = null, e25.destroy()), this._contentWidget = null;
  }
  _setupExpressionWidget() {
    const { contentElementViewModel: e25, contentElement: t23 } = this.viewModel, s24 = t23 == null ? void 0 : t23.type;
    this._destroyContentWidget();
    const o24 = e25 ? "fields" === s24 ? new m10({ viewModel: e25 }) : "media" === s24 ? new x4({ viewModel: e25 }) : "text" === s24 ? new l13({ viewModel: e25 }) : null : null;
    this._contentWidget = o24, this.scheduleRender();
  }
};
e2([y({ type: C4 })], u9.prototype, "viewModel", void 0), u9 = e2([n4("esri.widgets.Feature.FeatureExpression")], u9);
var m13 = u9;

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship/FeatureRelationshipViewModel.js
var _5 = 100;
var g10 = class extends i5(s6(a7(m))) {
  constructor(e25) {
    super(e25), this._queryAbortController = null, this._queryPageAbortController = null, this._queryFeatureCountAbortController = null, this.featuresPerPage = 10, this.description = null, this.graphic = null, this.layer = null, this.map = null, this.orderByFields = null, this.featureCount = 0, this.relationshipId = null, this.showAllEnabled = false, this.title = null, this._cancelQuery = () => {
      const { _queryAbortController: e26 } = this;
      e26 && e26.abort(), this._queryAbortController = null;
    }, this._cancelQueryFeatureCount = () => {
      const { _queryFeatureCountAbortController: e26 } = this;
      e26 && e26.abort(), this._queryFeatureCountAbortController = null;
    }, this._cancelQueryPage = () => {
      const { _queryPageAbortController: e26 } = this;
      e26 && e26.abort(), this._queryPageAbortController = null;
    }, this._queryController = async () => {
      this._cancelQuery();
      const e26 = new AbortController();
      this._queryAbortController = e26, await g2(this._query()), this._queryAbortController === e26 && (this._queryAbortController = null);
    }, this._queryFeatureCountController = async () => {
      this._cancelQueryFeatureCount();
      const e26 = new AbortController();
      this._queryFeatureCountAbortController = e26, await g2(this._queryFeatureCount()), this._queryFeatureCountAbortController === e26 && (this._queryFeatureCountAbortController = null);
    }, this._queryPageController = async () => {
      const e26 = new AbortController();
      this._queryPageAbortController = e26, await g2(this._queryPage()), this._queryPageAbortController === e26 && (this._queryPageAbortController = null);
    }, this._queryThrottled = e9(this._queryController, _5, this), this._queryFeatureCountThrottled = e9(this._queryFeatureCountController, _5, this), this._queryPageThrottled = e9(this._queryPageController, _5, this), this._query = async () => {
      const { _queryAbortController: e26, relatedFeatures: t23 } = this;
      this._destroyRelatedFeatureViewModels(), this.featurePage = 1, t23.removeAll(), t23.addMany(this._sliceFeatures(await this._queryRelatedFeatures({ signal: e26 == null ? void 0 : e26.signal })));
    }, this.handles.add([l3(() => [this.displayCount, this.graphic, this.layer, this.map, this.orderByFieldsFixedCasing, this.relationshipId, this.featuresPerPage, this.showAllEnabled], () => this._queryThrottled(), h2), l3(() => [this.featurePage, this.showAllEnabled], () => this._queryPageThrottled()), l3(() => [this.layer, this.relationshipId, this.objectId], () => this._queryFeatureCountThrottled())]);
  }
  destroy() {
    this._destroyRelatedFeatureViewModels(), this.relatedFeatures.removeAll(), this._cancelQuery(), this._cancelQueryFeatureCount(), this._cancelQueryPage();
  }
  set featurePage(e25) {
    const { featuresPerPage: t23, featureCount: r23 } = this, o24 = 1, l27 = Math.ceil(r23 / t23) || 1;
    this._set("featurePage", Math.min(Math.max(e25, o24), l27));
  }
  get featurePage() {
    return this._get("featurePage");
  }
  get orderByFieldsFixedCasing() {
    const { orderByFields: e25, relatedLayer: t23 } = this;
    return e25 && (t23 == null ? void 0 : t23.loaded) ? e25.map((e26) => {
      const r23 = e26.clone(), o24 = D(e26.field, t23);
      return r23.field = o24, r23;
    }) : e25;
  }
  get itemDescriptionFieldName() {
    var _a, _b;
    return ((_b = (_a = this.orderByFieldsFixedCasing) == null ? void 0 : _a[0]) == null ? void 0 : _b.field) || null;
  }
  set displayCount(e25) {
    const t23 = 0, r23 = 10;
    this._set("displayCount", Math.min(Math.max(e25, t23), r23));
  }
  get displayCount() {
    return this._get("displayCount");
  }
  get objectId() {
    var _a, _b, _c;
    return (_c = (_b = (_a = this.graphic) == null ? void 0 : _a.attributes) == null ? void 0 : _b[this.objectIdField]) != null ? _c : null;
  }
  get objectIdField() {
    var _a;
    return ((_a = this.layer) == null ? void 0 : _a.objectIdField) || null;
  }
  get relatedFeatures() {
    return this._get("relatedFeatures") || new j3();
  }
  get relatedLayer() {
    const { layer: e25, map: t23, relationship: r23 } = this;
    return (e25 == null ? void 0 : e25.loaded) ? ye(t23, e25, r23) : null;
  }
  get relationship() {
    var _a, _b;
    const { relationshipId: e25, layer: t23 } = this;
    return "number" == typeof e25 ? (_b = (_a = t23 == null ? void 0 : t23.relationships) == null ? void 0 : _a.find(({ id: t24 }) => t24 === e25)) != null ? _b : null : null;
  }
  get relatedFeatureViewModels() {
    return this._get("relatedFeatureViewModels") || new j3();
  }
  get state() {
    const { _queryAbortController: e25, _queryFeatureCountAbortController: t23, _queryPageAbortController: r23, graphic: o24, relatedLayer: l27 } = this;
    return t23 ? "loading" : e25 || r23 ? "querying" : o24 && l27 ? "ready" : "disabled";
  }
  _destroyRelatedFeatureViewModels() {
    var _a;
    (_a = this.relatedFeatureViewModels) == null ? void 0 : _a.forEach((e25) => !e25.destroyed && e25.destroy()), this.relatedFeatureViewModels.removeAll();
  }
  async _queryFeatureCount() {
    var _a, _b, _c, _d, _e2;
    const { layer: e25, relatedLayer: t23, relationshipId: r23, objectId: o24, _queryFeatureCountAbortController: l27 } = this;
    if (await (e25 == null ? void 0 : e25.load()), !t23 || "number" != typeof o24 || !((_b = (_a = e25 == null ? void 0 : e25.capabilities) == null ? void 0 : _a.queryRelated) == null ? void 0 : _b.supportsCount))
      return void this._set("featureCount", 0);
    await t23.load();
    const a32 = t23.createQuery(), s24 = (_e2 = (_d = (_c = e25.capabilities) == null ? void 0 : _c.queryRelated) == null ? void 0 : _d.supportsCacheHint) != null ? _e2 : false, i33 = new d2({ cacheHint: s24, relationshipId: r23, returnGeometry: false, objectIds: [o24], where: a32.where }), n30 = await e25.queryRelatedFeaturesCount(i33, { signal: l27 == null ? void 0 : l27.signal });
    this._set("featureCount", n30[o24] || 0);
  }
  _sliceFeatures(e25) {
    const { showAllEnabled: t23, displayCount: r23 } = this;
    return t23 ? e25 : r23 ? e25.slice(0, r23) : [];
  }
  async _queryPage() {
    const { relatedFeatures: e25, featurePage: t23, showAllEnabled: r23, _queryPageAbortController: o24 } = this;
    !r23 || t23 < 2 || e25.addMany(await this._queryRelatedFeatures({ signal: o24 == null ? void 0 : o24.signal }));
  }
  async _queryRelatedFeatures(e25) {
    var _a, _b, _c, _d, _e2;
    const { orderByFieldsFixedCasing: t23, showAllEnabled: r23, featuresPerPage: o24, displayCount: l27, layer: a32, relationshipId: s24, featurePage: i33, featureCount: n30, relatedLayer: u19 } = this;
    await (a32 == null ? void 0 : a32.load());
    const { relationship: d16, objectId: y15 } = this;
    if (!d16 || "number" != typeof y15 || !((_b = (_a = a32 == null ? void 0 : a32.capabilities) == null ? void 0 : _a.queryRelated) == null ? void 0 : _b.supportsPagination))
      return [];
    const h18 = r23 ? ((i33 - 1) * o24 + n30) % n30 : 0, c36 = r23 ? o24 : l27;
    if (!u19)
      return [];
    await u19.load();
    const C9 = u19.objectIdField, _11 = [...t23 == null ? void 0 : t23.map((e26) => e26.field), C9], g18 = t23 == null ? void 0 : t23.map((e26) => `${e26.field} ${e26.order}`), b15 = ((_d = (_c = a32.capabilities) == null ? void 0 : _c.queryRelated) == null ? void 0 : _d.supportsCacheHint) || false, F4 = u19.createQuery(), m25 = new d2({ orderByFields: g18, start: h18, num: c36, outFields: _11, cacheHint: b15, relationshipId: s24, returnGeometry: false, objectIds: [y15], where: F4.where }), q2 = ((_e2 = (await a32.queryRelatedFeatures(m25, { signal: e25 == null ? void 0 : e25.signal }))[y15]) == null ? void 0 : _e2.features) || [];
    return q2.forEach((e26) => e26.sourceLayer = u19), q2;
  }
};
e2([y()], g10.prototype, "_queryAbortController", void 0), e2([y()], g10.prototype, "_queryPageAbortController", void 0), e2([y()], g10.prototype, "_queryFeatureCountAbortController", void 0), e2([y({ value: 1 })], g10.prototype, "featurePage", null), e2([y()], g10.prototype, "featuresPerPage", void 0), e2([y({ readOnly: true })], g10.prototype, "orderByFieldsFixedCasing", null), e2([y()], g10.prototype, "description", void 0), e2([y({ readOnly: true })], g10.prototype, "itemDescriptionFieldName", null), e2([y({ value: 3 })], g10.prototype, "displayCount", null), e2([y({ type: g3 })], g10.prototype, "graphic", void 0), e2([y()], g10.prototype, "layer", void 0), e2([y()], g10.prototype, "map", void 0), e2([y({ readOnly: true })], g10.prototype, "objectId", null), e2([y({ readOnly: true })], g10.prototype, "objectIdField", null), e2([y()], g10.prototype, "orderByFields", void 0), e2([y({ readOnly: true })], g10.prototype, "relatedFeatures", null), e2([y({ readOnly: true })], g10.prototype, "relatedLayer", null), e2([y({ readOnly: true })], g10.prototype, "relationship", null), e2([y({ readOnly: true })], g10.prototype, "featureCount", void 0), e2([y({ readOnly: true })], g10.prototype, "relatedFeatureViewModels", null), e2([y()], g10.prototype, "relationshipId", void 0), e2([y()], g10.prototype, "showAllEnabled", void 0), e2([y({ readOnly: true })], g10.prototype, "state", null), e2([y()], g10.prototype, "title", void 0), g10 = e2([n4("esri.widgets.Feature.FeatureRelationship.FeatureRelationshipViewModel")], g10);
var b10 = g10;

// node_modules/@arcgis/core/widgets/Feature/FeatureRelationship.js
var g11 = { base: "esri-feature-relationship", esriWidget: "esri-widget", listContainer: "esri-feature-relationship__list", listContainerQuerying: "esri-feature-relationship__list--querying", featureObserver: "esri-feature__feature-observer", stickySpinnerContainer: "esri-feature__sticky-loading-container", loadingSpinnerContainer: "esri-feature__loading-container", spinner: "esri-feature__loading-spinner", iconLoading: "esri-icon-loading-indicator esri-rotating" };
var f9 = { title: true, description: true };
var w12 = class extends M2 {
  constructor(e25, t23) {
    super(e25, t23), this._featureElementInfo = null, this._relatedFeatureIntersectionObserver = new IntersectionObserver(([e26]) => {
      (e26 == null ? void 0 : e26.isIntersecting) && this._increaseFeaturePage();
    }, { root: window.document }), this.headingLevel = 2, this.viewModel = new b10(), this.messages = null, this.messagesCommon = null, this.visibleElements = { ...f9 }, this._increaseFeaturePage = () => {
      const { state: e26, showAllEnabled: t24, relatedFeatures: r23, featuresPerPage: s24, featurePage: i33 } = this.viewModel;
      "ready" === e26 && t24 && r23.length >= s24 * i33 && this.viewModel.featurePage++;
    };
  }
  initialize() {
    this._featureElementInfo = new l11(), this.addHandles([l3(() => [this.viewModel.description, this.viewModel.title, this.headingLevel], () => this._setupFeatureElementInfo(), h2), l3(() => [this.viewModel.state, this.viewModel.showAllEnabled, this._relatedFeatureIntersectionObserverNode], () => this._handleRelatedFeatureObserverChange()), a3(() => this.viewModel.relatedFeatureViewModels, "change", () => this._setupRelatedFeatureViewModels())]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-list-WZR2NPTM.js"), import("./calcite-list-item-MGY3L256.js"), import("./calcite-icon-D7JSDQFP.js"), import("./calcite-notice-WGJWXCZP.js")]);
  }
  destroy() {
    this._unobserveRelatedFeatureObserver(), this._featureElementInfo = s(this._featureElementInfo);
  }
  get displayShowAllButton() {
    const { showAllEnabled: e25, featureCount: t23, displayCount: r23 } = this.viewModel;
    return !e25 && (t23 > r23 || 0 === r23);
  }
  get displayListItems() {
    return this.displayShowAllButton || this.viewModel.relatedFeatureViewModels.length > 0;
  }
  get description() {
    return this.viewModel.description;
  }
  set description(e25) {
    this.viewModel.description = e25;
  }
  get featureCountDescription() {
    const { messages: e25 } = this, { featureCount: t23 } = this.viewModel;
    return s5(1 === t23 ? e25 == null ? void 0 : e25.numberRecord : e25 == null ? void 0 : e25.numberRecords, { number: t23 });
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e25) {
    this.viewModel.title = e25;
  }
  castVisibleElements(e25) {
    return { ...f9, ...e25 };
  }
  renderStickyLoading() {
    return "querying" === this.viewModel.state ? n7("div", { key: "sticky-loader", class: g11.stickySpinnerContainer }, this.renderLoadingIcon()) : null;
  }
  renderLoadingIcon() {
    return n7("span", { class: this.classes(g11.iconLoading, g11.spinner) });
  }
  renderLoading() {
    return n7("div", { key: "loading-container", class: g11.loadingSpinnerContainer }, this.renderLoadingIcon());
  }
  renderShowAllIconNode() {
    return n7("calcite-icon", { scale: "s", icon: "list", slot: "content-end" });
  }
  renderChevronIconNode() {
    const e25 = f3(this.container) ? "chevron-left" : "chevron-right";
    return n7("calcite-icon", { scale: "s", icon: e25, slot: "content-end" });
  }
  renderRelatedFeature(e25) {
    var _a, _b;
    const { itemDescriptionFieldName: t23 } = this.viewModel, r23 = e25.title;
    e25.description = t23 && ((_a = e25.formattedAttributes) == null ? void 0 : _a.global[t23]);
    const s24 = "loading" === e25.state;
    return n7("calcite-list-item", { key: e25.uid, label: s24 ? `${(_b = this.messagesCommon) == null ? void 0 : _b.loading}\u2026` : r23, description: s24 ? "\u2026" : e25.description, onclick: () => this.emit("select-record", { featureViewModel: e25 }) }, this.renderChevronIconNode());
  }
  renderShowAllListItem() {
    var _a;
    return this.displayShowAllButton ? n7("calcite-list-item", { key: "show-all-item", label: (_a = this.messages) == null ? void 0 : _a.showAll, description: this.featureCountDescription, onclick: () => this.emit("show-all-records") }, this.renderShowAllIconNode()) : null;
  }
  renderNoRelatedFeaturesMessage() {
    var _a;
    return n7("calcite-notice", { key: "no-related-features-message", icon: "information", open: true, color: "blue", scale: "s", width: "full" }, n7("div", { slot: "message" }, (_a = this.messages) == null ? void 0 : _a.noRelatedFeatures));
  }
  renderFeatureObserver() {
    return n7("div", { key: "feature-observer", class: g11.featureObserver, bind: this, afterCreate: this._relatedFeatureIntersectionObserverCreated });
  }
  renderList() {
    const { relatedFeatureViewModels: e25 } = this.viewModel;
    return n7("calcite-list", null, e25.toArray().map((e26) => this.renderRelatedFeature(e26)), this.renderShowAllListItem());
  }
  renderRelatedFeatures() {
    const { displayListItems: e25 } = this, { state: t23 } = this.viewModel;
    return n7("div", { key: "list-container", class: this.classes(g11.listContainer, { [g11.listContainerQuerying]: "querying" === t23 }) }, e25 ? this.renderList() : "ready" === t23 ? this.renderNoRelatedFeaturesMessage() : null, this.renderStickyLoading(), this.renderFeatureObserver());
  }
  renderRelationshipNotFound() {
    var _a;
    return n7("calcite-notice", { key: "relationship-not-found", icon: "exclamation-mark-triangle", open: true, color: "red", scale: "s", width: "full" }, n7("div", { slot: "message" }, (_a = this.messages) == null ? void 0 : _a.relationshipNotFound));
  }
  render() {
    var _a;
    const { state: e25 } = this.viewModel;
    return n7("div", { class: this.classes(g11.base, g11.esriWidget) }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), "loading" === e25 ? this.renderLoading() : "disabled" === e25 ? this.renderRelationshipNotFound() : this.renderRelatedFeatures());
  }
  _setupRelatedFeatureViewModels() {
    const { relatedFeatureViewModels: e25 } = this.viewModel, t23 = "related-feature-viewmodels";
    this.removeHandles(t23), e25 == null ? void 0 : e25.forEach((e26) => {
      this.addHandles(l3(() => [e26.title, e26.state], () => this.scheduleRender(), h2), t23);
    }), this.scheduleRender();
  }
  _setupFeatureElementInfo() {
    const { headingLevel: e25, visibleElements: t23 } = this, r23 = t23.description && this.description, s24 = t23.title && this.title;
    this._featureElementInfo.set({ description: r23, title: s24, headingLevel: e25 });
  }
  async _handleRelatedFeatureObserverChange() {
    this._unobserveRelatedFeatureObserver();
    const { state: e25, showAllEnabled: t23 } = this.viewModel;
    await U(0), this._relatedFeatureIntersectionObserverNode && "ready" === e25 && t23 && this._relatedFeatureIntersectionObserver.observe(this._relatedFeatureIntersectionObserverNode);
  }
  _relatedFeatureIntersectionObserverCreated(e25) {
    this._relatedFeatureIntersectionObserverNode = e25;
  }
  _unobserveRelatedFeatureObserver() {
    this._relatedFeatureIntersectionObserverNode && this._relatedFeatureIntersectionObserver.unobserve(this._relatedFeatureIntersectionObserverNode);
  }
};
e2([y()], w12.prototype, "_relatedFeatureIntersectionObserverNode", void 0), e2([y({ readOnly: true })], w12.prototype, "displayShowAllButton", null), e2([y({ readOnly: true })], w12.prototype, "displayListItems", null), e2([y()], w12.prototype, "description", null), e2([y({ readOnly: true })], w12.prototype, "featureCountDescription", null), e2([y()], w12.prototype, "headingLevel", void 0), e2([y()], w12.prototype, "title", null), e2([y({ type: b10 })], w12.prototype, "viewModel", void 0), e2([y(), e4("esri/widgets/Feature/t9n/Feature")], w12.prototype, "messages", void 0), e2([y(), e4("esri/t9n/common")], w12.prototype, "messagesCommon", void 0), e2([y()], w12.prototype, "visibleElements", void 0), e2([s4("visibleElements")], w12.prototype, "castVisibleElements", null), w12 = e2([n4("esri.widgets.Feature.FeatureRelationship")], w12);
var b11 = w12;

// node_modules/@arcgis/core/arcade/featureset/support/FeatureSetQueryInterceptor.js
var e17 = class {
  constructor(e25, a32) {
    this.preLayerQueryCallback = e25, this.preRequestCallback = a32, this.preLayerQueryCallback || (this.preLayerQueryCallback = (e26) => {
    }), this.preRequestCallback || (this.preLayerQueryCallback = (e26) => {
    });
  }
};

// node_modules/@arcgis/core/widgets/Feature/FeatureViewModel.js
var Q2;
var G2 = 1;
var H3 = "content-view-models";
var z3 = "relationship-view-models";
var J2 = { attachmentsContent: true, chartAnimation: true, customContent: true, expressionContent: true, fieldsContent: true, mediaContent: true, textContent: true, relationshipContent: true };
var K2 = Q2 = class extends s6(m) {
  constructor(e25) {
    super(e25), this._handles = new t4(), this._error = null, this._featureAbortController = null, this._graphicChangedThrottled = e9(this._graphicChanged, G2, this), this._expressionAttributes = null, this._graphicExpressionAttributes = null, this.abilities = { ...J2 }, this.content = null, this.contentViewModels = [], this.description = null, this.defaultPopupTemplateEnabled = false, this.formattedAttributes = null, this.lastEditInfo = null, this.relatedInfos = /* @__PURE__ */ new Map(), this.title = "", this.view = null, this._isAllowedContentType = (e26) => {
      const { abilities: t23 } = this;
      return "attachments" === e26.type && t23.attachmentsContent || "custom" === e26.type && t23.customContent || "fields" === e26.type && t23.fieldsContent || "media" === e26.type && t23.mediaContent || "text" === e26.type && t23.textContent || "expression" === e26.type && t23.expressionContent || "relationship" === e26.type && t23.relationshipContent;
    }, this._handles.add(l3(() => [this.graphic, this._effectivePopupTemplate, this.abilities], () => this._graphicChangedThrottled(), h2));
  }
  destroy() {
    this._clear(), this._cancelFeatureQuery(), this._error = null, this._handles.destroy(), this._handles = null, this.graphic = null, this._destroyContentViewModels(), this.relatedInfos.clear();
  }
  get _effectivePopupTemplate() {
    return r(this.graphic) ? this.graphic.getEffectivePopupTemplate(this.defaultPopupTemplateEnabled) : null;
  }
  get _fieldInfoMap() {
    return X(Y2(this._effectivePopupTemplate), this._sourceLayer);
  }
  get _sourceLayer() {
    return T2(this.graphic);
  }
  castAbilities(e25) {
    return { ...J2, ...e25 };
  }
  get state() {
    return this.graphic ? this._error ? "error" : this.waitingForContent ? "loading" : "ready" : "disabled";
  }
  set graphic(e25) {
    this._set("graphic", e25 ? e25.clone() : null);
  }
  get spatialReference() {
    var _a, _b;
    return (_b = (_a = this.view) == null ? void 0 : _a.spatialReference) != null ? _b : null;
  }
  set spatialReference(e25) {
    this._override("spatialReference", e25);
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) || null;
  }
  set map(e25) {
    this._override("map", e25);
  }
  get waitingForContent() {
    return !!this._featureAbortController;
  }
  setActiveMedia(e25, t23) {
    const i33 = this.contentViewModels[e25];
    i33 instanceof v9 && i33.setActiveMedia(t23);
  }
  nextMedia(e25) {
    const t23 = this.contentViewModels[e25];
    t23 instanceof v9 && t23.next();
  }
  previousMedia(e25) {
    const t23 = this.contentViewModels[e25];
    t23 instanceof v9 && t23.previous();
  }
  _clear() {
    this._set("title", ""), this._set("content", null), this._set("formattedAttributes", null);
  }
  async _graphicChanged() {
    this._cancelFeatureQuery(), this._error = null, this._clear();
    const { graphic: e25 } = this;
    if (!e25)
      return;
    const t23 = new AbortController();
    this._featureAbortController = t23;
    try {
      await this._queryFeature({ signal: t23.signal });
    } catch (i33) {
      j(i33) || (this._error = i33, s2.getLogger(this.declaredClass).error("error", "The popupTemplate could not be displayed for this feature.", { error: i33, graphic: e25, popupTemplate: this._effectivePopupTemplate }));
    }
    this._featureAbortController === t23 && (this._featureAbortController = null);
  }
  _cancelFeatureQuery() {
    const { _featureAbortController: e25 } = this;
    e25 && e25.abort(), this._featureAbortController = null;
  }
  _compileContentElement(e25, t23) {
    return "attachments" === e25.type ? this._compileAttachments(e25, t23) : "custom" === e25.type ? this._compileCustom(e25, t23) : "fields" === e25.type ? this._compileFields(e25, t23) : "media" === e25.type ? this._compileMedia(e25, t23) : "text" === e25.type ? this._compileText(e25, t23) : "expression" === e25.type ? this._compileExpression(e25, t23) : "relationship" === e25.type ? this._compileRelationship(e25, t23) : void 0;
  }
  _compileContent(e25) {
    if (this._destroyContentViewModels(), this.graphic)
      return Array.isArray(e25) ? e25.filter(this._isAllowedContentType).map((e26, t23) => this._compileContentElement(e26, t23)) : "string" == typeof e25 ? this._compileText(new c5({ text: e25 }), 0).text : e25;
  }
  _destroyContentViewModels() {
    var _a, _b;
    (_a = this._handles) == null ? void 0 : _a.remove(z3), (_b = this._handles) == null ? void 0 : _b.remove(H3), this.contentViewModels.forEach((e25) => e25 && !e25.destroyed && e25.destroy()), this._set("contentViewModels", []);
  }
  _matchesFeature(e25, t23) {
    var _a;
    const i33 = (_a = e25 == null ? void 0 : e25.graphic) == null ? void 0 : _a.getObjectId(), r23 = t23 == null ? void 0 : t23.getObjectId();
    return r(i33) && r(r23) && i33 === r23;
  }
  _setRelatedFeaturesViewModels({ relatedFeatureViewModels: e25, relatedFeatures: t23, map: i33 }) {
    t23 == null ? void 0 : t23.filter(Boolean).forEach((t24) => {
      e25.find((e26) => this._matchesFeature(e26, t24)) || e25.add(new Q2({ abilities: { relationshipContent: false }, map: i33, graphic: t24 }));
    }), e25.forEach((i34) => {
      const r23 = t23 == null ? void 0 : t23.find((e26) => this._matchesFeature(i34, e26));
      r23 || e25.remove(i34);
    });
  }
  _setExpressionContentVM(e25, t23) {
    const { formattedAttributes: i33 } = this, { contentElement: r23, contentElementViewModel: o24 } = e25, s24 = r23 == null ? void 0 : r23.type;
    o24 && s24 && ("fields" === s24 && (this._createFieldsFormattedAttributes({ contentElement: r23, contentElementIndex: t23, formattedAttributes: i33 }), o24.set(this._createFieldsVMParams(r23, t23))), "media" === s24 && (this._createMediaFormattedAttributes({ contentElement: r23, contentElementIndex: t23, formattedAttributes: i33 }), o24.set(this._createMediaVMParams(r23, t23))), "text" === s24 && o24.set(this._createTextVMParams(r23)));
  }
  _compileRelationship(e25, t23) {
    const { displayCount: i33, orderByFields: r23, relationshipId: o24, title: s24, description: n30 } = e25, { _sourceLayer: a32, graphic: l27, map: p34 } = this, c36 = new b10({ displayCount: i33, graphic: l27, orderByFields: r23, relationshipId: o24, layer: a32, map: p34, ...this._compileTitleAndDesc({ title: s24, description: n30 }) });
    return this.contentViewModels[t23] = c36, this._handles.add(a3(() => c36.relatedFeatures, "change", () => this._setRelatedFeaturesViewModels(c36)), z3), e25;
  }
  _compileExpression(e25, t23) {
    const { expressionInfo: i33 } = e25, { graphic: r23, map: o24, spatialReference: s24, view: n30 } = this, a32 = new C4({ expressionInfo: i33, graphic: r23, interceptor: Q2.interceptor, map: o24, spatialReference: s24, view: n30 });
    return this.contentViewModels[t23] = a32, this._handles.add(l3(() => a32.contentElementViewModel, () => this._setExpressionContentVM(a32, t23), h2), H3), e25;
  }
  _compileAttachments(e25, t23) {
    const { graphic: i33 } = this, { description: r23, title: o24 } = e25;
    return this.contentViewModels[t23] = new c10({ graphic: i33, ...this._compileTitleAndDesc({ title: o24, description: r23 }) }), e25;
  }
  _compileCustom(e25, t23) {
    const { graphic: i33 } = this, { creator: r23, destroyer: o24 } = e25;
    return this.contentViewModels[t23] = new l12({ graphic: i33, creator: r23, destroyer: o24 }), e25;
  }
  _compileTitleAndDesc({ title: e25, description: t23 }) {
    const { _fieldInfoMap: i33, _sourceLayer: r23, graphic: o24, formattedAttributes: s24, _expressionAttributes: n30 } = this, { attributes: a32 } = o24, l27 = s24.global;
    return { title: $({ attributes: a32, fieldInfoMap: i33, globalAttributes: l27, expressionAttributes: n30, layer: r23, text: e25 }), description: $({ attributes: a32, fieldInfoMap: i33, globalAttributes: l27, expressionAttributes: n30, layer: r23, text: t23 }) };
  }
  _createFieldsVMParams(e25, t23) {
    var _a;
    const { _effectivePopupTemplate: i33, formattedAttributes: r23 } = this, o24 = { ...r23.global, ...r23.content[t23] }, s24 = (_a = (e25 == null ? void 0 : e25.fieldInfos) || (i33 == null ? void 0 : i33.fieldInfos)) == null ? void 0 : _a.filter(({ fieldName: e26 }) => C2(e26) || le(e26) || o24.hasOwnProperty(e26)), n30 = i33 == null ? void 0 : i33.expressionInfos, { description: a32, title: l27 } = e25;
    return { attributes: o24, expressionInfos: n30, fieldInfos: s24, ...this._compileTitleAndDesc({ title: l27, description: a32 }) };
  }
  _compileFields(e25, t23) {
    const i33 = e25.clone(), r23 = new n15(this._createFieldsVMParams(e25, t23));
    return this.contentViewModels[t23] = r23, i33.fieldInfos = r23.formattedFieldInfos.slice(0), i33;
  }
  _createMediaVMParams(e25, t23) {
    const { abilities: i33, graphic: r23, _fieldInfoMap: o24, formattedAttributes: s24, _effectivePopupTemplate: n30, relatedInfos: a32, _sourceLayer: l27, _expressionAttributes: p34 } = this, { attributes: c36 } = r23, { description: d16, mediaInfos: h18, title: u19 } = e25;
    return { abilities: { chartAnimation: i33.chartAnimation }, activeMediaInfoIndex: e25.activeMediaInfoIndex || 0, attributes: c36, layer: l27, fieldInfoMap: o24, formattedAttributes: { ...s24.global, ...s24.content[t23] }, expressionAttributes: p34, mediaInfos: h18, popupTemplate: n30, relatedInfos: a32, ...this._compileTitleAndDesc({ title: u19, description: d16 }) };
  }
  _compileMedia(e25, t23) {
    const i33 = e25.clone(), r23 = new v9(this._createMediaVMParams(e25, t23));
    return i33.mediaInfos = r23.formattedMediaInfos.slice(0), this.contentViewModels[t23] = r23, i33;
  }
  _createTextVMParams(e25) {
    const { graphic: t23, _fieldInfoMap: i33, _sourceLayer: r23, _expressionAttributes: o24 } = this;
    if (e25 && e25.text) {
      const { attributes: s24 } = t23, n30 = this.formattedAttributes.global;
      e25.text = $({ attributes: s24, fieldInfoMap: i33, globalAttributes: n30, expressionAttributes: o24, layer: r23, text: e25.text });
    }
    return { graphic: t23, creator: e25.text };
  }
  _compileText(e25, t23) {
    const i33 = e25.clone();
    return this.contentViewModels[t23] = new l12(this._createTextVMParams(i33)), i33;
  }
  _compileLastEditInfo() {
    const { _effectivePopupTemplate: e25, _sourceLayer: t23, graphic: i33 } = this;
    if (!e25)
      return;
    const { lastEditInfoEnabled: r23 } = e25, o24 = t23 == null ? void 0 : t23.editFieldsInfo;
    return r23 && o24 ? W(o24, i33.attributes) : void 0;
  }
  _compileTitle(e25) {
    const { _fieldInfoMap: t23, _sourceLayer: i33, graphic: r23, _expressionAttributes: o24 } = this, { attributes: s24 } = r23, n30 = this.formattedAttributes.global;
    return $({ attributes: s24, fieldInfoMap: t23, globalAttributes: n30, expressionAttributes: o24, layer: i33, text: e25 });
  }
  async _getTitle() {
    const { _effectivePopupTemplate: e25, graphic: t23 } = this, i33 = e25 == null ? void 0 : e25.title;
    return j6(i33, { graphic: t23 });
  }
  async _getContent() {
    const { _effectivePopupTemplate: e25, graphic: t23 } = this, i33 = e25 == null ? void 0 : e25.content;
    return j6(i33, { graphic: t23 });
  }
  async _queryFeature(e25) {
    const { _featureAbortController: t23, _sourceLayer: i33, graphic: r23, _effectivePopupTemplate: o24, spatialReference: s24, map: n30, view: a32 } = this;
    if (t23 !== this._featureAbortController || !r23)
      return;
    await ae({ graphic: r23, popupTemplate: o24, layer: i33, spatialReference: s24 }, e25);
    const { content: { value: l27 }, title: { value: c36 } } = await E({ content: this._getContent(), title: this._getTitle() }), { expressionAttributes: { value: d16 } } = await E({ checkForRelatedFeatures: this._checkForRelatedFeatures(e25), expressionAttributes: m12({ expressionInfos: o24 == null ? void 0 : o24.expressionInfos, spatialReference: s24, graphic: r23, map: n30, interceptor: Q2.interceptor, view: a32 }) });
    t23 === this._featureAbortController && r23 && (this._expressionAttributes = d16, this._graphicExpressionAttributes = { ...r23.attributes, ...d16 }, this._set("formattedAttributes", this._createFormattedAttributes(l27)), this._set("title", this._compileTitle(c36)), this._set("lastEditInfo", this._compileLastEditInfo() || null), this._set("content", this._compileContent(l27) || null));
  }
  _createMediaFormattedAttributes({ contentElement: e25, contentElementIndex: t23, formattedAttributes: i33 }) {
    const { _effectivePopupTemplate: r23, graphic: o24, relatedInfos: s24, _sourceLayer: n30, _fieldInfoMap: a32, _graphicExpressionAttributes: l27 } = this;
    i33.content[t23] = ne({ fieldInfos: r23 == null ? void 0 : r23.fieldInfos, graphic: o24, attributes: { ...l27, ...e25.attributes }, layer: n30, fieldInfoMap: a32, relatedInfos: s24 });
  }
  _createFieldsFormattedAttributes({ contentElement: e25, contentElementIndex: t23, formattedAttributes: i33 }) {
    if (e25.fieldInfos) {
      const { graphic: r23, relatedInfos: o24, _sourceLayer: s24, _fieldInfoMap: n30, _graphicExpressionAttributes: a32 } = this;
      i33.content[t23] = ne({ fieldInfos: e25.fieldInfos, graphic: r23, attributes: { ...a32, ...e25.attributes }, layer: s24, fieldInfoMap: n30, relatedInfos: o24 });
    }
  }
  _createFormattedAttributes(e25) {
    const { _effectivePopupTemplate: t23, graphic: i33, relatedInfos: r23, _sourceLayer: o24, _fieldInfoMap: s24, _graphicExpressionAttributes: n30 } = this, a32 = t23 == null ? void 0 : t23.fieldInfos, l27 = { global: ne({ fieldInfos: a32, graphic: i33, attributes: n30, layer: o24, fieldInfoMap: s24, relatedInfos: r23 }), content: [] };
    return Array.isArray(e25) && e25.forEach((e26, t24) => {
      "fields" === e26.type && this._createFieldsFormattedAttributes({ contentElement: e26, contentElementIndex: t24, formattedAttributes: l27 }), "media" === e26.type && this._createMediaFormattedAttributes({ contentElement: e26, contentElementIndex: t24, formattedAttributes: l27 });
    }), l27;
  }
  _checkForRelatedFeatures(e25) {
    const { graphic: t23, _effectivePopupTemplate: i33 } = this;
    return this._queryRelatedInfos(t23, Y2(i33), e25);
  }
  async _queryRelatedInfos(e25, t23, i33) {
    const { relatedInfos: r23, _sourceLayer: o24 } = this;
    r23.clear();
    const s24 = r(o24.associatedLayer) ? await o24.associatedLayer.load(i33) : o24;
    if (!s24)
      return;
    const n30 = t23.filter((e26) => e26 && le(e26.fieldName));
    if (!n30 || !n30.length)
      return;
    t23.forEach((e26) => this._configureRelatedInfo(e26, s24));
    const l27 = await b7({ relatedInfos: r23, layer: s24 }, i33);
    Object.keys(l27).forEach((e26) => {
      var _a;
      const t24 = r23.get(e26.toString()), i34 = (_a = l27[e26]) == null ? void 0 : _a.value;
      t24 && i34 && (t24.layerInfo = i34.data);
    });
    const p34 = await R3({ graphic: e25, relatedInfos: r23, layer: s24 }, i33);
    Object.keys(p34).forEach((e26) => {
      var _a;
      g7((_a = p34[e26]) == null ? void 0 : _a.value, r23.get(e26.toString()));
    });
  }
  _configureRelatedInfo(e25, t23) {
    const { relatedInfos: i33 } = this, r23 = d7(e25.fieldName);
    if (!r23)
      return;
    const { layerId: o24, fieldName: s24 } = r23;
    if (!o24)
      return;
    const n30 = i33.get(o24.toString()) || h9(o24, t23);
    n30 && ($2({ relatedInfo: n30, fieldName: s24, fieldInfo: e25 }), this.relatedInfos.set(o24, n30));
  }
};
K2.interceptor = new e17(pe, me), e2([y()], K2.prototype, "_error", void 0), e2([y()], K2.prototype, "_featureAbortController", void 0), e2([y({ readOnly: true })], K2.prototype, "_effectivePopupTemplate", null), e2([y({ readOnly: true })], K2.prototype, "_fieldInfoMap", null), e2([y({ readOnly: true })], K2.prototype, "_sourceLayer", null), e2([y()], K2.prototype, "abilities", void 0), e2([s4("abilities")], K2.prototype, "castAbilities", null), e2([y({ readOnly: true })], K2.prototype, "content", void 0), e2([y({ readOnly: true })], K2.prototype, "contentViewModels", void 0), e2([y()], K2.prototype, "description", void 0), e2([y({ type: Boolean })], K2.prototype, "defaultPopupTemplateEnabled", void 0), e2([y({ readOnly: true })], K2.prototype, "state", null), e2([y({ readOnly: true })], K2.prototype, "formattedAttributes", void 0), e2([y({ type: g3, value: null })], K2.prototype, "graphic", null), e2([y({ readOnly: true })], K2.prototype, "lastEditInfo", void 0), e2([y({ readOnly: true })], K2.prototype, "relatedInfos", void 0), e2([y()], K2.prototype, "spatialReference", null), e2([y({ readOnly: true })], K2.prototype, "title", void 0), e2([y()], K2.prototype, "map", null), e2([y({ readOnly: true })], K2.prototype, "waitingForContent", null), e2([y()], K2.prototype, "view", void 0), K2 = Q2 = e2([n4("esri.widgets.FeatureViewModel")], K2);
var W2 = K2;

// node_modules/@arcgis/core/widgets/Feature/resources.js
var e18 = { iconText: "esri-icon-font-fallback-text", iconLoading: "esri-icon-loading-indicator esri-rotating", esriTable: "esri-widget__table", esriWidget: "esri-widget", base: "esri-feature", container: "esri-feature__size-container", title: "esri-feature__title", main: "esri-feature__main-container", btn: "esri-feature__button", icon: "esri-feature__icon", content: "esri-feature__content", contentNode: "esri-feature__content-node", contentElement: "esri-feature__content-element", text: "esri-feature__text", lastEditedInfo: "esri-feature__last-edited-info", fields: "esri-feature__fields", fieldHeader: "esri-feature__field-header", fieldData: "esri-feature__field-data", fieldDataDate: "esri-feature__field-data--date", loadingSpinnerContainer: "esri-feature__loading-container", spinner: "esri-feature__loading-spinner" };

// node_modules/@arcgis/core/widgets/Feature/support/FeatureContentMixin.js
var i16 = (i33) => {
  let n30 = class extends i33 {
    constructor() {
      super(...arguments), this.renderNodeContent = (e25) => e6(e25) && !e25.destroyed ? n7("div", { class: e18.contentNode, key: e25 }, e25.render()) : e25 instanceof HTMLElement ? n7("div", { class: e18.contentNode, key: e25, bind: e25, afterCreate: this._attachToNode }) : t9(e25) ? n7("div", { class: e18.contentNode, key: e25, bind: e25.domNode, afterCreate: this._attachToNode }) : null;
    }
    _attachToNode(e25) {
      const o24 = this;
      e25.appendChild(o24);
    }
  };
  return n30 = e2([n4("esri.widgets.Feature.ContentMixin")], n30), n30;
};

// node_modules/@arcgis/core/widgets/Feature.js
var E4;
var _6 = { title: true, content: true, lastEditedInfo: true };
var b12 = "relationship-handles";
var W3 = E4 = class extends i16(M2) {
  constructor(e25, t23) {
    super(e25, t23), this._contentWidgets = [], this.flowItems = null, this.headingLevel = 2, this.messages = null, this.messagesCommon = null, this.messagesURIUtils = null, this.visibleElements = { ..._6 }, this.viewModel = new W2();
  }
  initialize() {
    this.addHandles(l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentViewModels;
    }, () => this._setupContentWidgets(), h2));
  }
  loadDependencies() {
    return import("./calcite-notice-WGJWXCZP.js");
  }
  destroy() {
    this._destroyContentWidgets();
  }
  get graphic() {
    return this.viewModel.graphic;
  }
  set graphic(e25) {
    this.viewModel.graphic = e25;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e25) {
    this.viewModel.defaultPopupTemplateEnabled = e25;
  }
  get label() {
    var _a, _b;
    return (_b = (_a = this.messages) == null ? void 0 : _a.widgetLabel) != null ? _b : "";
  }
  set label(e25) {
    this._overrideIfSome("label", e25);
  }
  get spatialReference() {
    return this.viewModel.spatialReference;
  }
  set spatialReference(e25) {
    this.viewModel.spatialReference = e25;
  }
  get title() {
    return this.viewModel.title;
  }
  castVisibleElements(e25) {
    return { ..._6, ...e25 };
  }
  get map() {
    return this.viewModel.map;
  }
  set map(e25) {
    this.viewModel.map = e25;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e25) {
    this.viewModel.view = e25;
  }
  render() {
    const { state: e25 } = this.viewModel, t23 = n7("div", { class: e18.container, key: "container" }, this.renderTitle(), "error" === e25 ? this.renderError() : "loading" === e25 ? this.renderLoading() : this.renderContentContainer());
    return n7("div", { class: this.classes(e18.base, e18.esriWidget) }, t23);
  }
  setActiveMedia(e25, t23) {
    return this.viewModel.setActiveMedia(e25, t23);
  }
  nextMedia(e25) {
    return this.viewModel.nextMedia(e25);
  }
  previousMedia(e25) {
    return this.viewModel.previousMedia(e25);
  }
  renderError() {
    const { messagesCommon: e25, messages: t23, visibleElements: s24 } = this;
    return n7("calcite-notice", { active: true, color: "red", icon: "exclamation-mark-circle", scale: "s" }, s24.title ? n7("div", { key: "error-title", slot: "title" }, e25.errorMessage) : null, n7("div", { key: "error-message", slot: "message" }, t23.loadingError));
  }
  renderLoading() {
    return n7("div", { key: "loading-container", class: e18.loadingSpinnerContainer }, n7("span", { class: this.classes(e18.iconLoading, e18.spinner) }));
  }
  renderContentContainer() {
    const { visibleElements: e25 } = this;
    return e25.content ? n7("div", { class: e18.main }, [this.renderContent(), this.renderLastEditInfo()]) : null;
  }
  renderTitle() {
    const { visibleElements: e25, title: t23 } = this;
    return e25.title ? n7(n11, { level: this.headingLevel, class: e18.title, innerHTML: t23 }) : null;
  }
  renderContent() {
    const e25 = this.viewModel.content, t23 = "content";
    if (!e25)
      return null;
    if (Array.isArray(e25))
      return e25.length ? n7("div", { class: e18.contentNode, key: `${t23}-content-elements` }, e25.map(this.renderContentElement, this)) : null;
    if ("string" == typeof e25) {
      const e26 = this._contentWidgets[0];
      return !e26 || e26.destroyed ? null : n7("div", { class: e18.contentNode, key: `${t23}-content` }, e26.render());
    }
    return this.renderNodeContent(e25);
  }
  renderContentElement(e25, t23) {
    const { visibleElements: s24 } = this;
    if ("boolean" != typeof s24.content && !s24.content[e25.type])
      return null;
    switch (e25.type) {
      case "attachments":
        return this.renderAttachments(t23);
      case "custom":
        return this.renderCustom(e25, t23);
      case "fields":
        return this.renderFields(t23);
      case "media":
        return this.renderMedia(t23);
      case "text":
        return this.renderText(e25, t23);
      case "expression":
        return this.renderExpression(t23);
      case "relationship":
        return this.renderRelationship(t23);
      default:
        return null;
    }
  }
  renderAttachments(e25) {
    const t23 = this._contentWidgets[e25];
    if (!t23 || t23.destroyed)
      return null;
    const { state: s24, attachmentInfos: i33 } = t23.viewModel;
    return "loading" === s24 || i33.length > 0 ? n7("div", { key: this._buildKey("attachments-element", e25), class: this.classes(e18.contentElement) }, t23.render()) : null;
  }
  renderRelationship(e25) {
    const t23 = this._contentWidgets[e25];
    return t23 && !t23.destroyed && this.flowItems ? n7("div", { key: this._buildKey("relationship-element", e25), class: e18.contentElement }, t23.render()) : null;
  }
  renderExpression(e25) {
    const t23 = this._contentWidgets[e25];
    return !t23 || t23.destroyed ? null : n7("div", { key: this._buildKey("expression-element", e25), class: e18.contentElement }, t23.render());
  }
  renderCustom(e25, t23) {
    const { creator: s24 } = e25, i33 = this._contentWidgets[t23];
    return !i33 || i33.destroyed ? null : s24 ? n7("div", { key: this._buildKey("custom-element", t23), class: e18.contentElement }, i33.render()) : null;
  }
  renderFields(e25) {
    const t23 = this._contentWidgets[e25];
    return !t23 || t23.destroyed ? null : n7("div", { key: this._buildKey("fields-element", e25), class: e18.contentElement }, t23.render());
  }
  renderMedia(e25) {
    const t23 = this._contentWidgets[e25];
    return !t23 || t23.destroyed ? null : n7("div", { key: this._buildKey("media-element", e25), class: e18.contentElement }, t23.render());
  }
  renderLastEditInfo() {
    const { visibleElements: e25, messages: t23 } = this, { lastEditInfo: s24 } = this.viewModel;
    if (!s24 || !e25.lastEditedInfo)
      return null;
    const { date: i33, user: n30 } = s24, r23 = "edit" === s24.type ? n30 ? t23.lastEditedByUser : t23.lastEdited : n30 ? t23.lastCreatedByUser : t23.lastCreated, o24 = s5(r23, { date: i33, user: n30 });
    return n7("div", { key: "edit-info-element", class: this.classes(e18.lastEditedInfo, e18.contentElement) }, o24);
  }
  renderText(e25, t23) {
    const s24 = e25.text, i33 = this._contentWidgets[t23];
    return !i33 || i33.destroyed ? null : s24 ? n7("div", { key: this._buildKey("text-element", t23), class: this.classes(e18.contentElement, e18.text) }, i33.render()) : null;
  }
  _buildKey(e25, ...t23) {
    return `${e25}__${this.get("viewModel.graphic.uid") || "0"}-${t23.join("-")}`;
  }
  _destroyContentWidget(e25) {
    e25 && (e25.viewModel = null, !e25.destroyed && e25.destroy());
  }
  _destroyContentWidgets() {
    this.removeHandles(b12), this._contentWidgets.forEach((e25) => this._destroyContentWidget(e25)), this._contentWidgets = [];
  }
  _addFeatureRelationshipHandles(e25) {
    const { flowItems: t23, visibleElements: i33 } = this;
    this.addHandles([a3(() => e25, "select-record", ({ featureViewModel: e26 }) => {
      t23 && (e26.abilities = { relationshipContent: true }, t23.push(new E4({ flowItems: t23, viewModel: e26, visibleElements: i33 })));
    }), a3(() => e25, "show-all-records", () => {
      if (!t23)
        return;
      const { viewModel: s24 } = e25;
      s24.showAllEnabled = true;
      const i34 = new b11({ visibleElements: { title: false, description: false }, viewModel: s24 });
      this._addFeatureRelationshipHandles(i34), t23.push(i34);
    })], b12);
  }
  _setupContentWidgets() {
    this._destroyContentWidgets();
    const { headingLevel: e25, visibleElements: t23 } = this, s24 = this.get("viewModel.content"), { contentViewModels: i33 } = this.viewModel;
    if (Array.isArray(s24))
      s24.forEach((s25, n30) => {
        if ("attachments" === s25.type && (this._contentWidgets[n30] = new h8({ displayType: s25.displayType, headingLevel: t23.title ? e25 + 1 : e25, viewModel: i33[n30] })), "fields" === s25.type && (this._contentWidgets[n30] = new m10({ viewModel: i33[n30] })), "media" === s25.type && (this._contentWidgets[n30] = new x4({ viewModel: i33[n30] })), "text" === s25.type && (this._contentWidgets[n30] = new l13({ viewModel: i33[n30] })), "custom" === s25.type && (this._contentWidgets[n30] = new l13({ viewModel: i33[n30] })), "expression" === s25.type && (this._contentWidgets[n30] = new m13({ viewModel: i33[n30] })), "relationship" === s25.type) {
          const e26 = new b11({ viewModel: i33[n30] });
          this._addFeatureRelationshipHandles(e26), this._contentWidgets[n30] = e26;
        }
      }, this);
    else {
      const e26 = i33[0];
      e26 && !e26.destroyed && (this._contentWidgets[0] = new l13({ viewModel: e26 }));
    }
    this.scheduleRender();
  }
};
e2([y()], W3.prototype, "graphic", null), e2([y()], W3.prototype, "defaultPopupTemplateEnabled", null), e2([y()], W3.prototype, "flowItems", void 0), e2([y()], W3.prototype, "headingLevel", void 0), e2([y()], W3.prototype, "label", null), e2([y(), e4("esri/widgets/Feature/t9n/Feature")], W3.prototype, "messages", void 0), e2([y(), e4("esri/t9n/common")], W3.prototype, "messagesCommon", void 0), e2([y(), e4("esri/widgets/support/t9n/uriUtils")], W3.prototype, "messagesURIUtils", void 0), e2([y()], W3.prototype, "spatialReference", null), e2([y({ readOnly: true })], W3.prototype, "title", null), e2([y()], W3.prototype, "visibleElements", void 0), e2([s4("visibleElements")], W3.prototype, "castVisibleElements", null), e2([y()], W3.prototype, "map", null), e2([y()], W3.prototype, "view", null), e2([y({ type: W2 })], W3.prototype, "viewModel", void 0), W3 = E4 = e2([n4("esri.widgets.Feature")], W3);
var C5 = W3;

// node_modules/@arcgis/core/widgets/support/AnchorElementViewModel.js
var l16;
var d9 = Symbol("anchorHandles");
var m14 = class extends n6.EventedAccessor {
  constructor(e25) {
    super(e25), this[l16] = new t4(), this.location = null, this.screenLocationEnabled = false, this.view = null, this[d9].add([f2(() => o(this.screenLocationEnabled ? this.view : null, (e26) => [e26.size, "3d" === e26.type ? e26.camera : e26.viewpoint]), () => this.notifyChange("screenLocation")), l3(() => this.screenLocation, (e26, o24) => {
      r(e26) && r(o24) && this.emit("view-change");
    })]);
  }
  destroy() {
    this.view = null, this[d9] = s(this[d9]);
  }
  get screenLocation() {
    const { location: e25, view: o24, screenLocationEnabled: t23 } = this;
    return t23 && r(e25) && r(o24) && o24.ready ? o24.toScreen(e25) : null;
  }
};
l16 = d9, e2([y()], m14.prototype, "location", void 0), e2([y()], m14.prototype, "screenLocation", null), e2([y()], m14.prototype, "screenLocationEnabled", void 0), e2([y()], m14.prototype, "view", void 0), m14 = e2([n4("esri.widgets.support.AnchorElementViewModel")], m14);
var h11 = m14;

// node_modules/@arcgis/core/widgets/Spinner/SpinnerViewModel.js
var t12 = "esri.widgets.CompassViewModel";
var p12 = class extends h11 {
  constructor(s24) {
    super(s24), this.visible = false;
  }
};
e2([y()], p12.prototype, "visible", void 0), p12 = e2([n4(t12)], p12);
var c17 = p12;

// node_modules/@arcgis/core/widgets/Spinner.js
var p13 = { base: "esri-spinner", spinnerStart: "esri-spinner--start", spinnerFinish: "esri-spinner--finish" };
var c18 = class extends M2 {
  constructor(i33, e25) {
    super(i33, e25), this._animationDelay = 500, this._animationPromise = null, this.viewModel = new c17();
  }
  initialize() {
    this.addHandles(l3(() => this.visible, (i33) => this._visibleChange(i33)));
  }
  destroy() {
    this._animationPromise = null;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(i33) {
    this.viewModel.location = i33;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(i33) {
    this.viewModel.view = i33;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(i33) {
    this.viewModel.visible = i33;
  }
  show(i33) {
    const { location: e25, promise: t23 } = i33;
    e25 && (this.viewModel.location = e25), this.visible = true;
    const s24 = () => this.hide();
    t23 && t23.catch(() => {
    }).then(s24);
  }
  hide() {
    this.visible = false;
  }
  render() {
    const { visible: i33 } = this, { screenLocation: e25 } = this.viewModel, t23 = !!e25, s24 = i33 && t23, o24 = !i33 && t23, r23 = { [p13.spinnerStart]: s24, [p13.spinnerFinish]: o24 }, n30 = this._getPositionStyles();
    return n7("div", { class: this.classes(p13.base, r23), styles: n30 });
  }
  _visibleChange(i33) {
    if (i33)
      return void (this.viewModel.screenLocationEnabled = true);
    const e25 = U(this._animationDelay);
    this._animationPromise = e25, e25.catch(() => {
    }).then(() => {
      this._animationPromise === e25 && (this.viewModel.screenLocationEnabled = false, this._animationPromise = null);
    });
  }
  _getPositionStyles() {
    const { screenLocation: i33, view: t23 } = this.viewModel;
    if (t(t23) || t(i33))
      return {};
    const { padding: s24 } = t23;
    return { left: i33.x - s24.left + "px", top: i33.y - s24.top + "px" };
  }
};
e2([y()], c18.prototype, "location", null), e2([y()], c18.prototype, "view", null), e2([y({ type: c17 })], c18.prototype, "viewModel", void 0), e2([y()], c18.prototype, "visible", null), c18 = e2([n4("esri.widgets.Spinner")], c18);
var h12 = c18;

// node_modules/@arcgis/core/layers/LayerConstants.js
var o12 = "OBJECTID";

// node_modules/@arcgis/core/widgets/Popup/actions.js
var s12 = { iconZoom: "esri-icon-zoom-in-magnifying-glass", iconTrash: "esri-icon-trash", iconBrowseClusteredFeatures: "esri-icon-table" };
var o13 = new a5({ id: "zoom-to-feature", title: "{messages.zoom}", className: s12.iconZoom });
var t13 = new a5({ id: "remove-selected-feature", title: "{messages.remove}", className: s12.iconTrash });
var r14 = new a5({ id: "zoom-to-clustered-features", title: "{messages.zoom}", className: s12.iconZoom });
var i17 = new a5({ id: "browse-clustered-features", title: "{messages.browseClusteredFeatures}", className: s12.iconBrowseClusteredFeatures });

// node_modules/@arcgis/core/widgets/Popup/actionUtils.js
var s13 = "esri.widgets.Popup.PopupViewModel";
var c19 = s2.getLogger(s13);
var u10 = (t23) => {
  const { event: s24, view: c36 } = t23, { action: u19 } = s24, d16 = c36 && c36.popup;
  if (!u19)
    return Promise.reject(new s3("trigger-action:missing-arguments", "Event has no action"));
  if (!d16)
    return Promise.reject(new s3("trigger-action:missing-arguments", "view.popup is missing"));
  const { disabled: l27, id: g18 } = u19;
  if (!g18)
    return Promise.reject(new s3("trigger-action:invalid-action", "action.id is missing"));
  if (l27)
    return Promise.reject(new s3("trigger-action:invalid-action", "Action is disabled"));
  if (g18 === o13.id)
    return w13(d16.viewModel).catch(b2);
  if (g18 === r14.id)
    return p14(d16.viewModel);
  if (g18 === i17.id)
    return d16.featureMenuOpen = !d16.featureMenuOpen, d16.viewModel.browseClusterEnabled = !d16.viewModel.browseClusterEnabled, Promise.resolve();
  if (d16.viewModel.browseClusterEnabled = false, g18 === t13.id) {
    d16.close();
    const { selectedFeature: t24 } = d16;
    if (!t24)
      return Promise.reject(new s3(`trigger-action:${t13.id}`, "selectedFeature is required", { selectedFeature: t24 }));
    const { sourceLayer: r23 } = t24;
    return r23 ? r23.remove(t24) : c36.graphics.remove(t24), Promise.resolve();
  }
  return Promise.resolve();
};
function d10(e25) {
  const { selectedFeature: t23, location: r23, view: o24 } = e25;
  if (!o24)
    return null;
  if ("3d" === o24.type)
    return t23 || r23;
  return e25.get("selectedFeature.geometry") || r23;
}
function l17(e25) {
  var _a, _b;
  return (e25 == null ? void 0 : e25.isAggregate) && "cluster" === ((_b = (_a = e25 == null ? void 0 : e25.sourceLayer) == null ? void 0 : _a.featureReduction) == null ? void 0 : _b.type);
}
async function g12(e25, t23) {
  if ("3d" !== (t23 == null ? void 0 : t23.type) || !e25 || "esri.Graphic" !== e25.declaredClass)
    return true;
  const r23 = t23.getViewForGraphic(e25);
  if (r23 && "whenGraphicBounds" in r23) {
    let t24;
    try {
      t24 = await r23.whenGraphicBounds(e25, { useViewElevation: true });
    } catch (o24) {
    }
    return !t24 || !t24.boundingBox || t24.boundingBox[0] === t24.boundingBox[3] && t24.boundingBox[1] === t24.boundingBox[4] && t24.boundingBox[2] === t24.boundingBox[5];
  }
  return true;
}
async function w13(t23) {
  const { location: r23, selectedFeature: i33, view: n30, zoomFactor: a32 } = t23, s24 = d10(t23);
  if (!s24) {
    const t24 = new s3("zoom-to:invalid-target-or-view", "Cannot zoom to location without a target and view.", { target: s24, view: n30 });
    throw c19.error(t24), t24;
  }
  const u19 = n30.scale / a32, l27 = t23.get("selectedFeature.geometry") || r23, w17 = l27 && "point" === l27.type && await g12(i33, n30);
  o13.active = true, o13.disabled = true;
  try {
    await t23.zoomTo({ target: { target: s24, scale: w17 ? u19 : void 0 } });
  } catch (p34) {
    const t24 = new s3("zoom-to:invalid-graphic", "Could not zoom to the location of the graphic.", { graphic: i33 });
    c19.error(t24);
  } finally {
    o13.active = false, o13.disabled = false, t23.zoomToLocation = null, w17 && (t23.location = l27);
  }
}
async function p14(t23) {
  const { selectedFeature: r23, view: o24 } = t23;
  if ("2d" !== (o24 == null ? void 0 : o24.type)) {
    const t24 = new s3("zoomToCluster:invalid-view", "View must be 2d MapView.", { view: o24 });
    throw c19.error(t24), t24;
  }
  if (!l17(r23)) {
    const t24 = new s3("zoomToCluster:invalid-selectedFeature", "Selected feature must represent an aggregate/cluster graphic.", { selectedFeature: r23 });
    throw c19.error(t24), t24;
  }
  const n30 = r23.sourceLayer, a32 = await o24.whenLayerView(n30), s24 = a32.createQuery();
  s24.aggregateIds = [r23.getObjectId()], r14.active = true, r14.disabled = true;
  const { extent: u19 } = await a32.queryExtent(s24);
  await t23.zoomTo({ target: u19 }), r14.active = false, r14.disabled = false;
}
async function f10(e25) {
  const { selectedFeature: t23, view: r23 } = e25, o24 = t23.sourceLayer, i33 = await r23.whenLayerView(o24), n30 = i33.createQuery();
  n30.aggregateIds = [t23.getObjectId()];
  const { extent: a32 } = await i33.queryExtent(n30);
  e25.selectedClusterBoundaryFeature.geometry = a32, r23.graphics.add(e25.selectedClusterBoundaryFeature);
}
async function m15(e25) {
  const { selectedFeature: t23, view: r23 } = e25, o24 = t23.sourceLayer, i33 = await r23.whenLayerView(o24), a32 = i33.createQuery();
  a32.aggregateIds = [t23.getObjectId()], i17.active = true, i17.disabled = true;
  const { features: s24 } = await i33.queryFeatures(a32);
  i17.active = false, i17.disabled = false, r23.popup.open({ features: [t23].concat(s24), featureMenuOpen: true });
}
function v10(e25) {
  const t23 = e25.features.filter((e26) => l17(e26));
  t23.length && (e25.features = t23);
}

// node_modules/@arcgis/core/widgets/Popup/PopupViewModel.js
var B2 = j3.ofType({ key: "type", defaultKeyValue: "button", base: c6, typeMap: { button: a5, toggle: a6 } });
var G3 = () => [o13.clone()];
var R4 = () => [r14.clone(), i17.clone()];
var z4 = class extends e11(h11) {
  constructor(e25) {
    super(e25), this._handles = new t4(), this._pendingPromises = /* @__PURE__ */ new Set(), this._fetchFeaturesController = null, this._selectedClusterFeature = null, this.featurePage = null, this.actions = new B2(), this.activeFeature = null, this.defaultPopupTemplateEnabled = false, this.autoCloseEnabled = false, this.autoOpenEnabled = true, this.browseClusterEnabled = false, this.content = null, this.featuresPerPage = 20, this.featureViewModelAbilities = null, this.featureViewModels = [], this.highlightEnabled = true, this.includeDefaultActions = true, this.selectedClusterBoundaryFeature = new g3({ symbol: new S2({ outline: { width: 1.5, color: "cyan" }, style: "none" }) }), this.title = null, this.updateLocationEnabled = false, this.view = null, this.visible = false, this.zoomFactor = 4, this.zoomToLocation = null;
  }
  get isLoadingFeature() {
    return this.featureViewModels.some((e25) => e25.waitingForContent);
  }
  initialize() {
    this._handles.add([l3(() => [this.autoOpenEnabled, this.view], () => this._autoOpenEnabledChange()), this.on("view-change", () => this._autoClose()), l3(() => [this.highlightEnabled, this.selectedFeature, this.visible, this.view], () => this._highlightSelectedFeature()), l3(() => [this.highlightEnabled, this.activeFeature, this.visible, this.view], () => this._highlightActiveFeature()), l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.animation) == null ? void 0 : _b.state;
    }, (e25) => this._animationStateChange(e25)), l3(() => this.location, (e25) => this._locationChange(e25)), l3(() => this.selectedFeature, (e25) => this._selectedFeatureChange(e25)), l3(() => [this.selectedFeatureIndex, this.featureCount, this.featuresPerPage], () => this._selectedFeatureIndexChange()), l3(() => [this.featurePage, this.selectedFeatureIndex, this.featureCount, this.featuresPerPage, this.featureViewModels], () => this._setGraphicOnFeatureViewModels()), l3(() => this.featureViewModels, () => this._featureViewModelsChange()), this.on("trigger-action", (e25) => u10({ event: e25, view: this.view })), f2(() => !this.waitingForResult, () => this._waitingForResultChange(), U2), l3(() => {
      var _a, _b;
      return [this.features, (_a = this.view) == null ? void 0 : _a.map, (_b = this.view) == null ? void 0 : _b.spatialReference];
    }, () => this._updateFeatureVMs()), l3(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._viewScaleChange()), f2(() => !this.visible, () => this.browseClusterEnabled = false), l3(() => this.browseClusterEnabled, (e25) => e25 ? this.enableClusterBrowsing() : this.disableClusterBrowsing())]);
  }
  destroy() {
    this._cancelFetchingFeatures(), this._handles.destroy(), this._handles = null, this._pendingPromises.clear(), this.browseClusterEnabled = false, this.view = null;
  }
  get active() {
    return !(!this.visible || this.waitingForResult);
  }
  get allActions() {
    const e25 = this._get("allActions") || new B2();
    e25.removeAll();
    const { actions: t23, defaultActions: i33, defaultPopupTemplateEnabled: s24, includeDefaultActions: r23, selectedFeature: o24 } = this, n30 = r23 ? i33.concat(t23) : t23, a32 = o24 && ("function" == typeof o24.getEffectivePopupTemplate && o24.getEffectivePopupTemplate(s24) || o24.popupTemplate), l27 = a32 && a32.actions, h18 = a32 && a32.overwriteActions ? l27 : l27 ? l27.concat(n30) : n30;
    return h18 && h18.filter(Boolean).forEach((t24) => e25.add(t24)), e25;
  }
  get defaultActions() {
    const e25 = this._get("defaultActions") || new B2();
    return e25.removeAll(), e25.addMany(l17(this.selectedFeature) ? R4() : G3()), e25;
  }
  get featureCount() {
    return this.features.length;
  }
  get features() {
    return this._get("features") || [];
  }
  set features(e25) {
    const t23 = e25 || [];
    this._set("features", t23);
    const { pendingPromisesCount: i33, promiseCount: s24, selectedFeatureIndex: r23 } = this, o24 = s24 && t23.length;
    o24 && i33 && -1 === r23 ? this.selectedFeatureIndex = 0 : o24 && -1 !== r23 || (this.selectedFeatureIndex = t23.length ? 0 : -1);
  }
  get location() {
    return this._get("location") || null;
  }
  set location(e25) {
    const t23 = this.get("view.spatialReference.isWebMercator");
    e25 && e25.get("spatialReference.isWGS84") && t23 && (e25 = R(e25)), this._set("location", e25);
  }
  get pendingPromisesCount() {
    return this._pendingPromises.size;
  }
  get waitingForResult() {
    return !(!(!!this._fetchFeaturesController || this.pendingPromisesCount > 0) || 0 !== this.featureCount);
  }
  get promiseCount() {
    return this.promises.length;
  }
  get promises() {
    return this._get("promises") || [];
  }
  set promises(e25) {
    if (this._pendingPromises.clear(), this.features = [], !Array.isArray(e25) || !e25.length)
      return this._set("promises", []), void this.notifyChange("pendingPromisesCount");
    this._set("promises", e25), (e25 = e25.slice(0)).forEach((e26) => {
      this._pendingPromises.add(e26);
      const t23 = (t24) => {
        this._pendingPromises.has(e26) && this._updateFeatures(t24), this._updatePendingPromises(e26);
      }, i33 = () => this._updatePendingPromises(e26);
      e26.then(t23, i33);
    }), this.notifyChange("pendingPromisesCount");
  }
  get selectedFeature() {
    const { features: e25, selectedFeatureIndex: t23 } = this;
    if (-1 === t23)
      return null;
    return e25[t23] || null;
  }
  get selectedFeatureIndex() {
    const e25 = this._get("selectedFeatureIndex");
    return "number" == typeof e25 ? e25 : -1;
  }
  set selectedFeatureIndex(e25) {
    const { featureCount: t23 } = this;
    e25 = isNaN(e25) || e25 < -1 || !t23 ? -1 : (e25 + t23) % t23, this.activeFeature = null, this._set("selectedFeatureIndex", e25);
  }
  get selectedFeatureViewModel() {
    return this.featureViewModels[this.selectedFeatureIndex] || null;
  }
  get state() {
    return this.get("view.ready") ? "ready" : "disabled";
  }
  centerAtLocation() {
    const { view: e25 } = this, t23 = d10(this);
    return t23 ? this.callGoTo({ target: { target: t23, scale: e25.scale } }) : Promise.reject(new s3("center-at-location:invalid-target-or-view", "Cannot center at a location without a target and view.", { target: t23, view: e25 }));
  }
  zoomTo(e25) {
    return this.callGoTo(e25);
  }
  clear() {
    this.set({ promises: [], features: [], content: null, title: null, location: null, activeFeature: null });
  }
  fetchFeatures(e25, t23) {
    const { view: i33 } = this;
    if (!i33 || !e25)
      throw new s3("fetch-features:invalid-screenpoint-or-view", "Cannot fetch features without a screenPoint and view.", { screenPoint: e25, view: i33 });
    return i33.fetchPopupFeatures(e25, { event: t23 && t23.event, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, signal: t23 && t23.signal });
  }
  open(e25) {
    const t23 = { updateLocationEnabled: false, promises: [], fetchFeatures: false, ...e25, visible: true }, { fetchFeatures: i33 } = t23;
    delete t23.fetchFeatures, i33 && this._setFetchFeaturesPromises(t23.location);
    const s24 = ["actionsMenuOpen", "collapsed", "featureMenuOpen"];
    for (const r23 of s24)
      delete t23[r23];
    this.set(t23);
  }
  triggerAction(e25) {
    const t23 = this.allActions.getItemAt(e25);
    t23 && !t23.disabled && this.emit("trigger-action", { action: t23 });
  }
  next() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex + 1, this;
  }
  previous() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex - 1, this;
  }
  disableClusterBrowsing() {
    v10(this), this._clearBrowsedClusterGraphics();
  }
  async enableClusterBrowsing() {
    const { view: e25, selectedFeature: t23 } = this;
    "2d" === (e25 == null ? void 0 : e25.type) ? l17(t23) ? (await f10(this), await m15(this)) : s2.getLogger(this.declaredClass).warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.", t23) : s2.getLogger(this.declaredClass).warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.", t23);
  }
  _animationStateChange(e25) {
    this.zoomToLocation || (o13.disabled = "waiting-for-target" === e25);
  }
  _clearBrowsedClusterGraphics() {
    var _a;
    const e25 = (_a = this.view) == null ? void 0 : _a.graphics;
    e25 && (e25.remove(this.selectedClusterBoundaryFeature), e25.remove(this._selectedClusterFeature)), this._selectedClusterFeature = null, this.selectedClusterBoundaryFeature.geometry = null;
  }
  _viewScaleChange() {
    if (l17(this.selectedFeature))
      return this.browseClusterEnabled = false, this.visible = false, void this.clear();
    this.browseClusterEnabled && (this.features = [this.selectedFeature]);
  }
  _locationChange(e25) {
    const { selectedFeature: t23, updateLocationEnabled: i33 } = this;
    i33 && e25 && (!t23 || t23.geometry) && this.centerAtLocation();
  }
  _selectedFeatureIndexChange() {
    this.featurePage = this.featureCount > 1 ? Math.floor(this.selectedFeatureIndex / this.featuresPerPage) + 1 : null;
  }
  _featureViewModelsChange() {
    this.featurePage = this.featureCount > 1 ? 1 : null;
  }
  _setGraphicOnFeatureViewModels() {
    const { features: e25, featureCount: t23, featurePage: i33, featuresPerPage: s24, featureViewModels: r23 } = this;
    if (null === i33)
      return;
    const o24 = ((i33 - 1) * s24 + t23) % t23, n30 = o24 + s24;
    r23.slice(o24, n30).forEach((t24, i34) => {
      t24 && !t24.graphic && (t24.graphic = e25[o24 + i34]);
    });
  }
  async _selectedFeatureChange(e25) {
    if (!e25)
      return;
    const { location: t23, updateLocationEnabled: i33, view: s24 } = this;
    if (this.browseClusterEnabled) {
      if (this._selectedClusterFeature && (s24.graphics.remove(this._selectedClusterFeature), this._selectedClusterFeature = null), l17(e25))
        return;
      return e25.symbol = await x2(e25), this._selectedClusterFeature = e25, void s24.graphics.add(this._selectedClusterFeature);
    }
    !i33 && t23 || !e25.geometry ? i33 && !e25.geometry && this.centerAtLocation().then(() => {
      this.location = s24.center.clone();
    }) : this.location = e(this._getPointFromGeometry(e25.geometry));
  }
  _waitingForResultChange() {
    !this.featureCount && this.promises && (this.visible = false);
  }
  _setFetchFeaturesPromises(e25) {
    return this._fetchFeaturesWithController(this._getScreenPoint(e25 || this.location)).then((e26) => {
      const { clientOnlyGraphics: t23, promisesPerLayerView: i33 } = e26, s24 = Promise.resolve(t23), r23 = i33.map((e27) => e27.promise);
      this.promises = [s24, ...r23];
    });
  }
  _destroyFeatureVMs() {
    this.featureViewModels.forEach((e25) => e25 && !e25.destroyed && e25.destroy()), this._set("featureViewModels", []);
  }
  _updateFeatureVMs() {
    const { selectedFeature: e25, features: t23, featureViewModels: i33 } = this;
    if (l17(e25) || (this.browseClusterEnabled = false), this._destroyFeatureVMs(), !t23 || !t23.length)
      return;
    const s24 = i33.slice(0), r23 = [];
    t23.forEach((t24, i34) => {
      var _a, _b;
      if (!t24)
        return;
      let o24 = null;
      if (s24.some((e26, i35) => (e26 && e26.graphic === t24 && (o24 = e26, s24.splice(i35, 1)), !!o24)), o24)
        r23[i34] = o24;
      else {
        const s25 = new W2({ abilities: this.featureViewModelAbilities, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, spatialReference: (_a = this.view) == null ? void 0 : _a.spatialReference, graphic: t24 === e25 ? t24 : null, map: (_b = this.view) == null ? void 0 : _b.map, view: this.view });
        r23[i34] = s25;
      }
    }), s24.forEach((e26) => e26 && !e26.destroyed && e26.destroy()), this._set("featureViewModels", r23);
  }
  _getScreenPoint(e25) {
    const { view: t23 } = this;
    return t23 && e25 && "function" == typeof t23.toScreen ? t23.toScreen(e25) : null;
  }
  _autoOpenEnabledChange() {
    const e25 = "auto-fetch-features", { _handles: t23, autoOpenEnabled: i33 } = this;
    if (t23.remove(e25), i33 && this.view) {
      const i34 = this.view.on("click", (e26) => {
        "mouse" === e26.pointerType && 0 !== e26.button || this._fetchFeaturesAndOpen(e26);
      }, P.WIDGET);
      t23.add(i34, e25);
    }
  }
  _cancelFetchingFeatures() {
    const e25 = this._fetchFeaturesController;
    e25 && e25.abort(), this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
  }
  _fetchFeaturesWithController(e25, t23) {
    this._cancelFetchingFeatures();
    const i33 = new AbortController(), { signal: s24 } = i33;
    this._fetchFeaturesController = i33, this.notifyChange("waitingForResult");
    const r23 = this.fetchFeatures(e25, { signal: s24, event: t23 });
    return r23.catch(() => {
    }).then(() => {
      this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
    }), r23;
  }
  _fetchFeaturesAndOpen(e25) {
    const { screenPoint: t23, mapPoint: i33 } = e25, { view: s24 } = this;
    this._fetchFeaturesWithController(t23, e25).then((e26) => {
      const { clientOnlyGraphics: t24, promisesPerLayerView: r23, location: o24 } = e26, n30 = [Promise.resolve(t24), ...r23.map((e27) => e27.promise)];
      return s24.popup.open({ location: o24 || i33, promises: n30 }), e26;
    });
  }
  _updatePendingPromises(e25) {
    e25 && this._pendingPromises.has(e25) && (this._pendingPromises.delete(e25), this.notifyChange("pendingPromisesCount"));
  }
  _autoClose() {
    this.autoCloseEnabled && (this.visible = false);
  }
  _getPointFromGeometry(e25) {
    var _a;
    return t(e25) ? null : "point" === e25.type ? e25 : "extent" === e25.type ? e25.center : "polygon" === e25.type ? e25.centroid : "multipoint" === e25.type || "polyline" === e25.type ? (_a = e25.extent) == null ? void 0 : _a.center : null;
  }
  async _getLayerView(e25, t23) {
    return await e25.when(), e25.whenLayerView(t23);
  }
  _getHighlightLayer(e25) {
    const { layer: t23, sourceLayer: i33 } = e25;
    return i33 && "layer" in i33 && i33.layer ? i33.layer : "map-notes" === (i33 == null ? void 0 : i33.type) || "subtype-group" === (i33 == null ? void 0 : i33.type) ? i33 : t23;
  }
  _getHighlightTarget(e25, t23) {
    const i33 = "imagery" === t23.type ? void 0 : "objectIdField" in t23 ? t23.objectIdField || o12 : null, s24 = e25.attributes;
    return s24 && i33 && s24[i33] || e25;
  }
  async _highlightActiveFeature() {
    const e25 = "highlight-active-feature";
    this._handles.remove(e25);
    const { highlightEnabled: t23, view: i33, activeFeature: s24, visible: r23 } = this;
    if (!(s24 && i33 && t23 && r23))
      return;
    const o24 = this._getHighlightLayer(s24);
    if (!(o24 && o24 instanceof b4))
      return;
    const n30 = this._getLayerView(i33, o24);
    this._highlightActiveFeaturePromise = n30;
    const a32 = await n30;
    if (!(a32 && e10(a32) && this._highlightActiveFeaturePromise === n30 && this.activeFeature && this.highlightEnabled))
      return;
    const l27 = a32.highlight(this._getHighlightTarget(s24, o24));
    this._handles.add(l27, e25);
  }
  async _highlightSelectedFeature() {
    const e25 = "highlight-selected-feature";
    this._handles.remove(e25);
    const { selectedFeature: t23, highlightEnabled: i33, view: s24, visible: r23 } = this;
    if (!(t23 && s24 && i33 && r23))
      return;
    const o24 = this._getHighlightLayer(t23);
    if (!(o24 && o24 instanceof b4))
      return;
    const n30 = this._getLayerView(s24, o24);
    this._highlightSelectedFeaturePromise = n30;
    const a32 = await n30;
    if (!(a32 && e10(a32) && this._highlightSelectedFeaturePromise === n30 && this.selectedFeature && this.highlightEnabled && this.visible))
      return;
    const l27 = a32.highlight(this._getHighlightTarget(t23, o24));
    this._handles.add(l27, e25);
  }
  _updateFeatures(e25) {
    const { features: t23 } = this;
    if (!e25 || !e25.length)
      return;
    if (!t23.length)
      return void (this.features = e25);
    const i33 = e25.filter((e26) => !t23.includes(e26));
    this.features = t23.concat(i33);
  }
};
e2([y()], z4.prototype, "featurePage", void 0), e2([y()], z4.prototype, "isLoadingFeature", null), e2([y({ type: B2 })], z4.prototype, "actions", void 0), e2([y({ readOnly: true })], z4.prototype, "active", null), e2([y()], z4.prototype, "activeFeature", void 0), e2([y({ readOnly: true })], z4.prototype, "allActions", null), e2([y({ type: Boolean })], z4.prototype, "defaultPopupTemplateEnabled", void 0), e2([y()], z4.prototype, "autoCloseEnabled", void 0), e2([y()], z4.prototype, "autoOpenEnabled", void 0), e2([y()], z4.prototype, "browseClusterEnabled", void 0), e2([y()], z4.prototype, "content", void 0), e2([y({ type: B2, readOnly: true })], z4.prototype, "defaultActions", null), e2([y({ readOnly: true })], z4.prototype, "featureCount", null), e2([y()], z4.prototype, "features", null), e2([y()], z4.prototype, "featuresPerPage", void 0), e2([y()], z4.prototype, "featureViewModelAbilities", void 0), e2([y({ readOnly: true })], z4.prototype, "featureViewModels", void 0), e2([y()], z4.prototype, "highlightEnabled", void 0), e2([y()], z4.prototype, "includeDefaultActions", void 0), e2([y({ type: w })], z4.prototype, "location", null), e2([y({ readOnly: true })], z4.prototype, "pendingPromisesCount", null), e2([y({ readOnly: true })], z4.prototype, "selectedClusterBoundaryFeature", void 0), e2([y({ readOnly: true })], z4.prototype, "waitingForResult", null), e2([y({ readOnly: true })], z4.prototype, "promiseCount", null), e2([y()], z4.prototype, "promises", null), e2([y({ value: null, readOnly: true })], z4.prototype, "selectedFeature", null), e2([y({ value: -1 })], z4.prototype, "selectedFeatureIndex", null), e2([y({ readOnly: true })], z4.prototype, "selectedFeatureViewModel", null), e2([y({ readOnly: true })], z4.prototype, "state", null), e2([y()], z4.prototype, "title", void 0), e2([y()], z4.prototype, "updateLocationEnabled", void 0), e2([y()], z4.prototype, "view", void 0), e2([y()], z4.prototype, "visible", void 0), e2([y()], z4.prototype, "zoomFactor", void 0), e2([y()], z4.prototype, "zoomToLocation", void 0), e2([y()], z4.prototype, "centerAtLocation", null), z4 = e2([n4("esri.widgets.Popup.PopupViewModel")], z4);
var H4 = z4;

// node_modules/@arcgis/core/widgets/Popup.js
var E5 = "selected-index";
var N2 = 0;
var D2 = "popup-spinner";
var B3 = { calciteThemeLight: "calcite-theme-light", calciteThemeDark: "calcite-theme-dark", iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow", iconDockToTop: "esri-icon-maximize", iconDockToBottom: "esri-icon-dock-bottom", iconDockToLeft: "esri-icon-dock-left", iconDockToRight: "esri-icon-dock-right", iconClose: "esri-icon-close", iconUndock: "esri-icon-minimize", iconCheckMark: "esri-icon-check-mark", iconLoading: "esri-icon-loading-indicator", iconDefaultAction: "esri-icon-default-action", iconActionsMenu: "esri-icon-handle-horizontal", rotating: "esri-rotating", base: "esri-popup", widget: "esri-widget", main: "esri-popup__main-container", loadingContainer: "esri-popup__loading-container", isCollapsible: "esri-popup--is-collapsible", isCollapsed: "esri-popup--is-collapsed", shadow: "esri-popup--shadow", isDocked: "esri-popup--is-docked", isDockedTopLeft: "esri-popup--is-docked-top-left", isDockedTopCenter: "esri-popup--is-docked-top-center", isDockedTopRight: "esri-popup--is-docked-top-right", isDockedBottomLeft: "esri-popup--is-docked-bottom-left", isDockedBottomCenter: "esri-popup--is-docked-bottom-center", isDockedBottomRight: "esri-popup--is-docked-bottom-right", alignTopCenter: "esri-popup--aligned-top-center", alignBottomCenter: "esri-popup--aligned-bottom-center", alignTopLeft: "esri-popup--aligned-top-left", alignBottomLeft: "esri-popup--aligned-bottom-left", alignTopRight: "esri-popup--aligned-top-right", alignBottomRight: "esri-popup--aligned-bottom-right", isFeatureMenuOpen: "esri-popup--feature-menu-open", isActionsMenuOpen: "esri-popup--actions-menu-open", hasFeatureUpdated: "esri-popup--feature-updated", header: "esri-popup__header", headerButtons: "esri-popup__header-buttons", headerContainer: "esri-popup__header-container", headerContainerButton: "esri-popup__header-container--button", headerTitle: "esri-popup__header-title", content: "esri-popup__content", contentHasFlows: "esri-content--has-flows", contentFlowItem: "esri-content__flow-item", footer: "esri-popup__footer", footerHasPagination: "esri-popup__footer--has-pagination", footerHasActions: "esri-popup__footer--has-actions", footerHasActionsMenu: "esri-popup__footer--has-actions-menu", button: "esri-popup__button", buttonDisabled: "esri-popup__button--disabled", buttonDock: "esri-popup__button--dock", icon: "esri-popup__icon", iconDock: "esri-popup__icon--dock-icon", inlineActionsContainer: "esri-popup__inline-actions-container", actionsMenuButton: "esri-popup__actions-menu-button", actions: "esri-popup__actions", action: "esri-popup__action", actionImage: "esri-popup__action-image", actionText: "esri-popup__action-text", actionToggle: "esri-popup__action-toggle", actionToggleOn: "esri-popup__action-toggle--on", actionExit: "esri-popup__action--exit", pointer: "esri-popup__pointer", pointerDirection: "esri-popup__pointer-direction", navigation: "esri-popup__navigation", paginationPrevious: "esri-popup__pagination-previous", paginationNext: "esri-popup__pagination-next", paginationPreviousIconLTR: "esri-popup__pagination-previous-icon", paginationPreviousIconRTL: "esri-popup__pagination-previous-icon--rtl", paginationNextIconLTR: "esri-popup__pagination-next-icon", paginationNextIconRTL: "esri-popup__pagination-next-icon--rtl", featureMenu: "esri-popup__feature-menu", featureMenuList: "esri-popup__feature-menu-list", featureMenuItem: "esri-popup__feature-menu-item", featureMenuViewport: "esri-popup__feature-menu-viewport", featureMenuHeader: "esri-popup__feature-menu-header", featureMenuNote: "esri-popup__feature-menu-note", featureMenuSelected: "esri-popup__feature-menu-item--selected", featureMenuButton: "esri-popup__feature-menu-button", featureMenuTitle: "esri-popup__feature-menu-title", featureMenuObserver: "esri-popup__feature-menu-observer", featureMenuLoader: "esri-popup__feature-menu-loader", collapseButton: "esri-popup__collapse-button", collapseIcon: "esri-popup__collapse-icon" };
var P3 = { buttonEnabled: true, position: "auto", breakpoint: { width: 544 } };
var L5 = "esri-popup";
function R5(e25, t23) {
  return void 0 === t23 ? `${L5}__${e25}` : `${L5}__${e25}-${t23}`;
}
var S5 = { closeButton: true, featureNavigation: true };
var V2 = class extends i16(M2) {
  constructor(e25, i33) {
    super(e25, i33), this._blurClose = false, this._blurContainer = false, this._containerNode = null, this._mainContainerNode = null, this._featureMenuNode = null, this._actionsMenuNode = null, this._focusClose = false, this._focusContainer = false, this._focusDockButton = false, this._focusFeatureMenuButton = false, this._focusActionsMenuButton = false, this._focusFirstFeature = false, this._focusFirstAction = false, this._handles = new t4(), this._pointerOffsetInPx = 16, this._spinner = null, this._feature = null, this._featureMenuIntersectionObserverCallback = ([e26]) => {
      (e26 == null ? void 0 : e26.isIntersecting) && this.viewModel.featurePage++;
    }, this._featureMenuIntersectionObserver = new IntersectionObserver(this._featureMenuIntersectionObserverCallback, { root: window.document }), this._displaySpinnerThrottled = e9(() => this._displaySpinner(), N2), this._exitRelatedRecordsActions = /* @__PURE__ */ new WeakMap(), this._flowItems = new j3(), this.alignment = "auto", this.collapsed = false, this.collapseEnabled = true, this.dockEnabled = false, this.featureMenuOpen = false, this.headingLevel = 2, this.maxInlineActions = 3, this.messages = null, this.messagesCommon = null, this.spinnerEnabled = true, this.viewModel = new H4(), this.visibleElements = { ...S5 }, this._addSelectedFeatureIndexHandle(), this.addHandles([l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._positionContainer()), l3(() => {
      var _a;
      return [(_a = this.viewModel) == null ? void 0 : _a.active, this.dockEnabled];
    }, () => this._toggleScreenLocationEnabled()), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, (e26, t23) => {
      !!e26 != !!t23 && this.reposition();
    }), l3(() => {
      var _a, _b, _c, _d, _e2, _f;
      return [(_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.padding, (_d = (_c = this.viewModel) == null ? void 0 : _c.view) == null ? void 0 : _d.size, (_e2 = this.viewModel) == null ? void 0 : _e2.active, (_f = this.viewModel) == null ? void 0 : _f.location, this.alignment];
    }, () => this.reposition()), l3(() => this.spinnerEnabled, (e26) => this._spinnerEnabledChange(e26)), l3(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.size;
    }, (e26, t23) => this._updateDockEnabledForViewSize(e26, t23)), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e26, t23) => this._viewChange(e26, t23)), l3(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e26, t23) => this._viewReadyChange(e26, t23)), l3(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.waitingForResult, (_b = this.viewModel) == null ? void 0 : _b.location];
    }, () => {
      this._hideSpinner(), this._displaySpinnerThrottled();
    }), l3(() => this.selectedFeatureWidget, () => this._destroyFlowItemWidgets()), l3(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.title, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setTitleFromFeatureWidget()), l3(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.content, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setContentFromFeatureWidget()), f2(() => !this.collapsed, () => {
      var _a, _b;
      "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && this.viewModel.active && this.collapseEnabled && this.viewModel.centerAtLocation();
    }), a3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, "change", () => this._watchActions()), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, () => this._watchActions(), h2), l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.featureViewModels;
    }, () => this._featureMenuViewportScrollTop()), a3(() => this._flowItems, "change", () => {
      this.notifyChange("_activeFlowItemWidget"), this.scheduleRender();
    }), l3(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this._activeFlowItemWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.state, (_d = (_c = this._activeFlowItemWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.title];
    }, () => this.scheduleRender())]);
  }
  loadDependencies() {
    return Promise.all([import("./calcite-flow-GTSA4JUG.js"), import("./calcite-flow-item-4EZB4D7E.js"), import("./calcite-action-V4YAO42G.js"), import("./calcite-tooltip-G5R5ZUIB.js"), import("./calcite-icon-D7JSDQFP.js")]);
  }
  destroy() {
    var _a, _b;
    this._destroyFlowItemWidgets(), this._destroySelectedFeatureWidget(), this._destroySpinner(), (_a = this._handles) == null ? void 0 : _a.destroy(), this._unobserveFeatureMenuObserver(), (_b = this._featureMenuIntersectionObserver) == null ? void 0 : _b.disconnect(), this._handles = null;
  }
  get actionsMenuId() {
    return `${this.id}-actions-menu`;
  }
  get actionsMenuButtonId() {
    return `${this.id}-actions-menu-button`;
  }
  get featureMenuId() {
    return `${this.id}-feature-menu`;
  }
  get titleId() {
    return `${this.id}-popup-title`;
  }
  get contentId() {
    return `${this.id}-popup-content`;
  }
  get hasContent() {
    const { selectedFeatureWidget: e25, viewModel: t23 } = this;
    if (!e25)
      return !!(t23 == null ? void 0 : t23.content);
    const i33 = e25.viewModel;
    if ((i33 == null ? void 0 : i33.waitingForContent) || "error" === (i33 == null ? void 0 : i33.state))
      return true;
    const o24 = i33 == null ? void 0 : i33.content;
    return Array.isArray(o24) ? !!o24.length : !!o24;
  }
  get featureNavigationVisible() {
    return this.viewModel.active && this.viewModel.featureCount > 1 && this.visibleElements.featureNavigation;
  }
  get collapsible() {
    return !!(this.collapseEnabled && this.viewModel.title && this.hasContent);
  }
  get featureMenuVisible() {
    return this.featureNavigationVisible && this.featureMenuOpen;
  }
  get contentCollapsed() {
    return this.collapsible && !this.featureMenuVisible && this.collapsed;
  }
  get dividedActions() {
    return this._divideActions();
  }
  get _activeFlowItemWidget() {
    const { _flowItems: e25 } = this;
    return e25.getItemAt(e25.length - 1) || null;
  }
  get actions() {
    return this.viewModel.actions;
  }
  set actions(e25) {
    this.viewModel.actions = e25;
  }
  set actionsMenuOpen(e25) {
    this._set("actionsMenuOpen", !!e25);
  }
  get actionsMenuOpen() {
    return !!this.viewModel.active && this._get("actionsMenuOpen");
  }
  get autoCloseEnabled() {
    return this.viewModel.autoCloseEnabled;
  }
  set autoCloseEnabled(e25) {
    this.viewModel.autoCloseEnabled = e25;
  }
  get autoOpenEnabled() {
    return this.viewModel.autoOpenEnabled;
  }
  set autoOpenEnabled(e25) {
    this.viewModel.autoOpenEnabled = e25;
  }
  get defaultPopupTemplateEnabled() {
    return this.viewModel.defaultPopupTemplateEnabled;
  }
  set defaultPopupTemplateEnabled(e25) {
    this.viewModel.defaultPopupTemplateEnabled = e25;
  }
  get content() {
    return this.viewModel.content;
  }
  set content(e25) {
    this.viewModel.content = e25;
  }
  get currentAlignment() {
    return this._getCurrentAlignment();
  }
  get currentDockPosition() {
    return this._getCurrentDockPosition();
  }
  get dockOptions() {
    return this._get("dockOptions") || P3;
  }
  set dockOptions(e25) {
    const t23 = { ...P3 }, i33 = this.get("viewModel.view.breakpoints"), o24 = {};
    i33 && (o24.width = i33.xsmall, o24.height = i33.xsmall);
    const n30 = { ...t23, ...e25 }, s24 = { ...t23.breakpoint, ...o24 }, { breakpoint: r23 } = n30;
    true === r23 ? n30.breakpoint = s24 : "object" == typeof r23 && (n30.breakpoint = { ...s24, ...r23 }), this._set("dockOptions", n30), this._setCurrentDockPosition(), this.reposition();
  }
  get featureCount() {
    return this.viewModel.featureCount;
  }
  get features() {
    return this.viewModel.features;
  }
  set features(e25) {
    this.viewModel.features = e25;
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e25) {
    this.viewModel.goToOverride = e25;
  }
  get highlightEnabled() {
    return this.viewModel.highlightEnabled;
  }
  set highlightEnabled(e25) {
    this.viewModel.highlightEnabled = e25;
  }
  get location() {
    return this.viewModel.location;
  }
  set location(e25) {
    this.viewModel.location = e25;
  }
  get label() {
    var _a, _b;
    return (_b = (_a = this.messages) == null ? void 0 : _a.widgetLabel) != null ? _b : "";
  }
  set label(e25) {
    this._overrideIfSome("label", e25);
  }
  get promises() {
    return this.viewModel.promises;
  }
  set promises(e25) {
    this.viewModel.promises = e25;
  }
  get selectedFeature() {
    return this.viewModel.selectedFeature;
  }
  get selectedFeatureIndex() {
    return this.viewModel.selectedFeatureIndex;
  }
  set selectedFeatureIndex(e25) {
    this.viewModel.selectedFeatureIndex = e25;
  }
  get selectedFeatureWidget() {
    const { _feature: e25, visibleElements: t23, headingLevel: i33, _flowItems: o24 } = this, { selectedFeatureViewModel: n30 } = this.viewModel, s24 = { ...t23, title: false };
    return n30 ? (e25 ? (e25.viewModel = n30, e25.visibleElements = s24) : this._feature = new C5({ flowItems: o24, headingLevel: i33 + 1, viewModel: n30, visibleElements: s24 }), this._feature) : null;
  }
  get title() {
    return this.viewModel.title;
  }
  set title(e25) {
    this.viewModel.title = e25;
  }
  get updateLocationEnabled() {
    return this.viewModel.updateLocationEnabled;
  }
  set updateLocationEnabled(e25) {
    this.viewModel.updateLocationEnabled = e25;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e25) {
    this.viewModel.view = e25;
  }
  get visible() {
    return this.viewModel.visible;
  }
  set visible(e25) {
    this.viewModel.visible = e25;
  }
  castVisibleElements(e25) {
    return { ...S5, ...e25 };
  }
  blur() {
    const { active: e25 } = this.viewModel;
    e25 || s2.getLogger(this.declaredClass).warn("Popup can only be blurred when currently active."), this.visibleElements.closeButton ? this._blurClose = true : this._blurContainer = true, this.scheduleRender();
  }
  clear() {
    return this.viewModel.clear();
  }
  close() {
    this.visible = false;
  }
  fetchFeatures(e25, t23) {
    return this.viewModel.fetchFeatures(e25, t23);
  }
  focus() {
    const { active: e25 } = this.viewModel;
    e25 || s2.getLogger(this.declaredClass).warn("Popup can only be focused when currently active."), this.visibleElements.closeButton ? this._focusClose = true : this._focusContainer = true, this.scheduleRender();
  }
  next() {
    return this.viewModel.next();
  }
  open(e25) {
    var _a, _b;
    this._handles.remove(E5);
    const t23 = !!e25 && !!e25.featureMenuOpen, i33 = !!e25 && !!e25.actionsMenuOpen, o24 = { collapsed: !!e25 && !!e25.collapsed, actionsMenuOpen: i33, featureMenuOpen: t23 };
    "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && (o24.collapsed = true), this.set(o24), this.viewModel.open(e25), this._shouldFocus(e25), this._addSelectedFeatureIndexHandle();
  }
  previous() {
    return this.viewModel.previous();
  }
  reposition() {
    this.renderNow(), this._positionContainer(), this._setCurrentAlignment();
  }
  triggerAction(e25) {
    return this.viewModel.triggerAction(e25);
  }
  render() {
    var _a, _b, _c, _d;
    const { actionsMenuOpen: e25, dockEnabled: t23, featureMenuVisible: i33, dividedActions: o24, currentAlignment: n30, currentDockPosition: s24 } = this, { active: r23 } = this.viewModel, { menuActions: a32 } = o24, l27 = r23 && a32.length > 1 && e25, c36 = r23 && t23, u19 = r23 && !t23, d16 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.layer) == null ? void 0 : _b.title, p34 = (_d = (_c = this.selectedFeature) == null ? void 0 : _c.layer) == null ? void 0 : _d.id, h18 = { [B3.alignTopCenter]: "top-center" === n30, [B3.alignBottomCenter]: "bottom-center" === n30, [B3.alignTopLeft]: "top-left" === n30, [B3.alignBottomLeft]: "bottom-left" === n30, [B3.alignTopRight]: "top-right" === n30, [B3.alignBottomRight]: "bottom-right" === n30, [B3.isDocked]: c36, [B3.shadow]: u19, [B3.isDockedTopLeft]: "top-left" === s24, [B3.isDockedTopCenter]: "top-center" === s24, [B3.isDockedTopRight]: "top-right" === s24, [B3.isDockedBottomLeft]: "bottom-left" === s24, [B3.isDockedBottomCenter]: "bottom-center" === s24, [B3.isDockedBottomRight]: "bottom-right" === s24, [B3.isFeatureMenuOpen]: i33, [B3.isActionsMenuOpen]: l27 };
    return n7("div", { class: this.classes(B3.base, h18), role: "presentation", "data-layer-title": d16, "data-layer-id": p34, bind: this, afterCreate: this._positionContainer, afterUpdate: this._positionContainer }, r23 ? [this.renderMainContainer(), this.renderPointer()] : null);
  }
  renderLoadingIcon() {
    return n7("span", { "aria-hidden": "true", class: this.classes(B3.icon, B3.iconLoading, B3.rotating) });
  }
  renderNavigationLoading() {
    const { messagesCommon: e25 } = this;
    return this.viewModel.pendingPromisesCount ? n7("div", { key: R5("loading-container"), role: "presentation", class: B3.loadingContainer, "aria-label": e25.loading, title: e25.loading }, this.renderLoadingIcon()) : null;
  }
  renderPreviousIcon() {
    const e25 = f3(this.container), t23 = { [B3.iconRightTriangleArrow]: e25, [B3.paginationPreviousIconRTL]: e25, [B3.iconLeftTriangleArrow]: !e25, [B3.paginationPreviousIconLTR]: !e25 };
    return n7("span", { "aria-hidden": "true", class: this.classes(B3.icon, t23) });
  }
  renderPreviousButton() {
    const { messages: e25 } = this;
    return n7("div", { role: "button", tabIndex: 0, bind: this, onclick: this._previous, onkeydown: this._previous, class: this.classes(B3.button, B3.paginationPrevious), "aria-label": e25.previous, title: e25.previous }, this.renderPreviousIcon());
  }
  renderNextIcon() {
    const e25 = f3(this.container), t23 = { [B3.iconLeftTriangleArrow]: e25, [B3.paginationNextIconRTL]: e25, [B3.iconRightTriangleArrow]: !e25, [B3.paginationNextIconLTR]: !e25 };
    return n7("span", { "aria-hidden": "true", class: this.classes(B3.icon, t23) });
  }
  renderNextButton() {
    const { messages: e25 } = this;
    return n7("div", { role: "button", tabIndex: 0, bind: this, onclick: this._next, onkeydown: this._next, class: this.classes(B3.button, B3.paginationNext), "aria-label": e25.next, title: e25.next }, this.renderNextIcon());
  }
  renderFeatureMenuButton() {
    const { featureMenuOpen: e25, featureMenuId: t23, messagesCommon: i33 } = this, { featureCount: o24, selectedFeatureIndex: n30 } = this.viewModel;
    return n7("div", { role: "button", tabIndex: 0, bind: this, onclick: this._toggleFeatureMenu, onkeydown: this._toggleFeatureMenu, afterCreate: this._focusFeatureMenuButtonNode, afterUpdate: this._focusFeatureMenuButtonNode, class: this.classes(B3.button, B3.featureMenuButton), "aria-haspopup": "true", "aria-controls": t23, "aria-expanded": e25.toString(), "aria-label": i33.menu, title: i33.menu }, this._getPageText(o24, n30));
  }
  renderNavigationButtons() {
    return this.featureNavigationVisible ? [this.renderPreviousButton(), this.renderNavigationLoading() || this.renderFeatureMenuButton(), this.renderNextButton()] : null;
  }
  renderDockIcon() {
    const { dockEnabled: e25 } = this, t23 = this._wouldDockTo(), i33 = { [B3.iconUndock]: e25, [B3.iconDock]: !e25, [B3.iconDockToRight]: !e25 && ("top-right" === t23 || "bottom-right" === t23), [B3.iconDockToLeft]: !e25 && ("top-left" === t23 || "bottom-left" === t23), [B3.iconDockToTop]: !e25 && "top-center" === t23, [B3.iconDockToBottom]: !e25 && "bottom-center" === t23 };
    return n7("span", { "aria-hidden": "true", class: this.classes(i33, B3.icon) });
  }
  renderDockButton() {
    var _a, _b, _c;
    const { dockEnabled: e25, messages: t23 } = this, i33 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint, o24 = e25 ? t23.undock : t23.dock;
    return "xsmall" !== i33 && ((_c = this.dockOptions) == null ? void 0 : _c.buttonEnabled) ? n7("div", { role: "button", "aria-label": o24, title: o24, tabIndex: 0, bind: this, onclick: this._toggleDockEnabled, onkeydown: this._toggleDockEnabled, afterCreate: this._focusDockButtonNode, afterUpdate: this._focusDockButtonNode, class: this.classes(B3.button, B3.buttonDock) }, this.renderDockIcon()) : null;
  }
  renderTitle() {
    const { title: e25 } = this.viewModel, { titleId: t23, collapsible: i33, contentCollapsed: o24, messagesCommon: n30 } = this, s24 = { [B3.headerContainerButton]: i33 }, r23 = n7(n11, { level: this.headingLevel, class: B3.headerTitle, innerHTML: e25 }), a32 = i33 ? n7("button", { key: `${e25}--collapsible`, id: t23, title: o24 ? n30.expand : n30.collapse, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(B3.headerContainer, s24), "aria-expanded": o24 ? "false" : "true", onclick: this._toggleCollapsed, type: "button" }, r23, n7("calcite-icon", { class: B3.collapseIcon, key: "collapse-icon", icon: o24 ? "chevron-down" : "chevron-up", scale: "m" })) : n7("div", { key: e25, id: t23, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(B3.headerContainer, s24) }, r23);
    return e25 ? a32 : null;
  }
  renderCloseIcon() {
    return n7("span", { "aria-hidden": "true", class: this.classes(B3.icon, B3.iconClose) });
  }
  renderCloseButton() {
    const { visibleElements: e25, messagesCommon: t23 } = this;
    return e25.closeButton ? n7("div", { role: "button", tabIndex: 0, bind: this, onclick: this._close, onkeydown: this._close, class: B3.button, "aria-label": t23.close, title: t23.close, afterCreate: this._closeButtonNodeUpdated, afterUpdate: this._closeButtonNodeUpdated }, this.renderCloseIcon()) : null;
  }
  renderHeader() {
    return n7("header", { class: B3.header }, this.renderTitle(), n7("div", { class: B3.headerButtons }, this.renderDockButton(), this.renderCloseButton()));
  }
  renderContentContainer() {
    const { contentId: e25, hasContent: t23, contentCollapsed: i33, _flowItems: o24, messagesCommon: n30 } = this, { content: s24 } = this.viewModel, r23 = o24.toArray(), a32 = { [B3.contentHasFlows]: !!r23.length };
    return t23 && !i33 ? n7("div", { key: s24, enterAnimation: this._createFeatureUpdatedAnimation(), id: e25, class: this.classes(B3.content, a32) }, n7("calcite-flow", { bind: this, onCalciteFlowItemBack: this._handleBackClick }, n7("calcite-flow-item", { bind: this, "data-node-ref": "_rootFlowItemNode", "intl-back": n30.back, afterCreate: v4, key: "root-flow-item" }, this.renderContent()), r23.map((e26) => this.renderFlowItem(e26))), r23.map((e26) => this.renderFlowItemTooltip(e26))) : null;
  }
  renderFlowItem(e25) {
    const { messages: t23, messagesCommon: i33 } = this, o24 = r5();
    return n7("calcite-flow-item", { class: this.classes({ [B3.calciteThemeDark]: !o24, [B3.calciteThemeLight]: o24 }), heading: e25.title, "intl-back": i33.back, description: this._getFlowItemDescription(e25), key: `flow-item-${e25.viewModel.uid}` }, n7("calcite-action", { class: B3.actionExit, icon: "move-up", label: t23 == null ? void 0 : t23.exitRelatedRecords, text: t23 == null ? void 0 : t23.exitRelatedRecords, slot: "header-actions-start", bind: this, afterCreate: (t24) => this._storeExitRelatedRecordsAction(e25, t24), onclick: this._destroyFlowItemWidgets }), n7("div", { class: this.classes(B3.contentFlowItem, { [B3.calciteThemeDark]: o24, [B3.calciteThemeLight]: !o24 }) }, e25.render()));
  }
  renderFlowItemTooltip(e25) {
    const { messages: t23, _exitRelatedRecordsActions: i33 } = this, o24 = r5();
    return n7("calcite-tooltip", { class: this.classes({ [B3.calciteThemeDark]: !o24, [B3.calciteThemeLight]: o24 }), key: `exit-related-records-tooltip-${e25.viewModel.uid}`, label: t23 == null ? void 0 : t23.exitRelatedRecords, overlayPositioning: "fixed", referenceElement: i33.get(e25), placement: "top" }, t23 == null ? void 0 : t23.exitRelatedRecords);
  }
  renderActionsMenuButton() {
    const { actionsMenuId: e25, actionsMenuButtonId: t23, actionsMenuOpen: i33, dividedActions: o24, messagesCommon: n30 } = this, s24 = i33 ? n30.close : n30.open, { menuActions: r23 } = o24;
    return r23.length ? n7("div", { key: R5("actions-menu-button"), class: this.classes(B3.button, B3.actionsMenuButton), role: "button", id: t23, "aria-haspopup": "true", "aria-controls": i33 ? e25 : null, tabIndex: 0, bind: this, onclick: this._toggleActionsMenu, onkeydown: this._toggleActionsMenu, afterCreate: this._focusActionsMenuButtonNode, afterUpdate: this._focusActionsMenuButtonNode, "aria-label": s24, title: s24 }, n7("span", { "aria-hidden": "true", class: B3.iconActionsMenu })) : null;
  }
  renderMenuActions() {
    const { actionsMenuId: e25, actionsMenuButtonId: t23, actionsMenuOpen: i33, dividedActions: o24 } = this, { menuActions: n30 } = o24;
    return n30.length && i33 ? n7("ul", { id: e25, role: "menu", "aria-labelledby": t23, key: R5("actions"), class: B3.actions, bind: this, onkeyup: this._handleActionMenuKeyup, afterCreate: this._actionsMenuNodeUpdated, afterUpdate: this._actionsMenuNodeUpdated }, n30.toArray().map((e26) => this.renderAction({ action: e26, type: "menu-item" }))) : null;
  }
  renderInlineActions() {
    const { inlineActions: e25 } = this.dividedActions;
    return !!e25.length && e25.toArray().map((e26) => this.renderAction({ action: e26, type: "inline" }));
  }
  renderInlineActionsContainer() {
    const { inlineActions: e25, menuActions: t23 } = this.dividedActions, i33 = !!e25.length, o24 = !!t23.length;
    return i33 || o24 ? n7("div", { key: "inline-actions-container", "data-inline-actions": i33.toString(), "data-menu-actions": o24.toString(), class: B3.inlineActionsContainer }, this.renderInlineActions(), this.renderActionsMenuButton(), this.renderMenuActions()) : null;
  }
  renderNavigation() {
    return this.featureNavigationVisible ? n7("section", { key: R5("navigation"), class: this.classes(B3.navigation) }, this.renderNavigationButtons()) : null;
  }
  renderFooter() {
    const { featureNavigationVisible: e25, dividedActions: t23 } = this, { inlineActions: i33, menuActions: o24 } = t23, n30 = !!i33.length, s24 = !!o24.length, r23 = { [B3.footerHasPagination]: e25, [B3.footerHasActions]: n30, [B3.footerHasActionsMenu]: s24 };
    return e25 || n30 ? n7("div", { key: R5("feature-buttons"), class: this.classes(B3.footer, r23) }, this.renderInlineActionsContainer(), this.renderNavigation()) : null;
  }
  renderFeatureMenuContainer() {
    const { messages: e25 } = this, { featureViewModels: t23, isLoadingFeature: i33 } = this.viewModel, o24 = s5(e25.selectedFeatures, { total: t23.length });
    return n7("section", { key: R5("menu"), class: B3.featureMenu }, n7("strong", { class: B3.featureMenuHeader }, o24), n7("nav", { bind: this, class: B3.featureMenuViewport, "data-node-ref": "_featureMenuViewportNode", afterCreate: v4 }, this.renderFeatureMenu(), n7("div", { class: B3.featureMenuObserver, bind: this, afterCreate: this._featureMenuIntersectionObserverCreated }), i33 ? n7("div", { class: B3.featureMenuLoader }, this.renderLoadingIcon()) : null));
  }
  renderPointer() {
    return this.dockEnabled ? null : n7("div", { key: R5("pointer"), class: B3.pointer, role: "presentation" }, n7("div", { class: this.classes(B3.pointerDirection, B3.shadow) }));
  }
  renderMainContainer() {
    const { dockEnabled: e25, currentAlignment: t23, currentDockPosition: i33, titleId: o24, contentId: n30, collapsible: s24, hasContent: r23, contentCollapsed: a32, visibleElements: l27 } = this, { title: c36 } = this.viewModel, u19 = "bottom-left" === t23 || "bottom-center" === t23 || "bottom-right" === t23 || "top-left" === i33 || "top-center" === i33 || "top-right" === i33, d16 = "top-left" === t23 || "top-center" === t23 || "top-right" === t23 || "bottom-left" === i33 || "bottom-center" === i33 || "bottom-right" === i33, p34 = { [B3.shadow]: e25, [B3.isCollapsible]: s24, [B3.isCollapsed]: a32 };
    return n7("div", { class: this.classes(B3.main, B3.widget, p34), tabIndex: l27.closeButton ? null : -1, role: "dialog", "aria-labelledby": c36 ? o24 : "", "aria-describedby": r23 && !a32 ? n30 : "", bind: this, onkeyup: this._handleMainKeyup, afterCreate: this._mainContainerNodeUpdated, afterUpdate: this._mainContainerNodeUpdated }, u19 ? this.renderFooter() : null, u19 ? this.renderFeatureMenuContainer() : null, this.renderHeader(), this.renderContentContainer(), d16 ? this.renderFooter() : null, d16 ? this.renderFeatureMenuContainer() : null);
  }
  renderContent() {
    var _a;
    const e25 = (_a = this.viewModel) == null ? void 0 : _a.content;
    return e25 ? "string" == typeof e25 ? n7("div", { class: e18.contentNode, key: e25, innerHTML: e25 }) : this.renderNodeContent(e25) : null;
  }
  renderActionText(e25) {
    return n7("span", { key: "text", class: B3.actionText }, e25);
  }
  renderActionIcon(e25) {
    const t23 = this._getActionClass(e25), i33 = this._getActionImage(e25), o24 = { [B3.iconLoading]: e25.active, [B3.rotating]: e25.active, [B3.icon]: !!t23, [B3.actionImage]: !e25.active && !!i33 };
    return t23 && (o24[t23] = !e25.active), n7("span", { key: "icon", "aria-hidden": "true", class: this.classes(B3.icon, o24), styles: this._getIconStyles(i33) });
  }
  renderAction(e25) {
    const { action: t23, type: i33 } = e25, o24 = this._getActionTitle(t23), n30 = { [B3.action]: "toggle" !== t23.type, [B3.actionToggle]: "toggle" === t23.type, [B3.actionToggleOn]: "toggle" === t23.type && t23.value, [B3.buttonDisabled]: t23.disabled }, s24 = [this.renderActionIcon(t23), this.renderActionText(o24)], r23 = "menu-item" === i33 ? n7("li", { key: t23.uid, role: "menuitem", tabIndex: 0, title: o24, "aria-label": o24, class: this.classes(B3.button, n30), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t23.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s24) : n7("div", { key: t23.uid, role: "button", tabIndex: 0, title: o24, "aria-label": o24, class: this.classes(B3.button, n30), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t23.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s24);
    return t23.visible ? r23 : null;
  }
  renderFeatureMenuItem(e25, t23) {
    const { messages: i33, messagesCommon: o24 } = this, { selectedFeatureIndex: n30, selectedFeatureViewModel: s24 } = this.viewModel, r23 = e25 === s24, a32 = { [B3.featureMenuSelected]: r23 }, l27 = r23 ? n7("span", { key: R5(`feature-menu-selected-feature-${n30}`), title: i33.selectedFeature, "aria-label": i33.selectedFeature, class: B3.iconCheckMark }) : null, c36 = n7("span", { innerHTML: e25.title || o24.untitled });
    return n7("li", { role: "menuitem", tabIndex: -1, key: R5(`feature-menu-feature-${n30}`), class: this.classes(a32, B3.featureMenuItem), bind: this, "data-feature-index": t23, onblur: this._removeActiveFeature, onfocus: this._setActiveFeature, onkeyup: this._handleFeatureMenuItemKeyup, onclick: this._selectFeature, onkeydown: this._selectFeature, onmouseover: this._setActiveFeature, onmouseleave: this._removeActiveFeature }, n7("span", { class: B3.featureMenuTitle }, c36, l27));
  }
  renderFeatureMenu() {
    const { featureMenuId: e25 } = this, { featureViewModels: t23 } = this.viewModel;
    return t23.length > 1 ? n7("ol", { class: B3.featureMenuList, id: e25, bind: this, afterCreate: this._featureMenuNodeUpdated, afterUpdate: this._featureMenuNodeUpdated, onkeyup: this._handleFeatureMenuKeyup, role: "menu" }, t23.filter((e26) => !!e26.graphic).map((e26, t24) => this.renderFeatureMenuItem(e26, t24))) : null;
  }
  _storeExitRelatedRecordsAction(e25, t23) {
    this._exitRelatedRecordsActions.set(e25, t23), this.scheduleRender();
  }
  _getFlowItemDescription(e25) {
    return "featureCountDescription" in e25 ? e25.featureCountDescription : e25.viewModel.description;
  }
  _destroyFlowItemWidgets() {
    this._flowItems.removeAll().forEach((e25) => {
      "showAllEnabled" in e25.viewModel && (e25.viewModel.showAllEnabled = false), e25.viewModel = null, e25.destroy();
    });
  }
  _handleBackClick() {
    const e25 = this._flowItems.pop();
    this._exitRelatedRecordsActions.delete(e25), "showAllEnabled" in e25.viewModel && (e25.viewModel.showAllEnabled = false), e25 && (e25.viewModel = null, e25.destroy());
  }
  _getActionTitle(e25) {
    const { messages: t23, selectedFeature: i33, messagesCommon: o24 } = this, { id: n30 } = e25, s24 = i33 == null ? void 0 : i33.attributes, r23 = "zoom-to-feature" === n30 ? s5(e25.title, { messages: t23 }) : "remove-selected-feature" === n30 ? s5(e25.title, { messages: o24 }) : "zoom-to-clustered-features" === n30 || "browse-clustered-features" === n30 ? s5(e25.title, { messages: t23 }) : e25.title;
    return r23 && s24 ? s5(r23, s24) : r23;
  }
  _getActionClass(e25) {
    const { selectedFeature: t23 } = this, i33 = t23 == null ? void 0 : t23.attributes, { className: o24, image: n30 } = e25, s24 = n30 || o24 ? o24 : B3.iconDefaultAction;
    return s24 && i33 ? s5(s24, i33) : s24;
  }
  _getActionImage(e25) {
    const { selectedFeature: t23 } = this, i33 = t23 == null ? void 0 : t23.attributes, { image: o24 } = e25;
    return o24 && i33 ? s5(o24, i33) : o24;
  }
  _createFeatureUpdatedAnimation() {
    return w4("enter", B3.hasFeatureUpdated);
  }
  _getInlineActionCount() {
    const { maxInlineActions: e25, featureNavigationVisible: t23 } = this;
    if ("number" != typeof e25)
      return null;
    const i33 = Math.round(e25);
    return Math.max(t23 ? i33 - 1 : i33, 0);
  }
  _watchActions() {
    const { allActions: e25 } = this.viewModel;
    this.notifyChange("dividedActions");
    const t23 = "actions";
    this._handles.remove(t23), e25 && e25.forEach((e26) => {
      this._handles.add(l3(() => [e26.uid, e26.active, e26.className, e26.disabled, e26.id, e26.title, e26.image, e26.visible], () => this.scheduleRender()), t23);
    });
  }
  _divideActions() {
    const { allActions: e25 } = this.viewModel, i33 = e25.filter((e26) => e26.visible), o24 = this._getInlineActionCount(), n30 = null === o24, s24 = 0 === o24;
    return { inlineActions: n30 ? i33.slice(0) : s24 ? new j3() : i33.slice(0, o24), menuActions: n30 ? new j3() : s24 ? i33.slice(0) : i33.slice(o24) };
  }
  _featureMenuOpenChanged(e25) {
    e25 ? this._focusFirstFeature = true : this._focusFeatureMenuButton = true;
  }
  _actionsMenuOpenChanged(e25) {
    e25 ? this._focusFirstAction = true : this._focusActionsMenuButton = true;
  }
  _setTitleFromFeatureWidget() {
    var _a, _b;
    const { selectedFeatureWidget: e25, messagesCommon: t23 } = this;
    e25 && (this.viewModel.title = "error" === ((_a = e25.viewModel) == null ? void 0 : _a.state) ? t23.errorMessage : ((_b = e25.viewModel) == null ? void 0 : _b.title) || "");
  }
  _setContentFromFeatureWidget() {
    const { selectedFeatureWidget: e25 } = this;
    e25 && (this.viewModel.content = e25);
  }
  _unobserveFeatureMenuObserver() {
    this._featureMenuIntersectionObserverNode && this._featureMenuIntersectionObserver.unobserve(this._featureMenuIntersectionObserverNode);
  }
  _featureMenuIntersectionObserverCreated(e25) {
    this._unobserveFeatureMenuObserver(), this._featureMenuIntersectionObserver.observe(e25), this._featureMenuIntersectionObserverNode = e25;
  }
  _handleFeatureMenuKeyup(e25) {
    "Escape" === i(e25) && (e25.stopPropagation(), this._focusFeatureMenuButton = true, this.featureMenuOpen = false, this.scheduleRender());
  }
  _handleActionMenuKeyup(e25) {
    "Escape" === i(e25) && (e25.stopPropagation(), this._focusActionsMenuButton = true, this.actionsMenuOpen = false, this.scheduleRender());
  }
  _setActiveFeature(e25) {
    const { viewModel: t23 } = this, i33 = e25.currentTarget["data-feature-index"];
    t23.activeFeature = t23.features[i33] || null;
  }
  _removeActiveFeature() {
    this.viewModel.activeFeature = null;
  }
  _handleFeatureMenuItemKeyup(e25) {
    const t23 = i(e25), { _featureMenuNode: o24 } = this, n30 = e25.currentTarget["data-feature-index"];
    if (!o24)
      return;
    const s24 = o24.querySelectorAll("li"), r23 = s24.length;
    if ("ArrowUp" !== t23)
      if ("ArrowDown" !== t23)
        if ("Home" !== t23)
          if ("End" !== t23)
            ;
          else {
            e25.stopPropagation();
            s24[s24.length - 1].focus();
          }
        else {
          e25.stopPropagation();
          s24[0].focus();
        }
      else {
        e25.stopPropagation();
        s24[(n30 + 1 + r23) % r23].focus();
      }
    else {
      e25.stopPropagation();
      s24[(n30 - 1 + r23) % r23].focus();
    }
  }
  _handleActionMenuItemKeyup(e25) {
    const t23 = i(e25), { _actionsMenuNode: o24 } = this, n30 = e25.currentTarget.dataset.actionUid, { menuActions: s24 } = this.dividedActions, r23 = s24.findIndex((e26) => e26.uid === n30);
    if (!o24)
      return;
    const a32 = o24.querySelectorAll("li"), l27 = a32.length;
    if ("ArrowUp" !== t23)
      if ("ArrowDown" !== t23)
        if ("Home" !== t23)
          if ("End" !== t23)
            ;
          else {
            e25.stopPropagation();
            a32[a32.length - 1].focus();
          }
        else {
          e25.stopPropagation();
          a32[0].focus();
        }
      else {
        e25.stopPropagation();
        a32[(r23 + 1 + l27) % l27].focus();
      }
    else {
      e25.stopPropagation();
      a32[(r23 - 1 + l27) % l27].focus();
    }
  }
  _handleMainKeyup(e25) {
    const t23 = i(e25);
    "ArrowLeft" === t23 && (e25.stopPropagation(), this.previous()), "ArrowRight" === t23 && (e25.stopPropagation(), this.next());
  }
  _spinnerEnabledChange(e25) {
    if (this._destroySpinner(), !e25)
      return;
    const t23 = this.get("viewModel.view");
    this._createSpinner(t23);
  }
  _hideSpinner() {
    const { _spinner: e25 } = this;
    e25 && (e25.location = null, e25.hide());
  }
  _displaySpinner() {
    const { _spinner: e25 } = this;
    if (!e25)
      return;
    const { location: t23, waitingForResult: i33 } = this.viewModel;
    i33 ? e25.show({ location: t23 }) : e25.hide();
  }
  _getIconStyles(e25) {
    return { "background-image": e25 ? `url(${e25})` : "" };
  }
  async _shouldFocus(e25) {
    e25.shouldFocus && (await j2(() => {
      var _a;
      return true === ((_a = this.viewModel) == null ? void 0 : _a.active);
    }), this.focus());
  }
  _addSelectedFeatureIndexHandle() {
    const e25 = l3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.selectedFeatureIndex;
    }, (e26, t23) => this._selectedFeatureIndexUpdated(e26, t23));
    this._handles.add(e25, E5);
  }
  _selectedFeatureIndexUpdated(e25, t23) {
    const { featureCount: i33 } = this;
    i33 && e25 !== t23 && -1 !== e25 && (this._destroyFlowItemWidgets(), this.actionsMenuOpen = false, this.featureMenuOpen = false, this._mainContainerNode && (this._mainContainerNode.scrollTop = 0), this._rootFlowItemNode && this._rootFlowItemNode.scrollContentTo({ top: 0 }));
  }
  _destroySelectedFeatureWidget() {
    const { _feature: e25 } = this;
    e25 && (e25.viewModel = null, e25 && !e25.destroyed && e25.destroy()), this._feature = null;
  }
  _isScreenLocationWithinView(e25, t23) {
    return e25.x > -1 && e25.y > -1 && e25.x <= t23.width && e25.y <= t23.height;
  }
  _isOutsideView(e25) {
    const { popupHeight: t23, popupWidth: i33, screenLocation: o24, side: n30, view: s24 } = e25;
    if (isNaN(i33) || isNaN(t23) || !s24 || !o24)
      return false;
    const r23 = s24.padding;
    return "right" === n30 && o24.x + i33 / 2 > s24.width - r23.right || ("left" === n30 && o24.x - i33 / 2 < r23.left || ("top" === n30 && o24.y - t23 < r23.top || "bottom" === n30 && o24.y + t23 > s24.height - r23.bottom));
  }
  _calculateAutoAlignment(e25) {
    if ("auto" !== e25)
      return e25;
    const { _pointerOffsetInPx: t23, _containerNode: i33, _mainContainerNode: o24, viewModel: n30 } = this, { screenLocation: r23, view: a32 } = n30;
    if (t(r23) || !a32 || !i33)
      return "top-center";
    if (!this._isScreenLocationWithinView(r23, a32))
      return this._get("currentAlignment") || "top-center";
    function l27(e26) {
      return parseInt(e26.replace(/[^-\d\.]/g, ""), 10);
    }
    const c36 = o24 ? window.getComputedStyle(o24, null) : null, u19 = c36 ? l27(c36.getPropertyValue("max-height")) : 0, d16 = c36 ? l27(c36.getPropertyValue("height")) : 0, { height: p34, width: h18 } = i33.getBoundingClientRect(), g18 = h18 + t23, _11 = Math.max(p34, u19, d16) + t23, m25 = this._isOutsideView({ popupHeight: _11, popupWidth: g18, screenLocation: r23, side: "right", view: a32 }), f15 = this._isOutsideView({ popupHeight: _11, popupWidth: g18, screenLocation: r23, side: "left", view: a32 }), v14 = this._isOutsideView({ popupHeight: _11, popupWidth: g18, screenLocation: r23, side: "top", view: a32 }), b15 = this._isOutsideView({ popupHeight: _11, popupWidth: g18, screenLocation: r23, side: "bottom", view: a32 });
    return f15 ? v14 ? "bottom-right" : "top-right" : m25 ? v14 ? "bottom-left" : "top-left" : v14 ? b15 ? "top-center" : "bottom-center" : "top-center";
  }
  _callCurrentAlignment(e25) {
    return "function" == typeof e25 ? e25.call(this) : e25;
  }
  _getCurrentAlignment() {
    const { alignment: e25, dockEnabled: t23 } = this;
    return t23 || !this.viewModel.active ? null : this._calculatePositionResult(this._calculateAutoAlignment(this._callCurrentAlignment(e25)));
  }
  _setCurrentAlignment() {
    this._set("currentAlignment", this._getCurrentAlignment());
  }
  _setCurrentDockPosition() {
    this._set("currentDockPosition", this._getCurrentDockPosition());
  }
  _calculatePositionResult(e25) {
    const t23 = ["left", "right"];
    return f3(this.container) && t23.reverse(), e25.replace(/leading/gi, t23[0]).replace(/trailing/gi, t23[1]);
  }
  _callDockPosition(e25) {
    return "function" == typeof e25 ? e25.call(this) : e25;
  }
  _getDockPosition() {
    var _a;
    return this._calculatePositionResult(this._calculateAutoDockPosition(this._callDockPosition((_a = this.dockOptions) == null ? void 0 : _a.position)));
  }
  _getCurrentDockPosition() {
    return this.dockEnabled && this.viewModel.active ? this._getDockPosition() : null;
  }
  _wouldDockTo() {
    return this.dockEnabled ? null : this._getDockPosition();
  }
  _calculateAutoDockPosition(e25) {
    var _a;
    if ("auto" !== e25)
      return e25;
    const t23 = (_a = this.viewModel) == null ? void 0 : _a.view, i33 = f3(this.container) ? "top-left" : "top-right";
    if (!t23)
      return i33;
    const o24 = t23.padding || { left: 0, right: 0, top: 0, bottom: 0 }, n30 = t23.width - o24.left - o24.right, { breakpoints: s24 } = t23;
    return s24 && n30 <= s24.xsmall ? "bottom-center" : i33;
  }
  _positionContainer(e25 = this._containerNode) {
    if (e25 && (this._containerNode = e25), !e25)
      return;
    const { screenLocation: t23 } = this.viewModel, { width: i33 } = e25.getBoundingClientRect(), o24 = this._calculatePositionStyle(t23, i33);
    o24 && (e25.style.top = o24.top, e25.style.left = o24.left, e25.style.bottom = o24.bottom, e25.style.right = o24.right);
  }
  _calculateFullWidth(e25) {
    const { currentAlignment: t23, _pointerOffsetInPx: i33 } = this;
    return "top-left" === t23 || "bottom-left" === t23 || "top-right" === t23 || "bottom-right" === t23 ? e25 + i33 : e25;
  }
  _calculateAlignmentPosition(e25, t23, i33, o24) {
    const { currentAlignment: n30, _pointerOffsetInPx: s24 } = this, r23 = o24 / 2, a32 = i33.height - t23, l27 = i33.width - e25, { padding: c36 } = this.view;
    return "bottom-center" === n30 ? { top: t23 + s24 - c36.top, left: e25 - r23 - c36.left } : "top-left" === n30 ? { bottom: a32 + s24 - c36.bottom, right: l27 + s24 - c36.right } : "bottom-left" === n30 ? { top: t23 + s24 - c36.top, right: l27 + s24 - c36.right } : "top-right" === n30 ? { bottom: a32 + s24 - c36.bottom, left: e25 + s24 - c36.left } : "bottom-right" === n30 ? { top: t23 + s24 - c36.top, left: e25 + s24 - c36.left } : "top-center" === n30 ? { bottom: a32 + s24 - c36.bottom, left: e25 - r23 - c36.left } : void 0;
  }
  _calculatePositionStyle(e25, t23) {
    const { dockEnabled: i33, view: o24 } = this;
    if (!o24)
      return;
    if (i33)
      return { left: "", top: "", right: "", bottom: "" };
    if (t(e25) || !t23)
      return;
    const n30 = this._calculateFullWidth(t23), r23 = this._calculateAlignmentPosition(e25.x, e25.y, o24, n30);
    return r23 ? { top: void 0 !== r23.top ? `${r23.top}px` : "auto", left: void 0 !== r23.left ? `${r23.left}px` : "auto", bottom: void 0 !== r23.bottom ? `${r23.bottom}px` : "auto", right: void 0 !== r23.right ? `${r23.right}px` : "auto" } : void 0;
  }
  _viewChange(e25, t23) {
    e25 && t23 && (this.close(), this.clear());
  }
  _viewReadyChange(e25, t23) {
    if (e25) {
      const e26 = this.get("viewModel.view");
      this._wireUpView(e26);
    } else
      t23 && (this.close(), this.clear());
  }
  _wireUpView(e25) {
    if (this._destroySpinner(), !e25)
      return;
    const { spinnerEnabled: t23 } = this;
    t23 && this._createSpinner(e25), this._setDockEnabledForViewSize(this.dockOptions);
  }
  _dockingThresholdCrossed(e25, t23, i33) {
    const [o24, n30] = e25, [s24, r23] = t23, { width: a32, height: l27 } = i33;
    return o24 <= a32 && s24 > a32 || o24 > a32 && s24 <= a32 || n30 <= l27 && r23 > l27 || n30 > l27 && r23 <= l27;
  }
  _updateDockEnabledForViewSize(e25, t23) {
    if (!e25 || !t23)
      return;
    const i33 = this.get("viewModel.view.padding") || { left: 0, right: 0, top: 0, bottom: 0 }, o24 = i33.left + i33.right, n30 = i33.top + i33.bottom, s24 = [], r23 = [];
    s24[0] = e25[0] - o24, s24[1] = e25[1] - n30, r23[0] = t23[0] - o24, r23[1] = t23[1] - n30;
    const { dockOptions: a32 } = this, l27 = a32.breakpoint;
    this._dockingThresholdCrossed(s24, r23, l27) && this._setDockEnabledForViewSize(a32), this._setCurrentDockPosition();
  }
  _focusDockButtonNode(e25) {
    this._focusDockButton && (this._focusDockButton = false, e25.focus());
  }
  _closeButtonNodeUpdated(e25) {
    return this._focusClose ? (this._focusClose = false, void e25.focus()) : this._blurClose ? (this._blurClose = false, void e25.blur()) : void 0;
  }
  _mainContainerNodeUpdated(e25) {
    return this._mainContainerNode = e25, this._focusContainer ? (this._focusContainer = false, void e25.focus()) : this._blurContainer ? (this._blurContainer = false, void e25.blur()) : void 0;
  }
  _featureMenuNodeUpdated(e25) {
    if (this._featureMenuNode = e25, !e25 || !this._focusFirstFeature)
      return;
    this._focusFirstFeature = false;
    const t23 = e25.querySelectorAll("li");
    if (t23.length) {
      t23[0].focus();
    }
  }
  _actionsMenuNodeUpdated(e25) {
    if (this._actionsMenuNode = e25, !e25 || !this._focusFirstAction)
      return;
    this._focusFirstAction = false;
    const t23 = e25.querySelectorAll("li");
    if (t23.length) {
      t23[0].focus();
    }
  }
  _focusFeatureMenuButtonNode(e25) {
    this._focusFeatureMenuButton && (this._focusFeatureMenuButton = false, e25.focus());
  }
  _focusActionsMenuButtonNode(e25) {
    this._focusActionsMenuButton && (this._focusActionsMenuButton = false, e25.focus());
  }
  _featureMenuViewportScrollTop() {
    this._featureMenuViewportNode && (this._featureMenuViewportNode.scrollTop = 0);
  }
  _toggleScreenLocationEnabled() {
    const { dockEnabled: e25, viewModel: t23 } = this;
    if (!t23)
      return;
    const i33 = t23.active && !e25;
    t23.screenLocationEnabled = i33;
  }
  _shouldDockAtCurrentViewSize(e25) {
    var _a, _b;
    const t23 = e25.breakpoint, i33 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ui;
    if (!i33)
      return false;
    const { width: o24, height: n30 } = i33;
    if (isNaN(o24) || isNaN(n30))
      return false;
    const s24 = t23.hasOwnProperty("width") && o24 <= t23.width, r23 = t23.hasOwnProperty("height") && n30 <= t23.height;
    return s24 || r23;
  }
  _setDockEnabledForViewSize(e25) {
    e25.breakpoint && (this.dockEnabled = this._shouldDockAtCurrentViewSize(e25));
  }
  _getPageText(e25, t23) {
    return this.featureNavigationVisible ? s5(this.messages.pageText, { index: t23 + 1, total: e25 }) : null;
  }
  _destroySpinner() {
    const { _spinner: e25, view: t23 } = this;
    e25 && (t23 && t23.ui && t23.ui.remove(this._spinner, D2), e25.destroy(), this._spinner = null);
  }
  _createSpinner(e25) {
    e25 && (this._spinner = new h12({ view: e25 }), e25.ui.add(this._spinner, { key: D2, position: "manual" }));
  }
  _toggleCollapsed() {
    this.collapsed = !this.collapsed;
  }
  _close() {
    this.close(), this.view && this.view.focus();
  }
  _toggleDockEnabled() {
    this.dockEnabled = !this.dockEnabled, this._focusDockButton = true, this.scheduleRender();
  }
  _toggleFeatureMenu() {
    const e25 = !this.featureMenuOpen;
    this._featureMenuOpenChanged(e25), this.actionsMenuOpen = false, this.featureMenuOpen = e25;
  }
  _toggleActionsMenu() {
    const e25 = !this.actionsMenuOpen;
    this._actionsMenuOpenChanged(e25), this.featureMenuOpen = false, this.actionsMenuOpen = e25;
  }
  _triggerAction(e25) {
    const t23 = e25.currentTarget.dataset.actionUid, { allActions: i33 } = this.viewModel, o24 = i33.findIndex((e26) => e26.uid === t23), n30 = i33.getItemAt(o24);
    n30 && "toggle" === n30.type && (n30.value = !n30.value), this.actionsMenuOpen = false, this.viewModel.triggerAction(o24);
  }
  _selectFeature(e25) {
    const t23 = e25.currentTarget["data-feature-index"];
    isNaN(t23) || (this.viewModel.selectedFeatureIndex = t23), this.featureMenuOpen = false, this._focusFeatureMenuButton = true, this.scheduleRender();
  }
  _next() {
    this.next();
  }
  _previous() {
    this.previous();
  }
};
e2([y({ readOnly: true })], V2.prototype, "actionsMenuId", null), e2([y({ readOnly: true })], V2.prototype, "actionsMenuButtonId", null), e2([y({ readOnly: true })], V2.prototype, "featureMenuId", null), e2([y({ readOnly: true })], V2.prototype, "titleId", null), e2([y({ readOnly: true })], V2.prototype, "contentId", null), e2([y({ readOnly: true })], V2.prototype, "hasContent", null), e2([y({ readOnly: true })], V2.prototype, "featureNavigationVisible", null), e2([y({ readOnly: true })], V2.prototype, "collapsible", null), e2([y({ readOnly: true })], V2.prototype, "featureMenuVisible", null), e2([y({ readOnly: true })], V2.prototype, "contentCollapsed", null), e2([y({ readOnly: true })], V2.prototype, "dividedActions", null), e2([y({ readOnly: true, dependsOn: ["_flowItems.length"] })], V2.prototype, "_activeFlowItemWidget", null), e2([y()], V2.prototype, "actions", null), e2([y()], V2.prototype, "actionsMenuOpen", null), e2([y()], V2.prototype, "alignment", void 0), e2([y()], V2.prototype, "autoCloseEnabled", null), e2([y()], V2.prototype, "autoOpenEnabled", null), e2([y()], V2.prototype, "defaultPopupTemplateEnabled", null), e2([y()], V2.prototype, "content", null), e2([y()], V2.prototype, "collapsed", void 0), e2([y()], V2.prototype, "collapseEnabled", void 0), e2([y({ readOnly: true })], V2.prototype, "currentAlignment", null), e2([y({ readOnly: true })], V2.prototype, "currentDockPosition", null), e2([y()], V2.prototype, "dockOptions", null), e2([y()], V2.prototype, "dockEnabled", void 0), e2([y({ readOnly: true })], V2.prototype, "featureCount", null), e2([y()], V2.prototype, "featureMenuOpen", void 0), e2([y()], V2.prototype, "features", null), e2([y()], V2.prototype, "goToOverride", null), e2([y()], V2.prototype, "headingLevel", void 0), e2([y()], V2.prototype, "highlightEnabled", null), e2([y()], V2.prototype, "location", null), e2([y()], V2.prototype, "label", null), e2([y()], V2.prototype, "maxInlineActions", void 0), e2([y(), e4("esri/widgets/Popup/t9n/Popup")], V2.prototype, "messages", void 0), e2([y(), e4("esri/t9n/common")], V2.prototype, "messagesCommon", void 0), e2([y()], V2.prototype, "promises", null), e2([y({ readOnly: true })], V2.prototype, "selectedFeature", null), e2([y()], V2.prototype, "selectedFeatureIndex", null), e2([y({ readOnly: true })], V2.prototype, "selectedFeatureWidget", null), e2([y()], V2.prototype, "spinnerEnabled", void 0), e2([y()], V2.prototype, "title", null), e2([y()], V2.prototype, "updateLocationEnabled", null), e2([y()], V2.prototype, "view", null), e2([y({ type: H4 }), e5(["triggerAction", "trigger-action"])], V2.prototype, "viewModel", void 0), e2([y()], V2.prototype, "visible", null), e2([y()], V2.prototype, "visibleElements", void 0), e2([s4("visibleElements")], V2.prototype, "castVisibleElements", null), e2([t8()], V2.prototype, "_close", null), e2([t8()], V2.prototype, "_toggleDockEnabled", null), e2([t8()], V2.prototype, "_toggleFeatureMenu", null), e2([t8()], V2.prototype, "_toggleActionsMenu", null), e2([t8()], V2.prototype, "_triggerAction", null), e2([t8()], V2.prototype, "_selectFeature", null), e2([t8()], V2.prototype, "_next", null), e2([t8()], V2.prototype, "_previous", null), V2 = e2([n4("esri.widgets.Popup")], V2);
var U6 = V2;

// node_modules/@arcgis/core/views/DOMContainer.js
var m16 = [0, 0];
function f11(e25) {
  var _a, _b;
  const t23 = (e25.ownerDocument || window.document).defaultView, s24 = e25.getBoundingClientRect();
  return m16[0] = s24.left + ((_a = t23 == null ? void 0 : t23.pageXOffset) != null ? _a : 0), m16[1] = s24.top + ((_b = t23 == null ? void 0 : t23.pageYOffset) != null ? _b : 0), m16;
}
function y10(e25) {
  e25 && (t7(e25), e25.parentNode && e25.parentNode.removeChild(e25));
}
function v11(e25) {
  const t23 = document.createElement("div");
  return e25.appendChild(t23), t23;
}
var _7 = 16;
var g13 = 750;
var w14 = 512;
var C6 = 2;
var z5 = (i33) => {
  let m25 = class extends i33 {
    constructor(...e25) {
      var _a;
      super(...e25), this._freqInfo = { freq: _7, time: g13 }, this._overlayRenderTaskHandle = null, this.height = 0, this.overlay = null, this.position = null, this.resizing = false, this.root = null, this.surface = null, this.suspended = true, this.ui = null, this.userContent = null, this.width = 0, this.widthBreakpoint = null, 0 !== e25.length && void 0 !== ((_a = e25[0]) == null ? void 0 : _a.popup) || (this.popup = new U6({ view: this })), this.handles.add([l3(() => this.cursor, (e26) => {
        const { surface: t23 } = this;
        t23 && t23.setAttribute("data-cursor", e26);
      }), l3(() => this.interacting, (e26) => {
        const { surface: t23 } = this;
        t23 && t23.setAttribute("data-interacting", e26.toString());
      })]);
    }
    initialize() {
      this.handles.add(l3(() => this.ui, (e25, t23) => this._handleUIChange(e25, t23))), this._wireUI(this.ui), this.handles.add([this.on("focus", () => this.notifyChange("focused")), this.on("blur", () => this.notifyChange("focused"))]);
    }
    destroy() {
      this.destroyed || (this.ui = s(this.ui), this.popup && !this.popup.destroyed && this.popup.destroy(), this.container = null);
    }
    get container() {
      var _a;
      return (_a = this._get("container")) != null ? _a : null;
    }
    set container(e25) {
      const i34 = this._get("container"), r23 = e3(e25), l27 = r23 instanceof HTMLDivElement ? r23 : null;
      if (l27 || "string" != typeof e25 || s2.getLogger(this.declaredClass).error("#container", `element with id '${e25}' not found`), i34 === l27)
        return;
      const u19 = "dom-size";
      if (this.handles.remove(u19), this._stopMeasuring(), i34 && (i34.classList.remove("esri-view"), this._overlayRenderTaskHandle && (this._overlayRenderTaskHandle.remove(), this._overlayRenderTaskHandle = null), this.overlay && (this.overlay.destroy(), this._set("overlay", null)), this.root && (y10(this.root), this._set("root", null)), this.userContent && (r4(this.userContent, i34), y10(this.userContent), this._set("userContent", null))), !l27)
        return this._set("width", 0), this._set("height", 0), this._set("position", null), this._set("suspended", true), this._set("surface", null), void this._set("container", null);
      l27.classList.add("esri-view");
      const c36 = document.createElement("div");
      c36.className = "esri-view-user-storage", r4(l27, c36), l27.appendChild(c36), this._set("userContent", c36);
      const m26 = document.createElement("div");
      m26.className = "esri-view-root", l27.insertBefore(m26, l27.firstChild), this._set("root", m26);
      const f15 = document.createElement("div");
      f15.className = "esri-view-surface", f15.setAttribute("role", "application"), f15.tabIndex = 0, m26.appendChild(f15), this._set("surface", f15);
      const v14 = new c9();
      m26.appendChild(v14.surface), this._set("overlay", v14), l3(() => v14.needsRender, (e26) => {
        e26 && !this._overlayRenderTaskHandle ? this._overlayRenderTaskHandle = A2({ render: () => {
          var _a;
          return (_a = this.overlay) == null ? void 0 : _a.render();
        } }) : this._overlayRenderTaskHandle = h(this._overlayRenderTaskHandle);
      }), this.forceDOMReadyCycle(), this.handles.add(l3(() => this.size, (e26) => {
        const [t23, s24] = e26, i35 = "esri-view-surface--inset-outline";
        t23 >= document.body.clientWidth || s24 >= document.body.clientHeight ? f15.classList.add(i35) : f15.classList.remove(i35);
      }, h2), u19), this._set("container", l27), this._startMeasuring();
    }
    get focused() {
      const e25 = document.activeElement === this.surface;
      return document.hasFocus() && e25;
    }
    set popup(e25) {
      const t23 = this._get("popup");
      t23 && t23 !== e25 && t23.destroy(), this._set("popup", e25);
    }
    get size() {
      return [this.width, this.height];
    }
    blur() {
      this.surface && this.surface.blur();
    }
    focus() {
      this.surface && this.surface.focus();
    }
    pageToContainer(e25, t23, s24) {
      const i34 = this.position;
      return e25 -= i34 ? i34[0] : 0, t23 -= i34 ? i34[1] : 0, s24 ? (s24[0] = e25, s24[1] = t23) : s24 = [e25, t23], s24;
    }
    containerToPage(e25, t23, s24) {
      const i34 = this.position;
      return e25 += i34 ? i34[0] : 0, t23 += i34 ? i34[1] : 0, s24 ? (s24[0] = e25, s24[1] = t23) : s24 = [e25, t23], s24;
    }
    _handleUIChange(e25, t23) {
      t23 && (this.handles.remove("ui"), t23.destroy()), e25 && this._wireUI(e25), this._set("ui", e25);
    }
    _wireUI(e25) {
      this.handles.remove("ui"), e25 && (e25.view = this, this.handles.add([l3(() => this.root, (t23) => {
        e25.container = t23 ? v11(t23) : null;
      }, h2), l3(() => this.popup, (t23, s24) => {
        const i34 = "popup", o24 = "manual";
        s24 && e25.remove(s24, i34), t23 && (t23.view = e25.view, e25.add(t23, { key: i34, position: o24 }));
      }, h2)], "ui"));
    }
    _stopMeasuring() {
      this.handles.remove("measuring"), this._get("resizing") && this._set("resizing", false);
    }
    _startMeasuring() {
      const e25 = this._freqInfo;
      e25.freq = _7, e25.time = g13, this.handles.add([(() => {
        const t23 = () => {
          e25.freq = _7, e25.time = g13;
        };
        return window.addEventListener("resize", t23), { remove() {
          window.removeEventListener("resize", t23);
        } };
      })(), A2({ prepare: (e26) => {
        const t23 = this._measure(), s24 = this._freqInfo;
        if (s24.time += e26.deltaTime, t23 && (s24.freq = _7, this._get("resizing") || this._set("resizing", true)), s24.time < s24.freq)
          return;
        s24.time = 0;
        const i34 = this._position();
        s24.freq = i34 || t23 ? _7 : Math.min(g13, s24.freq * C6), !t23 && s24.freq >= w14 && this._get("resizing") && this._set("resizing", false);
      } })], "measuring"), this._measure(), this._position();
    }
    _measure() {
      const e25 = this.container, t23 = e25 ? e25.clientWidth : 0, s24 = e25 ? e25.clientHeight : 0;
      if (0 === t23 || 0 === s24)
        return this.suspended || this._set("suspended", true), false;
      const i34 = this.width, o24 = this.height;
      return t23 === i34 && s24 === o24 ? (this.suspended && this._set("suspended", false), false) : (this._set("width", t23), this._set("height", s24), this.suspended && this._set("suspended", false), this.emit("resize", { oldWidth: i34, oldHeight: o24, width: t23, height: s24 }), true);
    }
    _position() {
      const e25 = this.container, t23 = this.position, s24 = e25 && f11(e25);
      return !!s24 && ((!t23 || s24[0] !== t23[0] || s24[1] !== t23[1]) && (this._set("position", [s24[0], s24[1]]), true));
    }
    forceDOMReadyCycle() {
    }
  };
  return e2([y()], m25.prototype, "container", null), e2([y({ readOnly: true })], m25.prototype, "focused", null), e2([y({ readOnly: true })], m25.prototype, "height", void 0), e2([y({ type: U6 })], m25.prototype, "popup", null), e2([y({ type: c9 })], m25.prototype, "overlay", void 0), e2([y({ readOnly: true })], m25.prototype, "position", void 0), e2([y({ readOnly: true })], m25.prototype, "resizing", void 0), e2([y({ readOnly: true })], m25.prototype, "root", void 0), e2([y({ value: null, readOnly: true })], m25.prototype, "size", null), e2([y({ readOnly: true })], m25.prototype, "surface", void 0), e2([y({ readOnly: true })], m25.prototype, "suspended", void 0), e2([y()], m25.prototype, "ui", void 0), e2([y({ readOnly: true })], m25.prototype, "userContent", void 0), e2([y({ readOnly: true })], m25.prototype, "width", void 0), e2([y()], m25.prototype, "widthBreakpoint", void 0), m25 = e2([n4("esri.views.DOMContainer")], m25), m25;
};

// node_modules/@arcgis/core/views/PopupView.js
var a13 = (a32) => {
  let p34 = class extends a32 {
    async fetchPopupFeatures(e25, r23) {
      await this.when();
      const { location: i33, queryArea: a33, layerViewsAndGraphics: p35, clientOnlyGraphics: t23 } = await this._prepareFetchPopupFeatures(e25, r23), o24 = Promise.resolve(t23), c36 = this._queryLayerPopupFeatures(a33, p35, r23), n30 = c36.map((e26) => e26.promise);
      return { location: i33, clientOnlyGraphics: t23, allGraphicsPromise: L([o24, ...n30]).then((e26) => Array.from(new Set(e26.flat()))), promisesPerLayerView: c36 };
    }
    _queryLayerPopupFeatures(e25, s24, i33) {
      return s24.map(({ layerView: s25, graphics: a33 }) => {
        const p35 = { clientGraphics: a33, event: r(i33) ? i33.event : null, signal: r(i33) ? i33.signal : null, defaultPopupTemplateEnabled: !!r(i33) && !!i33.defaultPopupTemplateEnabled }, t23 = s25.fetchPopupFeatures(e25, p35);
        return { layerView: s25, promise: t23 };
      });
    }
    _isValidPopupGraphic(e25, s24) {
      return e25 && !!e25.getEffectivePopupTemplate(r(s24) && s24.defaultPopupTemplateEnabled);
    }
    async _prepareFetchPopupFeatures(e25, r23) {
      const { clientGraphics: s24, queryArea: i33, location: a33 } = await this._popupHitTestGraphics(e25, r23), p35 = this._getFetchPopupLayerViews(), { layerViewsAndGraphics: t23, clientOnlyGraphics: o24 } = this._graphicsPerFetchPopupLayerView(s24, p35);
      return { clientOnlyGraphics: o24, layerViewsAndGraphics: t23, queryArea: i33, location: a33 };
    }
    async _popupHitTestGraphics(e25, r23) {
      const { results: s24, mapPoint: i33 } = await this.popupHitTest(e25), a33 = s24.filter((e26) => "graphic" === e26.type && this._isValidPopupGraphic(e26.graphic, r23)), p35 = a33.length ? a33[0].mapPoint : null;
      return { clientGraphics: a33.map((e26) => e26.graphic), queryArea: i33, location: i33 || p35 };
    }
    _getFetchPopupLayerViews() {
      const e25 = [];
      return this.allLayerViews.forEach((r23) => {
        this._isValidPopupLayerView(r23) && e25.push(r23);
      }), r(this.graphicsView) && this._isValidPopupLayerView(this.graphicsView) && e25.push(this.graphicsView), e25.reverse();
    }
    _isValidPopupLayerView(e25) {
      return r(e25) && (!("layer" in e25) || !e25.suspended) && "fetchPopupFeatures" in e25;
    }
    _graphicsPerFetchPopupLayerView(e25, r23) {
      const s24 = [], i33 = /* @__PURE__ */ new Map(), a33 = r23.map((e26) => {
        const r24 = [];
        return "layer" in e26 ? i33.set(e26.layer, r24) : i33.set(e26.graphics, r24), { layerView: e26, graphics: r24 };
      });
      for (const p35 of e25) {
        const e26 = i33.get(p35.layer) || i33.get(p35.sourceLayer) || null;
        e26 ? e26.push(p35) : s24.push(p35);
      }
      return { layerViewsAndGraphics: a33, clientOnlyGraphics: s24 };
    }
  };
  return p34 = e2([n4("esri.views.PopupView")], p34), p34;
};

// node_modules/@arcgis/core/support/AnalysesCollection.js
var i18 = class extends l7 {
  constructor(e25) {
    super(e25), this.handles.add(this.on("before-add", (e26) => {
      t(e26.item) || e26.item.parent === this.owner && (s2.getLogger(this.declaredClass).warn("Analysis inside the collection must be unique. Not adding this element again."), e26.preventDefault());
    }));
  }
  _own(e25) {
    e25.parent = this.owner;
  }
  _release(e25) {
    e25.parent = null;
  }
};
i18 = e2([n4("esri.support.AnalysesCollection")], i18);

// node_modules/@arcgis/core/views/BasemapView.js
var p15 = class extends m {
  constructor(e25) {
    super(e25), this.view = null, this.baseLayerViews = new j3(), this.referenceLayerViews = new j3(), this._loadingHandle = l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    }, (e26) => {
      e26 && e26.load().catch(() => {
      });
    }, h2);
  }
  destroy() {
    this._set("view", null), this._loadingHandle && (this._loadingHandle.remove(), this._loadingHandle = null);
  }
  get suspended() {
    return !this.view || this.view.suspended;
  }
  get updating() {
    var _a, _b;
    if (this.view && this.view.suspended)
      return false;
    const e25 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.basemap;
    return !!e25 && (!!e25.loaded && (this.baseLayerViews.some((e26) => e26.updating) || this.referenceLayerViews.some((e26) => e26.updating)));
  }
};
e2([y({ constructOnly: true })], p15.prototype, "view", void 0), e2([y({ readOnly: true })], p15.prototype, "baseLayerViews", void 0), e2([y({ readOnly: true })], p15.prototype, "referenceLayerViews", void 0), e2([y({ readOnly: true })], p15.prototype, "suspended", null), e2([y({ type: Boolean, readOnly: true })], p15.prototype, "updating", null), p15 = e2([n4("esri.views.BasemapView")], p15);

// node_modules/@arcgis/core/views/LayerViewManager.js
var v12 = class {
  constructor(e25, r23, i33) {
    this.layer = e25, this.view = r23, this.layerViewImporter = i33, this._controller = new AbortController(), this._deferred = A(), this._started = false, this.done = false, v(this._controller.signal, () => {
      const r24 = new s3("cancelled:layerview-create", "layerview creation cancelled", { layer: e25 });
      this._deferred.reject(r24);
    });
  }
  get promise() {
    return this._deferred.promise;
  }
  destroy() {
    this._controller.abort();
    const { layerView: e25 } = this;
    if (!e25)
      return;
    const { layer: r23, view: t23 } = this;
    r23.emit("layerview-destroy", { view: t23, layerView: e25 }), t23.emit("layerview-destroy", { layer: r23, layerView: e25 }), this.done = true, this.layer = null, this.layerView = null, this.view = null, this.layerViewImporter = null;
  }
  async start() {
    var _a, _b;
    if (this._started)
      return;
    this._started = true;
    const { _controller: { signal: e25 }, layer: r23, view: i33 } = this;
    this._map = i33.map;
    try {
      let s24, o24;
      if (await r23.load({ signal: e25 }), "prefetchResources" in r23 && await r23.prefetchResources({ signal: e25 }), r23.createLayerView)
        s24 = await r23.createLayerView(i33, { signal: e25 });
      else {
        if (!this.layerViewImporter.hasLayerViewModule(r23))
          throw new s3("layer:view-not-supported", "No layerview implementation was found");
        const a32 = await this.layerViewImporter.importLayerView(r23);
        f(e25), s24 = "default" in a32 ? new a32.default({ layer: r23, view: i33 }) : new a32({ layer: r23, view: i33 });
      }
      const n30 = () => {
        o24 = h(o24), s24.destroyed || s24.destroy(), s24.layer = null, s24.parent = null, s24.view = null, this.done = true;
      };
      o24 = v(e25, n30), f(e25);
      try {
        await s24.when();
      } catch (a32) {
        throw n30(), a32;
      }
      const y15 = (_b = (_a = this._map) == null ? void 0 : _a.allLayers) == null ? void 0 : _b.includes(r23);
      if (!y15)
        return n30(), void this._deferred.reject(new s3("view:no-layerview-for-layer", "The layer has been removed from the map", { layer: r23 }));
      this.layerView = s24, r23.emit("layerview-create", { view: i33, layerView: s24 }), i33.emit("layerview-create", { layer: r23, layerView: s24 }), this.done = true, this._deferred.resolve(s24);
    } catch (a32) {
      r23.emit("layerview-create-error", { view: i33, error: a32 }), i33.emit("layerview-create-error", { layer: r23, error: a32 }), this.done = true, this._deferred.reject(new s3("layerview:create-error", "layerview creation failed", { layer: r23, error: a32 }));
    }
  }
};
var V3 = class extends m {
  constructor(e25) {
    super(e25), this._layerLayerViewInfoMap = /* @__PURE__ */ new Map(), this._watchUpdatingTracking = new c7(), this.supportsGround = true, this._preloadLayerViewModules = () => {
      var _a;
      const e26 = (_a = this.view.map) == null ? void 0 : _a.allLayers;
      if (e26)
        for (const r23 of e26)
          this.layerViewImporter.hasLayerViewModule(r23) && this.layerViewImporter.importLayerView(r23);
    }, this._reschedule = () => (t(this._workPromise) && (this._workPromise = A(), this._workPromise.promise.catch(() => {
    })), this.removeHandles("reschedule"), this.addHandles(v2(this._doWork), "reschedule"), this._workPromise.promise), this._doWork = () => {
      var _a, _b, _c;
      const e26 = this.view.map;
      if (this._map !== e26 && (this.clear(), this._map = e26), t(this._workPromise))
        return void this.notifyChange("updating");
      this.removeHandles("reschedule"), this.removeHandles("collection-change");
      const r23 = [], t23 = (e27) => {
        if (!t(e27))
          for (const i34 of e27)
            i34 && (r23.push(i34), this._createLayerView(i34), "layers" in i34 && i34.layers && t23(i34.layers));
      };
      for (const s24 of this._rootCollectionNames)
        t23(this.get(s24));
      this._refreshCollections();
      for (const [s24, o24] of this._layerLayerViewInfoMap)
        r23.includes(s24) || (this._layerLayerViewInfoMap.delete(o24.layer), o24.destroy());
      const i33 = r23.filter((e27) => "group" === e27.type).map((e27) => e27.layers), a32 = [(_a = e26 == null ? void 0 : e26.ground) == null ? void 0 : _a.layers, (_b = e26 == null ? void 0 : e26.basemap) == null ? void 0 : _b.baseLayers, (_c = e26 == null ? void 0 : e26.basemap) == null ? void 0 : _c.referenceLayers, e26 == null ? void 0 : e26.layers, ...i33].filter((e27) => !!e27);
      this.addHandles(a32.map((e27) => this._watchUpdatingTracking.addOnCollectionChange(() => e27, this._reschedule)), "collection-change"), this._workPromise.resolve(), this._workPromise = null;
    };
  }
  initialize() {
    this.own([a3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.allLayers;
    }, "change", this._preloadLayerViewModules, { onListenerAdd: this._preloadLayerViewModules }), l3(() => {
      const e25 = this.view, r23 = e25 == null ? void 0 : e25.map;
      return [r23 == null ? void 0 : r23.basemap, r23 == null ? void 0 : r23.ground, r23 == null ? void 0 : r23.layers, e25 == null ? void 0 : e25.ready];
    }, () => this._reschedule(), w3)]), this._preloadLayerViewModules(), this._reschedule();
  }
  destroy() {
    this.clear(), this._watchUpdatingTracking.destroy(), this._map = null, r(this._workPromise) && (this._workPromise.reject(a2()), this._workPromise = null);
  }
  get _layersToLayerViews() {
    const e25 = [["view.map.basemap.baseLayers", "view.basemapView.baseLayerViews"], ["view.map.layers", "view.layerViews"], ["view.map.basemap.referenceLayers", "view.basemapView.referenceLayerViews"]];
    return this.supportsGround && e25.push(["view.map.ground.layers", "view.groundView.layerViews"]), new Map(e25);
  }
  get _rootCollectionNames() {
    return Array.from(this._layersToLayerViews.keys());
  }
  get updating() {
    return r(this._workPromise) || this._watchUpdatingTracking.updating || n2(this._layerLayerViewInfoMap, (e25) => !e25.done);
  }
  get updatingRemaining() {
    let e25 = 0;
    for (const r23 of this._layerLayerViewInfoMap.values())
      r23.done || ++e25;
    return e25;
  }
  clear() {
    if (!this.destroyed) {
      for (const e25 of this._layerLayerViewInfoMap.values())
        e25.destroy();
      this._layerLayerViewInfoMap.clear(), this._refreshCollections();
    }
  }
  async whenLayerView(e25) {
    if (await this._reschedule(), !this._layerLayerViewInfoMap.has(e25))
      throw new s3("view:no-layerview-for-layer", "No layerview has been found for the layer", { layer: e25 });
    return this._layerLayerViewInfoMap.get(e25).promise;
  }
  _refreshCollections() {
    for (const [e25, r23] of this._layersToLayerViews)
      this._populateLayerViewsOwners(this.get(e25), this.get(r23), this.view);
    this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
  _populateLayerViewsOwners(e25, r23, t23) {
    if (!e25 || !r23)
      return void (r23 && r23.removeAll());
    let i33 = 0;
    for (const a32 of e25) {
      const e26 = this._layerLayerViewInfoMap.get(a32);
      if (!e26 || !e26.layerView)
        continue;
      const s24 = e26.layerView;
      s24.layer = a32, s24.parent = t23, r23.getItemAt(i33) !== s24 && r23.splice(i33, 0, s24), a32.layers && this._populateLayerViewsOwners(a32.layers, s24.layerViews, s24), i33 += 1;
    }
    i33 < r23.length && r23.splice(i33, r23.length);
  }
  _createLayerView(e25) {
    if (this._layerLayerViewInfoMap.has(e25))
      return this.view.ready && this._layerLayerViewInfoMap.get(e25).start(), this.notifyChange("updating"), void this.notifyChange("updatingRemaining");
    e25.load().catch(() => {
    }), this.layerViewImporter.hasLayerViewModule(e25) && this.layerViewImporter.importLayerView(e25);
    const r23 = new v12(e25, this.view, this.layerViewImporter);
    r23.promise.then(() => this._refreshCollections(), (r24) => {
      var _a, _b;
      r24 && (j(r24) || "cancelled:layerview-create" === r24.name) || s2.getLogger(this.declaredClass).error(`Failed to create layerview for layer title:'${(_a = e25.title) != null ? _a : "no title"}', id:'${(_b = e25.id) != null ? _b : "no id"}' of type '${e25.type}'.`, { layer: e25, error: r24 }), this._refreshCollections();
    }), this._layerLayerViewInfoMap.set(e25, r23), this.view.ready && r23.start(), this.notifyChange("updating"), this.notifyChange("updatingRemaining");
  }
};
e2([y()], V3.prototype, "_workPromise", void 0), e2([y({ readOnly: true })], V3.prototype, "_watchUpdatingTracking", void 0), e2([y({ readOnly: true })], V3.prototype, "_layersToLayerViews", null), e2([y({ readOnly: true })], V3.prototype, "_rootCollectionNames", null), e2([y()], V3.prototype, "layerViewImporter", void 0), e2([y()], V3.prototype, "supportsGround", void 0), e2([y({ readOnly: true })], V3.prototype, "updating", null), e2([y({ readOnly: true })], V3.prototype, "updatingRemaining", null), e2([y({ constructOnly: true })], V3.prototype, "view", void 0), V3 = e2([n4("esri.views.LayerViewManager")], V3);
var L6 = V3;

// node_modules/@arcgis/core/views/Magnifier.js
var i19 = class extends m {
  constructor(o24) {
    super(o24), this.factor = 1.5, this.offset = c2(0, 0), this.position = null, this.size = 120, this.maskUrl = null, this.maskEnabled = true, this.overlayUrl = null, this.overlayEnabled = true, this.visible = true;
  }
  get version() {
    return this.commitProperty("factor"), this.commitProperty("offset"), this.commitProperty("position"), this.commitProperty("visible"), this.commitProperty("size"), this.commitProperty("maskUrl"), this.commitProperty("maskEnabled"), this.commitProperty("overlayUrl"), this.commitProperty("overlayEnabled"), (this._get("version") || 0) + 1;
  }
};
e2([y({ type: Number })], i19.prototype, "factor", void 0), e2([y({ nonNullable: true })], i19.prototype, "offset", void 0), e2([y()], i19.prototype, "position", void 0), e2([y({ type: Number, range: { min: 0 } })], i19.prototype, "size", void 0), e2([y()], i19.prototype, "maskUrl", void 0), e2([y()], i19.prototype, "maskEnabled", void 0), e2([y()], i19.prototype, "overlayUrl", void 0), e2([y()], i19.prototype, "overlayEnabled", void 0), e2([y({ readOnly: true })], i19.prototype, "version", null), e2([y({ type: Boolean })], i19.prototype, "visible", void 0), i19 = e2([n4("esri.views.Magnifier")], i19);
var p16 = i19;

// node_modules/@arcgis/core/views/3d/support/TextureCollection.js
var n18 = class extends m {
  constructor(e25, t23) {
    var _a;
    super({}), this._stage = e25, this._textureRequests = /* @__PURE__ */ new Map(), this._frameTask = (_a = t23 == null ? void 0 : t23.registerTask(I2.TEXTURE_UNLOAD)) != null ? _a : y2;
  }
  normalizeCtorArgs() {
    return {};
  }
  destroy() {
    super.destroy(), this._frameTask.remove(), this._textureRequests.forEach((e25) => this._releaseTextureRequest(e25)), this._textureRequests.clear();
  }
  get updating() {
    return this._frameTask.updating;
  }
  fromData(e25, t23, r23) {
    const s24 = this.makeUid(e25);
    let o24 = this._textureRequests.get(s24);
    return o24 || (o24 = { referenceCount: 0, texture: t23(), textureAsync: null, abortController: null, onRemove: r23 }, this._stage && (this._stage.add(o24.texture), this._stage.loadImmediate(o24.texture)), this._textureRequests.set(s24, o24)), o24.referenceCount++, { uid: s24, texture: o24.texture, release: () => this._release(s24) };
  }
  _release(e25) {
    const t23 = this._textureRequests.get(e25);
    t23 ? (t23.referenceCount < 1 && console.warn("TextureCollection: reference count is < 1 for " + e25), t23.referenceCount--, t23.referenceCount < 1 && this._frameTask.schedule(() => this._releaseNow(e25))) : console.warn(`TextureCollection: texture doesn't exist: '${e25}'`);
  }
  get test() {
    return { textureRequests: this._textureRequests };
  }
  _releaseNow(e25) {
    if (!this._textureRequests)
      return;
    const t23 = this._textureRequests.get(e25);
    !t23 || t23.referenceCount > 0 || (this._releaseTextureRequest(t23), this._textureRequests.delete(e25));
  }
  _releaseTextureRequest(e25) {
    var _a;
    e25.onRemove && e25.onRemove(), e25.texture ? (_a = this._stage) == null ? void 0 : _a.remove(e25.texture) : e25.abortController && (e25.abortController.abort(), e25.abortController = null);
  }
  makeUid(e25, t23 = null) {
    return r(t23) ? `${e25}.${t23}px` : e25;
  }
};
e2([y()], n18.prototype, "_frameTask", void 0), e2([y()], n18.prototype, "updating", null), n18 = e2([n4("esri.views.3d.support.TextureCollection")], n18);

// node_modules/@arcgis/core/views/input/ViewEvents.js
var r15 = ["click", "double-click", "immediate-click", "immediate-double-click", "hold", "drag", "key-down", "key-up", "pointer-down", "pointer-move", "pointer-up", "pointer-drag", "mouse-wheel", "pointer-enter", "pointer-leave", "gamepad", "focus", "blur"];
var i20 = {};
function o14(t23) {
  return !!i20[t23];
}
function s14(t23) {
  for (const e25 of t23)
    if (!o14(e25))
      return false;
  return true;
}
r15.forEach((t23) => {
  i20[t23] = true;
});
var p17 = class {
  constructor(t23) {
    this._handlers = /* @__PURE__ */ new Map(), this._counter = 0, this._handlerCounts = /* @__PURE__ */ new Map(), this.view = t23, this.inputManager = null;
  }
  connect(t23) {
    t23 && this.disconnect(), this.inputManager = t23, this._handlers.forEach(({ handler: t24, priority: e25 }, a32) => this.inputManager.installHandlers(a32, [t24], e25));
  }
  disconnect() {
    this.inputManager && this._handlers.forEach((t23, e25) => this.inputManager.uninstallHandlers(e25)), this.inputManager = null;
  }
  destroy() {
    this.disconnect(), this._handlers.clear(), this.view = null;
  }
  on(t23, e25, a32, r23) {
    const i33 = Array.isArray(t23) ? t23 : t23.split(",");
    if (!s14(i33))
      return i33.some(o14) && console.error("Error: registering input events and other events on the view at the same time is not supported."), null;
    let p34, l27;
    Array.isArray(e25) ? l27 = e25 : (p34 = e25, l27 = []), "function" == typeof a32 ? p34 = a32 : r23 = a32, r23 = null != r23 ? r23 : P.DEFAULT;
    const u19 = this._createUniqueGroupName(), m25 = new c20(this.view, i33, l27, p34);
    this._handlers.set(u19, { handler: m25, priority: r23 });
    for (const n30 of i33) {
      const t24 = this._handlerCounts.get(n30) || 0;
      this._handlerCounts.set(n30, t24 + 1);
    }
    return this.inputManager && this.inputManager.installHandlers(u19, [m25], r23), { remove: () => this._removeHandler(u19, i33) };
  }
  hasHandler(t23) {
    return !!this._handlerCounts.get(t23);
  }
  _removeHandler(t23, e25) {
    if (this._handlers.has(t23)) {
      this._handlers.delete(t23);
      for (const t24 of e25) {
        const e26 = this._handlerCounts.get(t24);
        void 0 === e26 ? console.error("Trying to remove handler for event that has no handlers registered: ", t24) : 1 === e26 ? this._handlerCounts.delete(t24) : this._handlerCounts.set(t24, e26 - 1);
      }
    }
    this.inputManager && this.inputManager.uninstallHandlers(t23);
  }
  _createUniqueGroupName() {
    return this._counter += 1, `viewEvents_${this._counter}`;
  }
};
var c20 = class extends i13 {
  constructor(t23, e25, a32, n30) {
    super(true), this.view = t23;
    for (const r23 of e25)
      switch (r23) {
        case "click":
          this.registerIncoming("click", a32, (t24) => n30(this._wrapClick(t24)));
          break;
        case "double-click":
          this.registerIncoming("double-click", a32, (t24) => n30(this._wrapDoubleClick(t24)));
          break;
        case "immediate-click":
          this.registerIncoming("immediate-click", a32, (t24) => n30(this._wrapImmediateClick(t24)));
          break;
        case "immediate-double-click":
          this.registerIncoming("immediate-double-click", a32, (t24) => n30(this._wrapImmediateDoubleClick(t24)));
          break;
        case "hold":
          this.registerIncoming("hold", a32, (t24) => n30(this._wrapHold(t24)));
          break;
        case "drag":
          this.registerIncoming("drag", a32, (t24) => {
            const e26 = this._wrapDrag(t24);
            e26 && n30(e26);
          });
          break;
        case "key-down":
          this.registerIncoming("key-down", a32, (t24) => n30(this._wrapKeyDown(t24)));
          break;
        case "key-up":
          this.registerIncoming("key-up", a32, (t24) => n30(this._wrapKeyUp(t24)));
          break;
        case "pointer-down":
          this.registerIncoming("pointer-down", a32, (t24) => n30(this._wrapPointer(t24, "pointer-down")));
          break;
        case "pointer-move":
          this.registerIncoming("pointer-move", a32, (t24) => n30(this._wrapPointer(t24, "pointer-move")));
          break;
        case "pointer-up":
          this.registerIncoming("pointer-up", a32, (t24) => n30(this._wrapPointer(t24, "pointer-up")));
          break;
        case "pointer-drag":
          this.registerIncoming("pointer-drag", a32, (t24) => n30(this._wrapPointerDrag(t24)));
          break;
        case "mouse-wheel":
          this.registerIncoming("mouse-wheel", a32, (t24) => n30(this._wrapMouseWheel(t24)));
          break;
        case "pointer-enter":
          this.registerIncoming("pointer-enter", a32, (t24) => n30(this._wrapPointer(t24, "pointer-enter")));
          break;
        case "pointer-leave":
          this.registerIncoming("pointer-leave", a32, (t24) => n30(this._wrapPointer(t24, "pointer-leave")));
          break;
        case "gamepad":
          this.registerIncoming("gamepad", a32, (t24) => {
            n30(this._wrapGamepad(t24));
          });
          break;
        case "focus":
          this.registerIncoming("focus", a32, (t24) => {
            n30(this._wrapFocus(t24));
          });
          break;
        case "blur":
          this.registerIncoming("blur", a32, (t24) => {
            n30(this._wrapBlur(t24));
          });
      }
  }
  _wrapFocus(t23) {
    return { type: "focus", timestamp: t23.timestamp, native: t23.data.native, cancelable: t23.cancelable, stopPropagation: () => t23.stopPropagation(), async: (e25) => t23.async(e25), preventDefault: () => t23.preventDefault() };
  }
  _wrapBlur(t23) {
    return { type: "blur", timestamp: t23.timestamp, native: t23.data.native, cancelable: t23.cancelable, stopPropagation: () => t23.stopPropagation(), async: (e25) => t23.async(e25), preventDefault: () => t23.preventDefault() };
  }
  _wrapClick(t23) {
    const { pointerType: a32, button: n30, buttons: r23, x: i33, y: o24, native: s24, eventId: p34 } = t23.data, { cancelable: c36, timestamp: l27 } = t23;
    return { type: "click", pointerType: a32, button: n30, buttons: r23, x: i33, y: o24, native: s24, timestamp: l27, screenPoint: c2(i33, o24), mapPoint: this._getMapPoint(i33, o24), eventId: p34, cancelable: c36, stopPropagation: () => t23.stopPropagation(), async: (e25) => t23.async(e25), preventDefault: () => t23.preventDefault() };
  }
  _wrapDoubleClick(t23) {
    const { pointerType: e25, button: a32, buttons: n30, x: r23, y: i33, native: o24, eventId: s24 } = t23.data, { cancelable: p34, timestamp: c36 } = t23;
    return { type: "double-click", pointerType: e25, button: a32, buttons: n30, x: r23, y: i33, native: o24, timestamp: c36, mapPoint: this._getMapPoint(r23, i33), eventId: s24, cancelable: p34, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _wrapImmediateClick(t23) {
    const { pointerType: e25, button: a32, buttons: n30, x: r23, y: i33, native: o24, eventId: s24 } = t23.data, p34 = o24.pointerId, { cancelable: c36, timestamp: l27 } = t23;
    return { type: "immediate-click", pointerId: p34, pointerType: e25, button: a32, buttons: n30, x: r23, y: i33, native: o24, timestamp: l27, mapPoint: this._getMapPoint(r23, i33), eventId: s24, cancelable: c36, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _wrapImmediateDoubleClick(t23) {
    const { pointerType: e25, button: a32, buttons: n30, x: r23, y: i33, native: o24, eventId: s24 } = t23.data, p34 = o24.pointerId, { cancelable: c36, timestamp: l27 } = t23;
    return { type: "immediate-double-click", pointerId: p34, pointerType: e25, button: a32, buttons: n30, x: r23, y: i33, native: o24, timestamp: l27, mapPoint: this._getMapPoint(r23, i33), eventId: s24, cancelable: c36, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _wrapHold(t23) {
    const { pointerType: e25, button: a32, buttons: n30, x: r23, y: i33, native: o24 } = t23.data, { cancelable: s24, timestamp: p34 } = t23;
    return { type: "hold", pointerType: e25, button: a32, buttons: n30, x: r23, y: i33, native: o24, timestamp: p34, mapPoint: this._getMapPoint(r23, i33), cancelable: s24, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _getMapPoint(t23, a32) {
    return this.view.toMap(c2(t23, a32), { exclude: [] });
  }
  _wrapDrag(e25) {
    const a32 = e25.data, { x: n30, y: r23 } = a32.center, { action: i33, pointerType: o24, button: s24 } = a32;
    if ("start" === i33 && (this._latestDragStart = a32), !this._latestDragStart)
      return;
    const p34 = a32.pointer.native, c36 = a32.buttons, { cancelable: l27, timestamp: u19 } = e25, m25 = { x: this._latestDragStart.center.x, y: this._latestDragStart.center.y };
    return "end" === i33 && (this._latestDragStart = void 0), { type: "drag", action: i33, x: n30, y: r23, origin: m25, pointerType: o24, button: s24, buttons: c36, radius: a32.radius, angle: b(a32.angle), native: p34, timestamp: u19, cancelable: l27, stopPropagation: () => e25.stopPropagation(), async: (t23) => e25.async(t23), preventDefault: () => e25.preventDefault() };
  }
  _wrapKeyDown(t23) {
    const { key: e25, repeat: a32, native: n30 } = t23.data, { cancelable: r23, timestamp: i33 } = t23;
    return { type: "key-down", key: e25, repeat: a32, native: n30, timestamp: i33, cancelable: r23, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _wrapKeyUp(t23) {
    const { key: e25, native: a32 } = t23.data, { cancelable: n30, timestamp: r23 } = t23;
    return { type: "key-up", key: e25, native: a32, timestamp: r23, cancelable: n30, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _wrapPointer(t23, e25) {
    const { x: a32, y: n30, button: r23, buttons: i33, native: o24, eventId: s24 } = t23.data, p34 = o24.pointerId, c36 = o24.pointerType, { cancelable: l27, timestamp: u19 } = t23;
    return { type: e25, x: a32, y: n30, pointerId: p34, pointerType: c36, button: r23, buttons: i33, native: o24, timestamp: u19, eventId: s24, cancelable: l27, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _wrapPointerDrag(t23) {
    const { x: e25, y: a32, buttons: n30, native: r23, eventId: i33 } = t23.data.currentEvent, { button: o24 } = t23.data.startEvent, s24 = t23.data.startEvent.native.pointerId, p34 = t23.data.startEvent.native.pointerType, c36 = t23.data.action, l27 = { x: t23.data.startEvent.x, y: t23.data.startEvent.y }, { cancelable: u19, timestamp: m25 } = t23;
    return { type: "pointer-drag", x: e25, y: a32, pointerId: s24, pointerType: p34, button: o24, buttons: n30, action: c36, origin: l27, native: r23, timestamp: m25, eventId: i33, cancelable: u19, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _wrapMouseWheel(t23) {
    const { cancelable: e25, data: a32, timestamp: n30 } = t23, { x: r23, y: i33, deltaY: o24, native: s24 } = a32;
    return { type: "mouse-wheel", x: r23, y: i33, deltaY: o24, native: s24, timestamp: n30, cancelable: e25, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
  _wrapGamepad(t23) {
    const { action: e25, state: a32, device: n30 } = t23.data, { cancelable: r23, timestamp: i33 } = t23, { buttons: o24, axes: s24 } = a32;
    return { type: "gamepad", device: n30, timestamp: i33, action: e25, buttons: o24, axes: s24, cancelable: r23, stopPropagation: () => t23.stopPropagation(), async: (e26) => t23.async(e26), preventDefault: () => t23.preventDefault() };
  }
};

// node_modules/@arcgis/core/views/interactive/interactiveToolUtils.js
function o15(t23) {
  return [t23.on("before-add", (o24) => {
    const i33 = o24.item;
    if (null == i33 || t23.includes(i33))
      return s2.getLogger("esri.views.interactive.interactiveToolUtils").warn("Tool is either already in the list of tools or tool is `null`. Not adding tool."), void o24.preventDefault();
    i33.onAdd();
  }), t23.on("after-remove", (e25) => {
    const t24 = e25.item;
    t24.active && (t24.view.activeTool = null), t24.destroy();
  })];
}
function i21(e25) {
  return e25.visible && e25.getEditableFlag(o6.USER) && e25.getEditableFlag(o6.MANAGER);
}

// node_modules/@arcgis/core/views/interactive/ToolViewManagerManipulatorState.js
var c21 = class {
  constructor() {
    this._pointerLocations = /* @__PURE__ */ new Map(), this._hoveredManipulators = /* @__PURE__ */ new Map(), this._grabbedManipulators = /* @__PURE__ */ new Map(), this._draggedManipulators = /* @__PURE__ */ new Map(), this._stopDrag = false, this._revertToNullActiveTool = false, this._cursor = null;
  }
  get cursor() {
    return this._cursor;
  }
  handleInputEvent(t23, e25) {
    const s24 = () => t23.stopPropagation();
    switch (t23.type) {
      case "pointer-move":
        u11(t23.pointerType) && this._pointerLocations.set(t23.pointerId, { x: t23.x, y: t23.y, pointerType: t23.pointerType });
        break;
      case "drag":
        this._grabbedManipulators.size > 0 && (this._stopDrag = true), this._stopDrag && (s24(), "end" === t23.action && (this._stopDrag = false));
        break;
      case "pointer-down": {
        if (!h13(t23))
          break;
        const o24 = n12(t23), a32 = this._intersect(o24, t23.pointerType, e25.forEachTool);
        if (t(a32))
          break;
        const n30 = a32.manipulator, p34 = a32.tool;
        !(r(n30) && r(p34) && n30.interactive) || n30.grabbable && n30.grabbableForEvent(t23) || !n30.grabbing || n30.dragging || this._ungrabManipulatorBeforeDragging(n30, t23, e25), r(n30) && r(p34) && n30.interactive && n30.grabbable && n30.grabbableForEvent(t23) && !n30.grabbing && (this._grabbedManipulators.set(t23.pointerId, { manipulator: n30, tool: p34, start: o24, pointerType: t23.pointerType }), 1 === this._grabbedManipulators.size && t(e25.activeTool) && (this._revertToNullActiveTool = true, e25.setActiveTool(a32.tool)), n30.grabbing = true, n30.events.emit("grab-changed", { action: "start", pointerType: t23.pointerType, screenPoint: o24 }), s24());
        break;
      }
      case "pointer-up":
        this._draggedManipulators.has(t23.pointerId) || this._handlePointerEnd(t23, e25);
        break;
      case "pointer-drag": {
        if (!h13(t23))
          break;
        const r23 = this._grabbedManipulators.get(t23.pointerId), p34 = o(r23, ({ manipulator: t24 }) => t24), c36 = o(r23, ({ tool: t24 }) => t24);
        if (t(p34) || t(c36))
          break;
        const u19 = n12(t23);
        u19.x = a(u19.x, 0, e25.view.width), u19.y = a(u19.y, 0, e25.view.height);
        const d16 = e(r23).start, g18 = this._draggedManipulators.get(t23.pointerId);
        switch (t23.action) {
          case "start":
          case "update":
            "update" !== t23.action && 1 !== this._grabbedManipulators.size || (p34.dragging = true, g18 ? p34.events.emit("drag", { action: "update", start: d16, screenPoint: u19 }) : p34.events.emit("drag", { action: "start", start: d16, screenPoint: u19, pointerType: t23.pointerType }), this._draggedManipulators.set(t23.pointerId, { tool: c36, manipulator: p34, start: d16 }));
            break;
          case "end":
            p34.dragging = false, g18 && p34.events.emit("drag", { action: "end", start: d16, screenPoint: u19 }), this._draggedManipulators.delete(t23.pointerId), this._handlePointerEnd(t23, e25);
        }
        s24();
        break;
      }
      case "immediate-click": {
        const o24 = n12(t23), a32 = this._intersect(o24, t23.pointerType, e25.forEachTool);
        if (d11(t23) || e25.forEachTool((t24) => {
          if ((!r(a32) || a32.tool !== t24 || t24.automaticManipulatorSelection) && t24.manipulators) {
            let e26 = false;
            t24.manipulators.forEach(({ manipulator: t25 }) => {
              t25.selected && (t25.selected = false, e26 = true);
            }), e26 && t24.onManipulatorSelectionChanged && t24.onManipulatorSelectionChanged();
          }
        }), t(a32))
          break;
        const { manipulator: n30, tool: p34 } = a32;
        if (!n30.interactive)
          break;
        n30.selectable && p34.automaticManipulatorSelection && (n30.selected = !n30.selected, p34.onManipulatorSelectionChanged && p34.onManipulatorSelectionChanged());
        const c36 = t23.native.shiftKey;
        n30.events.emit("immediate-click", { screenPoint: o24, button: t23.button, pointerType: t23.pointerType, shiftKey: c36, stopPropagation: s24 });
        break;
      }
      case "click": {
        const o24 = n12(t23), a32 = this._intersect(o24, t23.pointerType, e25.forEachTool), n30 = r(a32) ? a32.manipulator : null;
        if (t(n30) || !n30.interactive)
          break;
        const p34 = t23.native.shiftKey;
        n30.events.emit(t23.type, { screenPoint: o24, button: t23.button, pointerType: t23.pointerType, shiftKey: p34 }), s24();
        break;
      }
      case "double-click": {
        const o24 = n12(t23), a32 = this._intersect(o24, t23.pointerType, e25.forEachTool), n30 = r(a32) ? a32.manipulator : null;
        if (t(n30) || !n30.interactive)
          break;
        const p34 = t23.native.shiftKey;
        n30.events.emit("double-click", { screenPoint: o24, button: t23.button, pointerType: t23.pointerType, shiftKey: p34, stopPropagation: s24 });
        break;
      }
      case "immediate-double-click": {
        const o24 = n12(t23), a32 = this._intersect(o24, t23.pointerType, e25.forEachTool), n30 = r(a32) ? a32.manipulator : null;
        if (t(n30) || !n30.interactive)
          break;
        const p34 = t23.native.shiftKey;
        n30.events.emit("immediate-double-click", { screenPoint: o24, button: t23.button, pointerType: t23.pointerType, shiftKey: p34, stopPropagation: s24 });
        break;
      }
    }
    this._onFocusChange(e25.forEachTool);
  }
  _ungrabManipulatorBeforeDragging(t23, e25, o24) {
    t23.grabbing = false, t23.events.emit("grab-changed", { action: "end", pointerType: e25.pointerType, screenPoint: n12(e25) }), this._grabbedManipulators.forEach(({ manipulator: e26 }, o25) => {
      e26 === t23 && this._grabbedManipulators.delete(o25);
    }), this._afterManipulatorUngrab(o24.setActiveTool);
  }
  _handlePointerEnd(t23, e25) {
    const o24 = o(this._grabbedManipulators.get(t23.pointerId), ({ manipulator: t24 }) => t24);
    t(o24) || o24.grabbing && (o24.grabbing = false, o24.events.emit("grab-changed", { action: "end", pointerType: t23.pointerType, screenPoint: n12(t23) }), this._grabbedManipulators.delete(t23.pointerId), this._afterManipulatorUngrab(e25.setActiveTool));
  }
  _cursorFromMap(t23) {
    let o24 = null;
    return n2(t23, ({ manipulator: t24 }) => !(t(t24) || !t24.interactive) && (t24.grabbing && t24.grabCursor ? (o24 = t24.grabCursor, true) : !!t24.cursor && (o24 = t24.cursor, true))), o24;
  }
  _onFocusChange(t23) {
    this._updateCursor(), this._updateFocusedManipulatorTools(t23);
  }
  _updateCursor() {
    this._grabbedManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._grabbedManipulators) || "grabbing" : this._hoveredManipulators.size > 0 ? this._cursor = this._cursorFromMap(this._hoveredManipulators) || "pointer" : this._cursor = null;
  }
  _updateFocusedManipulatorTools(e25) {
    const o24 = /* @__PURE__ */ new Set(), i33 = /* @__PURE__ */ new Set();
    this._grabbedManipulators.forEach(({ tool: t23 }) => {
      o24.add(t23);
    }), this._hoveredManipulators.forEach(({ tool: t23 }) => {
      i33.add(t23);
    }), e25((e26) => {
      e26.hasGrabbedManipulators = o24.has(e26), e26.hasHoveredManipulators = i33.has(e26);
      const a32 = this._grabbedManipulators.values(), n30 = o2(a32, ({ tool: t23 }) => t23 === e26);
      e26.firstGrabbedManipulator = r(n30) ? n30.manipulator : null;
    });
  }
  clearPointers(t23, { forEachTool: e25, setActiveTool: o24 }, r23 = true, a32) {
    const n30 = (e26, o25) => e26 === t23 && (t(a32) || a32 === o25);
    this._grabbedManipulators.forEach(({ tool: t24, manipulator: e26, pointerType: o25 }, r24) => {
      n30(t24, e26) && (this._grabbedManipulators.delete(r24), e26.grabbing = false, e26.events.emit("grab-changed", { action: "end", screenPoint: null, pointerType: o25 }));
    }), this._draggedManipulators.forEach(({ tool: t24, manipulator: e26 }, o25) => {
      n30(t24, e26) && (this._draggedManipulators.delete(o25), e26.dragging = false, e26.events.emit("drag", { action: "cancel" }));
    }), r23 && this._hoveredManipulators.forEach(({ tool: t24, manipulator: e26 }, o25) => {
      n30(t24, e26) && (this._hoveredManipulators.delete(o25), e26.hovering = false);
    }), this._afterManipulatorUngrab(o24), this._onFocusChange(e25);
  }
  _intersect(t23, e25, o24) {
    let r23 = null;
    return o24((o25) => {
      if (null == o25.manipulators || !i21(o25))
        return false;
      const a32 = o25.manipulators.intersect(t23, e25);
      return !t(a32) && (r23 = { tool: o25, manipulator: a32 }, true);
    }), r23;
  }
  updateHoveredStateFromKnownPointers(t23) {
    this._pointerLocations.forEach((e25, o24) => {
      this._updateHoveredStateForPointerAtScreenPosition(c2(e25.x, e25.y), o24, e25.pointerType, t23);
    });
  }
  handleHoverEvent(t23, e25) {
    "pointer-up" !== t23.type && "immediate-click" !== t23.type && "pointer-move" !== t23.type || !u11(t23.pointerType) || this._updateHoveredStateForPointerAtScreenPosition(n12(t23), t23.pointerId, t23.pointerType, e25);
  }
  _updateHoveredStateForPointerAtScreenPosition(t23, e25, o24, i33) {
    let n30 = this._intersect(t23, o24, i33);
    const s24 = o(this._hoveredManipulators.get(e25), ({ manipulator: t24 }) => t24);
    r(n30) && !n30.manipulator.interactive && (n30 = null), r(n30) && s24 === n30.manipulator || (r(s24) && (s24.hovering = false), r(n30) ? (n30.manipulator.hovering = true, this._hoveredManipulators.set(e25, n30)) : this._hoveredManipulators.delete(e25), this._onFocusChange(i33));
  }
  _afterManipulatorUngrab(t23) {
    0 === this._grabbedManipulators.size && this._revertToNullActiveTool && (t23(null), this._revertToNullActiveTool = false);
  }
};
function u11(t23) {
  return "mouse" === t23;
}
function h13(t23) {
  return "mouse" !== t23.pointerType || 0 === t23.button;
}
function d11(t23) {
  return !!t23.native.shiftKey;
}

// node_modules/@arcgis/core/views/ToolViewManager.js
var g14 = "attached";
var E6 = "tools";
var w15 = class extends d {
  constructor(t23) {
    super(t23), this._manipulatorState = new c21(), this.tools = new j3(), this.cursor = null, this._forEachTool = (t24) => {
      for (const o24 of this.tools.items)
        if (t24(o24))
          return;
    };
  }
  initialize() {
    this.handles.add([this.view.on(r15, (t23) => {
      this._handleInputEvent(t23);
    }, P.TOOL), ...o15(this.tools), this.tools.on("before-add", ({ item: t23 }) => {
      this._updateToolEditableFlag(t23);
    }), this.tools.on("before-remove", ({ item: t23 }) => {
      this._manipulatorState.clearPointers(t23, this._manipulatorStateEventArgs), this._updateCursor();
    }), this.tools.on("change", () => {
      this._refreshToolWatchers();
    })]);
  }
  destroy() {
    this.detach(), this.handles.removeAll();
  }
  get _manipulatorStateEventArgs() {
    return { forEachTool: this._forEachTool, activeTool: this.activeTool, setActiveTool: (t23) => {
      this.activeTool = t23;
    }, view: this.view };
  }
  set activeTool(t23) {
    if (r(t23) && !this.view.ready)
      return void s2.getLogger(this.declaredClass).error("Cannot set active tool while view is not ready.");
    if (t23 === this.activeTool)
      return;
    const o24 = this.activeTool;
    this._set("activeTool", t23), r(o24) && o24.deactivate(), r(t23) && t23.activate(), this._removeIncompleteTools(t23);
    for (const e25 of this.tools) {
      this._updateToolEditableFlag(e25);
      const t24 = i21(e25);
      !t(this.activeTool) && t24 || this._manipulatorState.clearPointers(e25, this._manipulatorStateEventArgs, !t24);
    }
    this._updateCursor();
  }
  get updating() {
    var _a, _b;
    return this.updatingHandles.updating || this.tools.some((t23) => t23.updating) || ((_b = (_a = this.textures) == null ? void 0 : _a.updating) != null ? _b : false);
  }
  attach() {
    "3d" === this.view.type ? (this._set("textures", new n18(this.view._stage, this.view.resourceController.scheduler)), this.handles.add([l3(() => {
      const { state: t23 } = this.view;
      return "camera" in t23 && t23.camera;
    }, () => {
      this._forEachManipulator((t23) => {
        null != t23.onViewChange && t23.onViewChange();
      });
    }), this.view.elevationProvider.on("elevation-change", (t23) => {
      this._forEachManipulator((o24) => {
        null != o24.onElevationChange && o24.onElevationChange(t23);
      });
    }), n3(() => this._set("textures", s(this.textures)))], g14)) : this.handles.add(l3(() => this.view.extent, () => {
      this._forEachManipulator((t23) => {
        null != t23.onViewChange && t23.onViewChange();
      });
    }));
  }
  detach() {
    r(this.activeTool) && (this.activeTool = null), this.tools.removeAll(), this.handles.remove(g14);
  }
  _forEachManipulator(t23) {
    this._forEachTool((o24) => {
      o24.manipulators && o24.manipulators.forEach(({ manipulator: e25 }) => t23(e25, o24));
    });
  }
  _handleInputEvent(t23) {
    let o24 = false;
    const e25 = { ...t23, stopPropagation: () => {
      o24 = true, t23.stopPropagation();
    } };
    r(this.activeTool) ? this.activeTool.handleInputEvent && this.activeTool.handleInputEvent(e25) : this._forEachTool((t24) => {
      !o24 && t24.visible && t24.handleInputEvent(e25);
    }), !o24 && "key-down" === t23.type && "Escape" === t23.key && this.activeTool && (t23.stopPropagation(), this.activeTool = null), this._manipulatorState.handleInputEvent(e25, this._manipulatorStateEventArgs), !o24 && r(this.activeTool) && this.activeTool.handleInputEventAfter(e25), this._manipulatorState.handleHoverEvent(e25, this._forEachTool), this._updateCursor();
  }
  _refreshToolWatchers() {
    this.handles.remove(E6), this._forEachTool((t23) => {
      if (t23 instanceof m) {
        const o24 = l3(() => [t23.cursor, t23.visible, t23.editable], () => {
          i21(t23) || this._manipulatorState.clearPointers(t23, this._manipulatorStateEventArgs), this._updateCursor();
        });
        this.handles.add(o24, E6);
      }
      t23.manipulators && this.handles.add([t23.manipulators.on("after-remove", (o24) => {
        this._manipulatorState.clearPointers(t23, this._manipulatorStateEventArgs, true, o24.item.manipulator);
      }), t23.manipulators.on("change", () => {
        this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
      })], E6);
    }), this._manipulatorState.updateHoveredStateFromKnownPointers(this._forEachTool), this._updateCursor();
  }
  _updateToolEditableFlag(t23) {
    t23.setEditableFlag(o6.MANAGER, t(this.activeTool) || t23 === this.activeTool);
  }
  _updateCursor() {
    let t23 = this._manipulatorState.cursor;
    t(t23) && this._forEachTool((o24) => !(!r(o24.cursor) || !o24.visible) && (t23 = o24.cursor, true)), this._get("cursor") !== t23 && this._set("cursor", t23);
  }
  _removeIncompleteTools(t23) {
    this.tools.filter((o24) => (t(t23) || o24 !== t23) && !o24.created && o24.removeIncompleteOnCancel).forEach((t24) => {
      this.tools.remove(t24);
    });
  }
};
e2([y({ constructOnly: true, nonNullable: true })], w15.prototype, "view", void 0), e2([y({ readOnly: true, nonNullable: true })], w15.prototype, "textures", void 0), e2([y({ value: null })], w15.prototype, "activeTool", null), e2([y({ readOnly: true, type: j3 })], w15.prototype, "tools", void 0), e2([y({ readOnly: true })], w15.prototype, "cursor", void 0), e2([y({ readOnly: true })], w15.prototype, "updating", null), w15 = e2([n4("esri.views.ToolViewManager")], w15);
var y11 = w15;

// node_modules/@arcgis/core/views/input/gamepad/GamepadInputDevice.js
var n19 = class extends m {
  constructor(e25) {
    super(), this.nativeIndex = null, this._detectedDeviceType = "unknown", "standard" === e25.mapping ? this._detectedDeviceType = "standard" : o16.test(e25.id) ? this._detectedDeviceType = "spacemouse" : this._detectedDeviceType = "unknown", this.nativeIndex = e25.index;
  }
  get native() {
    const e25 = navigator.getGamepads ? navigator.getGamepads() : [];
    return null != this.nativeIndex && this.nativeIndex < e25.length ? e25[this.nativeIndex] : null;
  }
  get deviceType() {
    return this._detectedDeviceType;
  }
  get axisThreshold() {
    return i22[this.deviceType];
  }
};
e2([y({ nonNullable: true, readOnly: true })], n19.prototype, "nativeIndex", void 0), e2([y({ type: String, readOnly: true })], n19.prototype, "deviceType", null), e2([y({ type: Number, readOnly: true })], n19.prototype, "axisThreshold", null), n19 = e2([n4("esri.views.input.gamepad.GamepadInputDevice")], n19);
var o16 = new RegExp("^(3dconnexion|space(mouse|navigator|pilot|explorer))", "i");
var i22 = { standard: 0.15, spacemouse: 0.025, unknown: 0 };
var a14 = n19;

// node_modules/@arcgis/core/views/input/gamepad/GamepadSettings.js
var c22 = class extends m {
  constructor(...e25) {
    super(...e25), this.devices = new j3(), this.enabledFocusMode = "document";
  }
};
e2([y({ type: j3.ofType(a14), readOnly: true })], c22.prototype, "devices", void 0), e2([y({ type: ["document", "view", "none"] })], c22.prototype, "enabledFocusMode", void 0), c22 = e2([n4("esri.views.input.gamepad.GamepadSettings")], c22);
var i23 = c22;

// node_modules/@arcgis/core/views/input/Input.js
var p18 = class extends m {
  constructor() {
    super(...arguments), this.gamepad = new i23();
  }
};
e2([y({ readOnly: true })], p18.prototype, "gamepad", void 0), p18 = e2([n4("esri.views.input.Input")], p18);
var a15 = p18;

// node_modules/@arcgis/core/views/navigation/gamepad/GamepadSettings.js
var s15 = class extends m {
  constructor(o24) {
    super(o24), this.enabled = true, this.device = null, this.mode = "pan", this.tiltDirection = "forward-down", this.velocityFactor = 1;
  }
};
e2([y({ type: Boolean, nonNullable: true })], s15.prototype, "enabled", void 0), e2([y({ type: a14 })], s15.prototype, "device", void 0), e2([y({ type: ["pan", "zoom"], nonNullable: true })], s15.prototype, "mode", void 0), e2([y({ type: ["forward-down", "forward-up"], nonNullable: true })], s15.prototype, "tiltDirection", void 0), e2([y({ type: Number, nonNullable: true })], s15.prototype, "velocityFactor", void 0), s15 = e2([n4("esri.views.navigation.gamepad.GamepadSettings")], s15);
var a16 = s15;

// node_modules/@arcgis/core/views/navigation/Navigation.js
var a17 = class extends m {
  constructor(o24) {
    super(o24), this.browserTouchPanEnabled = true, this.gamepad = new a16(), this.momentumEnabled = true, this.mouseWheelZoomEnabled = true;
  }
};
e2([y({ type: Boolean })], a17.prototype, "browserTouchPanEnabled", void 0), e2([y({ type: a16, nonNullable: true })], a17.prototype, "gamepad", void 0), e2([y({ type: Boolean })], a17.prototype, "momentumEnabled", void 0), e2([y({ type: Boolean })], a17.prototype, "mouseWheelZoomEnabled", void 0), a17 = e2([n4("esri.views.navigation.Navigation")], a17);
var p19 = a17;

// node_modules/@arcgis/core/views/support/projectionUtils.js
var n20;
var s16 = null;
async function c23(r23) {
  s16 || (s16 = import("./geometryServiceUtils-OK3VBR2C.js").then((e25) => n20 = e25)), await s16, f(r23);
}
async function p20(e25, s24, a32, m25) {
  if (!e25)
    return null;
  const l27 = e25.spatialReference;
  return en() || An(l27, s24) ? rn(e25, s24) : n20 ? n20.projectGeometry(e25, s24, a32, m25) : (await Promise.race([c23(m25), tn(m25)]), p20(e25, s24, a32, m25));
}

// node_modules/@arcgis/core/views/support/DefaultsFromMap.js
var h14 = class extends m {
  constructor(e25) {
    super(e25), this.required = { tileInfo: false, heightModelInfo: false, extent: false }, this.defaultSpatialReference = null, this.userSpatialReference = null, this.sourcePreloadCount = 10, this.priorityCollection = null, this.requiresExtentInSpatialReference = true, this.suspended = false, this._projectExtentTask = { task: null, input: null, output: null, spatialReference: null };
  }
  destroy() {
    this._projectExtentTask.task && (this._projectExtentTask.task = p(this._projectExtentTask.task)), this._set("map", null);
  }
  get ready() {
    return !this._spatialReferenceTask.updating && !this._tileInfoTask.updating && !this._extentTask.updating;
  }
  get heightModelInfoReady() {
    return !this._heightModelInfoTask.updating;
  }
  get spatialReference() {
    return r(this.userSpatialReference) ? this.userSpatialReference : e(this._spatialReferenceTask.spatialReference);
  }
  get extent() {
    return e(this._extentTask.extent);
  }
  get heightModelInfo() {
    return e(this._heightModelInfoTask.heightModelInfo);
  }
  get vcsWkid() {
    return e(this._heightModelInfoTask.vcsWkid);
  }
  get latestVcsWkid() {
    return e(this._heightModelInfoTask.latestVcsWkid);
  }
  get viewingMode() {
    return t(this.userSpatialReference) || this.userSpatialReference.equals(e(this._spatialReferenceTask.spatialReference)) ? e(this._spatialReferenceTask.viewingMode) : null;
  }
  get tileInfo() {
    return e(this._tileInfoTask.tileInfo);
  }
  get mapCollections() {
    var _a, _b, _c, _d;
    const e25 = (_a = this.map) == null ? void 0 : _a.call(this), t23 = [];
    return r(this.priorityCollection) && t23.push(this.priorityCollection), t23.push({ parent: e25 == null ? void 0 : e25.basemap, layers: (_b = e25 == null ? void 0 : e25.basemap) == null ? void 0 : _b.baseLayers }, { layers: e25 == null ? void 0 : e25.layers }, { parent: e25 == null ? void 0 : e25.ground, layers: (_c = e25 == null ? void 0 : e25.ground) == null ? void 0 : _c.layers }, { parent: e25 == null ? void 0 : e25.basemap, layers: (_d = e25 == null ? void 0 : e25.basemap) == null ? void 0 : _d.referenceLayers }), t23;
  }
  get _allLayers() {
    return this._collectLayers(this.mapCollections);
  }
  get _spatialReferenceTask() {
    var _a;
    if (this.suspended)
      return (_a = this._get("_spatialReferenceTask")) != null ? _a : { updating: false };
    const { layers: e25, updating: t23 } = this._allLayers;
    let a32 = null;
    for (const i33 of e25) {
      const e26 = this._getSupportedSpatialReferences(i33);
      if (e26.length > 0) {
        const t24 = this._narrowDownSpatialReferenceCandidates(a32, e26);
        r(t24) && (a32 = t24);
      }
      if (r(a32) && 1 === a32.length)
        break;
    }
    if (t23 && (t(a32) || 1 !== a32.length))
      return { updating: true };
    const n30 = this._pickSpatialReferenceCandidate(a32);
    return { spatialReference: r(n30) ? n30.spatialReference : null, viewingMode: r(n30) ? n30.viewingMode : null, updating: false };
  }
  get _tileInfoTask() {
    var _a, _b, _c, _d, _e2, _f, _g, _h;
    if (!this.required.tileInfo)
      return (_a = this._get("_tileInfoTask")) != null ? _a : { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const { layers: e25, updating: t23 } = this._collectLayers([{ parent: (_c = (_b = this.map) == null ? void 0 : _b.call(this)) == null ? void 0 : _c.basemap, layers: (_f = (_e2 = (_d = this.map) == null ? void 0 : _d.call(this)) == null ? void 0 : _e2.basemap) == null ? void 0 : _f.baseLayers }, { layers: (_h = (_g = this.map) == null ? void 0 : _g.call(this)) == null ? void 0 : _h.layers }]);
    if (e25 && e25.length > 0 && "tileInfo" in e25[0]) {
      const t24 = e25[0].tileInfo;
      return { tileInfo: t24 && t24.spatialReference.equals(this.spatialReference) ? t24 : null, updating: false };
    }
    return { updating: t23 };
  }
  get _heightModelInfoTask() {
    var _a, _b, _c, _d;
    if (!this.required.heightModelInfo || this.suspended && ((_a = this._get("_heightModelInfoTask")) == null ? void 0 : _a.heightModelInfo))
      return (_b = this._get("_heightModelInfoTask")) != null ? _b : { updating: false };
    const { layers: e25, updating: t23 } = this._allLayers;
    for (const a32 of e25)
      if (g4(a32)) {
        const e26 = h6(a32);
        if (e26)
          return { heightModelInfo: e26, vcsWkid: (_c = a32.spatialReference) == null ? void 0 : _c.vcsWkid, latestVcsWkid: (_d = a32.spatialReference) == null ? void 0 : _d.latestVcsWkid, updating: false };
      }
    return { updating: t23 };
  }
  get _extentCandidatesTask() {
    var _a, _b;
    if (this.suspended || !this.required.extent)
      return (_a = this._get("_extentCandidatesTask")) != null ? _a : { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const e25 = this._allLayers, t23 = e25.updating, a32 = [];
    for (const n30 of e25.layers) {
      const e26 = "fullExtents" in n30 && n30.fullExtents || (r(n30.fullExtent) ? [n30.fullExtent] : []), t24 = this.requiresExtentInSpatialReference ? null : e26[0], i33 = (_b = e26.find((e27) => e27.spatialReference.equals(this.spatialReference))) != null ? _b : t24;
      if (i33)
        return { candidates: [{ extent: i33, layer: n30 }], updating: false };
      if (this._getSupportedSpatialReferences(n30).length > 0)
        for (const s24 of e26)
          a32.push({ extent: s24, layer: n30 });
    }
    return { candidates: a32, updating: t23 };
  }
  get _extentTask() {
    const { candidates: e25, updating: t23 } = this._extentCandidatesTask;
    if (t23)
      return { updating: t23 };
    if (t(e25) || 0 === e25.length)
      return { updating: false };
    if (!this.spatialReference)
      return { updating: this._spatialReferenceTask.updating };
    const i33 = this._pickExtentCandidate(e25), l27 = this.spatialReference;
    return i33.extent.equals(this._projectExtentTask.input) && l27.equals(this._projectExtentTask.spatialReference) ? { extent: this._projectExtentTask.output, updating: r(this._projectExtentTask.task) && !this._projectExtentTask.task.finished } : (r(this._projectExtentTask.task) && (this._projectExtentTask.task = p(this._projectExtentTask.task)), this._projectExtentTask = { input: i33.extent.clone(), output: null, spatialReference: l27.clone(), task: j4(async (e26) => {
      try {
        const t24 = await p20(i33.extent, l27, i33.layer.portalItem, e26);
        this._projectExtentTask = { ...this._projectExtentTask, task: null, output: t24 };
      } catch (t24) {
        if (p2(e26))
          return;
        this._projectExtentTask = { ...this._projectExtentTask, task: null };
      }
    }) }, { updating: true });
  }
  _narrowDownSpatialReferenceCandidates(e25, t23) {
    if (t(e25))
      return t23;
    const a32 = [], n30 = (e26, t24) => r(e26) ? r(t24) ? e26 === t24 && e26 : e26 : t24;
    for (const s24 of e25)
      for (const e26 of t23) {
        if (!s24.spatialReference.equals(e26.spatialReference))
          continue;
        const t24 = n30(s24.viewingMode, e26.viewingMode);
        if (false !== t24) {
          a32.push({ spatialReference: s24.spatialReference, viewingMode: t24 });
          break;
        }
      }
    return a32.length > 0 ? a32 : null;
  }
  _pickSpatialReferenceCandidate(e25) {
    const t23 = this.defaultSpatialReference;
    return t(e25) || e25.length < 1 ? r(t23) ? { spatialReference: t23, viewingMode: null } : null : (r(t23) && e25.length > 1 && e25.some(({ spatialReference: e26 }) => e26.equals(t23)) && (e25 = e25.filter(({ spatialReference: e26 }) => e26.equals(t23))), e25.length > 1 && e25.some(({ viewingMode: e26 }) => e26 !== l6.Local) && (e25 = e25.filter(({ viewingMode: e26 }) => e26 !== l6.Local)), e25[0]);
  }
  _getSupportedSpatialReferences(e25) {
    const t23 = "supportedSpatialReferences" in e25 && e25.supportedSpatialReferences || (e25.spatialReference ? [e25.spatialReference] : []);
    if (0 === t23.length)
      return [];
    const a32 = [];
    for (const n30 of t23) {
      const t24 = this.getSpatialReferenceSupport({ spatialReference: n30, layer: e25 });
      if (r(t24)) {
        const e26 = r(t24.constraints) ? t24.constraints : [{ spatialReference: n30, viewingMode: null }];
        for (const { spatialReference: t25, viewingMode: n31 } of e26)
          (!this.requiresExtentInSpatialReference || t(this.userSpatialReference) || t25.equals(this.userSpatialReference)) && a32.push({ spatialReference: t25, viewingMode: n31 });
      }
    }
    return a32;
  }
  _pickExtentCandidate(e25) {
    const t23 = this.spatialReference;
    return e25.find(({ extent: e26 }) => t23.equals(e26.spatialReference)) || e25[0];
  }
  _collectLayers(e25) {
    var _a;
    if ("loaded" !== this._loadMaybe((_a = this.map) == null ? void 0 : _a.call(this)))
      return { layers: [], updating: true };
    const t23 = { layers: [], preloading: -1, updating: false };
    for (const a32 of e25)
      if (this._collectCollection(a32, t23), t23.preloading === this.sourcePreloadCount)
        break;
    return { layers: t23.layers, updating: t23.updating };
  }
  _collectCollection(e25, t23) {
    if (e25.layers) {
      switch (this._loadMaybe(e25.parent)) {
        case "loading":
          return t23.updating = true, void ++t23.preloading;
        case "failed":
          return;
      }
      for (const a32 of e25.layers) {
        switch (this._loadMaybe(a32)) {
          case "failed":
            continue;
          case "loading":
            t23.updating = true, ++t23.preloading;
            break;
          case "loaded":
            t23.updating || t23.layers.push(a32), "layers" in a32 && this._collectCollection({ layers: a32.layers }, t23);
        }
        if (t23.preloading === this.sourcePreloadCount)
          break;
      }
    }
  }
  _loadMaybe(e25) {
    return e25 && "loadStatus" in e25 ? "not-loaded" === e25.loadStatus ? (e25.load().catch(() => {
    }), "loading") : e25.loadStatus : "loaded";
  }
};
e2([y()], h14.prototype, "required", void 0), e2([y({ constructOnly: true })], h14.prototype, "map", void 0), e2([y({ constructOnly: true })], h14.prototype, "getSpatialReferenceSupport", void 0), e2([y()], h14.prototype, "defaultSpatialReference", void 0), e2([y()], h14.prototype, "userSpatialReference", void 0), e2([y()], h14.prototype, "sourcePreloadCount", void 0), e2([y()], h14.prototype, "priorityCollection", void 0), e2([y()], h14.prototype, "requiresExtentInSpatialReference", void 0), e2([y()], h14.prototype, "suspended", void 0), e2([y({ readOnly: true })], h14.prototype, "ready", null), e2([y({ readOnly: true })], h14.prototype, "heightModelInfoReady", null), e2([y({ readOnly: true })], h14.prototype, "spatialReference", null), e2([y({ readOnly: true })], h14.prototype, "extent", null), e2([y({ readOnly: true })], h14.prototype, "heightModelInfo", null), e2([y({ readOnly: true })], h14.prototype, "vcsWkid", null), e2([y({ readOnly: true })], h14.prototype, "latestVcsWkid", null), e2([y({ readOnly: true })], h14.prototype, "viewingMode", null), e2([y({ readOnly: true })], h14.prototype, "tileInfo", null), e2([y({ readOnly: true })], h14.prototype, "mapCollections", null), e2([y({ readOnly: true })], h14.prototype, "_allLayers", null), e2([y({ readOnly: true })], h14.prototype, "_spatialReferenceTask", null), e2([y({ readOnly: true })], h14.prototype, "_tileInfoTask", null), e2([y({ readOnly: true })], h14.prototype, "_heightModelInfoTask", null), e2([y({ readOnly: true })], h14.prototype, "_extentCandidatesTask", null), e2([y()], h14.prototype, "_extentTask", null), e2([y()], h14.prototype, "_projectExtentTask", void 0), h14 = e2([n4("esri.views.support.DefaultsFromMap")], h14);

// node_modules/@arcgis/core/views/View.js
var P4;
var W4 = P4 = class extends a7(n6.EventedMixin(m3(m))) {
  constructor(e25) {
    super(e25), this._userSpatialReference = null, this._cursor = null, this.allLayerViews = new l5({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, (_b = this.groundView) == null ? void 0 : _b.layerViews, this.layerViews, (_c = this.basemapView) == null ? void 0 : _c.referenceLayerViews];
    }, getChildrenFunction: (e26) => e26.layerViews }), this.groundView = null, this.basemapView = null, this.fatalError = null, this.graphics = new i10(), this.analyses = new i18(), this.typeSpecificPreconditionsReady = true, this.layerViews = new j3(), this.magnifier = new p16(), this.padding = { left: 0, top: 0, right: 0, bottom: 0 }, this.ready = false, this.spatialReferenceWarningDelay = 1e3, this.supportsGround = true, this.timeExtent = null, this.type = null, this.scale = null, this.updating = false, this.initialExtentRequired = true, this.input = new a15(), this.navigation = new p19(), this.layerViewManager = null, this.analysisViewManager = null, this.isHeightModelInfoRequired = false, this.width = null, this.height = null, this.resizing = false, this.suspended = false, this.viewEvents = new p17(this), this.persistableViewModels = new j3(), this._isValid = false, this._readyCycleForced = false, this.handles.add(l3(() => this.preconditionsReady, (e26) => {
      var _a, _b;
      e26 ? (this._currentSpatialReference = this.spatialReference, P4.views.add(this)) : (this._currentSpatialReference = null, P4.views.remove(this)), this.notifyChange("spatialReference"), !e26 && this.ready ? ((_a = this.toolViewManager) == null ? void 0 : _a.detach(), r(this.analysisViewManager) && this.analysisViewManager.detach(), (_b = this.layerViewManager) == null ? void 0 : _b.clear(), this._teardown()) : e26 && !this.ready && (this._startup(), r(this.analysisViewManager) && this.analysisViewManager.attach(), this.toolViewManager.attach());
    }, U2));
  }
  initialize() {
    this.addResolvingPromise(this.validate().then(() => (this._isValid = true, j2(() => this.ready)))), this.basemapView = new p15({ view: this }), this.layerViewManager = new L6({ view: this, layerViewImporter: { importLayerView: (e25) => this.importLayerView(e25), hasLayerViewModule: (e25) => this.hasLayerViewModule(e25) }, supportsGround: this.supportsGround }), this.toolViewManager = new y11({ view: this }), this._setupSpatialReferenceLogger(), this.handles.add([l3(() => this.initialExtentRequired, (e25) => this.defaultsFromMap.required = { ...this.defaultsFromMap.required, extent: e25 }, { sync: true, initial: true }), l3(() => this.ready, (e25) => {
      this.defaultsFromMap && (this.defaultsFromMap.suspended = e25, this.defaultsFromMap.userSpatialReference = e25 ? this.spatialReference : this._userSpatialReference);
    }, { sync: true }), l3(() => this._userSpatialReference, (e25) => {
      this.defaultsFromMap && (this.defaultsFromMap.userSpatialReference = e25);
    }, { sync: true, initial: true })]);
  }
  _setupSpatialReferenceLogger() {
    let e25 = null;
    this.handles.add([l3(() => {
      var _a;
      return (_a = this.defaultsFromMap) == null ? void 0 : _a.ready;
    }, (t23) => {
      var _a;
      const i33 = ((_a = this.map) == null ? void 0 : _a.allLayers.length) > 0;
      if (t23 && !this.spatialReference && i33) {
        if (r(e25))
          return;
        const t24 = n3(() => e25 = p(e25));
        e25 = j4(async (t25) => {
          try {
            await U(this.spatialReferenceWarningDelay, null, t25);
          } catch {
            return;
          } finally {
            e25 = null;
          }
          s2.getLogger(this.declaredClass).warn("#spatialReference", "no spatial reference could be derived from the currently added map layers");
        }), this.handles.add(t24, "spatial-reference-logger-task");
      } else
        this.handles.remove("spatial-reference-logger-task");
    }, { sync: true })]);
  }
  destroy() {
    if (this.destroyed)
      return;
    this.viewEvents.destroy(), this.allLayerViews.destroy(), this.navigation && (this.navigation.destroy(), this._set("navigation", null)), this.graphics = s(this.graphics), this.analyses = s(this.analyses), this.handles.remove("defaultsFromMap"), this.defaultsFromMap.destroy(), this._set("defaultsFromMap", null), s(this.analysisViewManager), this.toolViewManager = s(this.toolViewManager), this.layerViewManager = s(this.layerViewManager), this.basemapView = s(this.basemapView), this.invalidate(), this._emitter.clear(), this.handles.removeAll();
    const e25 = this.map;
    this.map = null, e25 == null ? void 0 : e25.destroy();
  }
  _startup() {
    this._set("ready", true);
  }
  _teardown() {
    this._set("ready", false);
  }
  whenReady() {
    return Promise.resolve(this);
  }
  toMap() {
    return s2.getLogger(this.declaredClass).error("#toMap()", "Not implemented on this instance of View"), null;
  }
  get activeTool() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.activeTool;
  }
  set activeTool(e25) {
    this.toolViewManager && (this.toolViewManager.activeTool = e25);
  }
  get animation() {
    return this._get("animation");
  }
  set animation(e25) {
    this._set("animation", e25);
  }
  get _defaultsFromMapSettings() {
    return {};
  }
  get defaultsFromMap() {
    return new h14({ required: { tileInfo: false, heightModelInfo: false, extent: false }, map: () => this.map, getSpatialReferenceSupport: (e25) => this.getSpatialReferenceSupport(e25), ...this._defaultsFromMapSettings });
  }
  get extent() {
    return this._get("extent");
  }
  set extent(e25) {
    this._set("extent", e25);
  }
  get heightModelInfo() {
    return this.getDefaultHeightModelInfo();
  }
  get interacting() {
    return this.navigating;
  }
  get navigating() {
    return false;
  }
  get preconditionsReady() {
    var _a;
    return !(this.fatalError || !this._isValid || this._readyCycleForced || !this.map || m4.isLoadable(this.map) && !this.map.loaded || 0 === this.width || 0 === this.height || !this.spatialReference || !this._validateSpatialReference(this.spatialReference) || !this._currentSpatialReference && !((_a = this.defaultsFromMap) == null ? void 0 : _a.ready) || !this.typeSpecificPreconditionsReady);
  }
  set map(e25) {
    e25 !== this._get("map") && ((e25 == null ? void 0 : e25.destroyed) && (s2.getLogger(this.declaredClass).warn("#map", "The provided map is already destroyed", { map: e25 }), e25 = null), m4.isLoadable(e25) && e25.load().catch(() => {
    }), this.constructed && (this.forceReadyCycle(), this._currentSpatialReference = null), this._set("map", e25));
  }
  get spatialReference() {
    var _a, _b;
    let e25 = this._userSpatialReference || this._currentSpatialReference || this.getDefaultSpatialReference() || null;
    return e25 && ((_b = (_a = this.defaultsFromMap) == null ? void 0 : _a.required) == null ? void 0 : _b.heightModelInfo) && (e25 = e25.clone(), e25.vcsWkid = this.defaultsFromMap.vcsWkid, e25.latestVcsWkid = this.defaultsFromMap.latestVcsWkid), e25;
  }
  set spatialReference(e25) {
    const t23 = !E2(e25, this._get("spatialReference"));
    this._set("_userSpatialReference", e25), t23 && (this._set("spatialReference", e25), this._spatialReferenceChanged(e25));
  }
  _spatialReferenceChanged(e25) {
  }
  get stationary() {
    return !this.animation && !this.navigating && !this.resizing;
  }
  get tools() {
    var _a;
    return (_a = this.toolViewManager) == null ? void 0 : _a.tools;
  }
  get initialExtent() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.extent;
  }
  get cursor() {
    const e25 = this.toolViewManager ? this.toolViewManager.cursor : null;
    return r(e25) ? e25 : this._cursor || "default";
  }
  set cursor(e25) {
    this._cursor = e25, this.notifyChange("cursor");
  }
  get size() {
    return [this.width, this.height];
  }
  whenLayerView(e25) {
    return this.layerViewManager.whenLayerView(e25);
  }
  getDefaultSpatialReference() {
    var _a;
    return (_a = this.defaultsFromMap) == null ? void 0 : _a.spatialReference;
  }
  getDefaultHeightModelInfo() {
    var _a, _b, _c;
    return (_c = (_b = this.map && "heightModelInfo" in this.map ? this.map.heightModelInfo : void 0) != null ? _b : (_a = this.defaultsFromMap) == null ? void 0 : _a.heightModelInfo) != null ? _c : null;
  }
  importLayerView(e25) {
    throw new s3("importLayerView() not implemented");
  }
  hasLayerViewModule(e25) {
    return false;
  }
  async validate() {
  }
  invalidate() {
    this._isValid = false;
  }
  getSpatialReferenceSupport() {
    return { constraints: null };
  }
  _validateSpatialReference(e25) {
    return r(this.getSpatialReferenceSupport({ spatialReference: e25 }));
  }
  when(e25, t23) {
    return this.isResolved() && !this.ready && s2.getLogger(this.declaredClass).warn("#when()", "Calling view.when() while the view is no longer ready but was already resolved once will resolve immediately. Use reactiveUtils.whenOnce(() => view.ready).then(...) instead."), super.when(e25, t23);
  }
  forceReadyCycle() {
    this.ready && (f2(() => false === this.preconditionsReady, () => this._readyCycleForced = false, { once: true }), this._readyCycleForced = true);
  }
  addAndActivateTool(e25) {
    this.toolViewManager.tools.add(e25), this.activeTool = e25;
  }
  tryFatalErrorRecovery() {
    this.fatalError = null;
  }
};
W4.views = new j3(), e2([y()], W4.prototype, "_userSpatialReference", void 0), e2([y()], W4.prototype, "activeTool", null), e2([y({ readOnly: true })], W4.prototype, "allLayerViews", void 0), e2([y()], W4.prototype, "groundView", void 0), e2([y()], W4.prototype, "animation", null), e2([y()], W4.prototype, "basemapView", void 0), e2([y({ readOnly: true })], W4.prototype, "_defaultsFromMapSettings", null), e2([y()], W4.prototype, "defaultsFromMap", null), e2([y()], W4.prototype, "fatalError", void 0), e2([y({ type: w2 })], W4.prototype, "extent", null), e2([y(a10(i10, "graphics"))], W4.prototype, "graphics", void 0), e2([y(a10(i18, "analyses"))], W4.prototype, "analyses", void 0), e2([y({ readOnly: true, type: v5 })], W4.prototype, "heightModelInfo", null), e2([y({ readOnly: true })], W4.prototype, "interacting", null), e2([y({ readOnly: true })], W4.prototype, "navigating", null), e2([y({ readOnly: true, dependsOn: ["fatalError", "_isValid", "_readyCycleForced", "map", "map.loaded?", "width", "height", "spatialReference", "_currentSpatialReference", "defaultsFromMap.ready", "typeSpecificPreconditionsReady"] })], W4.prototype, "preconditionsReady", null), e2([y({ readOnly: true })], W4.prototype, "typeSpecificPreconditionsReady", void 0), e2([y({ type: j3, readOnly: true })], W4.prototype, "layerViews", void 0), e2([y({ type: p16 })], W4.prototype, "magnifier", void 0), e2([y({ value: null, type: L3 })], W4.prototype, "map", null), e2([y()], W4.prototype, "padding", void 0), e2([y({ readOnly: true })], W4.prototype, "ready", void 0), e2([y({ type: k })], W4.prototype, "spatialReference", null), e2([y()], W4.prototype, "spatialReferenceWarningDelay", void 0), e2([y()], W4.prototype, "stationary", null), e2([y({ readOnly: true })], W4.prototype, "supportsGround", void 0), e2([y({ type: T })], W4.prototype, "timeExtent", void 0), e2([y()], W4.prototype, "tools", null), e2([y()], W4.prototype, "toolViewManager", void 0), e2([y({ readOnly: true })], W4.prototype, "type", void 0), e2([y({ type: Number })], W4.prototype, "scale", void 0), e2([y({ readOnly: true })], W4.prototype, "updating", void 0), e2([y({ readOnly: true })], W4.prototype, "initialExtentRequired", void 0), e2([y({ readOnly: true })], W4.prototype, "initialExtent", null), e2([y()], W4.prototype, "cursor", null), e2([y({ readOnly: true })], W4.prototype, "input", void 0), e2([y({ type: p19, nonNullable: true })], W4.prototype, "navigation", void 0), e2([y()], W4.prototype, "layerViewManager", void 0), e2([y()], W4.prototype, "analysisViewManager", void 0), e2([y()], W4.prototype, "width", void 0), e2([y()], W4.prototype, "height", void 0), e2([y({ readOnly: true })], W4.prototype, "resizing", void 0), e2([y({ value: null, readOnly: true })], W4.prototype, "size", null), e2([y({ readOnly: true })], W4.prototype, "suspended", void 0), e2([y({ readOnly: true })], W4.prototype, "viewEvents", void 0), e2([y({ readOnly: true })], W4.prototype, "persistableViewModels", void 0), e2([y()], W4.prototype, "_isValid", void 0), e2([y()], W4.prototype, "_readyCycleForced", void 0), e2([y()], W4.prototype, "_currentSpatialReference", void 0), W4 = P4 = e2([n4("esri.views.View")], W4);
var z6 = W4;

// node_modules/@arcgis/core/views/ViewAnimation.js
var n21 = class extends _ {
  constructor(t23) {
    super(t23), this.state = "running", this.target = null, this._dfd = null;
  }
  initialize() {
    this.addResolvingPromise(new Promise((t23, s24) => this._dfd = { resolve: t23, reject: s24 }));
  }
  get done() {
    return "finished" === this.state || "stopped" === this.state;
  }
  stop() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "stopped"), (_a = this._dfd) == null ? void 0 : _a.reject(new s3("ViewAnimation stopped")));
  }
  finish() {
    var _a;
    "stopped" !== this.state && "finished" !== this.state && (this._set("state", "finished"), (_a = this._dfd) == null ? void 0 : _a.resolve());
  }
  update(t23, s24) {
    s24 || (s24 = C(t23) ? "waiting-for-target" : "running"), this._set("target", t23), this._set("state", s24);
  }
};
e2([y({ readOnly: true })], n21.prototype, "done", null), e2([y({ readOnly: true, type: String })], n21.prototype, "state", void 0), e2([y()], n21.prototype, "target", void 0), n21 = e2([n4("esri.views.ViewAnimation")], n21), function(t23) {
  t23.State = { RUNNING: "running", STOPPED: "stopped", FINISHED: "finished", WAITING_FOR_TARGET: "waiting-for-target" };
}(n21 || (n21 = {}));
var p21 = n21;

// node_modules/@arcgis/core/views/2d/AnimationManager.js
var m17 = class {
  constructor(t23, i33, s24, e25) {
    const o24 = t23.targetGeometry, n30 = i33.targetGeometry;
    e25 ? "string" == typeof e25 && (e25 = r9(e25) || t11.ease) : e25 = t11.ease, this.easing = e25, this.duration = s24, this.sCenterX = o24.x, this.sCenterY = o24.y, this.sScale = t23.scale, this.sRotation = t23.rotation, this.tCenterX = n30.x, this.tCenterY = n30.y, this.tScale = i33.scale, this.tRotation = i33.rotation, this.dCenterX = this.tCenterX - this.sCenterX, this.dCenterY = this.tCenterY - this.sCenterY, this.dScale = this.tScale - this.sScale, this.dRotation = this.tRotation - this.sRotation, this.dRotation > 180 ? this.dRotation -= 360 : this.dRotation < -180 && (this.dRotation += 360);
  }
  applyRatio(t23, i33) {
    const s24 = this.easing(i33);
    let e25, o24, n30, a32;
    i33 >= 1 ? (e25 = this.tCenterX, o24 = this.tCenterY, n30 = this.tRotation, a32 = this.tScale) : (e25 = this.sCenterX + s24 * this.dCenterX, o24 = this.sCenterY + s24 * this.dCenterY, n30 = this.sRotation + s24 * this.dRotation, a32 = this.sScale + s24 * this.dScale), t23.targetGeometry.x = e25, t23.targetGeometry.y = o24, t23.scale = a32, t23.rotation = n30;
  }
};
var u12 = class extends m {
  constructor(t23) {
    super(t23), this.duration = 200, this.transition = null, this.easing = t11.ease, this.view = null, this.viewpoint = null, this.viewpoint = new u3({ targetGeometry: new w(), scale: 0, rotation: 0 }), this._updateTask = A2({ postRender: this._postRender.bind(this) }), this._updateTask.pause();
  }
  destroy() {
    this._updateTask.remove(), this._updateTask = null;
  }
  animate(t23, i33, s24) {
    this.stop();
    const e25 = this.viewpoint;
    Z(e25, i33), this.transition = new m17(this.viewpoint, t23.target, s24 && s24.duration || this.duration, s24 && s24.easing || this.easing);
    const o24 = () => {
      this.animation === t23 && this._updateTask && ("finished" === t23.state && (this.transition.applyRatio(this.viewpoint, 1), this.view.state && (this.view.state.viewpoint = this.viewpoint.clone())), this.animation = null, this.updateFunction = null);
    };
    return t23.when(o24, o24), this._startTime = performance.now(), this._updateTask.resume(), this.animation = t23, t23;
  }
  animateContinous(t23, i33) {
    this.stop(), this.updateFunction = i33, this.viewpoint = t23;
    const s24 = new p21({ target: t23.clone() }), e25 = () => {
      this.animation === s24 && this._updateTask && (this.animation = null, this.updateFunction = null);
    };
    return s24.when(e25, e25), this._startTime = performance.now(), this._updateTask.resume(), this.animation = s24, s24;
  }
  stop() {
    this.animation && (this.animation.stop(), this.animation = null, this.updateFunction = null);
  }
  _postRender(t23) {
    const i33 = this.animation;
    if (i33 && i33.state !== p21.State.STOPPED) {
      if (this.updateFunction)
        this.updateFunction(this.viewpoint, t23.deltaTime);
      else {
        const t24 = (performance.now() - this._startTime) / this.transition.duration, i34 = t24 >= 1;
        this.transition.applyRatio(this.viewpoint, t24), i34 && this.animation.finish();
      }
      this.view.state && (this.view.state.viewpoint = this.viewpoint.clone());
    } else
      this._updateTask.pause();
  }
};
e2([y()], u12.prototype, "animation", void 0), e2([y()], u12.prototype, "duration", void 0), e2([y()], u12.prototype, "transition", void 0), e2([y()], u12.prototype, "easing", void 0), e2([y()], u12.prototype, "view", void 0), e2([y()], u12.prototype, "viewpoint", void 0), u12 = e2([n4("esri.views.2d.AnimationManager")], u12);
var d12 = u12;

// node_modules/@arcgis/core/views/2d/FrameTask.js
var s17 = class {
  constructor(t23) {
    this.view = t23, this._frameTaskHandle = null, this._updateRequested = false, this.stationary = true, this.animationInProgress = false, this.prepare = () => {
      this._updateParameters.state = this.view.state, this._updateParameters.stationary = this.view.stationary, this._updateParameters.pixelRatio = window.devicePixelRatio, this._updateParameters.renderingOptions = this.view.renderingOptions;
    }, this.update = () => {
      this._updateRequested = false;
      const { basemapView: t24, graphicsView: a32, labelManager: s24, layerViews: i33, state: { id: r23 } } = this.view;
      t24.baseLayerViews.forEach(this._updateLayerView, this), i33.forEach(this._updateLayerView, this), t24.referenceLayerViews.forEach(this._updateLayerView, this), r(s24) && (s24.lastUpdateId !== r23 && (s24.viewChange(), s24.lastUpdateId = r23), s24.updateRequested && s24.processUpdate(this._updateParameters)), r(a32) && (a32.lastUpdateId !== r23 && (a32.viewChange(), a32.lastUpdateId = r23), a32.updateRequested && a32.processUpdate(this._updateParameters)), this.view.graphicsTileStore.setViewState(this._updateParameters.state), this.animationInProgress || this._updateRequested || this._frameTaskHandle.pause();
    };
  }
  destroy() {
    this.stop();
  }
  start() {
    if (this._frameTaskHandle)
      return;
    const e25 = this.view;
    this.stationary = e25.stationary, this._updateParameters = { state: e25.state, pixelRatio: window.devicePixelRatio, stationary: this.stationary, renderingOptions: e25.renderingOptions }, this._stationaryHandle = l3(() => e25.stationary, (e26) => {
      this.stationary = e26, this.requestFrame();
    }), this._frameTaskHandle = A2(this), this.requestUpdate();
  }
  stop() {
    this._frameTaskHandle && (this._updateRequested = false, this._stationaryHandle.remove(), this._frameTaskHandle.remove(), this._updateParameters = this._stationaryHandle = this._frameTaskHandle = null, this.stationary = true, this.animationInProgress = false);
  }
  requestUpdate() {
    this._updateRequested || (this._updateRequested = true, this.requestFrame());
  }
  requestFrame() {
    this._frameTaskHandle && this._frameTaskHandle.resume();
  }
  _updateLayerView(e25) {
    const t23 = this.view.state, a32 = e25.lastUpdateId;
    null != a32 && (this.stationary || e25.moving) || (e25.moving = true, e25.moveStart()), a32 !== t23.id && e25.viewChange(), this.stationary && e25.moving && (e25.moving = false, e25.moveEnd()), e25.lastUpdateId = t23.id, e25.updateRequested && e25.processUpdate(this._updateParameters), "layerViews" in e25 && e25.layerViews.forEach(this._updateLayerView, this);
  }
};

// node_modules/@arcgis/core/views/2d/layerViewModuleImportUtils.js
function s18() {
  return Promise.all([import("./webglDeps-TIAKAF4Q.js"), import("./mapViewDeps-TWG2WSOS.js")]);
}
var a18 = () => s18().then(() => import("./TileLayerView2D-TCF45KUQ.js"));
var i24 = () => s18().then(() => import("./FeatureLayerView2D-52XIEOV4.js"));
var o17 = { "base-dynamic": () => s18().then(() => import("./BaseDynamicLayerView2D-3ZF4HJJ5.js")), "base-tile": a18, "bing-maps": a18, csv: i24, "geo-rss": () => s18().then(() => import("./GeoRSSLayerView2D-GSBGZVSW.js")), feature: i24, geojson: i24, graphics: () => s18().then(() => import("./GraphicsLayerView2D-VXZP2WBI.js")), group: () => s18().then(() => import("./GroupLayerView2D-FPJ3UAZY.js")), imagery: () => s18().then(() => import("./ImageryLayerView2D-ZCDFWJSX.js")), "imagery-tile": () => s18().then(() => import("./ImageryTileLayerView2D-4XQ62RCS.js")), kml: () => s18().then(() => import("./KMLLayerView2D-HEZRZY74.js")), "map-image": () => s18().then(() => import("./MapImageLayerView2D-W4YRXDPZ.js")), "map-notes": () => s18().then(() => import("./MapNotesLayerView2D-WI7USEDY.js")), media: () => s18().then(() => import("./MediaLayerView2D-2NA2KXDF.js")), "ogc-feature": () => s18().then(() => import("./OGCFeatureLayerView2D-JZZ3PXHM.js")), "open-street-map": a18, "oriented-imagery": i24, route: () => s18().then(() => import("./RouteLayerView2D-L2IFAO5J.js")), stream: () => s18().then(() => import("./StreamLayerView2D-Q7PIQ6DJ.js")), "subtype-group": () => s18().then(() => import("./SubtypeGroupLayerView2D-Z33Y46YD.js")), tile: a18, "vector-tile": () => s18().then(() => import("./VectorTileLayerView2D-PEQ445QG.js")), wcs: () => s18().then(() => import("./ImageryTileLayerView2D-4XQ62RCS.js")), "web-tile": a18, wfs: i24, wms: () => s18().then(() => import("./WMSLayerView2D-Q4WOBS65.js")), wmts: () => s18().then(() => import("./WMTSLayerView2D-PIJKBMSJ.js")), "line-of-sight": null, "base-elevation": null, "building-scene": null, dimension: null, elevation: null, "integrated-mesh": null, "point-cloud": null, voxel: null, scene: null, unknown: null, unsupported: null };
function l18(r23) {
  const t23 = r23.declaredClass ? r23.declaredClass.slice(r23.declaredClass.lastIndexOf(".") + 1) : "Unknown", s24 = t23.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
  return new s3(`${s24}:view-not-supported`, `${t23} is not supported in 2D`);
}
var n22 = { hasLayerViewModule: (e25) => r(o17[e25.type]), importLayerView: (e25) => {
  const r23 = o17[e25.type];
  if (t(r23))
    throw l18(e25);
  return r23(e25);
} };

// node_modules/@arcgis/core/geometry/support/near.js
function o18(o24, m25) {
  const { spatialReference: r23 } = m25, i33 = [m25.x, m25.y];
  let s24 = Number.POSITIVE_INFINITY, x5 = 0, c36 = 0;
  const a32 = [0, 0], f15 = "extent" === o24.type ? [[[o24.xmin, o24.ymin], [o24.xmin, o24.ymax], [o24.xmax, o24.ymax], [o24.xmax, o24.ymin], [o24.xmin, o24.ymin]]] : o24.rings;
  for (const n30 of f15)
    for (let o25 = 0; o25 < n30.length - 1; o25++) {
      i2(a32, i33, n30, o25);
      const m26 = m6(i33, a32);
      m26 < s24 && (s24 = m26, x5 = a32[0], c36 = a32[1]);
    }
  return { coordinate: new w({ x: x5, y: c36, spatialReference: r23 }), distance: s24 };
}

// node_modules/@arcgis/core/views/2d/constraints/GeometryConstraint.js
var l19;
var y12 = l19 = class extends i4(m) {
  constructor(e25) {
    super(e25), this.geometry = null, this.spatialReference = null;
  }
  get normalizedGeometry() {
    if (t(this.geometry) || !this.spatialReference)
      return null;
    if (!this.spatialReference.equals(this.geometry.spatialReference))
      try {
        return rn(this.geometry, this.spatialReference);
      } catch (e25) {
        return s2.getLogger(this.declaredClass).error("#constraints.geometry", "could not project the geometry to the view's spatial reference", { geometry: this.geometry, spatialReference: this.spatialReference, error: e25 }), null;
      }
    return this.geometry;
  }
  constrain(e25, r23) {
    if (t(this.normalizedGeometry))
      return e25;
    const t23 = e25.targetGeometry;
    if ("extent" === this.normalizedGeometry.type ? r3(this.normalizedGeometry, t23) : c(this.normalizedGeometry, t23))
      return e25;
    const { coordinate: o24 } = o18(this.normalizedGeometry, t23);
    return o24 ? (e25.targetGeometry = o24, e25) : e25;
  }
  clone() {
    var _a, _b;
    return new l19({ geometry: (_a = this.geometry) == null ? void 0 : _a.clone(), spatialReference: (_b = this.spatialReference) == null ? void 0 : _b.clone() });
  }
};
e2([y({ constructOnly: true })], y12.prototype, "geometry", void 0), e2([y({ readOnly: true })], y12.prototype, "normalizedGeometry", null), e2([y({ constructOnly: true })], y12.prototype, "spatialReference", void 0), y12 = l19 = e2([n4("esri.views.2d.constraints.GeometryConstraint")], y12);

// node_modules/@arcgis/core/views/2d/constraints/RotationConstraint.js
var a19;
var n23 = a19 = class extends i4(m) {
  constructor() {
    super(...arguments), this.enabled = true, this.rotationEnabled = true;
  }
  constrain(o24, r23) {
    return this.enabled && r23 ? (this.rotationEnabled || (o24.rotation = r23.rotation), o24) : o24;
  }
  clone() {
    return new a19({ enabled: this.enabled, rotationEnabled: this.rotationEnabled });
  }
};
e2([y()], n23.prototype, "enabled", void 0), e2([y()], n23.prototype, "rotationEnabled", void 0), n23 = a19 = e2([n4("esri.views.2d.constraints.RotationConstraint")], n23);
var i25 = n23;

// node_modules/@arcgis/core/views/2d/constraints/ZoomConstraint.js
var a20;
var c24 = a20 = class extends i4(m) {
  constructor(e25) {
    super(e25), this._lodByScale = {}, this._scales = [], this.effectiveLODs = null, this.effectiveMinZoom = -1, this.effectiveMaxZoom = -1, this.effectiveMinScale = 0, this.effectiveMaxScale = 0, this.lods = null, this.minZoom = -1, this.maxZoom = -1, this.minScale = 0, this.maxScale = 0, this.snapToZoom = true;
  }
  initialize() {
    let e25, { lods: t23, minScale: o24, maxScale: s24, minZoom: i33, maxZoom: a32 } = this, c36 = -1, r23 = -1, l27 = false, n30 = false;
    if (0 !== o24 && 0 !== s24 && o24 < s24 && ([o24, s24] = [s24, o24]), !t23 || !t23.length)
      return this._set("effectiveMinScale", o24), void this._set("effectiveMaxScale", s24);
    t23 = t23.map((e26) => e26.clone()), t23.sort((e26, t24) => t24.scale - e26.scale), t23.forEach((e26, t24) => e26.level = t24);
    for (const f15 of t23)
      !l27 && o24 > 0 && o24 >= f15.scale && (c36 = f15.level, l27 = true), !n30 && s24 > 0 && s24 >= f15.scale && (r23 = e25 ? e25.level : -1, n30 = true), e25 = f15;
    -1 === i33 && (i33 = 0 === o24 ? 0 : c36), -1 === a32 && (a32 = 0 === s24 ? t23.length - 1 : r23), i33 = Math.max(i33, 0), i33 = Math.min(i33, t23.length - 1), a32 = Math.max(a32, 0), a32 = Math.min(a32, t23.length - 1), i33 > a32 && ([i33, a32] = [a32, i33]), o24 = t23[i33].scale, s24 = t23[a32].scale, t23.splice(0, i33), t23.splice(a32 - i33 + 1, t23.length), t23.forEach((e26, t24) => {
      this._lodByScale[e26.scale] = e26, this._scales[t24] = e26.scale;
    }), this._set("effectiveLODs", t23), this._set("effectiveMinZoom", i33), this._set("effectiveMaxZoom", a32), this._set("effectiveMinScale", o24), this._set("effectiveMaxScale", s24);
  }
  constrain(e25, t23) {
    if (t23 && e25.scale === t23.scale)
      return e25;
    const o24 = this.effectiveMinScale, s24 = this.effectiveMaxScale, i33 = e25.targetGeometry, a32 = t23 && t23.targetGeometry, c36 = 0 !== s24 && e25.scale < s24, r23 = 0 !== o24 && e25.scale > o24;
    if (c36 || r23) {
      const c37 = r23 ? o24 : s24;
      if (t23 && a32) {
        const o25 = (c37 - t23.scale) / (e25.scale - t23.scale);
        i33.x = a32.x + (i33.x - a32.x) * o25, i33.y = a32.y + (i33.y - a32.y) * o25;
      }
      e25.scale = c37;
    }
    return this.snapToZoom && this.effectiveLODs && (e25.scale = this._getClosestScale(e25.scale)), e25;
  }
  fit(e25) {
    if (!this.effectiveLODs || !this.snapToZoom)
      return this.constrain(e25, null);
    const t23 = this.scaleToZoom(e25.scale), o24 = Math.abs(t23 - Math.floor(t23));
    return e25.scale = this.zoomToScale(o24 > 0.99 ? Math.round(t23) : Math.floor(t23)), e25;
  }
  zoomToScale(e25) {
    if (!this.effectiveLODs)
      return 0;
    e25 -= this.effectiveMinZoom, e25 = Math.max(0, e25);
    const t23 = this._scales;
    if (e25 <= 0)
      return t23[0];
    if (e25 >= t23.length)
      return t23[t23.length - 1];
    const o24 = Math.round(e25 - 0.5), s24 = Math.round(e25);
    return t23[s24] + (s24 - e25) * (t23[o24] - t23[s24]);
  }
  scaleToZoom(e25) {
    if (!this.effectiveLODs)
      return -1;
    const t23 = this._scales;
    let o24, s24;
    if (e25 >= t23[0])
      return this.effectiveMinZoom;
    if (e25 <= t23[t23.length - 1])
      return this.effectiveMaxZoom;
    for (let i33 = 0; i33 < t23.length - 1; i33++) {
      if (o24 = t23[i33], s24 = t23[i33 + 1], s24 === e25) {
        return i33 + this.effectiveMinZoom + 1;
      }
      if (o24 > e25 && s24 < e25) {
        return i33 + this.effectiveMinZoom + 1 - (e25 - s24) / (o24 - s24);
      }
    }
    return -1;
  }
  snapToClosestScale(e25) {
    if (!this.effectiveLODs)
      return e25;
    const t23 = this.scaleToZoom(e25);
    return this.zoomToScale(Math.round(t23));
  }
  snapToNextScale(e25, t23 = 0.5) {
    if (!this.effectiveLODs)
      return e25 * t23;
    const o24 = Math.round(this.scaleToZoom(e25));
    return this.zoomToScale(o24 + 1);
  }
  snapToPreviousScale(e25, t23 = 2) {
    if (!this.effectiveLODs)
      return e25 * t23;
    const o24 = Math.round(this.scaleToZoom(e25));
    return this.zoomToScale(o24 - 1);
  }
  clone() {
    return new a20({ lods: this.lods, minZoom: this.minZoom, maxZoom: this.maxZoom, minScale: this.minScale, maxScale: this.maxScale });
  }
  _getClosestScale(e25) {
    return this._lodByScale[e25] || (e25 = this._scales.reduce((t23, o24) => Math.abs(o24 - e25) <= Math.abs(t23 - e25) ? o24 : t23, this._scales[0])), this._lodByScale[e25].scale;
  }
};
e2([y({ readOnly: true })], c24.prototype, "effectiveLODs", void 0), e2([y({ readOnly: true })], c24.prototype, "effectiveMinZoom", void 0), e2([y({ readOnly: true })], c24.prototype, "effectiveMaxZoom", void 0), e2([y({ readOnly: true })], c24.prototype, "effectiveMinScale", void 0), e2([y({ readOnly: true })], c24.prototype, "effectiveMaxScale", void 0), e2([y()], c24.prototype, "lods", void 0), e2([y()], c24.prototype, "minZoom", void 0), e2([y()], c24.prototype, "maxZoom", void 0), e2([y()], c24.prototype, "minScale", void 0), e2([y()], c24.prototype, "maxScale", void 0), e2([y()], c24.prototype, "snapToZoom", void 0), c24 = a20 = e2([n4("esri.views.2d.constraints.ZoomConstraint")], c24);
var r16 = c24;

// node_modules/@arcgis/core/views/2d/MapViewConstraints.js
var p22 = { base: null, key: "type", typeMap: { extent: w2, polygon: v3 } };
var c25 = class extends m {
  constructor(o24) {
    super(o24), this.lods = null, this.minScale = 0, this.maxScale = 0, this.minZoom = -1, this.maxZoom = -1, this.rotationEnabled = true, this.snapToZoom = true;
  }
  destroy() {
    this.view = null;
  }
  get effectiveLODs() {
    return this._zoom.effectiveLODs;
  }
  get effectiveMinScale() {
    return this._zoom.effectiveMinScale;
  }
  get effectiveMaxScale() {
    return this._zoom.effectiveMaxScale;
  }
  get effectiveMinZoom() {
    return this._zoom.effectiveMinZoom;
  }
  get effectiveMaxZoom() {
    return this._zoom.effectiveMaxZoom;
  }
  set geometry(o24) {
    o24 ? this._set("geometry", o24) : this._set("geometry", null);
  }
  get version() {
    var _a, _b, _c;
    return `${(_a = this._zoom) == null ? void 0 : _a.uid}/${(_b = this._rotation) == null ? void 0 : _b.uid}/${(_c = this._geometry) == null ? void 0 : _c.uid}`;
  }
  get _defaultLODs() {
    var _a, _b, _c;
    const o24 = (_b = (_a = this.view) == null ? void 0 : _a.defaultsFromMap) == null ? void 0 : _b.tileInfo, e25 = (_c = this.view) == null ? void 0 : _c.spatialReference;
    return o24 && e25 && o24.spatialReference.equals(e25) ? o24.lods : null;
  }
  get _geometry() {
    var _a;
    return new y12({ geometry: this.geometry, spatialReference: (_a = this.view) == null ? void 0 : _a.spatialReference });
  }
  get _rotation() {
    return new i25({ rotationEnabled: this.rotationEnabled });
  }
  get _zoom() {
    const o24 = this._get("_zoom"), e25 = this.lods || this._defaultLODs, t23 = this.minZoom, r23 = this.maxZoom, s24 = this.minScale, i33 = this.maxScale, n30 = this.snapToZoom;
    return o24 && o24.lods === e25 && o24.minZoom === t23 && o24.maxZoom === r23 && o24.minScale === s24 && o24.maxScale === i33 && o24.snapToZoom === n30 ? o24 : new r16({ lods: e25, minZoom: t23, maxZoom: r23, minScale: s24, maxScale: i33, snapToZoom: n30 });
  }
  canZoomInTo(o24) {
    const e25 = this.effectiveMaxScale;
    return 0 === e25 || o24 >= e25;
  }
  canZoomOutTo(o24) {
    const e25 = this.effectiveMinScale;
    return 0 === e25 || o24 <= e25;
  }
  constrain(o24, e25) {
    return this._zoom.constrain(o24, e25), this._rotation.constrain(o24, e25), this._geometry.constrain(o24, e25), o24;
  }
  constrainByGeometry(o24) {
    return this._geometry.constrain(o24);
  }
  fit(o24) {
    return this._zoom.fit(o24);
  }
  zoomToScale(o24) {
    return this._zoom.zoomToScale(o24);
  }
  scaleToZoom(o24) {
    return this._zoom.scaleToZoom(o24);
  }
  snapScale(o24) {
    return this._zoom.snapToClosestScale(o24);
  }
  snapToNextScale(o24) {
    return this._zoom.snapToNextScale(o24);
  }
  snapToPreviousScale(o24) {
    return this._zoom.snapToPreviousScale(o24);
  }
};
e2([y({ readOnly: true })], c25.prototype, "effectiveLODs", null), e2([y({ readOnly: true })], c25.prototype, "effectiveMinScale", null), e2([y({ readOnly: true })], c25.prototype, "effectiveMaxScale", null), e2([y({ readOnly: true })], c25.prototype, "effectiveMinZoom", null), e2([y({ readOnly: true })], c25.prototype, "effectiveMaxZoom", null), e2([y({ types: p22, value: null })], c25.prototype, "geometry", null), e2([y({ type: [p3] })], c25.prototype, "lods", void 0), e2([y()], c25.prototype, "minScale", void 0), e2([y()], c25.prototype, "maxScale", void 0), e2([y()], c25.prototype, "minZoom", void 0), e2([y()], c25.prototype, "maxZoom", void 0), e2([y()], c25.prototype, "rotationEnabled", void 0), e2([y()], c25.prototype, "snapToZoom", void 0), e2([y()], c25.prototype, "view", void 0), e2([y({ readOnly: true })], c25.prototype, "version", null), e2([y()], c25.prototype, "_defaultLODs", null), e2([y({ type: y12 })], c25.prototype, "_geometry", null), e2([y({ type: i25 })], c25.prototype, "_rotation", null), e2([y({ readOnly: true, type: r16 })], c25.prototype, "_zoom", null), c25 = e2([n4("esri.views.2d.MapViewConstraints")], c25);
var u13 = c25;

// node_modules/@arcgis/core/core/libs/gl-matrix-2/types/vec2.js
function n24(n30) {
  return n30 instanceof Float32Array && n30.length >= 2;
}
function r17(n30) {
  return Array.isArray(n30) && n30.length >= 2;
}
function t15(t23) {
  return n24(t23) || r17(t23);
}

// node_modules/@arcgis/core/views/2d/ViewState.js
var b13;
var G4 = [0, 0];
var O2 = b13 = class extends l2 {
  constructor(t23) {
    super(t23), this._viewpoint2D = { center: n9(), rotation: 0, scale: 0, spatialReference: null }, this.center = [0, 0], this.extent = new w2(), this.id = 0, this.inverseTransform = e12(), this.resolution = 0, this.rotation = 0, this.scale = 0, this.transform = e12(), this.transformNoRotation = e12(), this.displayMat3 = e7(), this.displayViewMat3 = e7(), this.viewMat3 = e7(), this.viewMat2d = n10(), this.worldScreenWidth = 0, this.size = [0, 0];
  }
  set pixelRatio(t23) {
    this._set("pixelRatio", t23), this._update();
  }
  set size(t23) {
    this._set("size", t23), this._update();
  }
  set viewpoint(t23) {
    if (t23) {
      const s24 = this._viewpoint2D, i33 = t23.targetGeometry;
      s24.center[0] = i33.x, s24.center[1] = i33.y, s24.rotation = t23.rotation, s24.scale = t23.scale, s24.spatialReference = i33.spatialReference;
    }
    this._update();
  }
  copy(t23) {
    const s24 = this.size, i33 = this.viewpoint;
    return i33 && s24 ? (this.viewpoint = Z(i33, t23.viewpoint), this._set("size", a9(s24, t23.size))) : (this.viewpoint = t23.viewpoint.clone(), this._set("size", [t23.size[0], t23.size[1]])), this._set("pixelRatio", t23.pixelRatio), this;
  }
  clone() {
    return new b13({ size: this.size, viewpoint: this.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
  toMap(t23, s24, i33) {
    return t15(s24) ? z(t23, s24, this.inverseTransform) : (G4[0] = s24, G4[1] = i33, z(t23, G4, this.inverseTransform));
  }
  toScreen(t23, s24, i33) {
    return t15(s24) ? z(t23, s24, this.transform) : (G4[0] = s24, G4[1] = i33, z(t23, G4, this.transform));
  }
  toScreenNoRotation(t23, s24, i33) {
    return t15(s24) ? z(t23, s24, this.transformNoRotation) : (G4[0] = s24, G4[1] = i33, z(t23, G4, this.transformNoRotation));
  }
  getScreenTransform(t23, s24) {
    const { center: i33 } = this._viewpoint2D, e25 = this._get("pixelRatio") || 1, o24 = this._get("size");
    return ut(t23, i33, o24, s24, 0, e25), t23;
  }
  _update() {
    const { center: t23, spatialReference: i33, scale: e25, rotation: o24 } = this._viewpoint2D, c36 = this._get("pixelRatio") || 1, m25 = this._get("size"), d16 = new u3({ targetGeometry: new w(t23[0], t23[1], i33), scale: e25, rotation: o24 });
    if (this._set("viewpoint", d16), !m25 || !i33 || !e25)
      return;
    this.resolution = ot(d16), this.rotation = o24, this.scale = e25, this.spatialReference = i33, a9(this.center, t23);
    const y15 = 0 !== m25[0] ? 2 / m25[0] : 0, _11 = 0 !== m25[1] ? -2 / m25[1] : 0;
    s8(this.displayMat3, y15, 0, 0, 0, _11, 0, -1, 1, 1);
    const x5 = r7(this.viewMat3), z8 = t10(m25[0] / 2, m25[1] / 2), g18 = t10(-m25[0] / 2, -m25[1] / 2), D3 = r2(o24);
    M3(x5, x5, z8), h4(x5, x5, D3), M3(x5, x5, g18), i9(this.displayViewMat3, this.displayMat3, x5);
    const b15 = f4(this.viewMat2d, z8);
    return e8(b15, b15, D3), i12(b15, b15, g18), _2(this.extent, d16, m25), ft(this.transform, d16, m25, c36), r10(this.inverseTransform, this.transform), lt(this.transformNoRotation, d16, m25, c36), this.worldScreenWidth = yt(this.spatialReference, this.resolution), this._set("id", this.id + 1), this;
  }
};
e2([y({ readOnly: true })], O2.prototype, "id", void 0), e2([y({ value: 1, json: { write: true } })], O2.prototype, "pixelRatio", null), e2([y({ json: { write: true } })], O2.prototype, "size", null), e2([y()], O2.prototype, "spatialReference", void 0), e2([y({ type: u3, json: { write: true } })], O2.prototype, "viewpoint", null), O2 = b13 = e2([n4("esri.views.2d.ViewState")], O2);
var U7 = O2;

// node_modules/@arcgis/core/views/2d/PaddedViewState.js
var l20;
var m18;
var w16 = l20 = class extends m {
  constructor() {
    super(...arguments), this.left = 0, this.top = 0, this.right = 0, this.bottom = 0;
  }
  clone() {
    return new l20({ left: this.left, top: this.top, right: this.right, bottom: this.bottom });
  }
};
e2([y()], w16.prototype, "left", void 0), e2([y()], w16.prototype, "top", void 0), e2([y()], w16.prototype, "right", void 0), e2([y()], w16.prototype, "bottom", void 0), w16 = l20 = e2([n4("esri.views.2d.PaddedViewState.Padding")], w16);
var u14 = m18 = class extends U7 {
  constructor(...t23) {
    super(...t23), this.paddedViewState = new U7(), this._updateContent = (() => {
      const t24 = n9();
      return () => {
        const e25 = this._get("size"), i33 = this._get("padding");
        if (!e25 || !i33)
          return;
        const o24 = this.paddedViewState;
        r6(t24, i33.left + i33.right, i33.top + i33.bottom), o4(t24, e25, t24), a9(o24.size, t24);
        const s24 = o24.viewpoint;
        s24 && (this.viewpoint = s24);
      };
    })(), this.addHandles(l3(() => [this.size, this.padding], () => this._updateContent(), U2)), this.padding = new w16(), this.size = [0, 0];
  }
  set padding(t23) {
    this._set("padding", t23 || new w16());
  }
  set viewpoint(t23) {
    if (t23) {
      const e25 = t23.clone();
      this.paddedViewState.viewpoint = t23, gt(e25, t23, this._get("size"), this._get("padding"));
      const i33 = this._viewpoint2D, o24 = e25.targetGeometry;
      i33.center[0] = o24.x, i33.center[1] = o24.y, i33.rotation = e25.rotation, i33.scale = e25.scale, i33.spatialReference = o24.spatialReference, this._update();
    }
  }
  clone() {
    return new m18({ padding: this.padding.clone(), size: this.size.slice(), viewpoint: this.paddedViewState.viewpoint.clone(), pixelRatio: this.pixelRatio });
  }
};
e2([y()], u14.prototype, "paddedViewState", void 0), e2([y({ type: w16 })], u14.prototype, "padding", null), e2([y()], u14.prototype, "viewpoint", null), u14 = m18 = e2([n4("esri.views.2d.PaddedViewState")], u14);
var f12 = u14;

// node_modules/@arcgis/core/views/input/handlers/support.js
function t16(t23, r23) {
  switch (r23) {
    case "primary":
      return "touch" === t23.pointerType || 0 === t23.button;
    case "secondary":
      return "touch" !== t23.pointerType && 2 === t23.button;
    case "tertiary":
      return "touch" !== t23.pointerType && 1 === t23.button;
  }
}

// node_modules/@arcgis/core/views/2d/input/handlers/DoubleClickZoom.js
var a21 = class extends i13 {
  constructor(t23, i33) {
    super(true), this._view = t23, this.registerIncoming("double-click", i33, (t24) => this._handleDoubleClick(t24, i33));
  }
  _handleDoubleClick(t23, a32) {
    t16(t23.data, "primary") && (t23.stopPropagation(), a32 ? this._view.mapViewNavigation.zoomOut([t23.data.x, t23.data.y]) : this._view.mapViewNavigation.zoomIn([t23.data.x, t23.data.y]));
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DoubleTapDragZoom.js
var e19 = class extends i13 {
  constructor(t23, e25, a32) {
    super(true), this.view = t23, this.pointerType = e25, this.registerIncoming("double-tap-drag", a32, (t24) => this._handleDoubleTapDrag(t24));
  }
  _handleDoubleTapDrag(t23) {
    const { data: e25 } = t23, { pointerType: a32 } = e25;
    if (a32 !== this.pointerType)
      return;
    t23.stopPropagation();
    const { action: s24, delta: i33 } = e25, { view: r23 } = this, { mapViewNavigation: n30 } = r23;
    switch (s24) {
      case "begin": {
        const { scale: t24 } = r23;
        this._startScale = t24, this._currentScale = t24, this._previousDelta = i33, n30.begin();
        break;
      }
      case "update": {
        if (this._previousDelta.y === i33.y)
          return;
        this._previousDelta = i33;
        const t24 = 1.015 ** i33.y, e26 = this._startScale * t24, a33 = e26 / this._currentScale;
        n30.setViewpointImmediate(a33), this._currentScale = e26;
        break;
      }
      case "end": {
        const { constraints: t24 } = r23, { effectiveLODs: e26, snapToZoom: a33 } = t24;
        if (!a33 || !e26)
          return void n30.end();
        const s25 = t24.snapScale(this._currentScale), o24 = (i33.y > 0 ? Math.max(s25, t24.snapToPreviousScale(this._startScale)) : Math.min(s25, t24.snapToNextScale(this._startScale))) / this._currentScale;
        n30.zoom(o24);
        break;
      }
    }
  }
};

// node_modules/@arcgis/core/views/input/DragEventSeparator.js
var t17 = class {
  constructor(t23) {
    this._callbacks = t23, this._currentCount = 0, this._callbacks.condition || (this._callbacks.condition = () => true);
  }
  handle(t23) {
    const s24 = t23.data, i33 = s24.pointers.size;
    switch (s24.action) {
      case "start":
        this._currentCount = i33, this._emitStart(t23);
        break;
      case "added":
        this._emitEnd(this._previousEvent), this._currentCount = i33, this._emitStart(t23);
        break;
      case "update":
        this._emitUpdate(t23);
        break;
      case "removed":
        this._startEvent && this._emitEnd(this._previousEvent), this._currentCount = i33, this._emitStart(t23);
        break;
      case "end":
        this._emitEnd(t23), this._currentCount = 0;
    }
    this._previousEvent = t23;
  }
  _emitStart(t23) {
    var _a, _b;
    this._startEvent = t23, ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t23)) && this._callbacks.start(this._currentCount, t23, this._startEvent);
  }
  _emitUpdate(t23) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t23)) && this._callbacks.update(this._currentCount, t23, this._startEvent);
  }
  _emitEnd(t23) {
    var _a, _b;
    ((_b = (_a = this._callbacks).condition) == null ? void 0 : _b.call(_a, this._currentCount, t23)) && this._callbacks.end(this._currentCount, t23, this._startEvent), this._startEvent = null;
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DragPan.js
var n25 = class extends i13 {
  constructor(t23, i33, a32) {
    super(true), this.view = t23, this.pointerAction = i33, this.registerIncoming("drag", a32, (t24) => this._handleDrag(t24)), this.registerIncoming("pointer-down", () => this.stopMomentumNavigation());
  }
  onInstall(i33) {
    super.onInstall(i33), this._dragEventSeparator = new t17({ start: (t23, i34) => {
      this.view.mapViewNavigation.pan.begin(this.view, i34.data), i34.stopPropagation();
    }, update: (t23, i34) => {
      this.view.mapViewNavigation.pan.update(this.view, i34.data), i34.stopPropagation();
    }, end: (t23, i34) => {
      this.view.mapViewNavigation.pan.end(this.view, i34.data), i34.stopPropagation();
    }, condition: (t23, i34) => 1 === t23 && t16(i34.data, this.pointerAction) });
  }
  _handleDrag(t23) {
    const i33 = this.view.mapViewNavigation;
    i33.pinch.zoomMomentum || i33.pinch.rotateMomentum ? this.stopMomentumNavigation() : this._dragEventSeparator.handle(t23);
  }
  stopMomentumNavigation() {
    this.view.mapViewNavigation.pan.stopMomentumNavigation();
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/DragRotate.js
var o19 = class extends i13 {
  constructor(a32, o24, r23) {
    super(true), this._view = a32, this.pointerAction = o24;
    const e25 = this._view.mapViewNavigation;
    this._dragEventSeparator = new t17({ start: (t23, a33) => {
      e25.rotate.begin(this._view, a33.data), a33.stopPropagation();
    }, update: (t23, a33) => {
      e25.rotate.update(this._view, a33.data), a33.stopPropagation();
    }, end: (t23, a33) => {
      e25.rotate.end(), a33.stopPropagation();
    }, condition: (t23, a33) => 1 === t23 && t16(a33.data, this.pointerAction) }), this.registerIncoming("drag", r23, (t23) => this._dragEventSeparator.handle(t23));
  }
};

// node_modules/@arcgis/core/views/navigation/gamepadAndKeyboardUtils.js
function n26(t23) {
  let n30 = t23 * t23;
  return t23 < 0 && (n30 *= -1), n30;
}
function a22(t23) {
  return t23.translation[0] = 0, t23.translation[1] = 0, t23.translation[2] = 0, t23.heading = 0, t23.tilt = 0, t23;
}
function i26(a32, i33, o24) {
  const s24 = o24, e25 = a32.state, r23 = a32.device, l27 = "forward-down" === i33.tiltDirection ? 1 : -1, c36 = 1;
  return "standard" === r23.deviceType ? (s24.translation[0] = n26(e25.axes[0]), s24.translation[1] = n26(e25.axes[1]), s24.translation[2] = n26(e25.buttons[7]) - n26(e25.buttons[6]), s24.heading = n26(e25.axes[2]), s24.tilt = n26(e25.axes[3])) : "spacemouse" === r23.deviceType && (s24.translation[0] = 1.2 * n26(e25.axes[0]), s24.translation[1] = 1.2 * n26(e25.axes[1]), s24.translation[2] = 2 * -n26(e25.axes[2]), s24.heading = 1.2 * n26(e25.axes[5]), s24.tilt = 1.2 * n26(e25.axes[3])), s24.tilt *= l27, g(s24.translation, s24.translation, c36), s24;
}
function s19(t23) {
  return 0 === t23.translation[0] && 0 === t23.translation[1] && 0 === t23.translation[2] && 0 === t23.heading && 0 === t23.tilt && 0 === t23.zoom;
}

// node_modules/@arcgis/core/views/2d/input/handlers/GamepadNavigation.js
var d13 = class extends i13 {
  constructor(i33) {
    super(true), this._view = i33, this._frameTask = null, this._watchHandles = new t4(), this._currentDevice = null, this._transformation = { translation: [0, 0, 0], heading: 0, tilt: 0, zoom: 0 }, this._handle = this.registerIncoming("gamepad", (t23) => this._handleGamePadEvent(t23)), this._handle.pause();
  }
  onInstall(t23) {
    super.onInstall(t23), this._watchHandles.add([l3(() => {
      var _a;
      return (_a = this._view.navigation.gamepad) == null ? void 0 : _a.enabled;
    }, (t24) => {
      t24 ? (this._handle.resume(), this._frameTask || (this._frameTask = A2({ update: (t25) => this._frameUpdate(t25.deltaTime) }))) : (this._handle.pause(), this._frameTask && (this._frameTask.remove(), this._frameTask = null));
    }, h2)]);
  }
  onUninstall() {
    this._watchHandles.removeAll(), this._frameTask && (this._frameTask.remove(), this._frameTask = null), super.onUninstall();
  }
  _handleGamePadEvent(t23) {
    const i33 = this._view.navigation.gamepad.device;
    i33 && t23.data.device !== i33 || this._currentDevice && this._currentDevice !== t23.data.device || ("end" === t23.data.action ? (this._currentDevice = null, a22(this._transformation)) : (this._currentDevice = t23.data.device, i26(t23.data, this._view.navigation.gamepad, this._transformation)));
  }
  _frameUpdate(t23) {
    const i33 = this._transformation;
    if (s19(i33))
      return;
    const e25 = this._view.viewpoint.clone(), a32 = this._view.navigation.gamepad.velocityFactor, r23 = _8 * a32 * t23;
    St(e25, e25, [i33.translation[0] * r23, -i33.translation[1] * r23]);
    const o24 = 1 + i33.translation[2] * c26 * t23, h18 = this._view.constraints.rotationEnabled ? -i33.heading * m19 * t23 : 0, d16 = this._view.size, v14 = [d16[0] / 2, d16[1]];
    Gt(e25, e25, o24, h18, v14, d16);
    const p34 = this._view.constraints.constrain(e25, this._view.viewpoint);
    this._view.viewpoint = p34;
  }
};
var m19 = 0.06;
var _8 = 0.7;
var c26 = 6e-4;

// node_modules/@arcgis/core/views/2d/input/handlers/KeyPan.js
var i27 = class extends i13 {
  constructor(e25, i33, t23) {
    super(true), this.view = e25, this.keys = i33, this._pressed = false, this._keyMap = { [i33.left]: "left", [i33.right]: "right", [i33.up]: "up", [i33.down]: "down" }, this.registerIncoming("key-down", t23, (e26) => this._handleKeyDown(e26)), this.registerIncoming("key-up", t23, (e26) => this._handleKeyUp(e26)), this.registerIncoming("blur", t23, () => this._handleBlur());
  }
  _handleKeyDown(e25) {
    e25.data.repeat || this._handleKey(e25, true);
  }
  _handleKeyUp(e25) {
    this._handleKey(e25, false);
  }
  _handleBlur() {
    this._pressed && (this._pressed = false, this.view.mapViewNavigation.stop());
  }
  _handleKey(e25, i33) {
    const t23 = this._keyMap[e25.data.key];
    if (this._pressed = null != t23, this._pressed) {
      if (i33)
        switch (this.view.mapViewNavigation.begin(), t23) {
          case "left":
            this.view.mapViewNavigation.continousPanLeft();
            break;
          case "right":
            this.view.mapViewNavigation.continousPanRight();
            break;
          case "up":
            this.view.mapViewNavigation.continousPanUp();
            break;
          case "down":
            this.view.mapViewNavigation.continousPanDown();
        }
      else
        this._pressed = false, this.view.mapViewNavigation.stop();
      e25.stopPropagation();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/KeyRotate.js
var i28 = class extends i13 {
  constructor(e25, i33, t23) {
    super(true), this.view = e25, this.keys = i33, this._pressed = false, this._keyToDirection = { [i33.clockwiseOption1]: "clockwise", [i33.clockwiseOption2]: "clockwise", [i33.counterClockwiseOption1]: "counterClockwise", [i33.counterClockwiseOption2]: "counterClockwise", [i33.resetOption1]: "reset", [i33.resetOption2]: "reset" }, this.registerIncoming("key-down", t23, (e26) => this._handleKeyDown(e26)), this.registerIncoming("key-up", t23, (e26) => this._handleKeyUp(e26)), this.registerIncoming("blur", t23, () => this._handleBlur());
  }
  _handleKeyDown(e25) {
    e25.data.repeat || this._handleKey(e25, true);
  }
  _handleKeyUp(e25) {
    this._handleKey(e25, false);
  }
  _handleBlur() {
    this._pressed && (this._pressed = false, this.view.mapViewNavigation.stop());
  }
  _handleKey(e25, i33) {
    const t23 = e25.modifiers;
    if (t23.size > 0 && !t23.has("Shift") || !this.view.constraints.rotationEnabled)
      return;
    const s24 = this._keyToDirection[e25.data.key];
    if (this._pressed = null != s24, this._pressed) {
      if (i33)
        switch (this.view.mapViewNavigation.begin(), s24) {
          case "clockwise":
            this.view.mapViewNavigation.continousRotateClockwise();
            break;
          case "counterClockwise":
            this.view.mapViewNavigation.continousRotateCounterclockwise();
            break;
          case "reset":
            this.view.mapViewNavigation.resetRotation();
        }
      else
        this._pressed = false, this.view.mapViewNavigation.stop();
      e25.stopPropagation();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/KeyZoom.js
var t18;
!function(o24) {
  o24[o24.IN = 0] = "IN", o24[o24.OUT = 1] = "OUT";
}(t18 || (t18 = {}));
var e20 = class extends i13 {
  constructor(o24, e25, i33) {
    super(true), this.view = o24, this.keys = e25, this._keysToZoomAction = {}, this.registerIncoming("key-down", i33, (o25) => this._handleKeyDown(o25)), e25.zoomIn.forEach((o25) => this._keysToZoomAction[o25] = t18.IN), e25.zoomOut.forEach((o25) => this._keysToZoomAction[o25] = t18.OUT);
  }
  _handleKeyDown(o24) {
    this._handleKey(o24);
  }
  _handleKey(o24) {
    const e25 = o24.modifiers;
    if (e25.size > 0 && !e25.has("Shift"))
      return;
    const { key: i33 } = o24.data;
    if (!(i33 in this._keysToZoomAction))
      return;
    const n30 = this._keysToZoomAction[i33], { mapViewNavigation: s24 } = this.view;
    let r23 = null;
    switch (n30) {
      case t18.IN:
        r23 = s24.zoomIn();
        break;
      case t18.OUT:
        r23 = s24.zoomOut();
        break;
      default:
        return;
    }
    s24.begin(), r23.then(() => s24.end()), o24.stopPropagation();
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/MouseWheelZoom.js
var t19 = 0.6;
var o20 = class extends i13 {
  constructor(e25, t23) {
    super(true), this._view = e25, this._canZoom = true, this.registerIncoming("mouse-wheel", t23, (e26) => this._handleMouseWheel(e26));
  }
  _handleMouseWheel(e25) {
    if (!this._view.navigation.mouseWheelZoomEnabled)
      return;
    if (e25.preventDefault(), e25.stopPropagation(), !this._canZoom)
      return;
    const o24 = this._view.mapViewNavigation, { x: n30, y: i33, deltaY: s24 } = e25.data, a32 = 1 / t19 ** (1 / 60 * s24), h18 = o24.zoom(a32, [n30, i33]);
    h18 && (this._canZoom = false, h18.catch(() => {
    }).then(() => {
      this._canZoom = true, o24.end();
    }));
  }
};

// node_modules/@arcgis/core/views/2d/input/handlers/PinchAction.js
var a23 = class extends i13 {
  constructor(i33) {
    super(true), this.view = i33, this.registerIncoming("drag", (t23) => this._handleDrag(t23)), this.registerIncoming("pointer-down", () => this._stopMomentumNavigation());
    const a32 = this.view.mapViewNavigation;
    this._dragEventSeparator = new t17({ start: (t23, i34) => {
      a32.pinch.begin(this.view, i34.data), i34.stopPropagation();
    }, update: (t23, i34) => {
      a32.pinch.update(this.view, i34.data), i34.stopPropagation();
    }, end: (t23, i34) => {
      a32.pinch.end(this.view), i34.stopPropagation();
    }, condition: (t23) => t23 >= 2 });
  }
  _handleDrag(t23) {
    this._dragEventSeparator.handle(t23);
  }
  _stopMomentumNavigation() {
    this.view.mapViewNavigation.pinch.stopMomentumNavigation();
  }
};

// node_modules/@arcgis/core/views/input/gamepad/GamepadState.js
function t20(t23) {
  const n30 = t23.native;
  return n30 ? { buttons: n30.buttons.map((t24) => t24.pressed ? t24.value ? t24.value : 1 : 0), axes: n30.axes.map((n31) => s20(n31, t23.axisThreshold)) } : { buttons: [], axes: [] };
}
function n27(t23, n30) {
  if (t23.axes.length !== n30.axes.length)
    return false;
  if (t23.buttons.length !== n30.buttons.length)
    return false;
  for (let e25 = 0; e25 < t23.axes.length; e25++)
    if (t23.axes[e25] !== n30.axes[e25])
      return false;
  for (let e25 = 0; e25 < t23.buttons.length; e25++)
    if (t23.buttons[e25] !== n30.buttons[e25])
      return false;
  return true;
}
function e21(t23) {
  for (let n30 = 0; n30 < t23.axes.length; n30++)
    if (0 !== t23.axes[n30])
      return false;
  for (let n30 = 0; n30 < t23.buttons.length; n30++)
    if (0 !== t23.buttons[n30])
      return false;
  return true;
}
function s20(t23, n30) {
  const e25 = Math.abs(t23);
  return e25 < n30 ? 0 : Math.sign(t23) * (e25 - n30) / (1 - n30);
}

// node_modules/@arcgis/core/views/input/gamepad/GamepadSource.js
var a24 = class {
  constructor(e25, t23) {
    this._element = e25, this._input = t23, this._hasEventListeners = false, this._onConnectGamepad = (e26) => {
      this._connectGamepad(e26.gamepad);
    }, this._onDisconnectGamepad = (e26) => {
      const t24 = e26.gamepad, i34 = t24.index, n31 = this._inputDevices[i34];
      n31 && (this._emitGamepadEvent(t24, t20(n31), false), this._inputDevices.splice(i34, 1), this._latestUpdate.splice(i34, 1), this._input.gamepad.devices.remove(n31), this.ensurePollingState());
    }, this._frameTask = null, this._latestUpdate = new Array(), this._inputDevices = new Array(), this._callback = null;
    const i33 = "getGamepads" in window.navigator, n30 = window.isSecureContext;
    this.supported = i33 && n30, this.supported && (this._forEachGamepad((e26) => this._connectGamepad(e26)), window.addEventListener("gamepadconnected", this._onConnectGamepad), window.addEventListener("gamepaddisconnected", this._onDisconnectGamepad), this.ensurePollingState());
  }
  destroy() {
    this.hasEventListeners = false, this.supported && (window.removeEventListener("gamepadconnected", this._onConnectGamepad), window.removeEventListener("gamepaddisconnected", this._onDisconnectGamepad));
  }
  set hasEventListeners(e25) {
    this._hasEventListeners !== e25 && (this._hasEventListeners = e25, this.ensurePollingState());
  }
  get _eventsEnabled() {
    return this.supported && this._inputDevices.length > 0 && this._hasEventListeners;
  }
  set onEvent(e25) {
    this._callback = e25;
  }
  _connectGamepad(e25) {
    const s24 = new a14(e25);
    "unknown" !== s24.deviceType && (this._inputDevices[e25.index] = s24, this._input.gamepad.devices.add(s24)), this.ensurePollingState();
  }
  ensurePollingState() {
    this._eventsEnabled ? this._startPolling() : this._stopPolling();
  }
  _startPolling() {
    null == this._frameTask && (this._frameTask = A2({ update: () => this._readGamepadState() }));
  }
  _stopPolling() {
    null != this._frameTask && (this._frameTask.remove(), this._frameTask = null, this._latestUpdate = new Array());
  }
  _readGamepadState() {
    const e25 = document.hasFocus(), t23 = this._element.contains(document.activeElement), a32 = "document" === this._input.gamepad.enabledFocusMode && !e25 || "view" === this._input.gamepad.enabledFocusMode && !t23;
    this._forEachGamepad((e26) => {
      const t24 = this._inputDevices[e26.index];
      if (!t24)
        return;
      const d16 = this._latestUpdate[e26.index], o24 = t20(t24), r23 = a32 || e21(o24);
      if (d16) {
        if (d16.timestamp === e26.timestamp)
          return;
        if (!d16.active && r23)
          return;
        if (n27(d16.state, o24))
          return;
      }
      this._emitGamepadEvent(e26, o24, !r23);
    });
  }
  _forEachGamepad(e25) {
    const t23 = window.navigator.getGamepads();
    for (let s24 = 0; s24 < t23.length; s24++) {
      const i33 = t23[s24];
      this._validate(i33) && e25(i33);
    }
  }
  _emitGamepadEvent(e25, t23, s24) {
    const i33 = this._latestUpdate[e25.index], n30 = i33 && i33.active;
    if (!n30 && !s24)
      return;
    const a32 = !n30 && s24 ? "start" : n30 && s24 ? "update" : "end";
    this._latestUpdate[e25.index] = { timestamp: e25.timestamp, state: t23, active: s24 }, this._callback && this._callback({ device: this._inputDevices[e25.index], state: t23, action: a32 });
  }
  _validate(e25) {
    if (!e25)
      return false;
    if (!e25.connected)
      return false;
    for (let t23 = 0; t23 < e25.axes.length; t23++)
      if (isNaN(e25.axes[t23]))
        return false;
    return true;
  }
};

// node_modules/@arcgis/core/views/input/BrowserEventSource.js
var o21 = has("trident");
var a25 = has("edge");
var s21 = has("chrome");
var r18 = has("ff");
var h15 = has("safari");
var l21 = { touchNone: "esri-view-surface--touch-none", touchPan: "esri-view-surface--touch-pan" };
var u15 = class {
  constructor(e25, t23) {
    this._input = t23, this._active = {}, this._activePointerCaptures = /* @__PURE__ */ new Set(), this._keyDownState = /* @__PURE__ */ new Set(), this._eventId = 1, this._browserTouchPanningEnabled = false, this._element = e25, e25.getAttribute("tabindex") || e25.setAttribute("tabindex", "0"), this._eventHandlers = { "key-down": this._handleKey, "key-up": this._handleKey, "pointer-down": this._handlePointer, "pointer-move": this._handlePointerPreventDefault, "pointer-up": this._handlePointerPreventDefault, "pointer-enter": this._handlePointer, "pointer-leave": this._handlePointer, "pointer-cancel": this._handlePointer, "mouse-wheel": this._handleMouseWheel, "pointer-capture-lost": this._handlePointerCaptureLost }, this._updateTouchAction(), this._element.addEventListener("keydown", this._preventAltKeyDefault), this._gamepadSource = new a24(e25, this._input), this._gamepadSource.onEvent = (e26) => this._callback("gamepad", e26);
  }
  destroy() {
    this._callback = null, this.activeEvents = null, this._activePointerCaptures.forEach((e25) => {
      this._releasePointerCaptureSafe(e25);
    }), this._gamepadSource = s(this._gamepadSource), this._activePointerCaptures = null, this._removeTouchAction(), this._element.removeEventListener("keydown", this._preventAltKeyDefault);
  }
  get browserTouchPanningEnabled() {
    return this._browserTouchPanningEnabled;
  }
  set browserTouchPanningEnabled(e25) {
    this._browserTouchPanningEnabled = e25, this._updateTouchAction(), this._updateTouchEventHandling();
  }
  set onEventReceived(e25) {
    this._callback = e25;
  }
  set activeEvents(e25) {
    for (const t23 in this._active)
      if (!e25 || !e25.has(t23)) {
        const e26 = this._active[t23];
        this._element.removeEventListener(c27[t23], e26), delete this._active[t23];
      }
    e25 && e25.forEach((e26) => {
      if (!this._active[e26] && c27[e26]) {
        const t23 = (this._eventHandlers[e26] || this._handleDefault).bind(this, e26);
        this._element.addEventListener(c27[e26], t23), this._active[e26] = t23;
      }
    }), this._gamepadSource.hasEventListeners = e25 && e25.has("gamepad");
  }
  setPointerCapture(e25, t23) {
    t23 ? (this._element.setPointerCapture(e25.pointerId), this._activePointerCaptures.add(e25.pointerId)) : (this._releasePointerCaptureSafe(e25.pointerId), this._activePointerCaptures.delete(e25.pointerId));
  }
  _updateTouchAction() {
    this._element.classList.remove(this._browserTouchPanningEnabled ? l21.touchNone : l21.touchPan), this._element.classList.add(this._browserTouchPanningEnabled ? l21.touchPan : l21.touchNone);
  }
  _updateTouchEventHandling() {
    this._browserTouchPanningEnabled ? this._element.addEventListener("touchmove", this._preventMultiTouchPanning) : this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _removeTouchAction() {
    this._element.classList.remove(l21.touchNone), this._element.classList.remove(l21.touchPan), this._element.removeEventListener("touchmove", this._preventMultiTouchPanning);
  }
  _releasePointerCaptureSafe(e25) {
    try {
      if (this._element.hasPointerCapture && !this._element.hasPointerCapture(e25))
        return;
      this._element.releasePointerCapture(e25);
    } catch (t23) {
    }
  }
  _updateNormalizedPointerLikeEvent(e25, t23) {
    const n30 = i14(this._element, e25);
    return u15.test.disableSubpixelCoordinates && (n30.x = Math.round(n30.x), n30.y = Math.round(n30.y)), t23.x = n30.x, t23.y = n30.y, t23;
  }
  _handleKey(e25, n30) {
    const i33 = o5(n30);
    i33 && "key-up" === e25 && this._keyDownState.delete(i33);
    const o24 = { native: n30, key: i33, repeat: i33 && this._keyDownState.has(i33) };
    i33 && "key-down" === e25 && this._keyDownState.add(o24.key), this._callback(e25, o24);
  }
  _handlePointer(e25, t23) {
    const n30 = this._updateNormalizedPointerLikeEvent(t23, { native: t23, x: 0, y: 0, pointerType: t23.pointerType, button: t23.button, buttons: t23.buttons, eventId: this._eventId++ });
    this._callback(e25, n30);
  }
  _handlePointerPreventDefault(e25, t23) {
    const n30 = this._updateNormalizedPointerLikeEvent(t23, { native: t23, x: 0, y: 0, pointerType: t23.pointerType, button: t23.button, buttons: t23.buttons, eventId: this._eventId++ });
    t23.preventDefault(), this._callback(e25, n30);
  }
  _handleMouseWheel(e25, t23) {
    let n30 = t23.deltaY;
    switch (t23.deltaMode) {
      case 0:
        (o21 || a25) && (n30 = n30 / document.documentElement.clientHeight * 600);
        break;
      case 1:
        n30 *= 30;
        break;
      case 2:
        n30 *= 900;
    }
    o21 || a25 ? n30 *= 0.7 : s21 || h15 ? n30 *= 0.6 : r18 && (n30 *= 1.375);
    const i33 = 100, l27 = Math.abs(n30);
    if (l27 > i33) {
      const e26 = 0.02;
      n30 = n30 / l27 * 200 / (1 + Math.exp(-e26 * (l27 - i33)));
    }
    const u19 = this._updateNormalizedPointerLikeEvent(t23, { native: t23, x: 0, y: 0, deltaY: n30 });
    this._callback(e25, u19);
  }
  _handlePointerCaptureLost(e25, t23) {
    this._activePointerCaptures.delete(t23.pointerId), this._handleDefault(e25, t23);
  }
  _handleDefault(e25, t23) {
    const n30 = { native: t23 };
    t23.preventDefault(), this._callback(e25, n30);
  }
  _preventAltKeyDefault(e25) {
    "Alt" === e25.key && e25.preventDefault();
  }
  _preventMultiTouchPanning(e25) {
    e25.touches.length > 1 && e25.preventDefault();
  }
};
u15.test = { disableSubpixelCoordinates: false };
var c27 = { "key-down": "keydown", "key-up": "keyup", "pointer-down": "pointerdown", "pointer-up": "pointerup", "pointer-move": "pointermove", "mouse-wheel": "wheel", "pointer-capture-got": "gotpointercapture", "pointer-capture-lost": "lostpointercapture", "context-menu": "contextmenu", "pointer-enter": "pointerenter", "pointer-leave": "pointerleave", "pointer-cancel": "pointercancel", focus: "focus", blur: "blur" };

// node_modules/@arcgis/core/views/input/handlers/PreventContextMenu.js
var e22 = class extends i13 {
  constructor() {
    super(true), this.registerIncoming("context-menu", (t23) => {
      t23.data.native.preventDefault();
    });
  }
};

// node_modules/@arcgis/core/views/input/recognizers/support.js
function e23(t23, e25) {
  return Math.abs(e25.x - t23.x) + Math.abs(e25.y - t23.y);
}
function n28(t23, e25) {
  const n30 = e25.x - t23.x, r23 = e25.y - t23.y;
  return Math.sqrt(n30 * n30 + r23 * r23);
}
function r19(e25, n30) {
  if (n30 ? (n30.radius = 0, n30.center.x = 0, n30.center.y = 0) : n30 = { radius: 0, center: c2() }, 0 === e25.length)
    return n30;
  if (1 === e25.length)
    return n30.center.x = e25[0].x, n30.center.y = e25[0].y, n30;
  if (2 === e25.length) {
    const [t23, r24] = e25, [c37, o25] = [r24.x - t23.x, r24.y - t23.y];
    return n30.radius = Math.sqrt(c37 * c37 + o25 * o25) / 2, n30.center.x = (t23.x + r24.x) / 2, n30.center.y = (t23.y + r24.y) / 2, n30;
  }
  let r23 = 0, c36 = 0;
  for (let t23 = 0; t23 < e25.length; t23++)
    r23 += e25[t23].x, c36 += e25[t23].y;
  r23 /= e25.length, c36 /= e25.length;
  const o24 = e25.map((t23) => t23.x - r23), s24 = e25.map((t23) => t23.y - c36);
  let u19 = 0, i33 = 0, x5 = 0, y15 = 0, a32 = 0, h18 = 0, l27 = 0;
  for (let t23 = 0; t23 < o24.length; t23++) {
    const e26 = o24[t23], n31 = s24[t23], r24 = e26 * e26, c37 = n31 * n31;
    u19 += r24, i33 += c37, x5 += e26 * n31, y15 += r24 * e26, a32 += c37 * n31, h18 += e26 * c37, l27 += n31 * r24;
  }
  const f15 = 0.5 * (y15 + h18), g18 = 0.5 * (a32 + l27), p34 = u19 * i33 - x5 * x5, d16 = (f15 * i33 - g18 * x5) / p34, m25 = (u19 * g18 - x5 * f15) / p34, M6 = c2(d16 + r23, m25 + c36);
  return { radius: Math.sqrt(d16 * d16 + m25 * m25 + (u19 + i33) / e25.length), center: M6 };
}
function c28(t23) {
  const { native: e25 } = t23, { pointerId: n30, button: r23, pointerType: c36 } = e25;
  return "mouse" === c36 ? `${n30}:${r23}` : `${c36}`;
}

// node_modules/@arcgis/core/views/input/recognizers/SingleAndDoubleClick.js
var l22 = { maximumDoubleClickDelay: 250, maximumDoubleClickDistance: 10, maximumDoubleTouchDelay: 350, maximumDoubleTouchDistance: 35 };
var m20 = class extends i13 {
  constructor(t23 = l22.maximumDoubleClickDelay, i33 = l22.maximumDoubleClickDistance, o24 = l22.maximumDoubleTouchDelay, n30 = l22.maximumDoubleTouchDistance, s24 = t6) {
    super(false), this._maximumDoubleClickDelay = t23, this._maximumDoubleClickDistance = i33, this._maximumDoubleTouchDelay = o24, this._maximumDoubleTouchDistance = n30, this._clock = s24, this._pointerState = /* @__PURE__ */ new Map(), this._click = this.registerOutgoing("click"), this._doubleClick = this.registerOutgoing("double-click"), this.registerIncoming("immediate-click", this._handleImmediateClick.bind(this)), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((e25) => e25.doubleClickTimer = h(e25.doubleClickTimer));
  }
  get hasPendingInputs() {
    return n2(this._pointerState, (e25) => null != e25.doubleClickTimer);
  }
  _clearDoubleClickTimer(e25, t23) {
    const o24 = this._pointerState.get(e25);
    o24 && (o24.doubleClickTimer = h(o24.doubleClickTimer), t23 && this._click.emit(o24.event.data, void 0, o24.event.modifiers), this._pointerState.delete(e25), this.refreshHasPendingInputs());
  }
  _doubleClickTimeoutExceeded(e25) {
    const t23 = this._pointerState.get(e25);
    1 === t23.pointerDownCount && this._click.emit(t23.event.data, void 0, t23.event.modifiers), t23.doubleClickTimer = null, this._pointerState.delete(e25), this.refreshHasPendingInputs();
  }
  _getPointerId(e25) {
    const { pointerId: t23, pointerType: i33, button: o24 } = e25.native;
    return "mouse" === i33 ? `${t23}:${o24}` : `${i33}`;
  }
  _handleImmediateClick(e25) {
    const t23 = e25.data, { pointerType: i33 } = t23.native, o24 = this._getPointerId(t23);
    if (!this._pointerState.has(o24))
      return void this._startClick(e25);
    const s24 = this._pointerState.get(o24), { data: l27, modifiers: m25 } = s24.event, c36 = "touch" === i33 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
    e23(l27, t23) > c36 ? (this._clearDoubleClickTimer(o24, true), this._startClick(e25)) : (this._clearDoubleClickTimer(o24, false), 2 === s24.pointerDownCount && this._doubleClick.emit(l27, void 0, m25));
  }
  _handlePointerDown(e25) {
    const t23 = c28(e25.data), i33 = this._pointerState.get(t23);
    i33 && (i33.pointerDownCount += 1);
  }
  _startClick(e25) {
    const { data: t23 } = e25, { native: { pointerType: i33 } } = t23, o24 = c28(t23), n30 = "touch" === i33 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, l27 = this._clock.setTimeout(() => this._doubleClickTimeoutExceeded(o24), n30), m25 = 1;
    this._pointerState.set(o24, { event: e25, doubleClickTimer: l27, pointerDownCount: m25 }), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/DoubleTapDrag.js
var p23 = class extends i13 {
  constructor(e25 = l22.maximumDoubleClickDelay, a32 = l22.maximumDoubleClickDistance, r23 = l22.maximumDoubleTouchDelay, n30 = l22.maximumDoubleTouchDistance, u19 = t6) {
    super(false), this._maximumDoubleClickDelay = e25, this._maximumDoubleClickDistance = a32, this._maximumDoubleTouchDelay = r23, this._maximumDoubleTouchDistance = n30, this._clock = u19, this._doubleTapDragReady = false, this._doubleTapDragActive = false, this._dragStartCenter = c2(0, 0), this._pointerState = /* @__PURE__ */ new Map(), this._doubleTapDrag = this.registerOutgoing("double-tap-drag"), this._dragEventSeparator = new t17({ start: (t23, e26) => this._dragStart(t23, e26), update: (t23, e26) => this._dragUpdate(e26), end: (t23, e26) => this._dragEnd(e26) }), this.registerIncoming("drag", (t23) => this._dragEventSeparator.handle(t23)), this.registerIncoming("pointer-down", (t23) => this._handlePointerDown(t23)), this.registerIncoming("pointer-up", () => this._handlePointerUp());
  }
  onUninstall() {
    this._pointerState.forEach((t23) => {
      t23.doubleTapTimeout = h(t23.doubleTapTimeout);
    });
  }
  get hasPendingInputs() {
    return n2(this._pointerState, (t23) => null != t23.doubleTapTimeout);
  }
  _clearPointerDown(t23) {
    const e25 = this._pointerState.get(t23);
    e25 && (e25.doubleTapTimeout = h(e25.doubleTapTimeout), this._pointerState.delete(t23), this.refreshHasPendingInputs());
  }
  _createDoubleTapDragData(t23, e25, a32) {
    const { button: i33, buttons: o24, pointer: r23, pointers: s24, pointerType: n30, timestamp: u19 } = a32;
    return { action: t23, delta: e25, button: i33, buttons: o24, pointer: r23, pointers: s24, pointerType: n30, timestamp: u19 };
  }
  _dragStart(t23, e25) {
    if (!this._doubleTapDragReady || 1 !== t23)
      return;
    this._doubleTapDragReady = false, this._doubleTapDragActive = true;
    const { data: a32, modifiers: o24 } = e25, { center: r23 } = a32;
    this._dragStartCenter = r23;
    const s24 = this._createDoubleTapDragData("begin", c2(0, 0), a32);
    this._doubleTapDrag.emit(s24, void 0, o24), e25.stopPropagation();
  }
  _dragUpdate(t23) {
    if (!this._doubleTapDragActive)
      return;
    const { data: e25, modifiers: a32 } = t23, { center: o24 } = e25, r23 = c2(o24.x - this._dragStartCenter.x, o24.y - this._dragStartCenter.y), s24 = this._createDoubleTapDragData("update", r23, e25);
    this._doubleTapDrag.emit(s24, void 0, a32), t23.stopPropagation();
  }
  _dragEnd(t23) {
    if (!this._doubleTapDragActive)
      return;
    const { data: e25, modifiers: a32 } = t23, { center: o24 } = e25, r23 = c2(o24.x - this._dragStartCenter.x, o24.y - this._dragStartCenter.y), s24 = this._createDoubleTapDragData("end", r23, e25);
    this._doubleTapDrag.emit(s24, void 0, a32), this._doubleTapDragActive = false, t23.stopPropagation();
  }
  _handlePointerDown(t23) {
    const { data: e25 } = t23, a32 = c28(e25), i33 = this._pointerState.get(a32), { pointerType: o24 } = e25.native;
    if (i33) {
      const r23 = "touch" === o24 ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
      this._clearPointerDown(a32), e23(i33.event.data, e25) > r23 ? this._storePointerDown(t23) : this._doubleTapDragReady = true;
    } else
      this._storePointerDown(t23);
  }
  _handlePointerUp() {
    this._doubleTapDragReady = false;
  }
  _storePointerDown(t23) {
    const { data: e25 } = t23, { pointerType: a32 } = e25.native, i33 = c28(e25), o24 = "touch" === a32 ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay, r23 = this._clock.setTimeout(() => this._clearPointerDown(i33), o24);
    this._pointerState.set(i33, { event: t23, doubleTapTimeout: r23 }), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/Drag.js
var s22 = class extends i13 {
  constructor(t23) {
    super(false), this._navigationTouch = t23, this._startStateModifiers = /* @__PURE__ */ new Set(), this._activePointerMap = /* @__PURE__ */ new Map(), this._isDragging = false, this._isCurrentDragSuppressed = false, this._drag = this.registerOutgoing("drag"), this.registerIncoming("pointer-drag", this._handlePointerDrag.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-capture-lost", this._handlePointerUpAndPointerLost.bind(this)), this.registerIncoming("pointer-cancel", this._handlePointerUpAndPointerLost.bind(this));
  }
  _createPayload(t23, e25, i33, n30) {
    return { action: t23, pointerType: this._pointerType, button: this._mouseButton, buttons: e25.buttons, timestamp: n30, pointers: o22(this._activePointerMap), pointer: e25, angle: i33.angle, radius: i33.radius, center: i33.center };
  }
  _addPointer(t23) {
    const e25 = t23.native.pointerId, i33 = a26(this._activePointerMap).angle, n30 = { event: t23, initialAngle: 0, lastAngle: 0 };
    this._activePointerMap.set(e25, n30);
    const s24 = h16(n30, r20(this._activePointerMap));
    n30.initialAngle = s24, n30.lastAngle = s24, this._updatePointerAngles(i33);
  }
  _updatePointer(t23) {
    if (t23 && null == t23.x && null == t23.y)
      return;
    const e25 = t23.native.pointerId, i33 = this._activePointerMap.get(e25);
    i33 ? i33.event = t23 : this._addPointer(t23);
  }
  _removePointer(t23) {
    const e25 = a26(this._activePointerMap).angle;
    this._activePointerMap.delete(t23), this._updatePointerAngles(e25);
  }
  _updatePointerAngles(t23) {
    const e25 = a26(this._activePointerMap);
    this._activePointerMap.forEach((i33) => {
      i33.initialAngle = h16(i33, e25) - t23, i33.lastAngle = h16(i33, e25) - t23;
    });
  }
  _emitEvent(t23, e25, i33) {
    const n30 = a26(this._activePointerMap);
    this._drag.emit(this._createPayload(t23, e25, n30, i33), void 0, this._startStateModifiers);
  }
  _handlePointerUpAndPointerLost(t23) {
    const i33 = t23.data.native.pointerId, n30 = n5(t23.timestamp);
    this._activePointerMap.get(i33) && (1 === this._activePointerMap.size ? (this._updatePointer(t23.data), !this._isCurrentDragSuppressed && this._emitEvent("end", t23.data, n30), this._isDragging = false, this._isCurrentDragSuppressed = false, this._removePointer(i33)) : (this._removePointer(i33), this._emitEvent("removed", t23.data, n5(t23.timestamp))));
  }
  _handlePointerDrag(t23) {
    const i33 = t23.data, n30 = i33.currentEvent, s24 = n5(t23.timestamp);
    switch (i33.action) {
      case "start":
      case "update":
        this._isDragging ? this._activePointerMap.has(n30.native.pointerId) ? (this._updatePointer(n30), !this._isCurrentDragSuppressed && this._emitEvent("update", n30, s24)) : (this._addPointer(n30), this._emitEvent("added", n30, s24), this._isCurrentDragSuppressed = this._isSuppressed) : (this._updatePointer(n30), this._pointerType = t23.data.startEvent.pointerType, this._mouseButton = t23.data.startEvent.button, this._startStateModifiers = t23.modifiers, this._isDragging = true, this._isCurrentDragSuppressed = this._isSuppressed, !this._isCurrentDragSuppressed && this._emitEvent("start", n30, s24));
    }
  }
  get _isSuppressed() {
    return !!this._navigationTouch && !this._navigationTouch.browserTouchPanEnabled && "touch" === this._pointerType && 1 === this._activePointerMap.size;
  }
};
function r20(e25) {
  const i33 = [];
  return e25.forEach((e26) => {
    i33.push(c2(e26.event.x, e26.event.y));
  }), r19(i33);
}
function a26(t23) {
  const e25 = r20(t23);
  let i33 = 0;
  return t23.forEach((t24) => {
    let n30 = h16(t24, e25), s24 = n30 - t24.lastAngle;
    for (; s24 > Math.PI; )
      s24 -= 2 * Math.PI;
    for (; s24 < -Math.PI; )
      s24 += 2 * Math.PI;
    n30 = t24.lastAngle + s24, t24.lastAngle = n30;
    const r23 = n30 - t24.initialAngle;
    i33 += r23;
  }), i33 /= t23.size || 1, { angle: i33, radius: e25.radius, center: e25.center };
}
function o22(t23) {
  const e25 = /* @__PURE__ */ new Map();
  return t23.forEach((t24, i33) => e25.set(i33, t24.event)), e25;
}
function h16(t23, e25) {
  const i33 = t23.event, n30 = i33.x - e25.center.x, s24 = i33.y - e25.center.y;
  return Math.atan2(s24, n30);
}
var p24;
!function(t23) {
  t23[t23.Left = 0] = "Left", t23[t23.Middle = 1] = "Middle", t23[t23.Right = 2] = "Right", t23[t23.Back = 3] = "Back", t23[t23.Forward = 4] = "Forward", t23[t23.Undefined = -1] = "Undefined";
}(p24 || (p24 = {}));

// node_modules/@arcgis/core/views/input/recognizers/ImmediateDoubleClick.js
var m21 = class extends i13 {
  constructor(e25 = l22.maximumDoubleClickDelay, o24 = l22.maximumDoubleClickDistance, a32 = l22.maximumDoubleTouchDelay, m25 = l22.maximumDoubleTouchDistance, n30 = t6) {
    super(false), this._maximumDoubleClickDelay = e25, this._maximumDoubleClickDistance = o24, this._maximumDoubleTouchDelay = a32, this._maximumDoubleTouchDistance = m25, this._clock = n30, this._pointerState = /* @__PURE__ */ new Map(), this._immediateDoubleClick = this.registerOutgoing("immediate-double-click"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", this._handlePointerUp.bind(this));
  }
  onUninstall() {
    this._pointerState.forEach((t23) => {
      t23.immediateDoubleClick && t23.immediateDoubleClick.timeoutHandle.remove();
    }), super.onUninstall();
  }
  _handlePointerDown(t23) {
    const e25 = t23.data, i33 = c28(e25);
    if (!this._pointerState.has(i33)) {
      const t24 = { downButton: e25.native.button, immediateDoubleClick: null };
      this._pointerState.set(i33, t24), this.startCapturingPointer(e25.native);
    }
  }
  _handlePointerUp(t23) {
    const e25 = t23.data, i33 = c28(e25), m25 = this._pointerState.get(i33);
    if (m25 && m25.downButton === e25.native.button) {
      const i34 = m25.immediateDoubleClick;
      if (i34) {
        i34.timeoutHandle.remove();
        const o24 = "touch" === t23.data.native.pointerType ? this._maximumDoubleTouchDistance : this._maximumDoubleClickDistance;
        e23(i34, t23.data) > o24 ? this._startImmediateDoubleClick(t23, m25) : (this._immediateDoubleClick.emit(t23.data, void 0, i34.modifiers), this._removeState(e25));
      } else
        this._startImmediateDoubleClick(t23, m25);
    }
  }
  _startImmediateDoubleClick(t23, e25) {
    const i33 = "touch" === t23.data.native.pointerType ? this._maximumDoubleTouchDelay : this._maximumDoubleClickDelay;
    e25.immediateDoubleClick = { x: t23.data.x, y: t23.data.y, modifiers: t23.modifiers, timeoutHandle: this._clock.setTimeout(() => this._removeState(t23.data), i33) };
  }
  _removeState(t23) {
    const e25 = c28(t23);
    this._pointerState.delete(e25), this.stopCapturingPointer(t23.native), this.refreshHasPendingInputs();
  }
};

// node_modules/@arcgis/core/views/input/recognizers/PointerClickHoldAndDrag.js
var o23 = { maximumClickDelay: 300, movementUntilMouseDrag: 1.5, movementUntilPenDrag: 6, movementUntilTouchDrag: 6, holdDelay: 500 };
var r21 = class extends i13 {
  constructor(e25 = o23.maximumClickDelay, i33 = o23.movementUntilMouseDrag, n30 = o23.movementUntilPenDrag, r23 = o23.movementUntilTouchDrag, s24 = o23.holdDelay, a32 = t6) {
    super(false), this._maximumClickDelay = e25, this._movementUntilMouseDrag = i33, this._movementUntilPenDrag = n30, this._movementUntilTouchDrag = r23, this._holdDelay = s24, this._clock = a32, this._pointerState = /* @__PURE__ */ new Map(), this._pointerDrag = this.registerOutgoing("pointer-drag"), this._immediateClick = this.registerOutgoing("immediate-click"), this._pointerHold = this.registerOutgoing("hold"), this.registerIncoming("pointer-down", this._handlePointerDown.bind(this)), this.registerIncoming("pointer-up", (t23) => {
      this._handlePointerLoss(t23, "pointer-up");
    }), this.registerIncoming("pointer-capture-lost", (t23) => {
      this._handlePointerLoss(t23, "pointer-capture-lost");
    }), this.registerIncoming("pointer-cancel", (t23) => {
      this._handlePointerLoss(t23, "pointer-cancel");
    }), this._moveHandle = this.registerIncoming("pointer-move", this._handlePointerMove.bind(this)), this._moveHandle.pause();
  }
  onUninstall() {
    this._pointerState.forEach((t23) => {
      t23.holdTimeout = h(t23.holdTimeout);
    }), super.onUninstall();
  }
  _handlePointerDown(t23) {
    const e25 = t23.data, i33 = e25.native.pointerId;
    let n30 = null;
    0 === this._pointerState.size && (n30 = this._clock.setTimeout(() => {
      const e26 = this._pointerState.get(i33);
      if (e26) {
        if (!e26.isDragging) {
          const i34 = e26.previousEvent;
          this._pointerHold.emit(i34, void 0, t23.modifiers), e26.holdEmitted = true;
        }
        e26.holdTimeout = null;
      }
    }, this._holdDelay));
    const o24 = { startEvent: e25, previousEvent: e25, startTimestamp: t23.timestamp, isDragging: false, downButton: e25.native.button, holdTimeout: n30, modifiers: /* @__PURE__ */ new Set() };
    this._pointerState.set(i33, o24), this.startCapturingPointer(e25.native), this._moveHandle.resume(), this._pointerState.size > 1 && this._startDragging(t23);
  }
  _createPointerDragData(t23, e25, i33) {
    return { action: t23, startEvent: e25.startEvent, previousEvent: e25.previousEvent, currentEvent: i33 };
  }
  _handlePointerMove(t23) {
    const e25 = t23.data, i33 = e25.native.pointerId, o24 = this._pointerState.get(i33);
    if (o24) {
      if (o24.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("update", o24, e25), void 0, o24.modifiers);
      else {
        n28(e25, o24.startEvent) > this._getDragThreshold(e25.native.pointerType) && this._startDragging(t23);
      }
      o24.previousEvent = e25;
    }
  }
  _getDragThreshold(t23) {
    switch (t23) {
      case "touch":
        return this._movementUntilTouchDrag;
      case "pen":
        return this._movementUntilPenDrag;
      default:
        return this._movementUntilMouseDrag;
    }
  }
  _startDragging(t23) {
    const e25 = t23.data, i33 = e25.native.pointerId;
    this._pointerState.forEach((n30) => {
      null != n30.holdTimeout && (n30.holdTimeout.remove(), n30.holdTimeout = null), n30.isDragging || (n30.modifiers = t23.modifiers, n30.isDragging = true, i33 === n30.startEvent.native.pointerId ? this._pointerDrag.emit(this._createPointerDragData("start", n30, e25)) : this._pointerDrag.emit(this._createPointerDragData("start", n30, n30.previousEvent), t23.timestamp));
    });
  }
  _handlePointerLoss(t23, e25) {
    const i33 = t23.data, n30 = i33.native.pointerId, o24 = this._pointerState.get(n30);
    if (o24) {
      if (null != o24.holdTimeout && (o24.holdTimeout.remove(), o24.holdTimeout = null), o24.isDragging)
        this._pointerDrag.emit(this._createPointerDragData("end", o24, "pointer-up" === e25 ? i33 : o24.previousEvent), void 0, o24.modifiers);
      else if ("pointer-up" === e25 && o24.downButton === i33.native.button) {
        t23.timestamp - o24.startTimestamp <= this._maximumClickDelay && !o24.holdEmitted && this._immediateClick.emit(i33);
      }
      this._pointerState.delete(n30), this.stopCapturingPointer(i33.native), 0 === this._pointerState.size && this._moveHandle.pause();
    }
  }
};

// node_modules/@arcgis/core/views/2d/input/MapViewInputManager.js
var z7 = { counter: "Ctrl", pan: { left: "ArrowLeft", right: "ArrowRight", up: "ArrowUp", down: "ArrowDown" }, zoom: { zoomIn: ["=", "+"], zoomOut: ["-", "_"] }, rotate: { clockwiseOption1: "a", clockwiseOption2: "A", counterClockwiseOption1: "d", counterClockwiseOption2: "D", resetOption1: "n", resetOption2: "N" } };
var k3 = class extends m {
  constructor() {
    super(...arguments), this._handles = new t4();
  }
  initialize() {
    const e25 = () => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.ready;
    };
    this._handles.add([f2(() => !e25(), () => this._disconnect()), f2(e25, () => this._connect())]);
  }
  destroy() {
    this._handles && (this._handles.removeAll(), this._handles = null), this._disconnect();
  }
  get latestPointerType() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerType;
  }
  get latestPointerLocation() {
    var _a;
    return (_a = this._inputManager) == null ? void 0 : _a.latestPointerLocation;
  }
  get multiTouchActive() {
    var _a, _b;
    return (_b = (_a = this._inputManager) == null ? void 0 : _a.multiTouchActive) != null ? _b : false;
  }
  _disconnect() {
    this.view.viewEvents.disconnect(), this._inputManager = s(this._inputManager);
  }
  _connect() {
    const e25 = this.view.surface, t23 = new u15(e25, this.view.input), o24 = [new m21(), new r21(), new m20(), new s22(this.view.navigation), new p23()], r23 = new u4({ eventSource: t23, recognizers: o24 });
    r23.installHandlers("prevent-context-menu", [new e22()], P.INTERNAL), r23.installHandlers("navigation", [new a23(this.view), new d13(this.view), new o20(this.view), new a21(this.view), new a21(this.view, [z7.counter]), new n25(this.view, "primary"), new i27(this.view, z7.pan), new e20(this.view, z7.zoom), new i28(this.view, z7.rotate), new o19(this.view, "secondary"), new e19(this.view, "touch")], P.INTERNAL), this.view.viewEvents.connect(r23), this._source = t23, this._inputManager = r23, l3(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.navigation) == null ? void 0 : _b.browserTouchPanEnabled;
    }, (e26) => {
      this._source && (this._source.browserTouchPanningEnabled = !e26);
    }, h2);
  }
  get test() {
    return { inputManager: this._inputManager };
  }
};
e2([y()], k3.prototype, "view", void 0), e2([y()], k3.prototype, "latestPointerType", null), e2([y()], k3.prototype, "latestPointerLocation", null), e2([y()], k3.prototype, "multiTouchActive", null), k3 = e2([n4("esri.views.2d.input.MapViewInputManager")], k3);
var C7 = k3;

// node_modules/@arcgis/core/views/2d/support/HighlightOptions.js
var p25 = 0;
var i29 = class extends m {
  constructor() {
    super(...arguments), this.color = new l([0, 255, 255]), this.haloOpacity = 1, this.fillOpacity = 0.25;
  }
  get version() {
    return p25++;
  }
};
e2([y({ readOnly: true })], i29.prototype, "version", null), e2([y({ type: l })], i29.prototype, "color", void 0), e2([y({ type: l })], i29.prototype, "haloColor", void 0), e2([y()], i29.prototype, "haloOpacity", void 0), e2([y()], i29.prototype, "fillOpacity", void 0), i29 = e2([n4("esri.views.2d.support.HighlightOptions")], i29);
var c29 = i29;

// node_modules/@arcgis/core/views/support/createScreenshotPlan.js
function t21(t23, h18, i33, e25, d16, l27, n30, o24) {
  let u19;
  t23.ignorePadding && (e25 = { left: 0, right: 0, top: 0, bottom: 0 }), null != t23.width && null != t23.height ? u19 = [t23.width, t23.height] : null == t23.width && null != t23.height ? u19 = [t23.height, t23.height] : null != t23.width && null == t23.height ? u19 = [t23.width, t23.width] : null == t23.width && null == t23.height && (u19 = null);
  const r23 = i33[0] - (e25.left + e25.right), a32 = i33[1] - (e25.top + e25.bottom);
  let g18, w17, c36 = t23.area || { x: 0, y: 0, width: r23, height: a32 };
  if (u19) {
    const t24 = r23 / a32, h19 = u19[0] / u19[1];
    if (h19 > t24) {
      const t25 = c36.width / h19;
      c36 = { x: c36.x, y: Math.round(c36.y + (c36.height - t25) / 2), width: c36.width, height: Math.round(t25) };
    } else {
      const t25 = c36.height * h19;
      c36 = { x: Math.round(c36.x + (c36.width - t25) / 2), y: c36.y, width: Math.round(t25), height: c36.height };
    }
  } else
    u19 = [c36.width, c36.height];
  u19[0] > c36.width ? (g18 = Math.min(u19[0] / c36.width, h18), w17 = u19[0] / c36.width / g18) : (g18 = 1, w17 = u19[0] / c36.width);
  return { resolutionScale: g18, cropArea: { x: Math.round((c36.x + e25.left) * g18), y: Math.round((c36.y + e25.top) * g18), width: Math.round(c36.width * g18), height: Math.round(c36.height * g18) }, outputScale: w17, format: d16, quality: l27, children: n30, rotation: o24 };
}

// node_modules/@arcgis/core/views/support/WebGLRequirements.js
function i30(i33) {
  const s24 = l8(i33);
  if (!s24.available)
    return new s3("webgl:required", "WebGL is required but not supported.");
  if ("3d" === i33 && s24.majorPerformanceCaveat)
    return new s3("webgl:major-performance-caveat-detected", "Your WebGL implementation doesn't seem to support hardware accelerated rendering. Check your browser settings or if your GPU is in a blocklist.");
  if (!s24.supportsHighPrecisionFragment)
    return new s3("webgl:high-precision-fragment-required", "WebGL support for high precision fragment shaders is required but not supported.");
  if (!s24.supportsVertexShaderSamplers)
    return new s3("webgl:vertex-shader-samplers-required", "WebGL support for vertex shader samplers is required but not supported.");
  if (s24.type === r8.WEBGL1) {
    if (!s24.supportsElementIndexUint)
      return new s3("webgl:element-index-uint-required", "WebGL support for uint vertex indices is required but not supported.");
    if (!s24.supportsStandardDerivatives)
      return new s3("webgl:standard-derivatives-required", "WebGL support for standard derivatives is required but not supported.");
    if (!s24.supportsInstancedArrays)
      return new s3("webgl:instanced-arrays-required", "WebGL support for instanced rendering is required but not supported.");
  }
  return null;
}

// node_modules/@arcgis/core/views/ui/Component.js
function i31(t23) {
  return t23 && "nodeType" in t23;
}
function d14(t23) {
  return t23 && "function" == typeof t23.render;
}
var c30 = { component: "esri-component" };
var p26 = class extends m {
  constructor() {
    super(...arguments), this.widget = null;
  }
  destroy() {
    this.widget && this.widget.destroy(), this.node = null;
  }
  get id() {
    return this.get("widget.id") || this.get("node.id");
  }
  set node(t23) {
    const e25 = this._get("node");
    t23 !== e25 && (t23 && t23.classList.add(c30.component), e25 && e25.classList.remove(c30.component), this._set("node", t23));
  }
  castNode(t23) {
    return t23 ? "string" == typeof t23 || i31(t23) ? (this._set("widget", null), e3(t23)) : (d14(t23) && !t23.domNode && (t23.domNode = document.createElement("div")), this._set("widget", t23), t23.domNode) : (this._set("widget", null), null);
  }
};
e2([y({ dependsOn: [] })], p26.prototype, "id", null), e2([y()], p26.prototype, "node", null), e2([s4("node")], p26.prototype, "castNode", null), e2([y({ readOnly: true })], p26.prototype, "widget", void 0), p26 = e2([n4("esri.views.ui.Component")], p26);
var l23 = p26;

// node_modules/@arcgis/core/views/ui/UI.js
var m22 = { left: 0, top: 0, bottom: 0, right: 0 };
var u16 = { bottom: 30, top: 15, right: 15, left: 15 };
var f13 = "manual";
var _9 = { ui: "esri-ui", corner: "esri-ui-corner", innerContainer: "esri-ui-inner-container", manualContainer: "esri-ui-manual-container", cornerContainer: "esri-ui-corner-container", topLeft: "esri-ui-top-left", topRight: "esri-ui-top-right", bottomLeft: "esri-ui-bottom-left", bottomRight: "esri-ui-bottom-right" };
function g15(t23) {
  return t23 && !t23._started && "function" == typeof t23.postMixInProperties && "function" == typeof t23.buildRendering && "function" == typeof t23.postCreate && "function" == typeof t23.startup;
}
function y13(t23) {
  const o24 = t23, i33 = "object" == typeof o24 && null !== o24 && Object.getPrototypeOf(o24);
  return (null === i33 || i33 === Object.prototype) && ("component" in o24 || "index" in o24 || "position" in o24) ? t23 : null;
}
function C8(t23, { top: o24, bottom: i33, left: e25, right: n30 }) {
  t23.style.top = o24, t23.style.bottom = i33, t23.style.left = e25, t23.style.right = n30;
}
var v13 = class extends n6.EventedAccessor {
  constructor(t23) {
    super(t23), this._cornerNameToContainerLookup = {}, this._positionNameToContainerLookup = {}, this._components = new Array(), this._componentToKey = /* @__PURE__ */ new Map(), this._handles = new t4(), this.view = null, this._applyViewPadding = () => {
      const t24 = this.container;
      t24 && C8(t24, this._toPxPosition(this._getViewPadding()));
    }, this._applyUIPadding = () => {
      const t24 = this._innerContainer;
      t24 && C8(t24, this._toPxPosition(this.padding));
    }, this._initContainers();
  }
  initialize() {
    this._handles.add([l3(() => {
      var _a;
      return [(_a = this.view) == null ? void 0 : _a.padding, this.container];
    }, this._applyViewPadding, h2), l3(() => this.padding, this._applyUIPadding, h2)]);
  }
  destroy() {
    this.container = null;
    for (const t23 of this._components)
      t23.destroy();
    this._components.length = 0, this._handles.destroy(), this._componentToKey.clear();
  }
  set container(t23) {
    const i33 = this._get("container");
    t23 !== i33 && (t23 && (t23.classList.add(_9.ui), n8(t23), this._attachContainers(t23)), i33 && (i33.classList.remove(_9.ui), C8(i33, { top: "", bottom: "", left: "", right: "" }), t7(i33)), this._set("container", t23));
  }
  get height() {
    const t23 = this.get("view.height") || 0;
    if (0 === t23)
      return t23;
    const o24 = this._getViewPadding(), i33 = o24.top + o24.bottom;
    return Math.max(t23 - i33, 0);
  }
  get padding() {
    return this._get("padding");
  }
  set padding(t23) {
    this._overrideIfSome("padding", t23);
  }
  castPadding(t23) {
    return "number" == typeof t23 ? { bottom: t23, top: t23, right: t23, left: t23 } : { ...u16, ...t23 };
  }
  get width() {
    const t23 = this.get("view.width") || 0;
    if (0 === t23)
      return t23;
    const o24 = this._getViewPadding(), i33 = o24.left + o24.right;
    return Math.max(t23 - i33, 0);
  }
  add(t23, o24) {
    let i33, e25;
    if (Array.isArray(t23))
      return void t23.forEach((t24) => this.add(t24, o24));
    const n30 = y13(t23);
    n30 && ({ index: i33, position: o24, component: t23, key: e25 } = n30), o24 && "object" == typeof o24 && ({ index: i33, key: e25, position: o24 } = o24), !t23 || o24 && !this._isValidPosition(o24) || this._add(t23, o24, i33, e25);
  }
  remove(t23, o24) {
    if (!t23)
      return;
    if (Array.isArray(t23))
      return t23.map((t24) => this.remove(t24, o24));
    const i33 = this._find(t23);
    if (i33) {
      const e25 = this._componentToKey;
      if (e25.has(t23) && e25.get(t23) !== o24)
        return;
      const n30 = this._components.indexOf(i33);
      return i33.node.parentNode && i33.node.parentNode.removeChild(i33.node), this._componentToKey.delete(t23), this._components.splice(n30, 1)[0];
    }
  }
  empty(t23) {
    if (Array.isArray(t23))
      return t23.map((t24) => this.empty(t24)).reduce((t24, o24) => t24.concat(o24));
    if ((t23 = t23 || f13) === f13) {
      return Array.prototype.slice.call(this._manualContainer.children).filter((t24) => !t24.classList.contains(_9.corner)).map((t24) => this.remove(t24));
    }
    return this._isValidPosition(t23) ? Array.prototype.slice.call(this._cornerNameToContainerLookup[t23].children).map(this.remove, this) : null;
  }
  move(t23, o24) {
    if (Array.isArray(t23) && t23.forEach((t24) => this.move(t24, o24)), !t23)
      return;
    let i33;
    const e25 = y13(t23) || y13(o24);
    if (e25 && (i33 = e25.index, o24 = e25.position, t23 = e25.component || t23), o24 && !this._isValidPosition(o24))
      return;
    const n30 = this.remove(t23);
    n30 && this.add(n30, { position: o24, index: i33 });
  }
  find(t23) {
    if (!t23)
      return null;
    const o24 = this._findById(t23);
    return o24 && (o24.widget || o24.node);
  }
  getPosition(t23) {
    for (const o24 in this._positionNameToContainerLookup) {
      if (this._positionNameToContainerLookup[o24].contains(t23))
        return o24;
    }
    return null;
  }
  _add(t23, o24, i33, e25) {
    t23 instanceof l23 || (t23 = new l23({ node: t23 })), this._place({ component: t23, position: o24, index: i33 }), this._components.push(t23), e25 && this._componentToKey.set(t23, e25);
  }
  _find(t23) {
    return t23 ? t23 instanceof l23 ? this._findByComponent(t23) : "string" == typeof t23 ? this._findById(t23) : this._findByNode(t23.domNode || t23) : null;
  }
  _getViewPadding() {
    return this.get("view.padding") || m22;
  }
  _attachContainers(t23) {
    t23.appendChild(this._innerContainer), t23.appendChild(this._manualContainer);
  }
  _initContainers() {
    const t23 = document.createElement("div");
    t23.classList.add(_9.innerContainer), t23.classList.add(_9.cornerContainer);
    const o24 = document.createElement("div");
    o24.classList.add(_9.innerContainer), o24.classList.add(_9.manualContainer);
    const i33 = document.createElement("div");
    i33.classList.add(_9.topLeft), i33.classList.add(_9.corner), t23.appendChild(i33);
    const e25 = document.createElement("div");
    e25.classList.add(_9.topRight), e25.classList.add(_9.corner), t23.appendChild(e25);
    const n30 = document.createElement("div");
    n30.classList.add(_9.bottomLeft), n30.classList.add(_9.corner), t23.appendChild(n30);
    const r23 = document.createElement("div");
    r23.classList.add(_9.bottomRight), r23.classList.add(_9.corner), t23.appendChild(r23), this._innerContainer = t23, this._manualContainer = o24;
    const s24 = f3();
    this._cornerNameToContainerLookup = { "top-left": i33, "top-right": e25, "bottom-left": n30, "bottom-right": r23, "top-leading": s24 ? e25 : i33, "top-trailing": s24 ? i33 : e25, "bottom-leading": s24 ? r23 : n30, "bottom-trailing": s24 ? n30 : r23 }, this._positionNameToContainerLookup = { manual: o24, ...this._cornerNameToContainerLookup };
  }
  _isValidPosition(t23) {
    return !!this._positionNameToContainerLookup[t23];
  }
  _place(t23) {
    const o24 = t23.component, e25 = t23.position || f13, n30 = t23.index, r23 = this._positionNameToContainerLookup[e25], s24 = n30 > -1;
    if (g15(o24.widget) && o24.widget.startup(), !s24)
      return void r23.appendChild(o24.node);
    const a32 = Array.prototype.slice.call(r23.children);
    if (0 === n30)
      return void (r23.firstChild ? o3(o24.node, r23.firstChild) : r23.appendChild(o24.node));
    n30 >= a32.length ? r23.appendChild(o24.node) : o3(o24.node, a32[n30]);
  }
  _toPxPosition(t23) {
    return { top: this._toPxUnit(t23.top), left: this._toPxUnit(t23.left), right: this._toPxUnit(t23.right), bottom: this._toPxUnit(t23.bottom) };
  }
  _toPxUnit(t23) {
    return 0 === t23 ? "0" : t23 + "px";
  }
  _findByComponent(t23) {
    let o24, i33 = null;
    return this._components.some((e25) => (o24 = e25 === t23, o24 && (i33 = e25), o24)), i33;
  }
  _findById(t23) {
    let o24, i33 = null;
    return this._components.some((e25) => (o24 = e25.id === t23, o24 && (i33 = e25), o24)), i33;
  }
  _findByNode(t23) {
    let o24, i33 = null;
    return this._components.some((e25) => (o24 = e25.node === t23, o24 && (i33 = e25), o24)), i33;
  }
};
e2([y()], v13.prototype, "container", null), e2([y()], v13.prototype, "height", null), e2([y({ value: u16 })], v13.prototype, "padding", null), e2([s4("padding")], v13.prototype, "castPadding", null), e2([y()], v13.prototype, "view", void 0), e2([y()], v13.prototype, "width", null), v13 = e2([n4("esri.views.ui.UI")], v13);
var L7 = v13;

// node_modules/@arcgis/core/widgets/Attribution/AttributionViewModel.js
function p27(t23, e25) {
  return t23 && "copyright" in t23 && (!e25 || "function" == typeof t23.originOf && "user" === t23.originOf("copyright"));
}
function m23(t23, e25) {
  return t23.length !== e25.length || t23.some((t24, i33) => t24.text !== e25[i33].text);
}
function f14(t23, e25, i33) {
  if (!i33 || !e25)
    return;
  t23.find((t24) => t24.layerView === e25 && t24.text === i33) || t23.push({ text: i33, layerView: e25 });
}
function y14(t23) {
  return "bing-maps" === t23.type;
}
var b14 = [];
var g16 = class extends d {
  constructor(t23) {
    super(t23), this._clear = () => {
      this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.handles.remove("suspension"), this.notifyChange("state");
    }, this._pendingAttributions = /* @__PURE__ */ new Set(), this._fetchedAttributionData = /* @__PURE__ */ new Map(), this.items = new j3(), this.view = null, this._allLayerViewsChange = (t24) => {
      this.handles.remove("suspension");
      const e25 = this.get("view.allLayerViews");
      e25 && this.handles.add(e25.map((t25) => l3(() => {
        var _a;
        return [t25.suspended, (_a = t25.layer) == null ? void 0 : _a.attributionVisible];
      }, () => this._updateAttributionItems())), "suspension"), t24 && t24.removed && t24.removed.forEach((t25) => {
        this._pendingAttributions.delete(t25), this._fetchedAttributionData.delete(t25);
      }), this._updateAttributionItems();
    }, this.handles.add([a3(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.allLayerViews;
    }, "change", (t24) => this._allLayerViewsChange(t24), { onListenerAdd: () => this._allLayerViewsChange(), onListenerRemove: this._clear }), f2(() => {
      var _a;
      return true === ((_a = this.view) == null ? void 0 : _a.stationary);
    }, () => this._updateAttributionItems())]);
  }
  destroy() {
    this.view = null, this._fetchedAttributionData.clear(), this._pendingAttributions.clear(), this.items.removeAll();
  }
  get state() {
    return this.get("view.ready") ? this._pendingAttributions.size > 0 ? "loading" : "ready" : "disabled";
  }
  _updateAttributionItems() {
    const t23 = this.get("view.allLayerViews");
    b14.length = 0, t23 ? (t23.forEach((t24) => {
      var _a;
      if (t24.suspended || !((_a = t24.layer) == null ? void 0 : _a.attributionVisible))
        return;
      const e25 = t24.layer;
      if (p27(e25, "user"))
        return void f14(b14, t24, e25.copyright);
      if (e25.hasAttributionData) {
        if (this._fetchedAttributionData.has(t24)) {
          const i34 = this._fetchedAttributionData.get(t24);
          return void (i34 ? f14(b14, t24, this._getDynamicAttribution(i34, this.view, e25)) : p27(e25) && f14(b14, t24, e25.copyright));
        }
        return void this._fetchAttributionData(t24);
      }
      const i33 = e25.get("portalItem.accessInformation");
      f14(b14, t24, i33 || e25.copyright);
    }), m23(this.items, b14) && (this.items.removeAll(), this.items.addMany(b14)), b14.length = 0, this.notifyChange("state")) : this._clear();
  }
  async _fetchAttributionData(t23) {
    if (this._pendingAttributions.has(t23))
      return;
    this._pendingAttributions.add(t23);
    const i33 = await b3(t23.layer.fetchAttributionData());
    if (this._pendingAttributions.has(t23)) {
      const e25 = i33.ok ? this._createContributionIndex(i33.value, y14(t23.layer)) : null;
      this._pendingAttributions.delete(t23), this._fetchedAttributionData.set(t23, e25);
    }
    this._updateAttributionItems();
  }
  _createContributionIndex(t23, e25) {
    const i33 = t23.contributors, r23 = {};
    if (!i33)
      return r23;
    for (let s24 = 0; s24 < i33.length; s24++) {
      const t24 = i33[s24], o24 = t24.coverageAreas;
      if (!o24)
        return;
      for (const i34 of o24) {
        const o25 = i34.bbox, n30 = i34.zoomMin - (e25 && i34.zoomMin ? 1 : 0), a32 = i34.zoomMax - (e25 && i34.zoomMax ? 1 : 0), c36 = { xmin: o25[1], ymin: o25[0], xmax: o25[3], ymax: o25[2], spatialReference: k.WGS84 }, u19 = { extent: R(c36), attribution: t24.attribution || "", score: null != i34.score ? i34.score : 100, id: s24 };
        for (let t25 = n30; t25 <= a32; t25++)
          r23[t25] = r23[t25] || [], r23[t25].push(u19);
      }
    }
    return r23.maxKey = Math.max.apply(null, Object.keys(r23)), r23;
  }
  _getDynamicAttribution(t23, e25, i33) {
    const { extent: r23, scale: s24 } = e25;
    let o24 = i33.tileInfo.scaleToZoom(s24);
    if (o24 = Math.min(t23.maxKey, Math.round(o24)), !r23 || null == o24 || o24 <= -1)
      return "";
    const n30 = t23[o24], a32 = M(r23.center.clone().normalize(), e25.spatialReference), c36 = {};
    return n30 ? n30.filter((t24) => {
      const e26 = !c36[t24.id] && a32 && r3(t24.extent, a32);
      return e26 && (c36[t24.id] = true), e26;
    }).sort((t24, e26) => e26.score - t24.score || t24.objectId - e26.objectId).map((t24) => t24.attribution).join(", ") : "";
  }
};
e2([y({ readOnly: true, type: j3 })], g16.prototype, "items", void 0), e2([y({ readOnly: true })], g16.prototype, "state", null), e2([y()], g16.prototype, "view", void 0), g16 = e2([n4("esri.widgets.Attribution.AttributionViewModel")], g16);
var _10 = g16;

// node_modules/@arcgis/core/widgets/Attribution.js
var l24 = { base: "esri-attribution esri-widget", poweredBy: "esri-attribution__powered-by", sources: "esri-attribution__sources", open: "esri-attribution--open", sourcesOpen: "esri-attribution__sources--open", link: "esri-attribution__link", widgetIcon: "esri-icon-description", interactive: "esri-interactive" };
var p28 = class extends M2 {
  constructor(e25, t23) {
    super(e25, t23), this._isOpen = false, this._attributionTextOverflowed = false, this._prevSourceNodeHeight = 0, this._resizeObserver = new ResizeObserver((e26) => e26.forEach(({ target: e27 }) => this._checkSourceTextOverflow(e27))), this.iconClass = l24.widgetIcon, this.itemDelimiter = " | ", this.messages = null, this.viewModel = new _10();
  }
  initialize() {
    this.addHandles(a3(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.items;
    }, "change", () => this.scheduleRender()));
  }
  destroy() {
    var _a;
    (_a = this._resizeObserver) == null ? void 0 : _a.disconnect();
  }
  get _isInteractive() {
    return this._isOpen || this._attributionTextOverflowed;
  }
  get attributionText() {
    return this.viewModel.items.reduce((e25, t23) => (e25.includes(t23.text) || e25.push(t23.text), e25), []).join(this.itemDelimiter);
  }
  get label() {
    var _a, _b;
    return (_b = (_a = this.messages) == null ? void 0 : _a.widgetLabel) != null ? _b : "";
  }
  set label(e25) {
    this._overrideIfSome("label", e25);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e25) {
    this.viewModel.view = e25;
  }
  render() {
    const e25 = { [l24.open]: this._isOpen };
    return n7("div", { bind: this, class: this.classes(l24.base, e25), dir: "ltr", onclick: this._toggleState, onkeydown: this._toggleState }, this.renderSourcesNode(), this.renderPoweredBy());
  }
  renderPoweredBy() {
    return n7("div", { class: l24.poweredBy }, "Powered by", " ", n7("a", { class: l24.link, href: "http://www.esri.com/", target: "_blank", rel: "noreferrer" }, "Esri"));
  }
  renderSourcesNode() {
    const e25 = this._isOpen, t23 = this._isInteractive, i33 = t23 ? "0" : "", { attributionText: r23 } = this, s24 = { [l24.sourcesOpen]: e25, [l24.interactive]: t23 };
    return n7("div", { afterCreate: this._afterSourcesNodeCreate, bind: this, class: this.classes(l24.sources, s24), innerHTML: r23, tabindex: i33 });
  }
  _afterSourcesNodeCreate(e25) {
    this._prevSourceNodeHeight = e25.clientWidth, this._resizeObserver.observe(e25);
  }
  _checkSourceTextOverflow(e25) {
    let t23 = false;
    const { clientHeight: i33, clientWidth: r23, scrollWidth: s24 } = e25, o24 = s24 > r23, n30 = this._attributionTextOverflowed !== o24;
    if (this._attributionTextOverflowed = o24, n30 && (t23 = true), this._isOpen) {
      const e26 = i33 < this._prevSourceNodeHeight;
      this._prevSourceNodeHeight = i33, e26 && (this._isOpen = false, t23 = true);
    }
    t23 && this.scheduleRender();
  }
  _toggleState() {
    this._isInteractive && (this._isOpen = !this._isOpen);
  }
};
e2([y()], p28.prototype, "_isOpen", void 0), e2([y()], p28.prototype, "_isInteractive", null), e2([y()], p28.prototype, "_attributionTextOverflowed", void 0), e2([y()], p28.prototype, "_prevSourceNodeHeight", void 0), e2([y({ readOnly: true, dependsOn: ["viewModel.items.length", "itemDelimiter"] })], p28.prototype, "attributionText", null), e2([y()], p28.prototype, "iconClass", void 0), e2([y()], p28.prototype, "itemDelimiter", void 0), e2([y()], p28.prototype, "label", null), e2([y(), e4("esri/widgets/Attribution/t9n/Attribution")], p28.prototype, "messages", void 0), e2([y()], p28.prototype, "view", null), e2([y({ type: _10 })], p28.prototype, "viewModel", void 0), e2([t8()], p28.prototype, "_toggleState", null), p28 = e2([n4("esri.widgets.Attribution")], p28);
var a27 = p28;

// node_modules/@arcgis/core/widgets/Compass/CompassViewModel.js
var p29 = "esri.widgets.CompassViewModel";
var d15 = class extends e11(m) {
  constructor(t23) {
    super(t23), this._handles = new t4(), this.orientation = { x: 0, y: 0, z: 0 }, this.view = null, this._updateForCamera = this._updateForCamera.bind(this), this._updateForRotation = this._updateForRotation.bind(this), this._updateRotationWatcher = this._updateRotationWatcher.bind(this);
  }
  initialize() {
    this._handles.add(l3(() => this.view, this._updateRotationWatcher, h2));
  }
  destroy() {
    this._handles = h(this._handles), this.view = null;
  }
  get canShowNorth() {
    const t23 = this.get("view.spatialReference");
    return !(!t23 || !t23.isWebMercator && !t23.isGeographic);
  }
  get state() {
    return this.get("view.ready") ? this.canShowNorth ? "compass" : "rotation" : "disabled";
  }
  reset() {
    if (!this.get("view.ready"))
      return;
    const t23 = {};
    "2d" === this.view.type ? t23.rotation = 0 : t23.heading = 0, this.callGoTo({ target: t23 });
  }
  _updateForRotation(t23) {
    null != t23 && (this.orientation = { z: t23 });
  }
  _updateForCamera(t23) {
    if (!t23)
      return;
    const o24 = -t23.heading;
    this.orientation = { x: 0, y: 0, z: o24 };
  }
  _updateRotationWatcher(t23) {
    this._handles.removeAll(), t23 && this._handles.add("2d" === t23.type ? l3(() => t23 == null ? void 0 : t23.rotation, this._updateForRotation, h2) : l3(() => t23 == null ? void 0 : t23.camera, this._updateForCamera, h2));
  }
};
e2([y({ readOnly: true })], d15.prototype, "canShowNorth", null), e2([y()], d15.prototype, "orientation", void 0), e2([y({ readOnly: true })], d15.prototype, "state", null), e2([y()], d15.prototype, "view", void 0), d15 = e2([n4(p29)], d15);
var c31 = d15;

// node_modules/@arcgis/core/widgets/Compass.js
var l25 = { base: "esri-compass esri-widget--button esri-widget", text: "esri-icon-font-fallback-text", icon: "esri-compass__icon", rotationIcon: "esri-icon-dial", northIcon: "esri-icon-compass", widgetIcon: "esri-icon-locate-circled", interactive: "esri-interactive", disabled: "esri-disabled" };
var c32 = class extends M2 {
  constructor(e25, s24) {
    super(e25, s24), this.iconClass = l25.widgetIcon, this.messages = null, this.viewModel = new c31();
  }
  get goToOverride() {
    return this.viewModel.goToOverride;
  }
  set goToOverride(e25) {
    this.viewModel.goToOverride = e25;
  }
  get label() {
    var _a, _b;
    return (_b = (_a = this.messages) == null ? void 0 : _a.widgetLabel) != null ? _b : "";
  }
  set label(e25) {
    this._overrideIfSome("label", e25);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e25) {
    this.viewModel.view = e25;
  }
  reset() {
    return this.viewModel.reset();
  }
  render() {
    const { orientation: e25, state: s24 } = this.viewModel, t23 = "disabled" === s24, o24 = "compass" === ("rotation" === s24 ? "rotation" : "compass"), r23 = t23 ? -1 : 0, i33 = { [l25.disabled]: t23, [l25.interactive]: !t23 }, a32 = { [l25.northIcon]: o24, [l25.rotationIcon]: !o24 }, { messages: c36 } = this;
    return n7("div", { bind: this, class: this.classes(l25.base, i33), onclick: this._reset, onkeydown: this._reset, role: "button", tabIndex: r23, "aria-label": c36.reset, title: c36.reset }, n7("span", { "aria-hidden": "true", class: this.classes(l25.icon, a32), styles: this._toRotationTransform(e25) }), n7("span", { class: l25.text }, c36.reset));
  }
  _reset() {
    this.viewModel.reset();
  }
  _toRotationTransform(e25) {
    return { transform: `rotateZ(${e25.z}deg)` };
  }
};
e2([y()], c32.prototype, "goToOverride", null), e2([y()], c32.prototype, "iconClass", void 0), e2([y()], c32.prototype, "label", null), e2([y(), e4("esri/widgets/Compass/t9n/Compass")], c32.prototype, "messages", void 0), e2([y()], c32.prototype, "view", null), e2([y({ type: c31 })], c32.prototype, "viewModel", void 0), e2([t8()], c32.prototype, "_reset", null), c32 = e2([n4("esri.widgets.Compass")], c32);
var p30 = c32;

// node_modules/@arcgis/core/widgets/NavigationToggle/NavigationToggleViewModel.js
var r22 = class extends m {
  constructor(t23) {
    super(t23), this.navigationMode = "pan", this.view = null;
  }
  initialize() {
    this.own(f2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.inputManager;
    }, () => this._setNavigationMode()));
  }
  destroy() {
    this.view = null;
  }
  get state() {
    return this.get("view.ready") && "3d" === this.view.type ? "ready" : "disabled";
  }
  toggle() {
    "disabled" !== this.state && (this.navigationMode = "pan" !== this.navigationMode ? "pan" : "rotate", this._setNavigationMode());
  }
  _setNavigationMode() {
    this.get("view.inputManager").primaryDragAction = "pan" === this.navigationMode ? "pan" : "rotate";
  }
};
e2([y({ readOnly: true })], r22.prototype, "state", null), e2([y()], r22.prototype, "navigationMode", void 0), e2([y()], r22.prototype, "view", void 0), r22 = e2([n4("esri.widgets.NavigationToggleViewModel")], r22);
var a28 = r22;

// node_modules/@arcgis/core/widgets/NavigationToggle.js
var l26 = { base: "esri-navigation-toggle esri-widget", button: "esri-navigation-toggle__button esri-widget--button", activeButton: "esri-navigation-toggle__button--active", panButton: "esri-navigation-toggle__button--pan", rotateButton: "esri-navigation-toggle__button--rotate", isLayoutHorizontal: "esri-navigation-toggle--horizontal", rotationIcon: "esri-icon-rotate", panIcon: "esri-icon-pan", widgetIcon: "esri-icon-pan2", disabled: "esri-disabled" };
var g17 = class extends M2 {
  constructor(t23, o24) {
    super(t23, o24), this.iconClass = l26.widgetIcon, this.messages = null, this.viewModel = new a28();
  }
  get label() {
    var _a, _b;
    return (_b = (_a = this.messages) == null ? void 0 : _a.widgetLabel) != null ? _b : "";
  }
  set label(t23) {
    this._overrideIfSome("label", t23);
  }
  set layout(t23) {
    "horizontal" !== t23 && (t23 = "vertical"), this._set("layout", t23);
  }
  get view() {
    return this.viewModel.view;
  }
  set view(t23) {
    this.viewModel.view = t23;
  }
  toggle() {
    return this.viewModel.toggle();
  }
  render() {
    const t23 = "disabled" === this.get("viewModel.state"), o24 = "pan" === this.get("viewModel.navigationMode"), e25 = { [l26.disabled]: t23, [l26.isLayoutHorizontal]: "horizontal" === this.layout }, s24 = { [l26.activeButton]: o24 }, i33 = { [l26.activeButton]: !o24 }, a32 = t23 ? -1 : 0, r23 = this.messages.toggle;
    return n7("div", { bind: this, class: this.classes(l26.base, e25), onclick: this._toggle, onkeydown: this._toggle, tabIndex: a32, "aria-label": r23, title: r23 }, n7("div", { class: this.classes(l26.button, l26.panButton, s24) }, n7("span", { class: l26.panIcon })), n7("div", { class: this.classes(l26.button, l26.rotateButton, i33) }, n7("span", { class: l26.rotationIcon })));
  }
  _toggle() {
    this.toggle();
  }
};
e2([y()], g17.prototype, "iconClass", void 0), e2([y()], g17.prototype, "label", null), e2([y({ value: "vertical" })], g17.prototype, "layout", null), e2([y(), e4("esri/widgets/NavigationToggle/t9n/NavigationToggle")], g17.prototype, "messages", void 0), e2([y()], g17.prototype, "view", null), e2([y({ type: a28 })], g17.prototype, "viewModel", void 0), e2([t8()], g17.prototype, "_toggle", null), g17 = e2([n4("esri.widgets.NavigationToggle")], g17);
var p31 = g17;

// node_modules/@arcgis/core/widgets/Zoom/IconButton.js
var c33 = { button: "esri-widget--button esri-widget", disabled: "esri-disabled", interactive: "esri-interactive", iconText: "esri-icon-font-fallback-text", icon: "esri-icon" };
var n29 = class extends M2 {
  constructor() {
    super(...arguments), this.enabled = true, this.iconClass = "", this.title = "";
  }
  render() {
    const t23 = this.enabled ? 0 : -1, s24 = { [c33.disabled]: !this.enabled, [c33.interactive]: this.enabled }, i33 = { [this.iconClass]: !!this.iconClass };
    return n7("div", { bind: this, class: this.classes(c33.button, s24), onclick: this._triggerAction, onkeydown: this._triggerAction, role: "button", tabIndex: t23, title: this.title }, n7("span", { "aria-hidden": "true", role: "presentation", class: this.classes(c33.icon, i33) }), n7("span", { class: c33.iconText }, this.title));
  }
  _triggerAction() {
    this.action.call(this);
  }
};
e2([y()], n29.prototype, "action", void 0), e2([y()], n29.prototype, "enabled", void 0), e2([y()], n29.prototype, "iconClass", void 0), e2([y()], n29.prototype, "title", void 0), e2([t8()], n29.prototype, "_triggerAction", null), n29 = e2([n4("esri.widgets.IconButton")], n29);
var a29 = n29;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions2D.js
var s23 = class extends m {
  get canZoomIn() {
    if (!this.get("view.ready"))
      return false;
    const e25 = this.get("view.animation.target.scale") || this.get("view.scale"), t23 = this.get("view.constraints.effectiveMaxScale");
    return 0 === t23 || e25 > t23;
  }
  get canZoomOut() {
    if (!this.get("view.ready"))
      return false;
    const e25 = this.get("view.animation.target.scale") || this.get("view.scale"), t23 = this.get("view.constraints.effectiveMinScale");
    return 0 === t23 || e25 < t23;
  }
};
e2([y({ readOnly: true })], s23.prototype, "canZoomIn", null), e2([y({ readOnly: true })], s23.prototype, "canZoomOut", null), e2([y()], s23.prototype, "view", void 0), s23 = e2([n4("esri.widgets.Zoom.ZoomConditions2D")], s23);
var i32 = s23;

// node_modules/@arcgis/core/widgets/Zoom/ZoomConditions3D.js
var t22 = class extends m {
  get canZoomIn() {
    return !!this.view.ready;
  }
  get canZoomOut() {
    return !!this.view.ready;
  }
};
e2([y({ readOnly: true })], t22.prototype, "canZoomIn", null), e2([y({ readOnly: true })], t22.prototype, "canZoomOut", null), e2([y()], t22.prototype, "view", void 0), t22 = e2([n4("esri.widgets.Zoom.ZoomConditions3D")], t22);
var c34 = t22;

// node_modules/@arcgis/core/widgets/Zoom/ZoomViewModel.js
var p32 = class extends m {
  constructor(o24) {
    super(o24);
  }
  destroy() {
    this.view = null;
  }
  get canZoomIn() {
    return r(this._zoomConditions) && this._zoomConditions.canZoomIn;
  }
  get canZoomOut() {
    var _a;
    return r(this._zoomConditions) && ((_a = this._zoomConditions) == null ? void 0 : _a.canZoomOut);
  }
  get state() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.ready) ? "ready" : "disabled";
  }
  set view(o24) {
    o24 ? "2d" === o24.type ? this._zoomConditions = new i32({ view: o24 }) : "3d" === o24.type && (this._zoomConditions = new c34({ view: o24 })) : this._zoomConditions = null, this._set("view", o24);
  }
  zoomIn() {
    if (!this.canZoomIn)
      return;
    const o24 = this.view;
    "2d" === o24.type ? o24.mapViewNavigation.zoomIn() : g2(o24.goTo({ zoomFactor: 2 }));
  }
  zoomOut() {
    if (!this.canZoomOut)
      return;
    const o24 = this.view;
    "2d" === o24.type ? o24.mapViewNavigation.zoomOut() : g2(o24.goTo({ zoomFactor: 0.5 }));
  }
};
e2([y()], p32.prototype, "_zoomConditions", void 0), e2([y()], p32.prototype, "canZoomIn", null), e2([y()], p32.prototype, "canZoomOut", null), e2([y({ readOnly: true })], p32.prototype, "state", null), e2([y()], p32.prototype, "view", null), p32 = e2([n4("esri.widgets.Zoom.ZoomViewModel")], p32);
var a30 = p32;

// node_modules/@arcgis/core/widgets/Zoom.js
var u17 = { base: "esri-zoom esri-widget", horizontalLayout: "esri-zoom--horizontal", zoomInIcon: "esri-icon-plus", zoomOutIcon: "esri-icon-minus", widgetIcon: "esri-icon-zoom-in-magnifying-glass" };
var a31 = class extends M2 {
  constructor(o24, t23) {
    super(o24, t23), this.iconClass = u17.widgetIcon, this.messages = null, this.viewModel = new a30();
  }
  initialize() {
    this._zoomInButton = new a29({ action: this.zoomIn.bind(this), iconClass: u17.zoomInIcon }), this._zoomOutButton = new a29({ action: this.zoomOut.bind(this), iconClass: u17.zoomOutIcon });
  }
  destroy() {
    this._zoomInButton = s(this._zoomInButton), this._zoomOutButton = s(this._zoomOutButton);
  }
  get label() {
    var _a, _b;
    return (_b = (_a = this.messages) == null ? void 0 : _a.widgetLabel) != null ? _b : "";
  }
  set label(o24) {
    this._overrideIfSome("label", o24);
  }
  set layout(o24) {
    "horizontal" !== o24 && (o24 = "vertical"), this._set("layout", o24);
  }
  set view(o24) {
    this.viewModel.view = o24;
  }
  get view() {
    return this.viewModel.view;
  }
  render() {
    const o24 = this.viewModel, t23 = { [u17.horizontalLayout]: "horizontal" === this.layout }, { canZoomIn: s24, canZoomOut: e25 } = o24;
    this._zoomInButton.enabled = s24, this._zoomOutButton.enabled = e25;
    const { zoomIn: i33, zoomOut: r23 } = this.messages;
    return this._zoomInButton.title = i33, this._zoomOutButton.title = r23, n7("div", { class: this.classes(u17.base, t23) }, this._zoomInButton.render(), this._zoomOutButton.render());
  }
  zoomIn() {
    return this.viewModel.zoomIn();
  }
  zoomOut() {
    return this.viewModel.zoomOut();
  }
};
e2([y()], a31.prototype, "iconClass", void 0), e2([y()], a31.prototype, "label", null), e2([y({ value: "vertical" })], a31.prototype, "layout", null), e2([y(), e4("esri/widgets/Zoom/t9n/Zoom")], a31.prototype, "messages", void 0), e2([y()], a31.prototype, "view", null), e2([y({ type: a30 })], a31.prototype, "viewModel", void 0), a31 = e2([n4("esri.widgets.Zoom")], a31);
var c35 = a31;

// node_modules/@arcgis/core/views/ui/DefaultUI.js
function m24(t23) {
  return t23 && void 0 !== t23.view;
}
var h17 = class extends L7 {
  constructor(t23) {
    super(t23), this._defaultPositionLookup = { attribution: "manual", compass: "top-left", "navigation-toggle": "top-left", zoom: "top-left" }, this.components = [];
  }
  initialize() {
    this._handles.add([l3(() => this.components, this._componentsWatcher.bind(this), h2), l3(() => this.view, this._updateViewAwareWidgets.bind(this), h2)]);
  }
  _add(t23, o24, e25, i33) {
    if ("string" == typeof t23 && this._defaultPositionLookup[t23]) {
      if (this._find(t23))
        return;
      t23 = this._createComponent(t23);
    }
    super._add(t23, o24, e25, i33);
  }
  _removeComponents(t23) {
    t23.forEach((t24) => {
      const o24 = this._find(t24);
      o24 && (this.remove(o24), o24.destroy());
    });
  }
  _updateViewAwareWidgets(t23) {
    this.components.forEach((o24) => {
      const e25 = this._find(o24), i33 = e25 && e25.widget;
      m24(i33) && (i33.view = t23);
    });
  }
  _componentsWatcher(t23, o24) {
    this._removeComponents(o24), this._addComponents(t23), this._adjustPadding(t23);
  }
  _adjustPadding(t23) {
    if (!t23.includes("attribution") && !this._isOverridden("padding")) {
      const { top: t24 } = this.padding;
      this.padding = t24;
    }
  }
  _addComponents(t23) {
    this.constructed && t23.forEach((t24) => this.add(this._createComponent(t24), this._defaultPositionLookup[t24]));
  }
  _createComponent(t23) {
    const o24 = this._createWidget(t23);
    if (o24)
      return new l23({ id: t23, node: o24 });
  }
  _createWidget(t23) {
    return "attribution" === t23 ? this._createAttribution() : "compass" === t23 ? this._createCompass() : "navigation-toggle" === t23 ? this._createNavigationToggle() : "zoom" === t23 ? this._createZoom() : void 0;
  }
  _createAttribution() {
    return new a27({ view: this.view });
  }
  _createCompass() {
    return new p30({ view: this.view });
  }
  _createNavigationToggle() {
    return new p31({ view: this.view });
  }
  _createZoom() {
    return new c35({ view: this.view });
  }
};
e2([y()], h17.prototype, "components", void 0), h17 = e2([n4("esri.views.ui.DefaultUI")], h17);
var u18 = h17;

// node_modules/@arcgis/core/views/ui/2d/DefaultUI2D.js
var e24 = class extends u18 {
  constructor(o24) {
    super(o24), this.components = ["attribution", "zoom"];
  }
};
e2([y()], e24.prototype, "components", void 0), e24 = e2([n4("esri.views.ui.2d.DefaultUI2D")], e24);
var p33 = e24;

// node_modules/@arcgis/core/views/MapView.js
var pe2;
var he2;
var ce2;
var de2;
var ue2;
var ge2;
async function me2() {
  const [, { GraphicsView2D: e25, GraphicContainer: t23, LabelManager: i33, MapViewNavigation: s24, MagnifierView2D: r23, Stage: n30 }] = await Promise.all([import("./webglDeps-TIAKAF4Q.js"), import("./mapViewDeps-TWG2WSOS.js")]);
  he2 = e25, ce2 = t23, de2 = i33, ue2 = s24, ge2 = r23, pe2 = n30;
}
var ye2 = 160;
function we(e25) {
  return e25 && "esri.Viewpoint" === e25.declaredClass;
}
var fe2 = class extends w6(z5(a13(z6))) {
  constructor(e25) {
    super(e25), this._magnifierView = null, this._stage = null, this._resolveWhenReady = [], this.rootLayerViews = new l5({ getCollections: () => {
      var _a, _b;
      return [(_a = this.basemapView) == null ? void 0 : _a.baseLayerViews, this.layerViews, (_b = this.basemapView) == null ? void 0 : _b.referenceLayerViews];
    }, getChildrenFunction: () => null }), this.featuresTilingScheme = null, this.fullOpacity = 1, this.graphicsView = null, this.labelManager = null, this.mapViewNavigation = null, this.renderingOptions = { samplingMode: "dynamic", edgeLabelsVisible: true, labelsAnimationTime: 125, labelCollisionsEnabled: true }, this.rendering = false, this.supersampleScreenshotsEnabled = false, this.supportsGround = false, this._stationaryTimer = null, this.frameTask = new s17(this), this._pePromise = null, this.floors = new j3(), this.highlightOptions = new c29(), this.inputManager = new C7({ view: this }), this.map = null, this.resizeAlign = "center", this.spatialReferenceLocked = false, this.timeline = new e13(), this.type = "2d", this.ui = new p33(), this._pixelFormat = { flipY: true, premultipliedAlpha: true }, this.constraints = new u13(), this.padding = { top: 0, right: 0, bottom: 0, left: 0 }, this.handles.add([l3(() => this.viewpoint, () => {
      this._lastStationaryEventTimestamp = performance.now(), this._flipStationary(ye2);
    }, U2), this.on("resize", (e26) => this._resizeHandler(e26)), l3(() => {
      var _a;
      return (_a = this.animationManager) == null ? void 0 : _a.animation;
    }, (e26) => {
      this.animation = e26;
    })]), l9();
  }
  destroy() {
    this._set("preconditionsReady", false), this._gotoTask = this.frameTask = null, this.rootLayerViews.destroy(), this.inputManager.destroy(), this._set("inputManager", null);
  }
  get graphicsTileStore() {
    return new d3(this.featuresTilingScheme);
  }
  get initialExtentRequired() {
    var _a;
    const { scale: e25, constraints: t23, center: i33, viewpoint: s24, extent: r23 } = this;
    let n30 = this.zoom;
    return !(this.map && "initialViewProperties" in this.map && ((_a = this.map.initialViewProperties) == null ? void 0 : _a.viewpoint)) && (!r23 && ((t23 == null ? void 0 : t23.effectiveLODs) || (n30 = -1), (!i33 || 0 === e25 && -1 === n30) && (!s24 || !r(s24.targetGeometry) || "extent" !== s24.targetGeometry.type && !s24.scale)));
  }
  get resourceManager() {
    return this._stage.resourceManager;
  }
  get textureManager() {
    return this._stage.painter.textureManager;
  }
  get _defaultsFromMapSettings() {
    return { required: { tileInfo: true, heightModelInfo: false, extent: false }, requiresExtentInSpatialReference: this.spatialReferenceLocked };
  }
  get _projectionEngineLoaded() {
    return !!en() || (this._pePromise || (this._pePromise = tn().finally(() => {
      this._pePromise = null;
    })), false);
  }
  get typeSpecificPreconditionsReady() {
    const e25 = this._getDefaultViewpoint();
    if (!e25)
      return false;
    const t23 = this.spatialReference, i33 = e(e25.targetGeometry);
    return !!An(i33.spatialReference, t23) || this._projectionEngineLoaded;
  }
  set animation(e25) {
    const t23 = this._get("animation");
    if (e25 === t23)
      return;
    if (t23 && t23.stop(), !e25 || e25.isFulfilled())
      return void this._set("animation", null);
    this._set("animation", e25), this.frameTask.animationInProgress = true;
    const i33 = () => {
      var _a;
      e25 === this._get("animation") && (this._set("animation", null), (_a = this.frameTask) == null ? void 0 : _a.requestFrame()), this.frameTask && (this.frameTask.animationInProgress = false);
    };
    e25.when(i33, i33);
  }
  get background() {
    return je(this.map) ? this.map.initialViewProperties.background : null;
  }
  set background(e25) {
    this._override("background", e25);
  }
  get center() {
    if (!this.ready)
      return this._get("center");
    const { center: e25, spatialReference: t23 } = this.state.paddedViewState;
    return new w({ x: e25[0], y: e25[1], spatialReference: t23 });
  }
  set center(e25) {
    if (null == e25)
      return;
    if (!this.ready)
      return this._set("center", e25), void this.notifyChange("initialExtentRequired");
    let t23;
    try {
      t23 = this._project(e25, this.spatialReference);
    } catch (s24) {
      return void s2.getLogger(this.declaredClass).error(new s3("mapview:invalid-center", "could not project the value in the view's spatial reference", { input: e25, error: s24 }));
    }
    const i33 = this.viewpoint;
    xt(i33, i33, t23), this.viewpoint = i33;
  }
  set constraints(e25) {
    const t23 = this._get("constraints");
    t23 && (this.handles.remove("map-view-constraints"), t23.destroy()), this._set("constraints", e25), e25 && (e25.view = this, this.ready && (this.state.viewpoint = e25.fit(this.state.paddedViewState.viewpoint)), this.handles.add(l3(() => e25.version, () => {
      this.ready && this.state && (this.state.viewpoint = e25.fit(this.state.paddedViewState.viewpoint));
    }, U2), "map-view-constraints"));
  }
  get extent() {
    return this.ready ? this.state.paddedViewState.extent.clone() : this._get("extent");
  }
  set extent(e25) {
    if (null == e25)
      return;
    if (!e25.width || !e25.height)
      return void s2.getLogger(this.declaredClass).error(new s3("mapview:invalid-extent", "invalid extent size"));
    if (!this.ready)
      return this._set("extent", e25), this._set("center", null), this._set("viewpoint", null), this._set("scale", 0), this._set("zoom", -1), void this.notifyChange("initialExtentRequired");
    let t23;
    try {
      t23 = this._project(e25, this.spatialReference);
    } catch (s24) {
      return void s2.getLogger(this.declaredClass).error(new s3("mapview:invalid-extent", "could not project the value in the view's spatial reference", { error: s24 }));
    }
    const i33 = this.viewpoint;
    tt(i33, i33, t23, this.size, { constraints: this.constraints }), this.viewpoint = i33;
  }
  get padding() {
    return this.ready ? this.state.padding : this._get("padding");
  }
  set padding(e25) {
    this.ready ? (this.state.padding = e25, this._set("padding", this.state.padding)) : this._set("padding", e25);
  }
  get resolution() {
    return this.state ? this.state.resolution : 0;
  }
  get rotation() {
    return this.ready ? this.state.rotation : this._get("rotation");
  }
  set rotation(e25) {
    if (isNaN(e25))
      return;
    if (!this.ready)
      return void this._set("rotation", e25);
    const t23 = this.viewpoint;
    wt(t23, t23, e25), this.viewpoint = t23;
  }
  get scale() {
    return this.ready ? this.state.scale : this._get("scale");
  }
  set scale(e25) {
    if (!e25 || isNaN(e25))
      return;
    if (!this.ready) {
      this._set("scale", e25), this._set("zoom", -1);
      const t24 = this._get("extent");
      return t24 && (this._set("extent", null), this._set("center", t24.center)), void this.notifyChange("initialExtentRequired");
    }
    const t23 = this.viewpoint;
    jt(t23, t23, e25), this.viewpoint = t23;
  }
  get stationary() {
    return !(this.animation || this.navigating || this.resizing || this._stationaryTimer);
  }
  get updating() {
    var _a, _b, _c;
    const e25 = !this.destroyed && (!this.layerViewManager || !this.labelManager || !this.graphicsView || true === this.layerViewManager.updating || true === this.labelManager.updating || true === this.graphicsView.updating || this.allLayerViews.some((e26) => !e26.destroyed && !("layerViews" in e26) && true === e26.updating));
    if (has("esri-2d-log-updating")) {
      const t23 = this.allLayerViews.reduce((e26, t24) => ({ ...e26, [t24.layer.id]: !t24.destroyed && !("layerViews" in t24) && t24.updating }), {});
      console.log(`Updating MapView: ${e25}
-> Null LayerViewManager: ${!this.layerViewManager}
-> Null LabelManager: ${!this.labelManager}
-> Null GraphicsView: ${!this.graphicsView}
-> layerViewManager.updating: ${(_a = this.layerViewManager) == null ? void 0 : _a.updating}
-> labelManager.updating: ${(_b = this.labelManager) == null ? void 0 : _b.updating}
-> graphicsView.updating: ${(_c = this.graphicsView) == null ? void 0 : _c.updating}
-> allLayerViews: ${JSON.stringify(t23)}
`);
    }
    return e25;
  }
  get viewpoint() {
    if (!this.ready)
      return this._get("viewpoint");
    const e25 = this.state.paddedViewState;
    return e25 && e25.viewpoint.clone();
  }
  set viewpoint(e25) {
    if (null == e25)
      return;
    if (!this.ready)
      return this._set("viewpoint", e25), this._set("extent", null), this._set("center", null), this._set("zoom", -1), this._set("scale", 0), void this.notifyChange("initialExtentRequired");
    let t23, s24;
    try {
      t23 = this._project(e25, this.spatialReference), !e25.scale || isNaN(e25.scale) ? s24 = new s3("mapview:invalid-viewpoint", `invalid scale value of ${e25.scale}`) : t(e25.targetGeometry) && (s24 = new s3("mapview:invalid-viewpoint", "geometry not defined"));
    } catch (a32) {
      s24 = new s3("mapview:invalid-viewpoint", "could not project the value in the view's spatial reference", { error: a32 });
    }
    if (s24)
      return void s2.getLogger(this.declaredClass).error(s24);
    this._scaleBeforeChangingSpatialReference = null;
    const r23 = new u3({ targetGeometry: new w(), scale: 0, rotation: 0 });
    Z(r23, t23), this.constraints.constrain(r23, this.state.paddedViewState.viewpoint), this.state.viewpoint = r23, this.frameTask.requestFrame(), this._set("viewpoint", r23);
  }
  get zoom() {
    return this.ready ? this.constraints.scaleToZoom(this.scale) : this._get("zoom");
  }
  set zoom(e25) {
    if (null == e25)
      return;
    if (!this.ready) {
      this._set("zoom", e25), this._set("scale", 0);
      const t24 = this._get("extent");
      return t24 && (this._set("extent", null), this._set("center", t24.center)), void this.notifyChange("initialExtentRequired");
    }
    if (!this.constraints.effectiveLODs)
      return void this._set("zoom", -1);
    const t23 = this.viewpoint;
    jt(t23, t23, this.constraints.zoomToScale(e25)), this.viewpoint = t23, this._set("zoom", this.constraints.scaleToZoom(this.scale));
  }
  get navigating() {
    return !(!this.mapViewNavigation || !this.mapViewNavigation.interacting);
  }
  goTo(e25, t23) {
    if (e25)
      return this.animation && (this.animation = null), this._createAnimation(), j2(() => this.ready, t23).then(() => {
        const i33 = { animate: true, ...t23 }, s24 = Y(e25, this);
        return this.animation.update(s24), this._gotoTask = {}, i33.animate ? this._gotoAnimated(s24, i33) : this._gotoImmediate(s24, i33);
      });
    s2.getLogger(this.declaredClass).error("#goTo()", "target cannot be null or undefined");
  }
  async hitTest(e25, t23) {
    const i33 = o7(e25) ? r11(this, e25) : e25;
    if (!this.ready || isNaN(i33.x) || isNaN(i33.y))
      return { screenPoint: i33, results: [] };
    let s24 = /* @__PURE__ */ new Set(), r23 = false, n30 = null, a32 = null;
    (t23 == null ? void 0 : t23.include) ? Se(t23.include, Ve(this, (e26) => s24.add(e26), (e26) => {
      n30 || (n30 = /* @__PURE__ */ new Set()), n30.add(e26);
    }, (e26) => s24.add(e26), () => r23 = true)) : (r23 = true, s24 = new Set(this.allLayerViews)), (t23 == null ? void 0 : t23.exclude) && Se(t23.exclude, Ve(this, (e26) => s24.delete(e26), (e26) => {
      a32 || (a32 = /* @__PURE__ */ new Set()), a32.add(e26);
    }));
    const o24 = this.allLayerViews.filter((e26) => !e26.suspended && s24.has(e26)).reverse(), p34 = this.toMap(i33);
    let h18 = [...r23 ? this.graphicsView.hitTest(p34).map((e26) => ({ type: "graphic", graphic: e26, layer: null, mapPoint: p34 })) : [], ...await Promise.all(o24.map((e26) => e26.hitTest(p34, i33)).toArray())].filter(r).flat().filter(r);
    return n30 && (h18 = h18.filter((e26) => !("graphic" in e26) || !e26.graphic || n30.has(ve(e26.graphic)))), a32 && (h18 = h18.filter((e26) => !("graphic" in e26) || !e26.graphic || a32.has(ve(e26.graphic)))), { screenPoint: i33, results: h18 };
  }
  async takeScreenshot(e25) {
    const t23 = this._createScreenshotPlan(e25), i33 = await this._stage.takeScreenshot(t23);
    return r12(i33, { format: t23.format, quality: t23.quality, rotation: 0, disableDecorations: false }, this._pixelFormat);
  }
  async _takeScreenshot(e25) {
    const t23 = this._createScreenshotPlan(e25), i33 = await this._stage.takeScreenshot(t23);
    return l10(i33, this._pixelFormat);
  }
  _createScreenshotPlan(e25) {
    e25 = e25 || {};
    const t23 = this.supersampleScreenshotsEnabled ? Math.min(4, w5(this.size, Math.min(4096, this._stage.context.parameters.maxTextureSize))) : 1;
    let i33;
    e25.layers ? (i33 = [], e25.layers.forEach((e26) => {
      const t24 = this.allLayerViews.find((t25) => t25.layer.id === e26.id);
      t24 && "container" in t24 && t24.container && i33.push(t24.container);
    })) : i33 = this._stage.children;
    const { format: s24, quality: r23 } = s9(e25.format, e25.quality);
    return t21(e25, t23, this.size, this.padding, s24, r23, i33, e25.rotation);
  }
  get test() {
    return { takeScreenshot: (e25) => this._takeScreenshot(e25) };
  }
  toMap(e25) {
    if (!this.ready)
      return null;
    const t23 = o7(e25) ? r11(this, e25) : e25, i33 = [0, 0], [s24, r23] = this.state.toMap(i33, [t23.x, t23.y]), n30 = this.spatialReference;
    return new w({ x: s24, y: r23, spatialReference: n30 });
  }
  toScreen(e25) {
    if (!this.ready)
      return null;
    const t23 = this._project(e25, this.spatialReference), i33 = [t23.x, t23.y];
    return this.state.toScreen(i33, i33), c2(i33[0], i33[1]);
  }
  on(e25, t23, i33, s24) {
    const r23 = this.inputManager && this.viewEvents.on(e25, t23, i33, s24);
    return r23 || super.on(e25, t23);
  }
  hasEventListener(e25) {
    return super.hasEventListener(e25) || this.viewEvents.hasHandler(e25);
  }
  whenLayerView(e25) {
    return super.whenLayerView(e25);
  }
  graphicChanged(e25) {
    if (this.graphicsView) {
      this.graphicsView.graphicUpdateHandler(e25);
    }
  }
  whenReady() {
    return new Promise((e25) => {
      this.ready ? e25(this) : this._resolveWhenReady.push(e25);
    });
  }
  forceDOMReadyCycle() {
    this.forceReadyCycle();
  }
  getDefaultSpatialReference() {
    var _a, _b, _c;
    return this.map && "initialViewProperties" in this.map && ((_b = (_a = this.map) == null ? void 0 : _a.initialViewProperties) == null ? void 0 : _b.spatialReference) || ((_c = this.defaultsFromMap) == null ? void 0 : _c.spatialReference) || null;
  }
  hasLayerViewModule(e25) {
    return n22.hasLayerViewModule(e25);
  }
  importLayerView(e25) {
    return n22.importLayerView(e25);
  }
  pixelSizeAt() {
    return this.ready ? this.state.resolution : (s2.getLogger(this.declaredClass).error("#pixelSizeAt()", "Map view cannot be used before it is ready"), null);
  }
  popupHitTest(e25) {
    return this.hitTest(e25).then((t23) => ({ ...t23, mapPoint: this.toMap(e25) }));
  }
  requestUpdate() {
    this.ready && this.frameTask.requestUpdate();
  }
  validate() {
    let e25 = i30(this.type);
    return has("safari") && has("safari") < 9 && (e25 = new s3("mapview:browser-not-supported", "This browser is not supported by MapView (Safari < 9)", { type: "safari", requiredVersion: 9, detectedVersion: has("safari") })), r(e25) ? (s2.getLogger(this.declaredClass).warn("#validate()", e25.message), Promise.reject(e25)) : me2();
  }
  _createAnimation() {
    return this.animation && !this.animation.done || (this.animation = new p21()), this.animation;
  }
  _cancellableGoTo(e25, t23, i33) {
    const s24 = () => e25 === this._gotoTask, r23 = i33.then(() => {
      s24() && (this.animation = null);
    }).catch((e26) => {
      throw s24() && (this.animation = null, t23.done || (t23.stop(), this.frameTask.animationInProgress = false)), e26;
    }), n30 = new Promise((e26) => e26(r23));
    return t23.when().catch(() => {
      s24() && n30.cancel && n30.cancel();
    }), n30;
  }
  _gotoImmediate(e25, t23) {
    const i33 = this._gotoTask, s24 = this.animation, r23 = e25.then((e26) => {
      if (f(t23), i33 !== this._gotoTask)
        throw new s3("view:goto-interrupted", "Goto was interrupted");
      this.viewpoint = s24.target = e26, s24.finish();
    });
    return this._cancellableGoTo(i33, s24, r23);
  }
  _flipStationary(e25) {
    return null !== this._stationaryTimer || (this._stationaryTimer = setTimeout(() => {
      this._stationaryTimer = null;
      const e26 = performance.now() - this._lastStationaryEventTimestamp;
      e26 < ye2 && (this._stationaryTimer = this._flipStationary(e26));
    }, e25)), this._stationaryTimer;
  }
  _getDefaultViewpoint() {
    var _a, _b, _c, _d;
    const { constraints: e25, initialExtent: t23, map: s24, padding: r23, size: n30 } = this;
    if (!e25)
      return null;
    const a32 = s24 && "initialViewProperties" in s24 && s24.initialViewProperties, o24 = { zoom: this._get("zoom"), scale: this._get("scale"), center: this._get("center"), extent: this._get("extent"), rotation: this._get("rotation"), viewpoint: this._get("viewpoint"), spatialReference: this._userSpatialReference };
    e25.effectiveLODs ? -1 !== o24.zoom && (o24.scale = e25.zoomToScale(o24.zoom)) : o24.zoom = -1;
    let h18 = null, c36 = null, d16 = 0;
    const u19 = o24.viewpoint && o24.viewpoint.rotation, g18 = o24.viewpoint && o24.viewpoint.targetGeometry;
    r(g18) && ("extent" === g18.type ? h18 = g18 : "point" === g18.type && (c36 = g18, d16 = o24.viewpoint.scale));
    const m25 = o24.extent || h18 || ((_b = e((_a = a32 == null ? void 0 : a32.viewpoint) == null ? void 0 : _a.targetGeometry)) == null ? void 0 : _b.extent) || t23, y15 = o24.center || c36 || (m25 == null ? void 0 : m25.center), w17 = o24.scale || d16 || ((_c = a32 == null ? void 0 : a32.viewpoint) == null ? void 0 : _c.scale) || m25 && H(m25, [n30[0] - r23.left - r23.right, n30[1] - r23.top - r23.bottom]), f15 = o24.rotation || u19 || ((_d = a32 == null ? void 0 : a32.viewpoint) == null ? void 0 : _d.rotation) || 0;
    return y15 && w17 ? new u3({ targetGeometry: y15, scale: w17, rotation: f15 }) : null;
  }
  _gotoAnimated(e25, t23) {
    const i33 = this._gotoTask, s24 = this.animation, r23 = e25.then((e26) => {
      if (f(t23), i33 !== this._gotoTask)
        throw new s3("view:goto-interrupted", "Goto was interrupted");
      return s24.update(e26), this.animationManager.animate(s24, this.viewpoint, t23), s24.when().then(() => {
      }, () => {
      });
    });
    return this._cancellableGoTo(i33, s24, r23);
  }
  _project(e25, t23) {
    var _a;
    const i33 = e25 && e25.targetGeometry || e25;
    if (!t23)
      return e25;
    if (!i33)
      return null;
    if (t23.imageCoordinateSystem || ((_a = i33.spatialReference) == null ? void 0 : _a.imageCoordinateSystem))
      return e25;
    if (E2(t23, i33.spatialReference))
      return e25;
    const s24 = rn(i33, t23);
    if (!s24)
      throw new s3("mapview:projection-not-possible", "projecting input geometry to target spatial reference returned a null value", { geometry: i33, spatialReference: t23 });
    return we(e25) ? (e25.targetGeometry = s24, e25) : s24;
  }
  _resizeHandler(e25) {
    if (!this.ready)
      return;
    const t23 = this.state;
    let i33 = this.state.paddedViewState.viewpoint;
    const s24 = this.state.paddedViewState.size.concat();
    t23.size = [e25.width, e25.height], ht(i33, i33, s24, this.state.paddedViewState.size, this.resizeAlign), i33 = this.constraints.constrain(i33, null), this.state.viewpoint = i33;
  }
  _startup() {
    var _a, _b;
    this.timeline.begin("MapView Startup");
    const e25 = this._getDefaultViewpoint(), t23 = e25.targetGeometry;
    try {
      this._project(e25, this.spatialReference);
    } catch (l27) {
      s2.getLogger(this.declaredClass).warn(new t2("mapview:startup-projection-error", "projection of initial viewpoint to the view's spatial reference, defaulting to the initial viewpoint.", { center: t23.toJSON(), spatialReference: this.spatialReference, error: l27 })), e25.targetGeometry = ((_a = this.defaultsFromMap.extent) == null ? void 0 : _a.center) || new w({ x: 0, y: 0, spatialReference: this.spatialReference });
    }
    (_b = this.constraints) == null ? void 0 : _b.fit(e25), this._set("state", new f12({ padding: this._get("padding"), size: this.size, viewpoint: e25 })), this.graphics.owner = this;
    const i33 = new pe2(this.surface, { canvas: this.renderCanvas, supersampleScreenshots: this.supersampleScreenshotsEnabled, contextOptions: { disabledExtensions: this.deactivatedWebGLExtensions, debugWebGLExtensions: this.debugWebGLExtensions }, renderingOptions: this.renderingOptions, timeline: this.timeline });
    this._stage = i33, this._magnifierView = new ge2(), this._magnifierView.magnifier = this.magnifier;
    const s24 = new de2({ view: this });
    this._set("labelManager", s24);
    const r23 = new d12({ view: this });
    this._set("animationManager", r23);
    const n30 = new ue2({ view: this, animationManager: r23 });
    this._set("mapViewNavigation", n30), this._setupSpatialReferenceDependentProperties(), this.handles.add([this.rootLayerViews.on("change", () => this._updateStageChildren()), i33.on("post-render", () => this._set("rendering", i33.renderRequested)), i33.on("will-render", () => this._set("rendering", i33.renderRequested)), i33.on("webgl-error", (e26) => this.fatalError = e26.error), l3(() => this.stationary, (e26) => i33.stationary = e26, w3), l3(() => this.background, (e26) => {
      i33.background = e26, this._magnifierView.background = e26;
    }, w3), l3(() => this.magnifier, (e26) => this._magnifierView.magnifier = e26, w3), l3(() => this.renderingOptions, (e26) => i33.renderingOptions = e26, w3), l3(() => this.highlightOptions, (e26) => i33.highlightOptions = e26, w3), l3(() => this.state.id, () => i33.state = this.state, w3)], "map-view"), this._updateStageChildren();
    const a32 = this._resolveWhenReady;
    this._resolveWhenReady = [], a32.forEach((e26) => e26(this)), this.timeline.end("MapView Startup"), this.frameTask && this.frameTask.start(), this._set("ready", true);
  }
  _teardown() {
    this._destroySpatialReferenceDependentProperties(), this.handles.remove("map-view"), this.mapViewNavigation.destroy(), this._set("mapViewNavigation", null), this.animationManager.destroy(), this._set("animationManager", null), this.layerViewManager.clear(), this.labelManager.destroy(), this._magnifierView.destroy(), this._stage.destroy(), this._stage = null, this._set("graphicsView", null), this._magnifierView = null, this._set("labelManager", null), this._set("mapViewNavigation", null), this.graphics.owner = null, this.frameTask && this.frameTask.stop(), this._stationaryTimer && (clearTimeout(this._stationaryTimer), this._stationaryTimer = null), this._set("ready", false);
    const { center: [e25, t23], spatialReference: i33, rotation: s24, scale: r23 } = this.state.paddedViewState, n30 = new w({ x: e25, y: t23, spatialReference: i33 });
    this._set("viewpoint", null), this._set("extent", null), this._set("center", n30), this._set("zoom", -1), this._set("rotation", s24), this._set("scale", r23), this._set("spatialReference", i33), this._set("state", null), this.animation = null;
  }
  _updateStageChildren() {
    this._stage.removeAllChildren(), this.rootLayerViews.forEach((e26) => {
      this._stage.addChild(e26.container);
    });
    const e25 = this.graphicsView;
    this._stage.addChild(e25.container), this._stage.addChild(this._magnifierView);
  }
  _setupSpatialReferenceDependentProperties() {
    const e25 = new h5(j5.create({ spatialReference: this.spatialReference, size: 512, numLODs: 36 }));
    this._set("featuresTilingScheme", e25);
    const t23 = new he2({ view: this, graphics: this.graphics, requestUpdateCallback: () => this.requestUpdate(), container: new ce2(e25) });
    this.frameTask.graphicsView = t23, this._set("graphicsView", t23);
  }
  _destroySpatialReferenceDependentProperties() {
    const e25 = this.graphicsView;
    this._set("graphicsView", null), this.frameTask.graphicsView = null, e25.destroy(), this._set("featuresTilingScheme", null);
  }
  _spatialReferenceChanged(e25) {
    if (!this.ready)
      return;
    this.frameTask.stop();
    for (const i33 of this.allLayerViews)
      i33.processDetach();
    this._destroySpatialReferenceDependentProperties();
    const t23 = this.state.paddedViewState.clone();
    if (t(this._scaleBeforeChangingSpatialReference))
      this._scaleBeforeChangingSpatialReference = t23.scale;
    else {
      const e26 = t23.viewpoint.clone();
      e26.scale = this._scaleBeforeChangingSpatialReference, t23.viewpoint = e26;
    }
    const s24 = t23.clone(), [r23, n30] = t23.center;
    let a32 = null;
    try {
      a32 = this._project(new w({ x: r23, y: n30, spatialReference: t23.spatialReference }), e25);
    } catch (p34) {
      en() || s2.getLogger(this.declaredClass).warn(new t2("mapview:spatial-reference-change", "could not project the view's center to the new spatial reference", { center: a32.toJSON(), spatialReference: e25, error: p34 }));
    }
    a32 || (a32 = new w({ x: 0, y: 0, spatialReference: e25 }));
    const l27 = xt(new u3({ targetGeometry: new w(), scale: 0, rotation: 0 }), t23.viewpoint, a32);
    s24.viewpoint = l27;
    try {
      const i33 = 20, r24 = [t23.size[0] / 2, t23.size[1] / 2], n31 = [r24[0] + i33, r24[1]], a33 = t23.toMap([0, 0], n31), { x: o24, y: p34 } = this._project(new w({ x: a33[0], y: a33[1], spatialReference: t23.spatialReference }), e25);
      a33[0] = o24, a33[1] = p34, s24.toScreen(a33, a33);
      const h18 = pt(r24, a33, n31), c36 = Math.hypot(a33[0] - r24[0], a33[1] - r24[1]) / i33;
      !Number.isFinite(c36) || Math.abs(c36) > 4 ? (l27.rotation = 0, l27.targetGeometry = new w({ x: 0, y: 0, spatialReference: e25 })) : (l27.scale *= c36, l27.scale > has("mapview-srswitch-adjust-rotation-scale-threshold") ? l27.rotation = 0 : l27.rotation += Number.isFinite(h18) ? h18 : 0);
    } catch {
    }
    this._get("constraints").constrain(l27, null), this._get("state").viewpoint = l27, this._stage.state = this.state, this._setupSpatialReferenceDependentProperties();
    for (const i33 of this.allLayerViews)
      i33.processAttach();
    this.frameTask.requestFrame(), this.frameTask.start(), this._updateStageChildren();
  }
};
fe2.type = "2d", e2([y({ readOnly: true })], fe2.prototype, "animationManager", void 0), e2([y({ constructOnly: true })], fe2.prototype, "deactivatedWebGLExtensions", void 0), e2([y({ constructOnly: true })], fe2.prototype, "debugWebGLExtensions", void 0), e2([y({ readOnly: true })], fe2.prototype, "featuresTilingScheme", void 0), e2([y({ readOnly: true })], fe2.prototype, "fullOpacity", void 0), e2([y({ readOnly: true })], fe2.prototype, "graphicsTileStore", null), e2([y()], fe2.prototype, "graphicsView", void 0), e2([y({ readOnly: true })], fe2.prototype, "state", void 0), e2([y()], fe2.prototype, "initialExtentRequired", null), e2([y()], fe2.prototype, "labelManager", void 0), e2([y({ readOnly: true })], fe2.prototype, "resourceManager", null), e2([y({ readOnly: true })], fe2.prototype, "textureManager", null), e2([y({ readOnly: true })], fe2.prototype, "mapViewNavigation", void 0), e2([y({ constructOnly: true })], fe2.prototype, "renderCanvas", void 0), e2([y()], fe2.prototype, "renderingOptions", void 0), e2([y({ readOnly: true })], fe2.prototype, "rendering", void 0), e2([y({ constructOnly: true })], fe2.prototype, "supersampleScreenshotsEnabled", void 0), e2([y({ readOnly: true })], fe2.prototype, "supportsGround", void 0), e2([y()], fe2.prototype, "_stationaryTimer", void 0), e2([y()], fe2.prototype, "_defaultsFromMapSettings", null), e2([y()], fe2.prototype, "_pePromise", void 0), e2([y({ readOnly: true })], fe2.prototype, "typeSpecificPreconditionsReady", null), e2([y()], fe2.prototype, "animation", null), e2([y({ type: m7 })], fe2.prototype, "background", null), e2([y({ value: null, type: w, dependsOn: ["state.id", "ready"] })], fe2.prototype, "center", null), e2([y({ type: u13 })], fe2.prototype, "constraints", null), e2([y({ value: null, type: w2, dependsOn: ["state.id", "ready"] })], fe2.prototype, "extent", null), e2([y()], fe2.prototype, "floors", void 0), e2([y({ type: c29 })], fe2.prototype, "highlightOptions", void 0), e2([y({ readOnly: true })], fe2.prototype, "inputManager", void 0), e2([y()], fe2.prototype, "map", void 0), e2([y({ value: { top: 0, right: 0, bottom: 0, left: 0 }, cast: (e25) => ({ top: 0, right: 0, bottom: 0, left: 0, ...e25 }) })], fe2.prototype, "padding", null), e2([y()], fe2.prototype, "resizeAlign", void 0), e2([y({ readOnly: true, dependsOn: ["state.id"] })], fe2.prototype, "resolution", null), e2([y({ value: 0, type: Number, dependsOn: ["state.id", "ready"] })], fe2.prototype, "rotation", null), e2([y({ value: 0, type: Number, dependsOn: ["state.id", "ready"] })], fe2.prototype, "scale", null), e2([y({ constructOnly: true })], fe2.prototype, "spatialReferenceLocked", void 0), e2([y()], fe2.prototype, "stationary", null), e2([y({ type: e13, readOnly: true })], fe2.prototype, "timeline", void 0), e2([y({ readOnly: true })], fe2.prototype, "type", void 0), e2([y({ readOnly: true })], fe2.prototype, "updating", null), e2([y({ value: null, type: u3, dependsOn: ["state.id", "ready"] })], fe2.prototype, "viewpoint", null), e2([y({ value: -1, dependsOn: ["state.id", "ready"] })], fe2.prototype, "zoom", null), e2([y({ readOnly: true })], fe2.prototype, "navigating", null), e2([y({ type: p33 })], fe2.prototype, "ui", void 0), fe2 = e2([n4("esri.views.MapView")], fe2);
var _e = fe2;
function ve(e25) {
  var _a, _b, _c, _d;
  const t23 = e25.getObjectId();
  return t23 ? `${(_d = (_c = (_a = e25.layer) == null ? void 0 : _a.uid) != null ? _c : (_b = e25.sourceLayer) == null ? void 0 : _b.uid) != null ? _d : "MapView"}/${t23}` : `"MapView/${e25.uid}`;
}
function Ve(e25, i33, s24, r23, n30) {
  return (a32) => {
    if (a32 instanceof g3) {
      if (a32.layer === e25)
        n30 == null ? void 0 : n30();
      else {
        const t23 = e25.allLayerViews.find((e26) => e26.layer === a32.layer);
        t23 && (r23 == null ? void 0 : r23(t23));
      }
      s24(ve(a32));
    } else {
      const t23 = e25.allLayerViews.find((e26) => e26.layer === a32);
      t23 && i33(t23);
    }
  };
}
function Se(e25, t23) {
  if (e25)
    if (t3(e25))
      for (const i33 of e25)
        if (t3(i33))
          for (const e26 of i33)
            t23(e26);
        else
          t23(i33);
    else
      t23(e25);
}
function je(e25) {
  return "esri.WebMap" === (e25 == null ? void 0 : e25.declaredClass);
}

// dep:@arcgis_core_views_MapView
var arcgis_core_views_MapView_default = _e;
export {
  arcgis_core_views_MapView_default as default
};
//# sourceMappingURL=@arcgis_core_views_MapView.js.map
