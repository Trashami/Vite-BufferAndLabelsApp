{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/PathVertexPosition.glsl.js", "../../@arcgis/core/chunks/Path.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{f as e}from\"../../../../../../chunks/vec2f64.js\";import{PositionAttribute as o}from\"./PositionAttribute.glsl.js\";import{Float2PassUniform as r}from\"../../shaderModules/Float2PassUniform.js\";import{Float3PassUniform as i}from\"../../shaderModules/Float3PassUniform.js\";import{Float4sPassUniform as t}from\"../../shaderModules/Float4sPassUniform.js\";import{FloatsPassUniform as a}from\"../../shaderModules/FloatsPassUniform.js\";import{glsl as l}from\"../../shaderModules/interfaces.js\";import{VertexAttribute as v}from\"../../../lib/VertexAttribute.js\";import{vvColorNumber as s,VisualVariablePassParameters as c}from\"../../../materials/VisualVariablePassParameters.js\";const f=8;function n(e,c){e.attributes.add(v.FEATUREVALUE,\"vec4\");const n=e.vertex;n.code.add(l`bool isCapVertex() {\nreturn featureValue.w == 1.0;\n}`),n.uniforms.add(new r(\"size\",(e=>e.size))),c.vvSize?(n.uniforms.add(new i(\"vvSizeMinSize\",(e=>e.vvSizeMinSize))),n.uniforms.add(new i(\"vvSizeMaxSize\",(e=>e.vvSizeMaxSize))),n.uniforms.add(new i(\"vvSizeOffset\",(e=>e.vvSizeOffset))),n.uniforms.add(new i(\"vvSizeFactor\",(e=>e.vvSizeFactor))),n.code.add(l`vec2 getSize() {\nreturn size * clamp(vvSizeOffset + featureValue.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).xz;\n}`)):n.code.add(l`vec2 getSize(){\nreturn size;\n}`),c.vvOpacity?(n.constants.add(\"vvOpacityNumber\",\"int\",f),n.uniforms.add([new a(\"vvOpacityValues\",(e=>e.vvOpacityValues),f),new a(\"vvOpacityOpacities\",(e=>e.vvOpacityOpacities),f)]),n.code.add(l`vec4 applyOpacity(vec4 color) {\nfloat value = featureValue.z;\nif (value <= vvOpacityValues[0]) {\nreturn vec4( color.xyz, vvOpacityOpacities[0]);\n}\nfor (int i = 1; i < vvOpacityNumber; ++i) {\nif (vvOpacityValues[i] >= value) {\nfloat f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);\nreturn vec4( color.xyz, mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f));\n}\n}\nreturn vec4( color.xyz, vvOpacityOpacities[vvOpacityNumber - 1]);\n}`)):n.code.add(l`vec4 applyOpacity(vec4 color){\nreturn color;\n}`),c.vvColor?(n.constants.add(\"vvColorNumber\",\"int\",s),n.uniforms.add([new a(\"vvColorValues\",(e=>e.vvColorValues),s),new t(\"vvColorColors\",(e=>e.vvColorColors),s)]),n.code.add(l`vec4 getColor() {\nfloat value = featureValue.y;\nif (value <= vvColorValues[0]) {\nreturn applyOpacity(vvColorColors[0]);\n}\nfor (int i = 1; i < vvColorNumber; ++i) {\nif (vvColorValues[i] >= value) {\nfloat f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);\nreturn applyOpacity(mix(vvColorColors[i-1], vvColorColors[i], f));\n}\n}\nreturn applyOpacity(vvColorColors[vvColorNumber - 1]);\n}`)):n.code.add(l`vec4 getColor(){\nreturn applyOpacity(vec4(1, 1, 1, 1));\n}`),e.include(o),e.attributes.add(v.PROFILERIGHT,\"vec4\"),e.attributes.add(v.PROFILEUP,\"vec4\"),e.attributes.add(v.PROFILEVERTEXANDNORMAL,\"vec4\"),n.code.add(l`vec3 calculateVPos() {\nvec2 size = getSize();\nvec3 origin = position;\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileVertex = profileVertexAndNormal.xy * size;\nvec2 profileNormal = profileVertexAndNormal.zw;\nfloat positionOffsetAlongProfilePlaneNormal = 0.0;\nfloat normalOffsetAlongProfilePlaneNormal = 0.0;`),n.code.add(l`if(!isCapVertex()) {\nvec2 rotationRight = vec2(profileRight.w, profileUp.w);\nfloat maxDistance = length(rotationRight);`),n.code.add(l`rotationRight = maxDistance > 0.0 ? normalize(rotationRight) : vec2(0, 0);\nfloat rx = dot(profileVertex, rotationRight);\nif (abs(rx) > maxDistance) {\nvec2 rotationUp = vec2(-rotationRight.y, rotationRight.x);\nfloat ry = dot(profileVertex, rotationUp);\nprofileVertex = rotationRight * maxDistance * sign(rx) + rotationUp * ry;\n}\n}else{\npositionOffsetAlongProfilePlaneNormal = profileRight.w * size[0];\nnormalOffsetAlongProfilePlaneNormal = profileUp.w;\n}\nvec3 offset = right * profileVertex.x + up * profileVertex.y + forward * positionOffsetAlongProfilePlaneNormal;\nreturn origin + offset;\n}`),n.code.add(l`vec3 localNormal() {\nvec3 right = profileRight.xyz;\nvec3 up = profileUp.xyz;\nvec3 forward = cross(up, right);\nvec2 profileNormal = profileVertexAndNormal.zw;\nvec3 normal = right * profileNormal.x + up * profileNormal.y;\nif(isCapVertex()) {\nnormal += forward * profileUp.w;\n}\nreturn normal;\n}`)}class p extends c{constructor(){super(...arguments),this.size=e(1,1)}}export{n as PathVertexPosition,p as PathVertexPositionPassParameters};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e,addNearFar as i}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{ShaderOutput as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as r}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{PathVertexPosition as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PathVertexPosition.glsl.js\";import{OutputDepth as s}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";import{OutputHighlight as n}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{EvaluateAmbientOcclusion as d}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as t,addAmbientBoostFactor as c,addLightingGlobalFactor as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as m}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as p}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Normals as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{NormalUtils as h}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";import{ReadShadowMapDraw as u}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{ColorConversion as w}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{addProjViewLocalOrigin as b,addViewNormal as f,addCameraPosition as y}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{FloatPassUniform as L}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as P}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as S}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{TransparencyPassType as C}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";function F(F){const _=new S,{vertex:M,fragment:O}=_;switch(b(M,F),_.varyings.add(\"vpos\",\"vec3\"),_.include(l,F),F.output!==o.Color&&F.output!==o.Alpha||(_.include(r,F),_.include(u,F),_.include(e,F),_.varyings.add(\"vnormal\",\"vec3\"),_.varyings.add(\"vcolor\",\"vec4\"),F.hasMultipassTerrain&&_.varyings.add(\"depth\",\"float\"),M.code.add(P`\n      void main() {\n        vpos = calculateVPos();\n        vnormal = normalize(localNormal());\n\n        ${F.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n        gl_Position = transformPosition(proj, view, vpos);\n\n        ${F.output===o.Color?\"forwardLinearDepth();\":\"\"}\n\n        vcolor = getColor();\n      }\n    `)),_.include(p,F),F.output){case o.Alpha:_.include(a,F),O.uniforms.add(new L(\"opacity\",(e=>e.opacity))),O.code.add(P`\n      void main() {\n        discardBySlice(vpos);\n        ${F.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        float combinedOpacity = vcolor.a * opacity;\n        gl_FragColor = vec4(combinedOpacity);\n      }\n    `);break;case o.Color:_.include(a,F),_.include(t,F),_.include(d,F),_.include(u,F),_.include(v,F),y(O,F),c(O),g(O),O.uniforms.add([M.uniforms.get(\"localOrigin\"),new j(\"ambient\",(e=>e.ambient)),new j(\"diffuse\",(e=>e.diffuse)),new j(\"specular\",(e=>e.specular)),new L(\"opacity\",(e=>e.opacity))]),O.include(w),m(O),O.code.add(P`\n        void main() {\n          discardBySlice(vpos);\n          ${F.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n\n          shadingParams.viewDirection = normalize(vpos - cameraPosition);\n          shadingParams.normalView = vnormal;\n          vec3 normal = shadingNormal(shadingParams);\n          float ssao = evaluateAmbientOcclusionInverse();\n\n          float additionalAmbientScale = additionalDirectedAmbientLight(vpos + localOrigin);\n          vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n          ${F.receiveShadows?\"float shadow = readShadowMap(vpos, linearDepth);\":F.spherical?\"float shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);\":\"float shadow = 0.0;\"}\n          vec3 albedo = vcolor.rgb * max(ambient, diffuse); // combine the old material parameters into a single one\n          float combinedOpacity = vcolor.a * opacity;\n          albedo += 0.25 * specular; // don't completely ignore specular for now\n\n          vec3 shadedColor = evaluateSceneLighting(normal, albedo, shadow, 1.0 - ssao, additionalLight);\n          gl_FragColor = vec4(shadedColor, combinedOpacity);\n          gl_FragColor = highlightSlice(gl_FragColor, vpos);\n          ${F.transparencyPassType===C.Color?\"gl_FragColor = premultiplyAlpha(gl_FragColor);\":\"\"}\n        }\n      `);break;case o.Depth:case o.Shadow:case o.ShadowHighlight:case o.ShadowExludeHighlight:_.include(r,F),i(_),_.varyings.add(\"depth\",\"float\"),M.code.add(P`void main() {\nvpos = calculateVPos();\ngl_Position = transformPositionWithDepth(proj, view, vpos, nearFar, depth);\n}`),_.include(a,F),_.include(s,F),O.code.add(P`void main() {\ndiscardBySlice(vpos);\noutputDepth(depth);\n}`);break;case o.Normal:_.include(r,F),_.include(h,F),f(M),_.varyings.add(\"vnormal\",\"vec3\"),M.code.add(P`void main(void) {\nvpos = calculateVPos();\nvnormal = normalize((viewNormal * vec4(localNormal(), 1.0)).xyz);\ngl_Position = transformPosition(proj, view, vpos);\n}`),_.include(a,F),O.code.add(P`void main() {\ndiscardBySlice(vpos);\nvec3 normal = normalize(vnormal);\nif (gl_FrontFacing == false) normal = -normal;\ngl_FragColor = vec4(vec3(0.5) + 0.5 * normal, 1.0);\n}`);break;case o.Highlight:_.include(r,F),_.include(h,F),_.varyings.add(\"vnormal\",\"vec3\"),M.code.add(P`void main(void) {\nvpos = calculateVPos();\ngl_Position = transformPosition(proj, view, vpos);\n}`),_.include(a,F),_.include(n,F),O.code.add(P`void main() {\ndiscardBySlice(vpos);\noutputHighlight();\n}`)}return _}const _=Object.freeze(Object.defineProperty({__proto__:null,build:F},Symbol.toStringTag,{value:\"Module\"}));export{_ as P,F as b};\n"],
  "mappings": "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",
  "names": ["n", "e", "c", "o", "p", "v", "F", "_", "O", "n", "r", "v", "o", "e", "h", "u", "a", "d"]
}
