import {
  a
} from "./chunk-RLIH5RCN.js";
import {
  d,
  l as l3,
  t as t2
} from "./chunk-APU7GFNJ.js";
import {
  l as l2
} from "./chunk-E4KPV765.js";
import {
  y as y2
} from "./chunk-745B43YA.js";
import {
  n as n2
} from "./chunk-CN5IW2C7.js";
import "./chunk-RLIJP6DT.js";
import {
  v
} from "./chunk-G3HEFWHV.js";
import {
  c
} from "./chunk-FX6IXM55.js";
import {
  O
} from "./chunk-QFFP6A5Q.js";
import "./chunk-YGVY4EIZ.js";
import "./chunk-HUQX7WZO.js";
import "./chunk-BYSA56OH.js";
import "./chunk-US2IWMHE.js";
import "./chunk-ZPYDYUP5.js";
import {
  n as n3
} from "./chunk-TDV3ZXCQ.js";
import {
  t
} from "./chunk-XJCUKRCO.js";
import {
  b
} from "./chunk-SOEQPPQP.js";
import "./chunk-22F6X66Z.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-X2S4RQJ4.js";
import "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-NRP45AHD.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-SZIJNKCV.js";
import "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import "./chunk-UWG37XSU.js";
import "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import {
  r as r2
} from "./chunk-HLM6QCL2.js";
import "./chunk-RXYULINL.js";
import {
  U,
  l
} from "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-7QMMKGW4.js";
import {
  e,
  e2,
  n2 as n,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import "./chunk-MJXQTGI2.js";
import "./chunk-LIZHLHNA.js";
import "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  r
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/layers/GroupLayer.js
var _ = class extends n3(t(c(v(l3(d(O(b))))))) {
  constructor(i) {
    super(i), this._visibilityHandles = {}, this.allLayers = new l2({ getCollections: () => [this.layers], getChildrenFunction: (i2) => "layers" in i2 ? i2.layers : null }), this.allTables = t2(this), this.fullExtent = void 0, this.operationalLayerType = "GroupLayer", this.spatialReference = void 0, this.type = "group";
  }
  initialize() {
    this._enforceVisibility(this.visibilityMode, this.visible), this.addHandles(l(() => this.visible, this._onVisibilityChange.bind(this), U));
  }
  _writeLayers(i, e3, t3, r3) {
    const o = [];
    if (!i)
      return o;
    i.forEach((i2) => {
      const e4 = y2(i2, r3.webmap ? r3.webmap.getLayerJSONFromResourceInfo(i2) : null, r3);
      r(e4) && e4.layerType && o.push(e4);
    }), e3.layers = o;
  }
  set portalItem(i) {
    this._set("portalItem", i);
  }
  set visibilityMode(i) {
    const e3 = this._get("visibilityMode") !== i;
    this._set("visibilityMode", i), e3 && this._enforceVisibility(i, this.visible);
  }
  load(i) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection", "Scene Service"], layerModuleTypeMap: a }, i)), Promise.resolve(this);
  }
  loadAll() {
    return n2(this, (i) => {
      i(this.layers, this.tables);
    });
  }
  layerAdded(i) {
    i.visible && "exclusive" === this.visibilityMode ? this._turnOffOtherLayers(i) : "inherited" === this.visibilityMode && (i.visible = this.visible), this._visibilityHandles[i.uid] = l(() => i.visible, (e3) => this._onChildVisibilityChange(i, e3), U);
  }
  layerRemoved(i) {
    const e3 = this._visibilityHandles[i.uid];
    e3 && (e3.remove(), delete this._visibilityHandles[i.uid]), this._enforceVisibility(this.visibilityMode, this.visible);
  }
  _turnOffOtherLayers(i) {
    this.layers.forEach((e3) => {
      e3 !== i && (e3.visible = false);
    });
  }
  _enforceVisibility(i, e3) {
    if (!e2(this).initialized)
      return;
    const t3 = this.layers;
    let s = t3.find((i2) => i2.visible);
    switch (i) {
      case "exclusive":
        t3.length && !s && (s = t3.getItemAt(0), s.visible = true), this._turnOffOtherLayers(s);
        break;
      case "inherited":
        t3.forEach((i2) => {
          i2.visible = e3;
        });
    }
  }
  _onVisibilityChange(i) {
    "inherited" === this.visibilityMode && this.layers.forEach((e3) => {
      e3.visible = i;
    });
  }
  _onChildVisibilityChange(i, e3) {
    switch (this.visibilityMode) {
      case "exclusive":
        e3 ? this._turnOffOtherLayers(i) : this._isAnyLayerVisible() || (i.visible = true);
        break;
      case "inherited":
        i.visible = this.visible;
    }
  }
  _isAnyLayerVisible() {
    return this.layers.some((i) => i.visible);
  }
};
e([y({ readOnly: true, dependsOn: [] })], _.prototype, "allLayers", void 0), e([y({ readOnly: true })], _.prototype, "allTables", void 0), e([y()], _.prototype, "fullExtent", void 0), e([y({ json: { read: true, write: true } })], _.prototype, "blendMode", void 0), e([y({ json: { read: false, write: { ignoreOrigin: true } } })], _.prototype, "layers", void 0), e([r2("layers")], _.prototype, "_writeLayers", null), e([y({ type: ["GroupLayer"] })], _.prototype, "operationalLayerType", void 0), e([y({ json: { origins: { "web-document": { read: false, write: false } } } })], _.prototype, "portalItem", null), e([y()], _.prototype, "spatialReference", void 0), e([y({ json: { read: false }, readOnly: true, value: "group" })], _.prototype, "type", void 0), e([y({ type: ["independent", "inherited", "exclusive"], value: "independent", json: { write: true, origins: { "web-map": { read: false, write: false } } } })], _.prototype, "visibilityMode", null), _ = e([n("esri.layers.GroupLayer")], _);
var g = _;
export {
  g as default
};
//# sourceMappingURL=GroupLayer-4AAELAZL.js.map
