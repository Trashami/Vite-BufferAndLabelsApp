import {
  a as a2,
  c as c2
} from "./chunk-4HL6BBWO.js";
import {
  p as p2
} from "./chunk-HSDU7DIL.js";
import {
  b,
  c as c3,
  d,
  p as p3,
  w
} from "./chunk-FWRLW4G5.js";
import {
  a,
  c3 as c4,
  p
} from "./chunk-OD3FDQCI.js";
import {
  c
} from "./chunk-X2S4RQJ4.js";
import {
  j as j2
} from "./chunk-SZIJNKCV.js";
import {
  Ot,
  j
} from "./chunk-KAN4HXCG.js";
import {
  s
} from "./chunk-LIZHLHNA.js";
import {
  f,
  r
} from "./chunk-MIHB3CIK.js";

// node_modules/@arcgis/core/symbols/support/webStyleSymbolUtils.js
function h(t, e, r2, n) {
  return t.name ? t.styleName && "Esri2DPointSymbolsStyle" === t.styleName ? U(t, e, n) : c3(t, e, n).then((o) => d2(f(o), t.name, e, r2, n)) : Promise.reject(new s("symbolstyleutils:style-symbol-reference-name-missing", "Missing name in style symbol reference"));
}
function d2(l, f2, g, h2, d3) {
  var _a, _b, _c;
  const U2 = l.data, N = g && r(g.portal) ? g.portal : j2.getDefault(), w2 = { portal: N, url: j(l.baseUrl), origin: "portal-item" }, S = U2.items.find((t) => t.name === f2);
  if (!S) {
    const t = `The symbol name '${f2}' could not be found`;
    return Promise.reject(new s("symbolstyleutils:symbol-name-not-found", t, { symbolName: f2 }));
  }
  let D = c(d(S, h2), w2), O = (_b = (_a = S.thumbnail) == null ? void 0 : _a.href) != null ? _b : null;
  const P = S.thumbnail && S.thumbnail.imageData;
  c2() && (D = (_c = a2(D)) != null ? _c : "", O = a2(O));
  const E = { portal: N, url: j(Ot(D)), origin: "portal-item" };
  return b(D, d3).then((e) => {
    const r2 = "cimRef" === h2 ? p3(e.data) : e.data, o = p2(r2, E);
    if (o && c4(o)) {
      if (O) {
        const t = c(O, w2);
        o.thumbnail = new p({ url: t });
      } else
        P && (o.thumbnail = new p({ url: `data:image/png;base64,${P}` }));
      l.styleUrl ? o.styleOrigin = new a({ portal: g.portal, styleUrl: l.styleUrl, name: f2 }) : l.styleName && (o.styleOrigin = new a({ portal: g.portal, styleName: l.styleName, name: f2 }));
    }
    return o;
  });
}
function U(t, e, r2) {
  const o = w.replace(/\{SymbolName\}/gi, t.name), l = r(e.portal) ? e.portal : j2.getDefault();
  return b(o, r2).then((t2) => {
    const e2 = p3(t2.data);
    return p2(e2, { portal: l, url: j(Ot(o)), origin: "portal-item" });
  });
}

export {
  h,
  d2 as d
};
//# sourceMappingURL=chunk-252YOCQK.js.map
