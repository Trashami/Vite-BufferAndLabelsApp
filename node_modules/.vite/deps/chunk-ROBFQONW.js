import {
  r as r2
} from "./chunk-X7GQR2IY.js";
import {
  n as n2
} from "./chunk-S6WNSMC7.js";
import {
  e as e2
} from "./chunk-JPRTIOCM.js";
import {
  o as o3
} from "./chunk-RNRS2JL4.js";
import {
  h
} from "./chunk-SBPLVEUA.js";
import {
  u
} from "./chunk-3IISYLTT.js";
import {
  v
} from "./chunk-7QNA4ADD.js";
import {
  o as o2
} from "./chunk-MYQCUAHK.js";
import {
  e,
  f
} from "./chunk-BQL7VXQR.js";
import {
  o as o4
} from "./chunk-735C75BI.js";
import {
  n,
  o
} from "./chunk-ZLTZ3KAT.js";
import {
  O
} from "./chunk-RUM3DXFX.js";
import {
  i
} from "./chunk-ZEEU5HOK.js";
import {
  r
} from "./chunk-MIHB3CIK.js";

// node_modules/@arcgis/core/chunks/ImageMaterial.glsl.js
function f2(f3) {
  const w2 = new o(), { vertex: h2, fragment: b } = w2;
  return v(h2, f3), w2.include(r2, f3), w2.attributes.add(O.POSITION, "vec3"), w2.attributes.add(O.UV0, "vec2"), w2.varyings.add("vpos", "vec3"), f3.hasMultipassTerrain && w2.varyings.add("depth", "float"), h2.uniforms.add(new e("textureCoordinateScaleFactor", (o5) => r(o5.texture) && r(o5.texture.descriptor.textureCoordinateScaleFactor) ? o5.texture.descriptor.textureCoordinateScaleFactor : i)), h2.code.add(n`
    void main(void) {
      vpos = position;
      ${f3.hasMultipassTerrain ? "depth = (view * vec4(vpos, 1.0)).z;" : ""}
      vTexCoord = uv0 * textureCoordinateScaleFactor;
      gl_Position = transformPosition(proj, view, vpos);
    }
  `), w2.include(u, f3), w2.include(n2, f3), b.uniforms.add([new f("tex", (e3) => e3.texture), new o4("opacity", (e3) => e3.opacity)]), w2.varyings.add("vTexCoord", "vec2"), f3.output === h.Alpha ? b.code.add(n`
    void main() {
      discardBySlice(vpos);
      ${f3.hasMultipassTerrain ? "terrainDepthTest(gl_FragCoord, depth);" : ""}

      float alpha = texture2D(tex, vTexCoord).a * opacity;
      if (alpha  < ${n.float(o3)}) {
        discard;
      }

      gl_FragColor = vec4(alpha);
    }
    `) : (b.include(e2), b.code.add(n`
    void main() {
      discardBySlice(vpos);
      ${f3.hasMultipassTerrain ? "terrainDepthTest(gl_FragCoord, depth);" : ""}
      gl_FragColor = texture2D(tex, vTexCoord) * opacity;

      if (gl_FragColor.a < ${n.float(o3)}) {
        discard;
      }

      gl_FragColor = highlightSlice(gl_FragColor, vpos);
      ${f3.transparencyPassType === o2.Color ? "gl_FragColor = premultiplyAlpha(gl_FragColor);" : ""}
    }
    `)), w2;
}
var w = Object.freeze(Object.defineProperty({ __proto__: null, build: f2 }, Symbol.toStringTag, { value: "Module" }));

export {
  f2 as f,
  w
};
//# sourceMappingURL=chunk-ROBFQONW.js.map
