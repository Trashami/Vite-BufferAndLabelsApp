import {
  o
} from "./chunk-GRWIJKD6.js";
import {
  L
} from "./chunk-3OFVLRSL.js";

// node_modules/@arcgis/core/views/2d/engine/webgl/GroupContainer.js
var r = class extends o {
  constructor() {
    super(...arguments), this.requiresDedicatedFBO = false;
  }
  dispose() {
  }
  doRender(e) {
    const r2 = this.createRenderParams(e), { context: s, painter: o2, profiler: n } = r2;
    this._prevFBO = s.getBoundFramebufferObject(), n.recordContainerStart(this.name);
    const i = this._getFbo(r2), a = o2.getRenderTarget();
    s.bindFramebuffer(i), o2.setRenderTarget(i), s.setDepthWriteEnabled(true), s.setColorMask(true, true, true, true), s.setClearColor(0, 0, 0, 0), s.setClearDepth(1), s.clear(s.gl.COLOR_BUFFER_BIT | s.gl.DEPTH_BUFFER_BIT), s.setDepthWriteEnabled(false);
    for (const t of this.children)
      t.beforeRender(e);
    for (const t of this.children)
      t.processRender(r2);
    for (const t of this.children)
      t.afterRender(e);
    o2.setRenderTarget(a), o2.releaseFbo(i), s.bindFramebuffer(this._prevFBO), o2.beforeRenderLayer(r2, this._clippingInfos ? 255 : 0, this.computedOpacity), s.setStencilTestEnabled(false), s.setStencilWriteMask(0), o2.blitTexture(s, i.colorTexture, L.NEAREST), o2.compositeLayer(r2, this.computedOpacity), n.recordContainerEnd();
  }
  createRenderParams(e) {
    return { ...super.createRenderParams(e), blendMode: this.blendMode, effects: this.computedEffects, globalOpacity: 1 };
  }
  _getFbo(e) {
    const { context: t, painter: r2 } = e, { width: s, height: o2 } = t.getViewport();
    return r2.acquireFbo(s, o2);
  }
};

export {
  r
};
//# sourceMappingURL=chunk-V6KIDQ3E.js.map
