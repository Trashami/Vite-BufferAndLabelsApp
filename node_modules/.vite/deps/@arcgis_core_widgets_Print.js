import {
  a as a2
} from "./chunk-MVBDOV5D.js";
import {
  o
} from "./chunk-OFTOCPN5.js";
import {
  v as v3
} from "./chunk-NCXAKZRR.js";
import "./chunk-DUCSW4OU.js";
import {
  f,
  s as s5,
  u as u2
} from "./chunk-WVDA5Z37.js";
import {
  y as y5
} from "./chunk-627QBPPF.js";
import {
  n as n3
} from "./chunk-VJ7HYCLP.js";
import {
  M,
  e2 as e3
} from "./chunk-NWBHRPMR.js";
import {
  A,
  k as k2,
  n2
} from "./chunk-IIUWTGWW.js";
import "./chunk-K6AYGXUT.js";
import "./chunk-BHXTNOEK.js";
import "./chunk-IS4TIT4N.js";
import "./chunk-I4RYNNL6.js";
import {
  x as x2
} from "./chunk-UK3I5WXR.js";
import {
  y as y3
} from "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import {
  b as b2,
  h as h2,
  k as k3,
  m as m3,
  y as y4
} from "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-O6VYMEIX.js";
import {
  x
} from "./chunk-BYSA56OH.js";
import "./chunk-FMJZBZWF.js";
import "./chunk-GOYVJTGW.js";
import "./chunk-ZPYDYUP5.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-WJCI2CGX.js";
import "./chunk-J6LQZWZI.js";
import "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import "./chunk-FUPLN7UM.js";
import {
  W
} from "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import {
  c,
  e as e4,
  u
} from "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import {
  j as j2
} from "./chunk-SZIJNKCV.js";
import {
  m as m2
} from "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import {
  j
} from "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import {
  v2
} from "./chunk-3MNMDUQZ.js";
import {
  w2 as w
} from "./chunk-UWG37XSU.js";
import {
  k2 as k
} from "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import "./chunk-HLM6QCL2.js";
import "./chunk-RXYULINL.js";
import {
  h,
  l as l2
} from "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import {
  L,
  S as S2
} from "./chunk-XQN7F674.js";
import {
  U
} from "./chunk-DMI7A7TC.js";
import {
  s as s4
} from "./chunk-ZHAW7FZS.js";
import {
  F,
  S,
  nt,
  z
} from "./chunk-KAN4HXCG.js";
import {
  i as i2
} from "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import {
  s as s3
} from "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import {
  l
} from "./chunk-7QMMKGW4.js";
import {
  e as e2,
  m,
  n2 as n,
  t5 as t,
  y as y2
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import {
  a,
  i,
  r2,
  v
} from "./chunk-MJXQTGI2.js";
import {
  s as s2
} from "./chunk-LIZHLHNA.js";
import {
  b
} from "./chunk-BTUHYGXO.js";
import {
  s2 as s
} from "./chunk-UA3YPL2R.js";
import {
  y
} from "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  e,
  r
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/widgets/Print/FileLink.js
var a3 = class extends m {
  constructor(t3) {
    super(t3), this._handles = new t(), this.state = "pending", this.url = "";
  }
  initialize() {
    this._handles.add([l2(() => [this.extension, this.name], () => this._setFormattedFileName(), h)]);
  }
  destroy() {
    this._handles.destroy();
  }
  _setFormattedFileName() {
    if (!this.name || !this.extension)
      return;
    let t3 = this.name + "." + this.extension;
    this.count && (t3 = this.name + "(" + this.count + ")." + this.extension), this.formattedName = t3;
  }
};
e2([y2()], a3.prototype, "count", void 0), e2([y2()], a3.prototype, "error", void 0), e2([y2()], a3.prototype, "extension", void 0), e2([y2()], a3.prototype, "formattedName", void 0), e2([y2()], a3.prototype, "name", void 0), e2([y2()], a3.prototype, "state", void 0), e2([y2()], a3.prototype, "url", void 0), a3 = e2([n("esri.widgets.print.FileLink")], a3);
var n4 = a3;

// node_modules/@arcgis/core/rest/geoprocessor/GPOptions.js
var i3 = class extends m {
  constructor() {
    super(...arguments), this.outSpatialReference = null, this.processExtent = null, this.processSpatialReference = null, this.returnFeatureCollection = false, this.returnM = false, this.returnZ = false;
  }
};
e2([y2({ type: k })], i3.prototype, "outSpatialReference", void 0), e2([y2({ type: w })], i3.prototype, "processExtent", void 0), e2([y2({ type: k })], i3.prototype, "processSpatialReference", void 0), e2([y2({ nonNullable: true })], i3.prototype, "returnFeatureCollection", void 0), e2([y2({ nonNullable: true })], i3.prototype, "returnM", void 0), e2([y2({ nonNullable: true })], i3.prototype, "returnZ", void 0), i3 = e2([n("esri.rest.geoprocessor.GPOptions")], i3), i3.from = b(i3);
var n5 = i3;

// node_modules/@arcgis/core/layers/support/MapImage.js
var p = class extends l {
  constructor() {
    super(...arguments), this.extent = null, this.height = null, this.href = null, this.opacity = 1, this.rotation = 0, this.scale = null, this.visible = true, this.width = null;
  }
};
e2([y2({ type: w })], p.prototype, "extent", void 0), e2([y2()], p.prototype, "height", void 0), e2([y2()], p.prototype, "href", void 0), e2([y2()], p.prototype, "opacity", void 0), e2([y2()], p.prototype, "rotation", void 0), e2([y2()], p.prototype, "scale", void 0), e2([y2()], p.prototype, "visible", void 0), e2([y2()], p.prototype, "width", void 0), p = e2([n("esri.layer.support.MapImage")], p);
var i4 = p;

// node_modules/@arcgis/core/rest/support/DataFile.js
var e5 = class extends l {
  constructor(r4) {
    super(r4), this.itemId = null, this.url = null;
  }
};
e2([y2({ type: String, json: { read: { source: "itemID" }, write: { target: "itemID" } } })], e5.prototype, "itemId", void 0), e2([y2({ type: String, json: { write: true } })], e5.prototype, "url", void 0), e5 = e2([n("esri.rest.support.DataFile")], e5);
var p2 = e5;

// node_modules/@arcgis/core/rest/support/LinearUnit.js
var i5 = new s3({ esriMeters: "meters", esriFeet: "feet", esriKilometers: "kilometers", esriMiles: "miles", esriNauticalMiles: "nautical-miles", esriYards: "yards" }, { ignoreUnknown: false });
var p3 = class extends l {
  constructor(r4) {
    super(r4), this.distance = 0, this.units = null;
  }
};
e2([y2({ json: { write: true } })], p3.prototype, "distance", void 0), e2([y2({ json: { read: i5.read, write: i5.write } })], p3.prototype, "units", void 0), p3 = e2([n("esri.rest.support.LinearUnit")], p3);
var c2 = p3;

// node_modules/@arcgis/core/rest/support/ParameterValue.js
var u3 = new s3({ GPBoolean: "boolean", GPDataFile: "data-file", GPDate: "date", GPDouble: "double", GPFeatureRecordSetLayer: "feature-record-set-layer", GPField: "field", GPLinearUnit: "linear-unit", GPLong: "long", GPRasterData: "raster-data", GPRasterDataLayer: "raster-data-layer", GPRecordSet: "record-set", GPString: "string", "GPMultiValue:GPBoolean": "multi-value", "GPMultiValue:GPDataFile": "multi-value", "GPMultiValue:GPDate": "multi-value", "GPMultiValue:GPDouble": "multi-value", "GPMultiValue:GPFeatureRecordSetLayer": "multi-value", "GPMultiValue:GPField": "multi-value", "GPMultiValue:GPLinearUnit": "multi-value", "GPMultiValue:GPLong": "multi-value", "GPMultiValue:GPRasterData": "multi-value", "GPMultiValue:GPRasterDataLayer": "multi-value", "GPMultiValue:GPRecordSet": "multi-value", "GPMultiValue:GPString": "multi-value" });
var o2 = class extends l {
  constructor(e7) {
    super(e7), this.dataType = null, this.value = null;
  }
};
e2([y2({ json: { read: u3.read, write: u3.write } })], o2.prototype, "dataType", void 0), e2([y2()], o2.prototype, "value", void 0), o2 = e2([n("esri.rest.support.ParameterValue")], o2);
var i6 = o2;

// node_modules/@arcgis/core/rest/support/RasterData.js
var e6 = class extends l {
  constructor(r4) {
    super(r4), this.format = null, this.itemId = null, this.url = null;
  }
};
e2([y2()], e6.prototype, "format", void 0), e2([y2({ json: { read: { source: "itemID" }, write: { target: "itemID" } } })], e6.prototype, "itemId", void 0), e2([y2()], e6.prototype, "url", void 0), e6 = e2([n("esri.rest.support.RasterData")], e6);
var p4 = e6;

// node_modules/@arcgis/core/rest/geoprocessor/utils.js
async function m4(t3, r4, u5, l5, s10) {
  const n7 = {}, i10 = {}, c4 = [];
  return p5(l5, c4, n7), v3(c4).then((a5) => {
    const { outSpatialReference: c5, processExtent: m7, processSpatialReference: p11, returnFeatureCollection: f4, returnM: G2, returnZ: v5 } = u5, { path: S5 } = f(t3);
    for (const e7 in n7) {
      const t4 = n7[e7];
      i10[e7] = a5.slice(t4[0], t4[1]);
    }
    const y7 = c5 ? c5.wkid || c5 : null, D = p11 ? p11.wkid || p11 : null, J2 = "execute" === r4 ? { returnFeatureCollection: f4 || void 0, returnM: G2 || void 0, returnZ: v5 || void 0 } : null, M3 = P({ ...m7 ? { context: { extent: m7, outSR: y7, processSR: D } } : { "env:outSR": y7, "env:processSR": D }, ...l5, ...J2, f: "json" }, null, i10), N2 = { ...s10, query: M3 };
    return U(`${S5}/${r4}`, N2);
  });
}
function p5(e7, a5, t3) {
  for (const r4 in e7) {
    const o6 = e7[r4];
    if (o6 && "object" == typeof o6 && o6 instanceof x2) {
      const { features: e8 } = o6;
      t3[r4] = [a5.length, a5.length + e8.length], e8.forEach((e9) => {
        a5.push(e9.geometry);
      });
    }
  }
}
function f2(e7) {
  const a5 = e7.dataType, o6 = i6.fromJSON(e7);
  switch (a5) {
    case "GPBoolean":
    case "GPDouble":
    case "GPLong":
    case "GPString":
    case "GPMultiValue:GPBoolean":
    case "GPMultiValue:GPDouble":
    case "GPMultiValue:GPLong":
    case "GPMultiValue:GPString":
      return o6;
    case "GPDate":
      o6.value = new Date(o6.value);
      break;
    case "GPDataFile":
      o6.value = p2.fromJSON(o6.value);
      break;
    case "GPLinearUnit":
      o6.value = c2.fromJSON(o6.value);
      break;
    case "GPFeatureRecordSetLayer":
    case "GPRecordSet": {
      const a6 = e7.value.url;
      o6.value = a6 ? p2.fromJSON(o6.value) : x2.fromJSON(o6.value);
      break;
    }
    case "GPRasterData":
    case "GPRasterDataLayer": {
      const a6 = e7.value.mapImage;
      o6.value = a6 ? i4.fromJSON(a6) : p4.fromJSON(o6.value);
      break;
    }
    case "GPField":
      o6.value = y3.fromJSON(o6.value);
      break;
    case "GPMultiValue:GPDate": {
      const e8 = o6.value;
      o6.value = e8.map((e9) => new Date(e9));
      break;
    }
    case "GPMultiValue:GPDataFile":
      o6.value = o6.value.map((e8) => p2.fromJSON(e8));
      break;
    case "GPMultiValue:GPLinearUnit":
      o6.value = o6.value.map((e8) => c2.fromJSON(e8));
      break;
    case "GPMultiValue:GPFeatureRecordSetLayer":
    case "GPMultiValue:GPRecordSet":
      o6.value = o6.value.map((e8) => x2.fromJSON(e8));
      break;
    case "GPMultiValue:GPRasterData":
    case "GPMultiValue:GPRasterDataLayer":
      o6.value = o6.value.map((e8) => e8 ? i4.fromJSON(e8) : p4.fromJSON(o6.value));
      break;
    case "GPMultiValue:GPField":
      o6.value = o6.value.map((e8) => y3.fromJSON(e8));
  }
  return o6;
}
function P(e7, a5, t3) {
  for (const r4 in e7) {
    const a6 = e7[r4];
    Array.isArray(a6) ? e7[r4] = JSON.stringify(a6.map((e8) => P({ item: e8 }, true).item)) : a6 instanceof Date && (e7[r4] = a6.getTime());
  }
  return s5(e7, a5, t3);
}

// node_modules/@arcgis/core/rest/geoprocessor/execute.js
async function o3(o6, m7, a5, p11) {
  return a5 = n5.from(a5 || {}), m4(o6, "execute", a5, m7, p11).then((s10) => {
    const t3 = s10.data.results || [], o7 = s10.data.messages || [];
    return { results: t3.map(f2), messages: o7.map((s11) => a2.fromJSON(s11)) };
  });
}

// node_modules/@arcgis/core/rest/support/JobInfo.js
var p6;
var h3 = new s3({ esriJobCancelled: "job-cancelled", esriJobCancelling: "job-cancelling", esriJobDeleted: "job-deleted", esriJobDeleting: "job-deleting", esriJobTimedOut: "job-timed-out", esriJobExecuting: "job-executing", esriJobFailed: "job-failed", esriJobNew: "job-new", esriJobSubmitted: "job-submitted", esriJobSucceeded: "job-succeeded", esriJobWaiting: "job-waiting" });
var m5 = p6 = class extends l {
  constructor(e7) {
    super(e7), this.jobId = null, this.jobStatus = null, this.messages = null, this.requestOptions = null, this.sourceUrl = null, this._timer = null;
  }
  cancelJob(e7) {
    const { jobId: s10, sourceUrl: r4 } = this, { path: o6 } = f(r4), i10 = { ...this.requestOptions, ...e7, query: { f: "json" } };
    this._clearTimer();
    return U(`${o6}/jobs/${s10}/cancel`, i10).then((e8) => {
      const t3 = p6.fromJSON(e8.data);
      return this.messages = t3.messages, this.jobStatus = t3.jobStatus, this;
    });
  }
  destroy() {
    clearInterval(this._timer);
  }
  checkJobStatus(e7) {
    const { path: s10 } = f(this.sourceUrl), r4 = { ...this.requestOptions, ...e7, query: { f: "json" } }, o6 = `${s10}/jobs/${this.jobId}`;
    return U(o6, r4).then(({ data: e8 }) => {
      const t3 = p6.fromJSON(e8);
      return this.messages = t3.messages, this.jobStatus = t3.jobStatus, this;
    });
  }
  fetchResultData(e7, s10, r4) {
    s10 = n5.from(s10 || {});
    const { returnFeatureCollection: o6, returnM: i10, returnZ: a5, outSpatialReference: c4 } = s10, { path: j5 } = f(this.sourceUrl), p11 = P({ returnFeatureCollection: o6, returnM: i10, returnZ: a5, outSR: c4, returnType: "data", f: "json" }, null), h5 = { ...this.requestOptions, ...r4, query: p11 }, m7 = `${j5}/jobs/${this.jobId}/results/${e7}`;
    return U(m7, h5).then((e8) => f2(e8.data));
  }
  fetchResultImage(e7, s10, r4) {
    const { path: o6 } = f(this.sourceUrl), i10 = { ...s10.toJSON(), f: "json" }, a5 = P(i10), c4 = { ...this.requestOptions, ...r4, query: a5 }, u5 = `${o6}/jobs/${this.jobId}/results/${e7}`;
    return U(u5, c4).then((e8) => f2(e8.data));
  }
  async fetchResultMapImageLayer() {
    const { path: e7 } = f(this.sourceUrl), t3 = e7.indexOf("/GPServer/"), s10 = `${e7.substring(0, t3)}/MapServer/jobs/${this.jobId}`;
    return new (0, (await import("./MapImageLayer-VV5Y6C6A.js")).default)({ url: s10 });
  }
  async waitForJobCompletion(e7 = {}) {
    const { interval: t3 = 1e3, signal: s10, statusCallback: r4 } = e7;
    return new Promise((e8, a5) => {
      v(s10, () => {
        this._clearTimer(), a5(a());
      }), this._clearTimer();
      const c4 = setInterval(() => {
        this._timer || a5(a()), this.checkJobStatus(this.requestOptions).then((t4) => {
          const { jobStatus: s11 } = t4;
          switch (this.jobStatus = s11, s11) {
            case "job-succeeded":
              this._clearTimer(), e8(this);
              break;
            case "job-submitted":
            case "job-executing":
            case "job-waiting":
            case "job-new":
              r4 && r4(this);
              break;
            case "job-cancelled":
            case "job-cancelling":
            case "job-deleted":
            case "job-deleting":
            case "job-timed-out":
            case "job-failed":
              this._clearTimer(), a5(this);
          }
        });
      }, t3);
      this._timer = c4;
    });
  }
  _clearTimer() {
    this._timer && (clearInterval(this._timer), this._timer = null);
  }
};
e2([y2()], m5.prototype, "jobId", void 0), e2([y2({ json: { read: h3.read } })], m5.prototype, "jobStatus", void 0), e2([y2({ type: [a2] })], m5.prototype, "messages", void 0), e2([y2()], m5.prototype, "requestOptions", void 0), e2([y2({ json: { write: true } })], m5.prototype, "sourceUrl", void 0), m5 = p6 = e2([n("esri.rest.support.JobInfo")], m5);
var d = m5;

// node_modules/@arcgis/core/rest/geoprocessor/submitJob.js
async function s6(s10, m7, n7, f4) {
  return n7 = n5.from(n7 || {}), m4(s10, "submitJob", n7, m7, f4).then((o6) => {
    const r4 = d.fromJSON(o6.data);
    return r4.sourceUrl = s10, r4;
  });
}

// node_modules/@arcgis/core/rest/support/fileFormat.js
var p7 = new s3({ PDF: "pdf", PNG32: "png32", PNG8: "png8", JPG: "jpg", GIF: "gif", EPS: "eps", SVG: "svg", SVGZ: "svgz" });
var n6 = p7.fromJSON.bind(p7);
var g = p7.toJSON.bind(p7);

// node_modules/@arcgis/core/rest/support/layoutTemplate.js
var t2 = new s3({ MAP_ONLY: "map-only", "A3 Landscape": "a3-landscape", "A3 Portrait": "a3-portrait", "A4 Landscape": "a4-landscape", "A4 Portrait": "a4-portrait", "Letter ANSI A Landscape": "letter-ansi-a-landscape", "Letter ANSI A Portrait": "letter-ansi-a-portrait", "Tabloid ANSI B Landscape": "tabloid-ansi-b-landscape", "Tabloid ANSI B Portrait": "tabloid-ansi-b-portrait" });
var r3 = t2.fromJSON.bind(t2);
var o4 = t2.toJSON.bind(t2);

// node_modules/@arcgis/core/rest/support/printTaskUtils.js
var o5 = "simple-marker";
var a4 = "picture-marker";
var l3 = "simple-line";
var s7 = "simple-fill";
var u4 = "shield-label-symbol";
var f3 = "text";
function y6(y7, c4) {
  const { graphic: p11, renderer: m7, symbol: d3 } = c4, g4 = d3.type;
  if (g4 === f3 || g4 === u4 || !("visualVariables" in m7) || !m7.visualVariables)
    return;
  const b4 = m7.getVisualVariablesForType("size"), h5 = m7.getVisualVariablesForType("color"), V2 = m7.getVisualVariablesForType("opacity"), w3 = m7.getVisualVariablesForType("rotation"), T2 = b4[0], v5 = h5[0], G2 = V2[0], S5 = w3[0];
  if (T2) {
    const t3 = g4 === o5 ? d3.style : null, i10 = y4(T2, p11, { shape: t3 });
    null != i10 && (g4 === o5 ? y7.size = e4(i10) : g4 === a4 ? (y7.width = e4(i10), y7.height = e4(i10)) : g4 === l3 ? y7.width = e4(i10) : y7.outline && (y7.outline.width = e4(i10)));
  }
  if (v5) {
    const e7 = b2(v5, p11);
    (e7 && g4 === o5 || g4 === l3 || g4 === s7) && (y7.color = e7 ? e7.toJSON() : void 0);
  }
  if (G2) {
    const e7 = h2(G2, p11);
    null != e7 && y7.color && (y7.color[3] = Math.round(255 * e7));
  }
  S5 && (y7.angle = -m3(m7, p11));
}
function c3() {
  return { layerDefinition: { name: "multipointLayer", geometryType: "esriGeometryMultipoint", drawingInfo: { renderer: null } }, featureSet: { geometryType: "esriGeometryMultipoint", features: [] } };
}
function p8() {
  return { layerDefinition: { name: "polygonLayer", geometryType: "esriGeometryPolygon", drawingInfo: { renderer: null } }, featureSet: { geometryType: "esriGeometryPolygon", features: [] } };
}
function m6() {
  return { layerDefinition: { name: "pointLayer", geometryType: "esriGeometryPoint", drawingInfo: { renderer: null } }, featureSet: { geometryType: "esriGeometryPoint", features: [] } };
}
function d2() {
  return { layerDefinition: { name: "polylineLayer", geometryType: "esriGeometryPolyline", drawingInfo: { renderer: null } }, featureSet: { geometryType: "esriGeometryPolyline", features: [] } };
}
function g2(e7, r4 = 15) {
  const t3 = e7.canvas.width, i10 = e7.canvas.height, n7 = e7.getImageData(0, 0, t3, i10).data;
  let o6, a5, l5, s10, u5, f4;
  e:
    for (a5 = i10; a5--; )
      for (o6 = t3; o6--; )
        if (n7[4 * (t3 * a5 + o6) + 3] > r4) {
          f4 = a5;
          break e;
        }
  if (!f4)
    return null;
  e:
    for (o6 = t3; o6--; )
      for (a5 = f4 + 1; a5--; )
        if (n7[4 * (t3 * a5 + o6) + 3] > r4) {
          u5 = o6;
          break e;
        }
  e:
    for (o6 = 0; o6 <= u5; ++o6)
      for (a5 = f4 + 1; a5--; )
        if (n7[4 * (t3 * a5 + o6) + 3] > r4) {
          l5 = o6;
          break e;
        }
  e:
    for (a5 = 0; a5 <= f4; ++a5)
      for (o6 = l5; o6 <= u5; ++o6)
        if (n7[4 * (t3 * a5 + o6) + 3] > r4) {
          s10 = a5;
          break e;
        }
  return { x: l5, y: s10, width: u5 - l5, height: f4 - s10 };
}
function b3(e7, r4) {
  const t3 = e7.allLayerViews.items;
  if (r4 === e7.scale)
    return t3.filter((e8) => !e8.suspended);
  const i10 = new Array();
  for (const n7 of t3)
    T(n7.parent) && !i10.includes(n7.parent) || !n7.visible || r4 && "isVisibleAtScale" in n7 && !n7.isVisibleAtScale(r4) || i10.push(n7);
  return i10;
}
function h4(e7) {
  return "bing-maps" === (e7 == null ? void 0 : e7.type);
}
function V(e7) {
  return e7 && "blendMode" in e7 && "effect" in e7;
}
function w2(e7) {
  return "csv" === (e7 == null ? void 0 : e7.type);
}
function T(e7) {
  return "esri.views.2d.layers.GroupLayerView2D" === (e7 == null ? void 0 : e7.declaredClass);
}
function v4(e7) {
  const r4 = e7.layer;
  if (V(r4)) {
    const t3 = r4.blendMode;
    if ((!t3 || "normal" === t3) && (r4.effect || "featureEffect" in e7 && e7.featureEffect))
      return true;
  }
  return false;
}

// node_modules/@arcgis/core/rest/support/PrintTemplate.js
var p9 = class extends m {
  constructor(t3) {
    super(t3), this.attributionVisible = true, this.exportOptions = { width: 800, height: 1100, dpi: 96 }, this.forceFeatureAttributes = false, this.format = "png32", this.label = null, this.layout = "map-only", this.layoutItem = null, this.layoutOptions = null, this.outScale = 0, this.scalePreserved = true, this.showLabels = true;
  }
};
e2([y2()], p9.prototype, "attributionVisible", void 0), e2([y2()], p9.prototype, "exportOptions", void 0), e2([y2()], p9.prototype, "forceFeatureAttributes", void 0), e2([y2()], p9.prototype, "format", void 0), e2([y2()], p9.prototype, "label", void 0), e2([y2()], p9.prototype, "layout", void 0), e2([y2({ type: x })], p9.prototype, "layoutItem", void 0), e2([y2()], p9.prototype, "layoutOptions", void 0), e2([y2()], p9.prototype, "outScale", void 0), e2([y2()], p9.prototype, "scalePreserved", void 0), e2([y2()], p9.prototype, "showLabels", void 0), p9 = e2([n("esri.rest.support.PrintTemplate")], p9);
var i7 = p9;

// node_modules/@arcgis/core/rest/print.js
var P2 = { Feet: "ft", Kilometers: "km", Meters: "m", Miles: "mi" };
var F2 = new s3({ esriFeet: "Feet", esriKilometers: "Kilometers", esriMeters: "Meters", esriMiles: "Miles" });
var R = new s3({ esriExecutionTypeSynchronous: "sync", esriExecutionTypeAsynchronous: "async" });
var N = /* @__PURE__ */ new Map();
async function J(e7, i10, r4) {
  const a5 = C(e7);
  let n7 = N.get(a5);
  return Promise.resolve().then(() => n7 ? { data: n7.gpMetadata } : (n7 = { gpServerUrl: a5, is11xService: false, legendLayerNameMap: {}, legendLayers: [] }, U(a5, { query: { f: "json" } }))).then((e8) => (n7.gpMetadata = e8.data, n7.cimVersion = n7.gpMetadata.cimVersion, n7.is11xService = !!n7.cimVersion, N.set(a5, n7), j3(i10, n7))).then((t3) => {
    const a6 = ue(n7);
    let s10;
    const o6 = (e8) => "sync" === a6 ? e8.results && e8.results[0] && e8.results[0].value : s10.fetchResultData("Output_File", null, r4).then((e9) => e9.value);
    return "async" === a6 ? s6(e7, t3, null, r4).then((e8) => (s10 = e8, e8.waitForJobCompletion({ interval: i10.updateDelay }).then(o6))) : o3(e7, t3, null, r4).then(o6);
  });
}
async function j3(t3, r4) {
  r4 = r4 || { is11xService: false, legendLayerNameMap: {}, legendLayers: [] };
  const a5 = t3.template || new i7();
  null == a5.showLabels && (a5.showLabels = true);
  const n7 = a5.exportOptions;
  let s10;
  const o6 = o4(a5.layout);
  if (n7) {
    if (s10 = { dpi: n7.dpi }, "map_only" === o6.toLowerCase() || "" === o6) {
      const e7 = n7.width, t4 = n7.height;
      s10.outputSize = [e7, t4];
    }
  }
  const l5 = a5.layoutOptions;
  let c4;
  if (l5) {
    let e7, t4;
    "Miles" === l5.scalebarUnit || "Kilometers" === l5.scalebarUnit ? (e7 = "Kilometers", t4 = "Miles") : "Meters" !== l5.scalebarUnit && "Feet" !== l5.scalebarUnit || (e7 = "Meters", t4 = "Feet"), c4 = { titleText: l5.titleText, authorText: l5.authorText, copyrightText: l5.copyrightText, customTextElements: l5.customTextElements, elementOverrides: l5.elementOverrides, scaleBarOptions: { metricUnit: F2.toJSON(e7), metricLabel: P2[e7], nonMetricUnit: F2.toJSON(t4), nonMetricLabel: P2[t4] } };
  }
  let u5 = null;
  (l5 == null ? void 0 : l5.legendLayers) && (u5 = l5.legendLayers.map((e7) => {
    r4.legendLayerNameMap[e7.layerId] = e7.title;
    const t4 = { id: e7.layerId };
    return e7.subLayerIds && (t4.subLayerIds = e7.subLayerIds), t4;
  }));
  const y7 = await A2(t3, a5, r4);
  if (y7.operationalLayers) {
    const e7 = new RegExp("[\\u4E00-\\u9FFF\\u0E00-\\u0E7F\\u0900-\\u097F\\u3040-\\u309F\\u30A0-\\u30FF\\u31F0-\\u31FF]"), t4 = /[\u0600-\u06FF]/, a6 = (i10) => {
      const r5 = i10.text, a7 = i10.font, n9 = a7 && a7.family && a7.family.toLowerCase();
      r5 && a7 && ("arial" === n9 || "arial unicode ms" === n9) && (a7.family = e7.test(r5) ? "Arial Unicode MS" : "Arial", "normal" !== a7.style && t4.test(r5) && (a7.family = "Arial Unicode MS"));
    }, n8 = () => {
      throw new s2("print:cim-symbol-unsupported", "CIMSymbol is not supported by a print service published from ArcMap");
    };
    y7.operationalLayers.forEach((e8) => {
      var _a, _b, _c;
      ((_a = e8.featureCollection) == null ? void 0 : _a.layers) ? e8.featureCollection.layers.forEach((e9) => {
        var _a2, _b2, _c2, _d;
        if ((_c2 = (_b2 = (_a2 = e9.layerDefinition) == null ? void 0 : _a2.drawingInfo) == null ? void 0 : _b2.renderer) == null ? void 0 : _c2.symbol) {
          const t5 = e9.layerDefinition.drawingInfo.renderer;
          "esriTS" === t5.symbol.type ? a6(t5.symbol) : "CIMSymbolReference" !== t5.symbol.type || r4.is11xService || n8();
        }
        ((_d = e9.featureSet) == null ? void 0 : _d.features) && e9.featureSet.features.forEach((e10) => {
          e10.symbol && ("esriTS" === e10.symbol.type ? a6(e10.symbol) : "CIMSymbolReference" !== e10.symbol.type || r4.is11xService || n8());
        });
      }) : !r4.is11xService && ((_c = (_b = e8.layerDefinition) == null ? void 0 : _b.drawingInfo) == null ? void 0 : _c.renderer) && JSON.stringify(e8.layerDefinition.drawingInfo.renderer).includes('"type":"CIMSymbolReference"') && n8();
    });
  }
  t3.outSpatialReference && (y7.mapOptions.spatialReference = t3.outSpatialReference.toJSON()), Object.assign(y7, { exportOptions: s10, layoutOptions: c4 || {} }), Object.assign(y7.layoutOptions, { legendOptions: { operationalLayers: null != u5 ? u5 : r4.legendLayers.slice() } }), r4.legendLayers.length = 0, N.set(r4.gpServerUrl, r4);
  const m7 = { Web_Map_as_JSON: JSON.stringify(y7), Format: g(a5.format), Layout_Template: o6, Layout_Item_ID: void 0 };
  if (a5.layoutItem) {
    delete m7.Layout_Template;
    const t4 = a5.layoutItem;
    await t4.load(), "public" !== t4.access && s4 && await s4.getCredential(r4.gpServerUrl), m7.Layout_Item_ID = JSON.stringify({ id: t4.id });
  }
  return t3.extraParameters && Object.assign(m7, t3.extraParameters), m7;
}
async function A2(e7, t3, i10) {
  const r4 = e7.view;
  let n7 = r4.spatialReference;
  const s10 = { operationalLayers: await k4(r4, t3, i10) };
  let o6 = i10.ssExtent || e7.extent || r4.extent;
  if (n7 && n7.isWrappable && (o6 = o6.clone()._normalize(true), n7 = o6.spatialReference), s10.mapOptions = { extent: o6 && o6.toJSON(), spatialReference: n7 && n7.toJSON(), showAttribution: t3.attributionVisible }, i10.ssExtent = null, r4.background && (s10.background = r4.background.toJSON()), r4.rotation && (s10.mapOptions.rotation = -r4.rotation), t3.scalePreserved && (s10.mapOptions.scale = t3.outScale || r4.scale), r(r4.timeExtent)) {
    const e8 = r(r4.timeExtent.start) ? r4.timeExtent.start.getTime() : null, t4 = r(r4.timeExtent.end) ? r4.timeExtent.end.getTime() : null;
    s10.mapOptions.time = [e8, t4];
  }
  return s10;
}
function C(e7) {
  let t3 = e7;
  const i10 = t3.lastIndexOf("/GPServer/");
  return i10 > 0 && (t3 = t3.slice(0, i10 + 9)), t3;
}
async function k4(e7, t3, i10) {
  const r4 = [], a5 = { layerView: null, printTemplate: t3, view: e7 };
  let n7 = 0;
  t3.scalePreserved && (n7 = t3.outScale || e7.scale);
  const s10 = b3(e7, n7);
  for (const o6 of s10) {
    const e8 = o6.layer;
    if (!e8.loaded || "group" === (e8 == null ? void 0 : e8.type))
      continue;
    let t4;
    a5.layerView = o6, t4 = v4(o6) ? await Z(e8, a5, i10) : h4(e8) ? z2(e8) : w2(e8) ? await _(e8, a5, i10) : "feature" === (e8 == null ? void 0 : e8.type) ? await q(e8, a5, i10) : "geojson" === (e8 == null ? void 0 : e8.type) ? await K(e8, a5, i10) : "graphics" === (e8 == null ? void 0 : e8.type) ? await W2(e8, a5, i10) : "imagery" === (e8 == null ? void 0 : e8.type) ? B(e8, i10) : "imagery-tile" === (e8 == null ? void 0 : e8.type) ? await G(e8, a5, i10) : "kml" === (e8 == null ? void 0 : e8.type) ? await Q(e8, a5, i10) : "map-image" === (e8 == null ? void 0 : e8.type) ? H(e8, a5, i10) : "map-notes" === (e8 == null ? void 0 : e8.type) ? await X(a5, i10) : "open-street-map" === (e8 == null ? void 0 : e8.type) ? Y() : "stream" === (e8 == null ? void 0 : e8.type) ? await ee(e8, a5, i10) : "tile" === (e8 == null ? void 0 : e8.type) ? te(e8, i10) : "vector-tile" === (e8 == null ? void 0 : e8.type) ? await ie(e8, a5, i10) : "web-tile" === (e8 == null ? void 0 : e8.type) ? re(e8) : "wms" === (e8 == null ? void 0 : e8.type) ? ae(e8) : "wmts" === (e8 == null ? void 0 : e8.type) ? ne(e8) : await Z(e8, a5, i10), t4 && (Array.isArray(t4) ? r4.push(...t4) : (t4.id = e8.id, t4.title = i10.legendLayerNameMap[e8.id] || e8.title, t4.opacity = e8.opacity, t4.minScale = e8.minScale || 0, t4.maxScale = e8.maxScale || 0, V(e8) && e8.blendMode && "normal" !== e8.blendMode && (t4.blendMode = e8.blendMode), r4.push(t4)));
  }
  if (n7 && r4.forEach((e8) => {
    e8.minScale = 0, e8.maxScale = 0;
  }), e7.graphics && e7.graphics.length) {
    const a6 = await $(null, e7.graphics, t3, i10);
    a6 && r4.push(a6);
  }
  return r4;
}
function z2(e7) {
  return { culture: e7.culture, key: e7.key, type: "BingMaps" + ("aerial" === e7.style ? "Aerial" : "hybrid" === e7.style ? "Hybrid" : "Road") };
}
async function _(e7, t3, i10) {
  e7.legendEnabled && i10.legendLayers.push({ id: e7.id });
  const r4 = t3.layerView, a5 = t3.printTemplate;
  let n7;
  if (!i10.is11xService || r4.filter) {
    return $(e7, await ce(r4), a5, i10);
  }
  return n7 = { type: "CSV" }, e7.write(n7, { origin: "web-map" }), delete n7.popupInfo, delete n7.layerType, n7.showLabels = a5.showLabels && e7.labelsVisible, n7;
}
async function $(e7, t3, i10, r4) {
  var _a, _b;
  let a5;
  const n7 = p8(), s10 = d2(), o6 = m6(), l5 = c3(), c4 = m6();
  if (c4.layerDefinition.name = "textLayer", delete c4.layerDefinition.drawingInfo, e7) {
    if ("esri.layers.FeatureLayer" === e7.declaredClass || "esri.layers.StreamLayer" === e7.declaredClass ? n7.layerDefinition.name = s10.layerDefinition.name = o6.layerDefinition.name = l5.layerDefinition.name = r4.legendLayerNameMap[e7.id] || e7.get("arcgisProps.title") || e7.title : "esri.layers.GraphicsLayer" === e7.declaredClass && (t3 = e7.graphics.items), e7.renderer) {
      const t4 = e7.renderer.toJSON();
      n7.layerDefinition.drawingInfo.renderer = t4, s10.layerDefinition.drawingInfo.renderer = t4, o6.layerDefinition.drawingInfo.renderer = t4, l5.layerDefinition.drawingInfo.renderer = t4;
    }
    if (i10.showLabels && e7.labelsVisible && "function" == typeof e7.write) {
      const t4 = (_b = (_a = e7.write({}, { origin: "web-map" }).layerDefinition) == null ? void 0 : _a.drawingInfo) == null ? void 0 : _b.labelingInfo;
      t4 && (a5 = true, n7.layerDefinition.drawingInfo.labelingInfo = t4, s10.layerDefinition.drawingInfo.labelingInfo = t4, o6.layerDefinition.drawingInfo.labelingInfo = t4, l5.layerDefinition.drawingInfo.labelingInfo = t4);
    }
  }
  let m7;
  (e7 == null ? void 0 : e7.renderer) || a5 || (delete n7.layerDefinition.drawingInfo, delete s10.layerDefinition.drawingInfo, delete o6.layerDefinition.drawingInfo, delete l5.layerDefinition.drawingInfo);
  const f4 = e7 == null ? void 0 : e7.fieldsIndex, p11 = e7 == null ? void 0 : e7.renderer;
  if (f4) {
    const t4 = /* @__PURE__ */ new Set();
    a5 && await W(t4, e7), p11 && "function" == typeof p11.collectRequiredFields && await p11.collectRequiredFields(t4, f4), m7 = Array.from(t4);
    const i11 = f4.fields.map((e8) => e8.toJSON());
    n7.layerDefinition.fields = i11, s10.layerDefinition.fields = i11, o6.layerDefinition.fields = i11, l5.layerDefinition.fields = i11;
  }
  const d3 = t3 && t3.length;
  let g4;
  for (let y7 = 0; y7 < d3; y7++) {
    const a6 = t3[y7] || t3.getItemAt(y7);
    if (false === a6.visible || !a6.geometry)
      continue;
    if (g4 = a6.toJSON(), g4.hasOwnProperty("popupTemplate") && delete g4.popupTemplate, g4.geometry && g4.geometry.z && delete g4.geometry.z, g4.symbol && g4.symbol.outline && "esriCLS" === g4.symbol.outline.type && !r4.is11xService)
      continue;
    !r4.is11xService && g4.symbol && g4.symbol.outline && g4.symbol.outline.color && g4.symbol.outline.color[3] && (g4.symbol.outline.color[3] = 255);
    const f5 = e7 && e7.renderer && ("valueExpression" in e7.renderer && e7.renderer.valueExpression || "hasVisualVariables" in e7.renderer && e7.renderer.hasVisualVariables());
    if (!g4.symbol && e7 && e7.renderer && f5 && !r4.is11xService) {
      const t4 = e7.renderer, i11 = await t4.getSymbolAsync(a6);
      if (!i11)
        continue;
      g4.symbol = i11.toJSON(), "hasVisualVariables" in t4 && t4.hasVisualVariables() && y6(g4.symbol, { renderer: t4, graphic: a6, symbol: i11 });
    }
    if (g4.symbol && (g4.symbol.angle || delete g4.symbol.angle, ye(g4.symbol) ? g4.symbol = await oe(g4.symbol, r4) : g4.symbol.text && delete g4.attributes), (!i10 || !i10.forceFeatureAttributes) && (m7 == null ? void 0 : m7.length)) {
      const e8 = {};
      m7.forEach((t4) => {
        g4.attributes && g4.attributes.hasOwnProperty(t4) && (e8[t4] = g4.attributes[t4]);
      }), g4.attributes = e8;
    }
    "polygon" === a6.geometry.type ? n7.featureSet.features.push(g4) : "polyline" === a6.geometry.type ? s10.featureSet.features.push(g4) : "point" === a6.geometry.type ? g4.symbol && g4.symbol.text ? c4.featureSet.features.push(g4) : o6.featureSet.features.push(g4) : "multipoint" === a6.geometry.type ? l5.featureSet.features.push(g4) : "extent" === a6.geometry.type && (g4.geometry = v2.fromExtent(a6.geometry).toJSON(), n7.featureSet.features.push(g4));
  }
  const b4 = [n7, s10, l5, o6, c4].filter((e8) => e8.featureSet.features.length > 0);
  for (const u5 of b4) {
    const e8 = u5.featureSet.features.every((e9) => e9.symbol);
    !e8 || i10 && i10.forceFeatureAttributes || u5.featureSet.features.forEach((e9) => {
      delete e9.attributes;
    }), e8 && delete u5.layerDefinition.drawingInfo, u5.layerDefinition.drawingInfo && u5.layerDefinition.drawingInfo.renderer && await le(u5.layerDefinition.drawingInfo.renderer, r4);
  }
  return b4.length ? { featureCollection: { layers: b4 }, showLabels: a5 } : null;
}
async function q(e7, t3, i10) {
  var _a, _b, _c, _d, _e, _f;
  let r4;
  const a5 = e7.renderer, n7 = parseFloat(i10.cimVersion);
  if ("binning" === ((_a = e7.featureReduction) == null ? void 0 : _a.type) || "cluster" === ((_b = e7.featureReduction) == null ? void 0 : _b.type) && (!i10.is11xService || n7 < 2.9) || "pie-chart" === (a5 == null ? void 0 : a5.type) || "dot-density" === (a5 == null ? void 0 : a5.type) && (!i10.is11xService || n7 < 2.6))
    return Z(e7, t3, i10);
  e7.legendEnabled && i10.legendLayers.push({ id: e7.id });
  const s10 = t3.layerView, { printTemplate: o6, view: l5 } = t3, c4 = a5 && ("valueExpression" in a5 && a5.valueExpression || "hasVisualVariables" in a5 && a5.hasVisualVariables()), u5 = "feature-layer" !== ((_c = e7.source) == null ? void 0 : _c.type) && "ogc-feature" !== ((_d = e7.source) == null ? void 0 : _d.type);
  if (!i10.is11xService && c4 || s10.filter || u5 || !a5 || "field" in a5 && null != a5.field && ("string" != typeof a5.field || !e7.getField(a5.field))) {
    const t4 = await ce(s10);
    r4 = await $(e7, t4, o6, i10);
  } else {
    if (r4 = { id: (y7 = e7.write()).id, title: y7.title, opacity: y7.opacity, minScale: y7.minScale, maxScale: y7.maxScale, url: y7.url, layerType: y7.layerType, customParameters: y7.customParameters, layerDefinition: y7.layerDefinition }, r4.showLabels = o6.showLabels && e7.labelsVisible, se(r4, e7), ((_f = (_e = r4.layerDefinition) == null ? void 0 : _e.drawingInfo) == null ? void 0 : _f.renderer) && (delete r4.layerDefinition.minScale, delete r4.layerDefinition.maxScale, await le(r4.layerDefinition.drawingInfo.renderer, i10), "visualVariables" in a5 && a5.visualVariables && a5.visualVariables[0])) {
      const e8 = a5.visualVariables[0];
      if ("size" === e8.type && e8.maxSize && "number" != typeof e8.maxSize && e8.minSize && "number" != typeof e8.minSize) {
        const t5 = k3(e8, l5.scale);
        r4.layerDefinition.drawingInfo.renderer.visualVariables[0].minSize = t5.minSize, r4.layerDefinition.drawingInfo.renderer.visualVariables[0].maxSize = t5.maxSize;
      }
    }
    const t4 = o(s10);
    t4 && (r4.layerDefinition || (r4.layerDefinition = {}), r4.layerDefinition.definitionExpression = r4.layerDefinition.definitionExpression ? `(${r4.layerDefinition.definitionExpression}) AND (${t4})` : t4);
  }
  var y7;
  return r4;
}
async function K(e7, t3, i10) {
  var _a, _b;
  if ("binning" === ((_a = e7.featureReduction) == null ? void 0 : _a.type) || "cluster" === ((_b = e7.featureReduction) == null ? void 0 : _b.type))
    return Z(e7, t3, i10);
  e7.legendEnabled && i10.legendLayers.push({ id: e7.id });
  return $(e7, await ce(t3.layerView), t3.printTemplate, i10);
}
async function W2(e7, { printTemplate: t3 }, i10) {
  return $(e7, null, t3, i10);
}
function B(e7, t3) {
  e7.legendEnabled && t3.legendLayers.push({ id: e7.id });
  const i10 = { layerType: (r4 = e7.write()).layerType, customParameters: r4.customParameters };
  var r4;
  if (i10.bandIds = e7.bandIds, i10.compressionQuality = e7.compressionQuality, i10.format = e7.format, i10.interpolation = e7.interpolation, (e7.mosaicRule || e7.definitionExpression) && (i10.mosaicRule = e7.exportImageServiceParameters.mosaicRule.toJSON()), e7.renderingRule || e7.renderer)
    if (t3.is11xService)
      e7.renderingRule && (i10.renderingRule = e7.renderingRule.toJSON()), e7.renderer && (i10.layerDefinition = i10.layerDefinition || {}, i10.layerDefinition.drawingInfo = i10.layerDefinition.drawingInfo || {}, i10.layerDefinition.drawingInfo.renderer = e7.renderer.toJSON());
    else {
      const t4 = e7.exportImageServiceParameters.combineRendererWithRenderingRule();
      t4 && (i10.renderingRule = t4.toJSON());
    }
  return se(i10, e7), i10;
}
async function G(e7, t3, i10) {
  var _a;
  if ("flow" === ((_a = e7.renderer) == null ? void 0 : _a.type))
    return Z(e7, t3, i10);
  e7.legendEnabled && i10.legendLayers.push({ id: e7.id });
  const r4 = { bandIds: (a5 = e7.write() || {}).bandIds, customParameters: a5.customParameters, interpolation: a5.interpolation, layerDefinition: a5.layerDefinition };
  var a5;
  return r4.layerType = "ArcGISImageServiceLayer", se(r4, e7), r4;
}
async function Q(e7, t3, i10) {
  const r4 = t3.printTemplate;
  if (i10.is11xService) {
    const t4 = { type: "kml" };
    return e7.write(t4, { origin: "web-map" }), delete t4.layerType, t4.url = F(e7.url), t4;
  }
  {
    const a5 = [], n7 = t3.layerView;
    n7.allVisibleMapImages.forEach((t4, i11) => {
      const r5 = { id: `${e7.id}_image${i11}`, type: "image", title: e7.id, minScale: e7.minScale || 0, maxScale: e7.maxScale || 0, opacity: e7.opacity, extent: t4.extent };
      "data:image/png;base64," === t4.href.substr(0, 22) ? r5.imageData = t4.href.substr(22) : r5.url = t4.href, a5.push(r5);
    });
    const s10 = [...n7.allVisiblePoints.items, ...n7.allVisiblePolylines.items, ...n7.allVisiblePolygons.items], o6 = { id: e7.id, ...await $(null, s10, r4, i10) };
    return a5.push(o6), a5;
  }
}
function H(e7, { view: t3 }, i10) {
  let r4;
  const a5 = { id: e7.id, subLayerIds: [] };
  let n7 = [];
  const s10 = t3.scale, o6 = (e8) => {
    const t4 = 0 === s10, i11 = 0 === e8.minScale || s10 <= e8.minScale, r5 = 0 === e8.maxScale || s10 >= e8.maxScale;
    if (e8.visible && (t4 || i11 && r5))
      if (e8.sublayers)
        e8.sublayers.forEach(o6);
      else {
        const t5 = e8.toExportImageJSON(), i12 = { id: e8.id, name: e8.title, layerDefinition: { drawingInfo: t5.drawingInfo, definitionExpression: t5.definitionExpression, source: t5.source } };
        n7.unshift(i12), a5.subLayerIds.push(e8.id);
      }
  };
  var l5;
  return e7.sublayers && e7.sublayers.forEach(o6), n7.length && (n7 = n7.map(({ id: e8, name: t4, layerDefinition: i11 }) => ({ id: e8, name: t4, layerDefinition: i11 })), r4 = { layerType: (l5 = e7.write()).layerType, customParameters: l5.customParameters }, r4.layers = n7, r4.visibleLayers = e7.capabilities.exportMap.supportsDynamicLayers ? void 0 : a5.subLayerIds, se(r4, e7), e7.legendEnabled && i10.legendLayers.push(a5)), r4;
}
async function X({ layerView: e7, printTemplate: t3 }, i10) {
  const r4 = [], n7 = e7.layer;
  if (r(n7.featureCollections))
    for (const a5 of n7.featureCollections) {
      const e8 = await $(a5, a5.source, t3, i10);
      e8 && r4.push(...e8.featureCollection.layers);
    }
  else if (r(n7.sublayers))
    for (const a5 of n7.sublayers) {
      const e8 = await $(null, a5.graphics, t3, i10);
      e8 && r4.push(...e8.featureCollection.layers);
    }
  return { featureCollection: { layers: r4 } };
}
function Y() {
  return { type: "OpenStreetMap" };
}
async function Z(e7, { printTemplate: t3, view: i10 }, r4) {
  const a5 = { type: "image" }, s10 = { format: "png", ignoreBackground: true, layers: [e7], rotation: 0 }, o6 = r4.ssExtent || i10.extent.clone();
  let l5 = 96, u5 = true, y7 = true;
  if (t3.exportOptions) {
    const e8 = t3.exportOptions;
    e8.dpi > 0 && (l5 = e8.dpi), e8.width > 0 && (u5 = e8.width % 2 == i10.width % 2), e8.height > 0 && (y7 = e8.height % 2 == i10.height % 2);
  }
  if ("map-only" === t3.layout && t3.scalePreserved && (!t3.outScale || t3.outScale === i10.scale) && 96 === l5 && (!u5 || !y7) && (s10.area = { x: 0, y: 0, width: i10.width, height: i10.height }, u5 || (s10.area.width -= 1), y7 || (s10.area.height -= 1), !r4.ssExtent)) {
    const e8 = i10.toMap(c(s10.area.width, s10.area.height));
    o6.ymin = e8.y, o6.xmax = e8.x, r4.ssExtent = o6;
  }
  a5.extent = o6.clone()._normalize(true).toJSON();
  const m7 = await i10.takeScreenshot(s10), { data: f4 } = nt(m7.dataUrl);
  return a5.imageData = f4, a5;
}
async function ee(e7, { layerView: t3, printTemplate: i10 }, r4) {
  e7.legendEnabled && r4.legendLayers.push({ id: e7.id });
  return $(e7, await ce(t3), i10, r4);
}
function te(e7, t3) {
  e7.legendEnabled && t3.legendLayers.push({ id: e7.id });
  const i10 = { layerType: (r4 = e7.write()).layerType, customParameters: r4.customParameters };
  var r4;
  return se(i10, e7), i10;
}
async function ie(e7, t3, i10) {
  if (i10.is11xService && e7.serviceUrl && e7.styleUrl) {
    const t4 = u2(e7.styleUrl, e7.apiKey), r4 = u2(e7.serviceUrl, e7.apiKey);
    if (!t4 && !r4 || "2.1.0" !== i10.cimVersion) {
      const i11 = { type: "VectorTileLayer" };
      return i11.styleUrl = F(e7.styleUrl), i11.token = t4, r4 !== t4 && (i11.additionalTokens = [{ url: e7.serviceUrl, token: r4 }]), i11;
    }
  }
  return Z(e7, t3, i10);
}
function re(e7) {
  const t3 = { type: "WebTiledLayer", urlTemplate: e7.urlTemplate.replace(/\${/g, "{"), credits: e7.copyright };
  return e7.subDomains && e7.subDomains.length > 0 && (t3.subDomains = e7.subDomains), t3;
}
function ae(e7) {
  let t3;
  const i10 = [], r4 = (e8) => {
    e8.visible && (e8.sublayers ? e8.sublayers.forEach(r4) : e8.name && i10.unshift(e8.name));
  };
  return e7.sublayers && e7.sublayers.forEach(r4), i10.length && (t3 = { type: "wms", customLayerParameters: e7.customLayerParameters, customParameters: e7.customParameters, transparentBackground: e7.imageTransparency, visibleLayers: i10, url: F(e7.url), version: e7.version }), t3;
}
function ne(e7) {
  const t3 = e7.activeLayer;
  return { type: "wmts", customLayerParameters: e7.customLayerParameters, customParameters: e7.customParameters, format: t3.imageFormat, layer: t3.id, style: t3.styleId, tileMatrixSet: t3.tileMatrixSetId, url: F(e7.url) };
}
function se(e7, t3) {
  t3.url && (e7.url = F(e7.url || t3.url), e7.token = u2(e7.url, t3.apiKey));
}
async function oe(e7, i10) {
  var _a;
  i10.canvas || (i10.canvas = document.createElement("canvas"));
  const r4 = 1024;
  i10.canvas.width = r4, i10.canvas.height = r4;
  const a5 = i10.canvas.getContext("2d");
  let n7, l5;
  if (e7.path) {
    const t3 = new Path2D(e7.path);
    t3.closePath(), a5.fillStyle = Array.isArray(e7.color) ? `rgba(${e7.color[0]},${e7.color[1]},${e7.color[2]},${e7.color[3] / 255})` : "rgb(0,0,0)", a5.fill(t3);
    const i11 = g2(a5);
    if (!i11)
      return null;
    a5.clearRect(0, 0, r4, r4);
    const o6 = u(e7.size) / Math.max(i11.width, i11.height);
    a5.scale(o6, o6);
    const c4 = r4 / o6, u5 = c4 / 2 - i11.width / 2 - i11.x, y7 = c4 / 2 - i11.height / 2 - i11.y;
    if (a5.translate(u5, y7), Array.isArray(e7.color) && a5.fill(t3), ((_a = e7.outline) == null ? void 0 : _a.width) && Array.isArray(e7.outline.color)) {
      const r5 = e7.outline;
      a5.lineWidth = u(r5.width) / o6, a5.lineJoin = "round", a5.strokeStyle = `rgba(${r5.color[0]},${r5.color[1]},${r5.color[2]},${r5.color[3] / 255})`, a5.stroke(t3), i11.width += a5.lineWidth, i11.height += a5.lineWidth;
    }
    i11.width *= o6, i11.height *= o6;
    const m7 = a5.getImageData(r4 / 2 - i11.width / 2, r4 / 2 - i11.height / 2, Math.ceil(i11.width), Math.ceil(i11.height));
    n7 = m7.width, l5 = m7.height, a5.canvas.width = n7, a5.canvas.height = l5, a5.putImageData(m7, 0, 0);
  } else {
    const i11 = "image/svg+xml" === e7.contentType ? "data:image/svg+xml;base64," + e7.imageData : e7.url, r5 = (await U(i11, { responseType: "image" })).data;
    n7 = u(e7.width), l5 = u(e7.height), a5.canvas.width = n7, a5.canvas.height = l5, a5.drawImage(r5, 0, 0, a5.canvas.width, a5.canvas.height);
  }
  return { type: "esriPMS", imageData: a5.canvas.toDataURL("image/png").substr(22), angle: e7.angle, contentType: "image/png", height: e4(l5), width: e4(n7), xoffset: e7.xoffset, yoffset: e7.yoffset };
}
async function le(e7, t3) {
  const i10 = e7.type;
  if ("simple" === i10 && ye(e7.symbol))
    e7.symbol = await oe(e7.symbol, t3);
  else if ("uniqueValue" === i10 || "classBreaks" === i10) {
    ye(e7.defaultSymbol) && (e7.defaultSymbol = await oe(e7.defaultSymbol, t3));
    const r4 = e7["uniqueValue" === i10 ? "uniqueValueInfos" : "classBreakInfos"];
    if (r4)
      for (const e8 of r4)
        ye(e8.symbol) && (e8.symbol = await oe(e8.symbol, t3));
  }
}
async function ce(e7) {
  return e7.queryFeatures(e7.createQuery()).then((e8) => e8.features);
}
function ue(e7) {
  return e7.gpMetadata && e7.gpMetadata.executionType ? R.fromJSON(e7.gpMetadata.executionType) : "sync";
}
function ye(e7) {
  return e7 && (e7.path || "image/svg+xml" === e7.contentType || e7.url && e7.url.endsWith(".svg"));
}

// node_modules/@arcgis/core/rest/support/PrintParameters.js
var s8 = class extends m {
  constructor(e7) {
    super(e7), this.extent = null, this.extraParameters = null, this.outSpatialReference = null, this.template = null, this.updateDelay = 1e3, this.view = null;
  }
};
e2([y2()], s8.prototype, "extent", void 0), e2([y2()], s8.prototype, "extraParameters", void 0), e2([y2()], s8.prototype, "outSpatialReference", void 0), e2([y2()], s8.prototype, "template", void 0), e2([y2()], s8.prototype, "updateDelay", void 0), e2([y2()], s8.prototype, "view", void 0), s8 = e2([n("esri.rest.support.PrintParameters")], s8);
var p10 = s8;

// node_modules/@arcgis/core/widgets/Print/CustomTemplate.js
var i8 = class extends l {
  constructor(o6) {
    super(o6), this.description = null, this.format = null, this.label = null, this.layout = null, this.layoutOptions = null;
  }
};
e2([y2()], i8.prototype, "description", void 0), e2([y2({ json: { read: n6 } })], i8.prototype, "format", void 0), e2([y2()], i8.prototype, "label", void 0), e2([y2({ json: { read: r3 } })], i8.prototype, "layout", void 0), e2([y2()], i8.prototype, "layoutOptions", void 0), i8 = e2([n("esri.widgets.Print.CustomTemplate")], i8);
var l4 = i8;

// node_modules/@arcgis/core/widgets/Print/PrintViewModel.js
var j4 = 6e4;
var x3 = j.ofType(l4);
function g3(t3) {
  t3.layoutOptions || (t3.layoutOptions = {}), t3.layoutOptions.customTextElements || (t3.layoutOptions.customTextElements = []);
  const e7 = "date";
  if (!t3.layoutOptions.customTextElements.find((t4) => e7 in t4)) {
    const { customTextElements: e8 } = t3.layoutOptions;
    let r4 = L(Date.now(), S2("short-date"));
    "ar" === i2() && (r4 = "\u200F" + r4), e8.push({ date: r4 });
  }
}
var S3 = class extends m2 {
  constructor(t3) {
    super(t3), this.allowedFormats = "all", this.allowedLayouts = "all", this.defaultTemplates = new x3(), this.extraParameters = null, this.includeDefaultTemplates = true, this.error = null, this.portal = j2.getDefault(), this.printServiceUrl = null, this.templatesInfo = null, this.updateDelay = 1e3, this.view = null, this.templateCustomTextElements = null, this.print = this.print.bind(this);
  }
  destroy() {
    this.view = null;
  }
  get effectivePrintServiceUrl() {
    var _a;
    return (_a = this.printServiceUrl) != null ? _a : null;
  }
  get effectiveTemplateCustomTextElements() {
    if (!this._serviceTemplateCustomTextElements)
      return {};
    const t3 = y(this._serviceTemplateCustomTextElements);
    return this.templateCustomTextElements && Object.keys(this.templateCustomTextElements).forEach((e7) => {
      const r4 = t3[e7];
      if (r4) {
        const t4 = this.templateCustomTextElements[e7];
        r4.forEach((e8) => {
          const [r5] = Object.entries(e8)[0];
          t4.find((t5) => {
            const [o6, s10] = Object.entries(t5)[0];
            r5 === o6 && (e8[r5] = s10);
          });
        });
      }
    }), Object.freeze(t3);
  }
  get state() {
    return "loading" === this.loadStatus ? "initializing" : this.error || "failed" === this.loadStatus ? "error" : this.get("view.ready") && "loaded" === this.loadStatus ? "ready" : "disabled";
  }
  async load(t3) {
    return this.addResolvingPromise(this._loadResources(t3).catch((t4) => this.error = t4)), this;
  }
  async print(t3) {
    const { view: e7, extraParameters: r4, updateDelay: s10 } = this;
    if (!e7)
      throw new s2("print:view-required", "view is not set");
    g3(t3);
    const i10 = new p10({ view: e7, template: t3, extraParameters: r4, updateDelay: s10 });
    try {
      return await J(this.effectivePrintServiceUrl, i10);
    } catch (a5) {
      throw new s2("print:export-error", "An error occurred while exporting the web map.", { error: a5 });
    }
  }
  toPrintTemplate({ attributionEnabled: t3, author: e7, copyright: r4, customTextElements: o6, dpi: s10, forceFeatureAttributes: i10, format: a5, height: l5, layout: n7, legendEnabled: p11, northArrowEnabled: c4, scale: m7, scaleEnabled: u5, title: f4, width: d3 }) {
    const h5 = new i7({ attributionVisible: t3, forceFeatureAttributes: i10, format: a5, layout: n7, layoutOptions: { authorText: e7 || "", copyrightText: r4 || "", customTextElements: o6, titleText: f4 || "" }, outScale: m7, scalePreserved: u5 });
    d3 && (h5.exportOptions.width = d3), l5 && (h5.exportOptions.height = l5), s10 && (h5.exportOptions.dpi = s10), p11 || (h5.layoutOptions.legendLayers = []);
    const y7 = this.templateToNorthArrowInfo[n7];
    if (y7) {
      y7.visible === c4 || (h5.layoutOptions.elementOverrides = { [y7.name]: { visible: c4 } });
    }
    return h5;
  }
  async _loadResources(t3) {
    var _a, _b;
    let e7 = [];
    const { printServiceUrl: r4 } = this;
    if (!r4) {
      if (this.destroyed)
        return;
      const { portal: r5 } = this;
      try {
        await r5.load(t3);
      } catch (s10) {
        throw new s2("print:could-not-load-portal", "Cannot load print resource information from portal", { url: this.effectivePrintServiceUrl });
      }
      const i10 = (_a = r5.helperServices) == null ? void 0 : _a.printTask;
      i10 && (this._set("effectivePrintServiceUrl", i10.url), e7 = ((_b = i10 == null ? void 0 : i10.templates) != null ? _b : []).map((t4) => l4.fromJSON(t4)));
    }
    e7.length > 0 && this.defaultTemplates.addMany(e7);
    if (-1 === this.effectivePrintServiceUrl.toLowerCase().split("/").indexOf("gpserver"))
      throw new s2("print:invalid-print-service-url", "Can't fetch print templates information from provided URL", { url: this.effectivePrintServiceUrl });
    this._processLayoutTemplateInfos(await this._getLayoutTemplatesInfo(t3)), await this._loadServiceDescription(t3);
  }
  async _loadServiceDescription(t3) {
    const e7 = await this._getPrintTemplatesFromService(t3);
    this._set("templatesInfo", e7);
  }
  async _getLayoutTemplatesInfo(t3) {
    let e7 = [];
    const r4 = async (e8) => {
      const r5 = this.effectivePrintServiceUrl.replace(/(\/GPServer\/).+/i, `$1${encodeURI(e8)}`);
      return (await o3(r5, null, null, e(t3))).results[0].value;
    };
    try {
      e7 = await r4("Get Layout Templates Info Task");
    } catch (o6) {
    }
    if (!e7 || e7.length < 1)
      try {
        e7 = await r4("Get Layout Templates Info");
      } catch (o6) {
      }
    return e7;
  }
  _processLayoutTemplateInfos(t3) {
    const e7 = {}, r4 = {};
    t3.forEach(({ layoutTemplate: t4, layoutOptions: { customTextElements: o6, mapSurroundInfos: s10 } }) => {
      const i10 = r3(t4);
      e7[i10] = o6, s10 && (r4[i10] = s10.find((t5) => "CIMMarkerNorthArrow" === t5.type));
    }), this.templateCustomTextElements = Object.freeze(e7), this.templateToNorthArrowInfo = r4;
  }
  async _getPrintTemplatesFromService(t3) {
    return U(this.effectivePrintServiceUrl, { ...t3, query: { f: "json" }, timeout: j4 }).then((t4) => {
      const e7 = t4 && t4.data, r4 = e7 && e7.parameters;
      let o6 = null, s10 = null;
      r4.forEach((t5) => {
        let e8, r5 = t5.choiceList && t5.choiceList.slice();
        r5 && r5.length && t5.defaultValue && (e8 = r5.indexOf(t5.defaultValue)), e8 > -1 && (r5.splice(e8, 1), r5.unshift(t5.defaultValue));
        const i10 = (t6, e9) => {
          const r6 = "all" === e9 ? t6 : t6.filter((t7) => e9.includes(t7));
          return 0 === r6.length ? t6 : r6;
        };
        if ("Format" === t5.name) {
          const e9 = i10(r5.map(n6), this.allowedFormats), s11 = n6(t5.defaultValue);
          o6 = { defaultValue: e9.includes(s11) ? s11 : e9[0], choiceList: e9 };
        } else if ("Layout_Template" === t5.name) {
          let e9, o7;
          r5 = r5.filter((t6) => "map_only" !== t6.toLowerCase()), r5.some((t6, r6) => {
            const o8 = t6.toLowerCase();
            return o8.includes("letter") && o8.includes("landscape") ? (e9 = r6, true) : !(!o8.includes("a4") || !o8.includes("landscape")) && (e9 = r6, false);
          }), e9 && (o7 = r5[e9], r5.splice(e9, 1), r5.unshift(o7));
          const a5 = i10(r5.map(r3), this.allowedLayouts), l5 = r3(t5.defaultValue);
          s10 = { defaultValue: a5.includes(l5) ? l5 : a5[0], choiceList: a5 };
        }
      }), this.error = null;
      return { format: o6, layout: s10 };
    }).catch((t4) => {
      throw new s2("print:unavailable-service-info", "Can't fetch templates info from service", { error: t4 });
    });
  }
};
e2([y2()], S3.prototype, "_serviceTemplateCustomTextElements", void 0), e2([y2()], S3.prototype, "allowedFormats", void 0), e2([y2()], S3.prototype, "allowedLayouts", void 0), e2([y2({ type: x3 })], S3.prototype, "defaultTemplates", void 0), e2([y2()], S3.prototype, "extraParameters", void 0), e2([y2()], S3.prototype, "includeDefaultTemplates", void 0), e2([y2({ readOnly: true })], S3.prototype, "effectivePrintServiceUrl", null), e2([y2()], S3.prototype, "effectiveTemplateCustomTextElements", null), e2([y2()], S3.prototype, "error", void 0), e2([y2({ type: j2 })], S3.prototype, "portal", void 0), e2([y2()], S3.prototype, "printServiceUrl", void 0), e2([y2({ readOnly: true })], S3.prototype, "state", null), e2([y2({ readOnly: true })], S3.prototype, "templatesInfo", void 0), e2([y2()], S3.prototype, "updateDelay", void 0), e2([y2()], S3.prototype, "view", void 0), e2([y2()], S3.prototype, "templateCustomTextElements", void 0), e2([y2()], S3.prototype, "templateToNorthArrowInfo", void 0), S3 = e2([n("esri.widgets.Print.PrintViewModel")], S3);
var E = S3;

// node_modules/@arcgis/core/widgets/Print/TemplateOptions.js
var i9 = class extends m {
  constructor(t3) {
    super(t3), this.attributionEnabled = true, this.author = null, this.copyright = null, this.customTextElements = null, this.dpi = 96, this.fileName = null, this.forceFeatureAttributes = false, this.format = null, this.height = null, this.layout = null, this.legendEnabled = true, this.northArrowEnabled = false, this.scale = null, this.scaleEnabled = false, this.title = null, this.width = null;
  }
};
e2([y2()], i9.prototype, "attributionEnabled", void 0), e2([y2()], i9.prototype, "author", void 0), e2([y2()], i9.prototype, "copyright", void 0), e2([y2()], i9.prototype, "customTextElements", void 0), e2([y2()], i9.prototype, "dpi", void 0), e2([y2()], i9.prototype, "fileName", void 0), e2([y2()], i9.prototype, "forceFeatureAttributes", void 0), e2([y2()], i9.prototype, "format", void 0), e2([y2()], i9.prototype, "height", void 0), e2([y2()], i9.prototype, "layout", void 0), e2([y2()], i9.prototype, "legendEnabled", void 0), e2([y2()], i9.prototype, "northArrowEnabled", void 0), e2([y2()], i9.prototype, "scale", void 0), e2([y2()], i9.prototype, "scaleEnabled", void 0), e2([y2()], i9.prototype, "title", void 0), e2([y2()], i9.prototype, "width", void 0), i9 = e2([n("esri.widgets.Print.TemplateOptions")], i9);
var s9 = i9;

// node_modules/@arcgis/core/widgets/Print.js
var O = j.ofType(n4);
var x4 = "MAP_ONLY";
var C2;
!function(e7) {
  e7.layout = "layoutTab", e7.mapOnly = "mapOnlyTab";
}(C2 || (C2 = {}));
var L2 = { base: "esri-print", headerTitle: "esri-print__header-title", inputText: "esri-print__input-text", layoutTabList: "esri-print__layout-tab-list", layoutTab: "esri-print__layout-tab", layoutSection: "esri-print__layout-section", mapOnlySection: "esri-print__map-only-section", scaleInput: "esri-print__scale-input", templateList: "esri-print__template-list", templateListScroller: "esri-print__template-list-scroller", templateListFooter: "esri-print__template-list-footer", loader: "esri-print__loader", advancedOptionsButton: "esri-print__advanced-options-button", advancedOptionsButtonContainer: "esri-print__advanced-options-button-container", advancedOptionsButtonTitle: "esri-print__advanced-options-button-title", advancedOptionsButtonIconOpened: "esri-print__advanced-options-button-icon--opened", advancedOptionsButtonIconClosed: "esri-print__advanced-options-button-icon--closed", advancedOptionsButtonIconClosed_RTL: "esri-print__advanced-options-button-icon--closed-rtl", refreshButton: "esri-print__refresh-button", swapButton: "esri-print__swap-button", linkButton: "esri-print__link-button", printButton: "esri-print__export-button", templateButton: "esri-print__template-button", formSectionContainer: "esri-print__form-section-container", advancedOptionsSection: "esri-print__advanced-options-section", advancedOptionsContainer: "esri-print__advanced-options-container", authorInfoContainer: "esri-print__author-info-container", copyrightInfoContainer: "esri-print__copyright-info-container", exportedFilesContainer: "esri-print__export-panel-container", exportedFilesTitle: "esri-print__export-title", exportedFile: "esri-print__exported-file", exportedFileLink: "esri-widget__anchor esri-print__exported-file-link", exportedFileLinkTitle: "esri-print__exported-file-link-title", heightContainer: "esri-print__height-container", legendInfoContainer: "esri-print__legend-info-container", printWidgetContainer: "esri-print__container", panelContainer: "esri-print__panel-container", scaleInfoContainer: "esri-print__scale-info-container", scaleInputContainer: "esri-print__scale-input-container", sizeContainer: "esri-print__size-container", widthContainer: "esri-print__width-container", widget: "esri-widget", panel: "esri-widget--panel", widgetButton: "esri-widget--button", button: "esri-button", buttonSecondary: "esri-button--secondary", buttonTertiary: "esri-button--tertiary", select: "esri-select", input: "esri-input", disabled: "esri-disabled", anchorDisabled: "esri-widget__anchor--disabled", buttonDisabled: "esri-button--disabled", panelError: "esri-print__panel--error", exportedFileError: "esri-print__exported-file--error", hide: "esri-hidden", rotate: "esri-rotating", anchor: "esri-widget__anchor", menu: "esri-menu", menuList: "esri-menu__list", menuItem: "esri-menu__list-item", menuItemFocus: "esri-menu__list-item--focus", menuHeader: "esri-menu__header", iconCheckMark: "esri-icon-check-mark", iconDownload: "esri-icon-download", iconLaunchLink: "esri-icon-launch-link-external", iconError: "esri-icon-error", iconPrinter: "esri-icon-printer", iconRightTriangleArrow: "esri-icon-right-triangle-arrow", iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconDownArrow: "esri-icon-down-arrow", iconRefresh: "esri-icon-refresh", iconSpinner: "esri-icon-loading-indicator", iconSwap: "esri-icon-swap", iconLinked: "esri-icon-link-horizontal", iconUnlinked: "esri-icon-unlocked-link-horizontal", widgetIcon: "esri-icon-printer" };
var k5 = "User sets an invalid layout, resetting it to the default valid one...";
var I = "User sets an invalid format, resetting it to the default valid one...";
function S4(e7) {
  const t3 = 8.3333, i10 = 11.4583;
  return { width: Math.round(e7 * t3), height: Math.round(e7 * i10) };
}
function M2(e7) {
  return !isNaN(e7) && e7 > 0;
}
function F3(e7) {
  return (e7 == null ? void 0 : e7.toUpperCase()) === x4;
}
var E2 = class extends M {
  constructor(e7, t3) {
    super(e7, t3), this._activeTabFocusRequested = false, this._advancedOptionsVisibleForLayout = false, this._advancedOptionsVisibleForMapOnly = false, this._awaitingServerResponse = false, this._exportedFileNameMap = {}, this._focusedTemplateIndex = 0, this._layoutTabSelected = true, this._pendingExportScroll = false, this._rootNode = null, this._selectTemplateNode = null, this._templateListPopover = new y5({ owner: this, placement: "top", offset: [0, -100], anchorElement: () => this._selectTemplateNode, renderContentFunction: this.renderTemplateList }), this.exportedLinks = new O(), this.headingLevel = 3, this.iconClass = L2.widgetIcon, this.templateOptions = new s9(), this.viewModel = new E(), this.handleTemplateListCreation = (e8) => e8.focus(), this.handleTemplateChildBlur = (e8) => {
      var _a;
      const t4 = (_a = e8.relatedTarget) == null ? void 0 : _a.closest(`.${L2.templateList}`);
      t4 || this.handleCloseTemplateSelection();
    }, this.handleCloseTemplateSelection = () => {
      this._focusedTemplateIndex = 0, this._templateListPopover.open = false, this._selectTemplateNode.focus();
    }, this.handleSelectTemplateClick = () => {
      this._focusedTemplateIndex = 0, this._templateListPopover.open = true;
    }, this.handleTemplateListClick = (e8) => {
      const t4 = e8.target;
      this.applyTemplate(t4["data-template"]);
    }, this.handleTemplateListKeyDown = (e8) => {
      if (k2(e8.key))
        return this.applyTemplate(this.viewModel.defaultTemplates.getItemAt(this._focusedTemplateIndex)), void e8.preventDefault();
      if ("ArrowDown" === e8.key || "ArrowUp" === e8.key) {
        const { defaultTemplates: t4 } = this.viewModel, i10 = "ArrowDown" === e8.key ? 1 : -1, a5 = (this._focusedTemplateIndex + i10) % t4.length;
        this._focusedTemplateIndex = a5 < 0 ? t4.length - 1 : a5;
        const n7 = e8.currentTarget;
        A(n7.querySelectorAll(`.${L2.menuItem}`)[this._focusedTemplateIndex], n7.parentElement), e8.preventDefault();
      }
      "Escape" === e8.key && this.handleCloseTemplateSelection();
    }, this._removeLink = (e8) => {
      const t4 = e8.currentTarget["data-item"];
      t4 && "error" === t4.state && this.exportedLinks.remove(t4);
    }, this._handleLinkClick = (e8) => {
      const t4 = e8.currentTarget, { href: i10 } = t4, a5 = u2(this.viewModel.effectivePrintServiceUrl);
      if (!a5)
        return;
      if (!e8.isTrusted)
        return void e8.stopPropagation();
      e8.preventDefault();
      const n7 = new URL(i10);
      n7.searchParams.set("token", a5), t4.href = n7.href, t4.click(), t4.href = i10;
    }, this._focusOnTabChange = this._focusOnTabChange.bind(this);
  }
  initialize() {
    this.addHandles([l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.templatesInfo;
    }, (e8) => {
      const { format: t4, layout: i11 } = this.templateOptions;
      if (e8) {
        const a5 = i11 === e8.layout.defaultValue || F3(i11) || e8.layout.choiceList && e8.layout.choiceList.includes(i11), n7 = t4 === e8.format.defaultValue || e8.format.choiceList && e8.format.choiceList.includes(t4);
        a5 || (i11 && s.getLogger(this.declaredClass).warn(k5), this.templateOptions.layout = e8.layout.defaultValue), n7 || (t4 && s.getLogger(this.declaredClass).warn(I), this.templateOptions.format = e8.format.defaultValue), F3(i11) && (this._layoutTabSelected = false);
      }
    }, h), l2(() => {
      var _a;
      return (_a = this.templateOptions) == null ? void 0 : _a.format;
    }, (e8) => {
      const { viewModel: { templatesInfo: t4 } } = this;
      if (t4 && e8) {
        let i11 = false;
        t4.format.choiceList && t4.format.choiceList.forEach((t5) => {
          t5.toUpperCase() === e8.toUpperCase() && (this.templateOptions.format = t5, i11 = true);
        }), i11 || (this.templateOptions.format = t4.format.defaultValue, s.getLogger(this.declaredClass).warn(I)), this.scheduleRender();
      }
    }, h), l2(() => {
      var _a;
      return (_a = this.templateOptions) == null ? void 0 : _a.layout;
    }, (e8) => {
      const { viewModel: { templatesInfo: t4 } } = this;
      if (t4 && e8) {
        this._layoutTabSelected = !F3(e8);
        let i11 = !this._layoutTabSelected;
        i11 || t4.layout.choiceList && t4.layout.choiceList.forEach((t5) => {
          t5.toUpperCase() === e8.toUpperCase() && (this.templateOptions.layout = t5, i11 = true);
        }), i11 || (this.templateOptions.layout = t4.layout.defaultValue, s.getLogger(this.declaredClass).warn(k5));
        const a5 = this.viewModel.effectiveTemplateCustomTextElements[this.templateOptions.layout];
        this.templateOptions.customTextElements = a5 ? y(a5) : null, this.scheduleRender();
      }
    }, h), l2(() => {
      var _a;
      return (_a = this.templateOptions) == null ? void 0 : _a.dpi;
    }, (e8) => {
      e8 <= 0 ? this.templateOptions.dpi = 1 : this.scheduleRender();
    }, h), l2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.scale;
    }, (e8) => {
      const { scale: t4, scaleEnabled: i11 } = this.templateOptions;
      i11 && t4 || (this.templateOptions.scale = e8);
    }, h)]);
    const { height: e7, width: t3 } = this.templateOptions;
    this.templateOptions.width = t3 || 800, this.templateOptions.height = e7 || 1100;
    const i10 = setTimeout(() => {
      this._awaitingServerResponse = true, this.scheduleRender();
    }, 500);
    this.viewModel.load().then(() => clearTimeout(i10));
  }
  get allowedFormats() {
    return this.viewModel.allowedFormats;
  }
  set allowedFormats(e7) {
    this.viewModel.allowedFormats = e7;
  }
  get allowedLayouts() {
    return this.viewModel.allowedLayouts;
  }
  set allowedLayouts(e7) {
    this.viewModel.allowedLayouts = e7;
  }
  get error() {
    return this.viewModel.error;
  }
  get extraParameters() {
    return this.viewModel.extraParameters;
  }
  set extraParameters(e7) {
    this.viewModel.extraParameters = e7;
  }
  get includeDefaultTemplates() {
    return this.viewModel.includeDefaultTemplates;
  }
  set includeDefaultTemplates(e7) {
    this.viewModel.includeDefaultTemplates = e7;
  }
  get label() {
    var _a, _b;
    return (_b = (_a = this.messages) == null ? void 0 : _a.widgetLabel) != null ? _b : "";
  }
  set label(e7) {
    this._overrideIfSome("label", e7);
  }
  get portal() {
    return this.viewModel.portal;
  }
  set portal(e7) {
    this.viewModel.portal = e7;
  }
  get printServiceUrl() {
    return this.viewModel.printServiceUrl;
  }
  set printServiceUrl(e7) {
    this.viewModel.printServiceUrl = e7;
  }
  get templateCustomTextElements() {
    return this.viewModel.templateCustomTextElements;
  }
  set templateCustomTextElements(e7) {
    this.viewModel.templateCustomTextElements = e7;
  }
  get view() {
    return this.viewModel.view;
  }
  set view(e7) {
    this.viewModel.view = e7;
  }
  render() {
    const { attributionEnabled: e7, author: t3, copyright: i10, dpi: a5, format: n7, height: s10, layout: o6, legendEnabled: l5, northArrowEnabled: r4, scaleEnabled: p11, scale: d3, width: c4 } = this.templateOptions, u5 = "ready" !== this.get("viewModel.state"), h5 = this.renderTitleOrFileNameSection(), { includeDefaultTemplates: m7, messages: _2, viewModel: b4 } = this, v5 = this.get("viewModel.templatesInfo.format.choiceList") || [], y7 = v5.length > 0 ? v5.map((e8) => n2("option", { key: e8, selected: e8 === n7, value: e8 }, e8.toUpperCase())) : n2("option", { key: "format-default-option" }, _2.formatDefaultOption), f4 = n2("div", { class: L2.formSectionContainer }, n2("label", null, _2.fileFormatTitle, n2("select", { class: L2.select, onchange: this._updateFromOption, "data-target-property": "format", bind: this }, y7))), T2 = this.get("viewModel.templatesInfo.layout.choiceList") || [], O2 = T2.length > 0 ? T2.map((e8) => {
      const t4 = e8 === o6, i11 = _2[e8] || e8;
      return n2("option", { key: e8, selected: t4, value: e8 }, i11);
    }) : n2("option", { key: "layout-default-option" }, _2.layoutDefaultOption), x5 = n2("div", { class: L2.formSectionContainer }, n2("label", null, _2.layoutTitle, n2("select", { class: L2.select, onchange: this._updateFromOption, "data-target-property": "layout", bind: this }, O2))), k6 = n2("div", { class: L2.formSectionContainer }, n2("label", null, _2.dpi, n2("input", { type: "number", class: this.classes(L2.inputText, L2.input), "data-input-name": "dpi", onchange: this._handleDPIChange, value: `${a5}`, min: "1", tabIndex: 0, bind: this }))), I2 = n2("div", { class: this.classes(L2.scaleInfoContainer, L2.formSectionContainer) }, n2("label", null, n2("input", { "data-option-name": "scaleEnabled", checked: p11, type: "checkbox", tabIndex: 0, onchange: this._toggleInputValue, bind: this }), _2.scale), n2("div", { class: L2.scaleInputContainer }, n2("input", { "aria-label": _2.scaleLabel, "aria-valuenow": `${d3}`, role: "spinbutton", type: "number", class: this.classes(L2.inputText, L2.input, L2.scaleInput), tabIndex: 0, "data-input-name": "scale", onchange: this._updateInputValue, disabled: !p11, value: `${d3}`, bind: this }), n2("button", { type: "button", "aria-label": _2.reset, class: this.classes(L2.widgetButton, L2.refreshButton, L2.iconRefresh), tabIndex: 0, onclick: this._resetToCurrentScale, bind: this }))), S5 = this._advancedOptionsVisibleForLayout ? n2("div", { "aria-labelledby": `${this.id}__advancedOptionsForLayout`, class: L2.advancedOptionsContainer }, I2, n2("div", { class: this.classes(L2.authorInfoContainer, L2.formSectionContainer) }, n2("label", null, _2.author, n2("input", { type: "text", value: t3, class: this.classes(L2.inputText, L2.input), tabIndex: 0, "data-input-name": "author", onchange: this._updateInputValue, bind: this }))), n2("div", { class: this.classes(L2.copyrightInfoContainer, L2.formSectionContainer) }, n2("label", null, _2.copyright, n2("input", { type: "text", class: this.classes(L2.inputText, L2.input), tabIndex: 0, value: i10, "data-input-name": "copyright", onchange: this._updateInputValue, bind: this }))), k6, n2("div", { class: this.classes(L2.legendInfoContainer, L2.formSectionContainer) }, n2("label", null, n2("input", { type: "checkbox", "data-option-name": "legendEnabled", tabIndex: 0, checked: l5, onchange: this._toggleInputValue, bind: this }), _2.legend)), this.viewModel.templateToNorthArrowInfo[o6] ? n2("div", { class: this.classes(L2.legendInfoContainer, L2.formSectionContainer), key: "north-arrow" }, n2("label", null, n2("input", { type: "checkbox", "data-option-name": "northArrowEnabled", tabIndex: 0, checked: r4, onchange: this._toggleInputValue, bind: this }), _2.northArrow)) : null, this.renderCustomTextElementSection()) : null, M3 = this._advancedOptionsVisibleForMapOnly ? n2("div", { "aria-labelledby": `${this.id}__advancedOptionsForMapOnly`, class: L2.advancedOptionsContainer }, I2, k6, n2("div", { class: L2.formSectionContainer }, n2("label", null, n2("input", { "data-option-name": "attributionEnabled", type: "checkbox", onchange: this._toggleInputValue, tabIndex: 0, checked: e7, bind: this }), _2.attribution)), this.renderCustomTextElementSection()) : null, F4 = this._layoutTabSelected ? n2("section", { key: "esri-print__layoutContent", id: `${this.id}__layoutContent`, "aria-labelledby": `${this.id}__layoutTab`, class: L2.layoutSection, role: "tabpanel", "aria-selected": this._layoutTabSelected.toString() }, n2("div", { class: L2.panelContainer }, h5, x5, this._layoutTabSelected ? f4 : null), n2("div", { class: this.classes(L2.panelContainer, L2.advancedOptionsSection) }, n2("button", { "aria-label": _2.advancedOptions, "aria-expanded": this._advancedOptionsVisibleForLayout ? "true" : "false", class: L2.advancedOptionsButton, onclick: this._showAdvancedOptions, bind: this, type: "button" }, n2("div", { class: L2.advancedOptionsButtonContainer }, n2("span", { "aria-hidden": "true", class: this.classes(L2.iconRightTriangleArrow, L2.advancedOptionsButtonIconClosed) }), n2("span", { "aria-hidden": "true", class: this.classes(L2.iconLeftTriangleArrow, L2.advancedOptionsButtonIconClosed_RTL) }), n2("span", { "aria-hidden": "true", class: this.classes(L2.iconDownArrow, L2.advancedOptionsButtonIconOpened) }), n2("span", { class: L2.advancedOptionsButtonTitle }, _2.advancedOptions))), S5)) : n2("section", { key: "esri-print__mapOnlyContent", id: `${this.id}__mapOnlyContent`, "aria-selected": (!this._layoutTabSelected).toString(), "aria-labelledby": `${this.id}__mapOnlyTab`, class: L2.mapOnlySection, role: "tabpanel" }, n2("div", { class: L2.panelContainer }, h5, this._layoutTabSelected ? null : f4, n2("div", { class: this.classes(L2.sizeContainer, L2.formSectionContainer) }, n2("div", { class: L2.widthContainer }, n2("label", null, _2.width, n2("input", { type: "number", class: this.classes(L2.inputText, L2.input), "data-input-name": "width", onchange: this._updateInputValue, value: `${c4}`, tabIndex: 0, bind: this }))), n2("div", { class: L2.heightContainer }, n2("label", null, _2.height, n2("input", { type: "number", class: this.classes(L2.inputText, L2.input), "data-input-name": "height", onchange: this._updateInputValue, value: `${s10}`, tabIndex: 0, bind: this }))), n2("button", { type: "button", "aria-label": _2.swap, class: this.classes(L2.widgetButton, L2.swapButton, L2.iconSwap), onclick: this._switchInput, tabIndex: 0, bind: this })), n2("div", { class: this.classes(L2.panelContainer, L2.advancedOptionsSection) }, n2("button", { "aria-label": _2.advancedOptions, "aria-expanded": this._advancedOptionsVisibleForMapOnly ? "true" : "false", type: "button", class: L2.advancedOptionsButton, onclick: this._showAdvancedOptions, bind: this }, n2("div", { class: L2.advancedOptionsButtonContainer }, n2("span", { "aria-hidden": "true", class: this.classes(L2.iconRightTriangleArrow, L2.advancedOptionsButtonIconClosed) }), n2("span", { "aria-hidden": "true", class: this.classes(L2.iconLeftTriangleArrow, L2.advancedOptionsButtonIconClosed_RTL) }), n2("span", { "aria-hidden": "true", class: this.classes(L2.iconDownArrow, L2.advancedOptionsButtonIconOpened) }), n2("span", { class: L2.advancedOptionsButtonTitle }, _2.advancedOptions))), M3))), E3 = this.exportedLinks.toArray(), A4 = this._renderExportedLink(E3), P3 = { [L2.buttonDisabled]: u5 || !o6 && !n7 }, V2 = null != this.get("view") && "2d" !== this.get("view.type"), B2 = n2("div", { class: L2.panelError }, V2 ? _2.sceneViewError : _2.serviceError), D = n2("div", null, n2("ul", { class: L2.layoutTabList, role: "tablist", onclick: this._toggleLayoutPanel, onkeydown: this._handleLayoutPanelKeyDown, bind: this }, n2("li", { afterCreate: this._focusOnTabChange, afterUpdate: this._focusOnTabChange, id: `${this.id}__layoutTab`, "data-tab-id": C2.layout, class: L2.layoutTab, role: "tab", tabIndex: 0, "aria-selected": `${this._layoutTabSelected}` }, _2.layoutTab), n2("li", { afterCreate: this._focusOnTabChange, afterUpdate: this._focusOnTabChange, id: `${this.id}__mapOnlyTab`, "data-tab-id": C2.mapOnly, class: L2.layoutTab, role: "tab", tabIndex: 0, "aria-selected": `${!this._layoutTabSelected}` }, _2.mapOnlyTab)), F4, n2("button", { "aria-label": _2.exportDescription, type: "button", class: this.classes(L2.printButton, L2.button, P3), disabled: u5, tabIndex: 0, onclick: this._handlePrintMap, bind: this }, _2.export), m7 && b4.defaultTemplates.length > 0 ? this.renderTemplateSectionTrigger() : null, n2("div", { class: L2.exportedFilesContainer, afterUpdate: this._scrollExportIntoView, bind: this }, n2(n3, { class: L2.exportedFilesTitle, level: this.headingLevel }, _2.exportText), E3.length > 0 ? null : n2("div", null, n2("div", null, _2.exportHint)), A4)), N2 = n2("div", { class: L2.printWidgetContainer }, n2("header", { class: L2.headerTitle }, _2.export), this.error || V2 || !this.view ? B2 : D), $2 = "initializing" === this.get("viewModel.state") ? this._renderLoader() : N2;
    return n2("div", { afterCreate: this._handleRootAfterCreate, bind: this, class: this.classes(L2.base, L2.widget, L2.panel) }, $2);
  }
  renderTemplateSectionTrigger() {
    const { messages: e7, _templateListPopover: t3 } = this, i10 = t3.open;
    return n2("button", { afterCreate: (e8) => this._selectTemplateNode = e8, "aria-controls": i10 ? `${this.id}__template-selection` : "", "aria-label": e7.selectTemplateDescription, "aria-pressed": i10.toString(), class: this.classes(L2.button, L2.buttonTertiary, L2.templateButton), onclick: this.handleSelectTemplateClick, title: e7.selectTemplateDescription, type: "button" }, e7.selectTemplate);
  }
  renderCustomTextElementSection() {
    const { templateOptions: { customTextElements: e7 } } = this;
    return e7 ? n2("div", { class: L2.formSectionContainer, key: "custom-text-elements" }, e7.map((e8) => {
      const [t3, i10] = Object.entries(e8)[0];
      return "date" === t3 ? null : n2("label", { key: t3 }, t3, n2("input", { bind: this, class: this.classes(L2.inputText, L2.input), "data-input-custom": true, "data-input-name": t3, onchange: this._updateInputValue, type: "text", value: i10 }));
    })) : null;
  }
  renderTemplateList() {
    const { messages: e7, messagesCommon: t3, viewModel: i10 } = this, { defaultTemplates: a5 } = i10, n7 = e7.selectTemplateDescription, s10 = `${this.id}__template-selection`;
    return n2("div", { class: this.classes(L2.templateList, L2.widget, L2.panel), id: s10 }, n2(n3, { class: L2.menuHeader, level: this.headingLevel }, e7.selectTemplate), n2("div", { class: L2.templateListScroller }, n2("ul", { afterCreate: this.handleTemplateListCreation, "aria-activedescendant": `${this.id}__template-item--${this._focusedTemplateIndex}`, "aria-label": n7, class: L2.menuList, key: "templates", onblur: this.handleTemplateChildBlur, onclick: this.handleTemplateListClick, onkeydown: this.handleTemplateListKeyDown, role: "listbox", tabIndex: 0, title: n7 }, a5.toArray().map((t4, i11) => {
      const { description: a6 } = t4, n8 = i11 === this._focusedTemplateIndex, s11 = t4.label;
      return n2("li", { "aria-label": a6, class: this.classes(L2.menuItem, { [L2.menuItemFocus]: n8 }), "data-template": t4, id: `${this.id}__template-item--${i11}`, key: s11, title: a6 }, F3(s11) ? e7.mapOnlyTab : s11);
    }))), n2("div", { class: L2.templateListFooter }, n2("button", { type: "button", class: this.classes(L2.button, L2.buttonSecondary), onblur: this.handleTemplateChildBlur, onclick: this.handleCloseTemplateSelection }, t3.done)));
  }
  applyTemplate(e7) {
    var _a;
    const { format: t3, layout: i10, layoutOptions: a5 } = e7, { templateOptions: n7 } = this;
    this._templateListPopover.open = false, this._toggleTab("map-only" === i10 ? C2.mapOnly : C2.layout, false), t3 && (n7.format = t3), i10 && (n7.layout = i10), this._focusedTemplateIndex = null, n7.legendEnabled = (_a = a5 == null ? void 0 : a5.legend) != null ? _a : n7.legendEnabled, this.handleCloseTemplateSelection();
  }
  renderTitleOrFileNameSection() {
    const { templateOptions: e7, messages: t3 } = this;
    let i10, a5, n7, s10;
    return this._layoutTabSelected ? (i10 = t3.title, a5 = t3.titlePlaceHolder, n7 = e7.title, s10 = "title") : (i10 = t3.fileName, a5 = t3.fileNamePlaceHolder, n7 = e7.fileName, s10 = "fileName"), n2("div", { class: L2.formSectionContainer, key: s10 }, n2("label", null, i10, n2("input", { type: "text", tabIndex: 0, placeholder: a5, class: this.classes(L2.inputText, L2.input), value: n7, "data-input-name": s10, onchange: this._updateInputValue, bind: this })));
  }
  _handleRootAfterCreate(e7) {
    this._rootNode = e7, this.addHandles(r2(e7, "scroll", () => {
      this._templateListPopover.open && this.handleCloseTemplateSelection();
    }));
  }
  _focusOnTabChange(e7) {
    if (!this._activeTabFocusRequested)
      return;
    const t3 = e7.getAttribute("data-tab-id");
    ("layoutTab" === t3 && this._layoutTabSelected || "mapOnlyTab" === t3 && !this._layoutTabSelected) && (e7.focus(), this._activeTabFocusRequested = false);
  }
  _renderLoader() {
    const e7 = { [L2.loader]: this._awaitingServerResponse };
    return n2("div", { class: this.classes(e7), key: "loader" });
  }
  _createFileLink(e7, t3) {
    const i10 = t3 || this.messages.untitled, a5 = e7.format.toLowerCase(), n7 = a5.includes("png") ? "png" : a5, s10 = i10 + n7;
    return void 0 !== this._exportedFileNameMap[s10] ? this._exportedFileNameMap[s10]++ : this._exportedFileNameMap[s10] = 0, new n4({ name: i10, extension: n7, count: this._exportedFileNameMap[s10] });
  }
  _resetToCurrentScale() {
    this.templateOptions.scale = this.viewModel.view.scale;
  }
  _updateCustomTextElementValue(e7, t3, i10) {
    e7.find((e8) => {
      const [i11] = Object.entries(e8)[0];
      return i11 === t3;
    })[t3] = i10;
  }
  _updateInputValue(e7) {
    const t3 = e7.target, i10 = t3.getAttribute("data-input-name"), a5 = !!t3["data-input-custom"], { templateOptions: n7 } = this;
    if (a5)
      return void this._updateCustomTextElementValue(n7.customTextElements, i10, t3.value);
    let s10;
    if ("number" === t3.type) {
      if (!M2(t3.valueAsNumber)) {
        const e8 = n7[i10];
        return void (t3.value = `${e8}`);
      }
      s10 = t3.valueAsNumber;
    } else
      s10 = t3.value;
    n7[i10] = s10;
  }
  _handleDPIChange(e7) {
    this._updateInputValue(e7);
    const t3 = e7.currentTarget.valueAsNumber, { height: i10, width: a5 } = S4(t3), { templateOptions: n7 } = this;
    n7.height = i10, n7.width = a5;
  }
  _handlePrintMap() {
    this._pendingExportScroll = true;
    const { templateOptions: e7 } = this, t3 = this.viewModel.toPrintTemplate(e7), i10 = this._layoutTabSelected ? t3.layoutOptions.titleText : e7.fileName, a5 = this._createFileLink(t3, i10);
    this.exportedLinks.add(a5), this.emit("submit", { link: a5 }), this.viewModel.print(t3).then((e8) => {
      a5.set({ url: e8 && e8.url, state: "ready" });
    }).catch((e8) => {
      a5.set({ error: e8, state: "error" });
    }).then(() => {
      this.emit("complete", { link: a5 }), this.scheduleRender();
    });
  }
  _updateFromOption(e7) {
    const t3 = e7.target, i10 = t3.selectedOptions ? t3.selectedOptions.item(0).value : t3.options[t3.selectedIndex].value, a5 = t3.getAttribute("data-target-property");
    this.templateOptions[a5] = i10;
  }
  _switchInput() {
    [this.templateOptions.width, this.templateOptions.height] = [this.templateOptions.height, this.templateOptions.width];
  }
  _showAdvancedOptions() {
    this._layoutTabSelected ? this._advancedOptionsVisibleForLayout = !this._advancedOptionsVisibleForLayout : this._advancedOptionsVisibleForMapOnly = !this._advancedOptionsVisibleForMapOnly;
  }
  _scrollExportIntoView() {
    if (this._pendingExportScroll) {
      this._pendingExportScroll = false;
      const { _rootNode: e7, _rootNode: { clientHeight: t3, scrollHeight: i10 } } = this, a5 = i10 - t3;
      a5 > 0 && (e7.scrollTop = a5);
    }
  }
  _toggleInputValue(e7) {
    const t3 = e7.target, i10 = t3.getAttribute("data-option-name");
    this.templateOptions[i10] = t3.checked, "scaleEnabled" === i10 && (this.templateOptions[i10] || this._resetToCurrentScale());
  }
  _renderExportedLink(e7) {
    const t3 = this.messages;
    return e7.map((e8) => {
      const { error: i10, url: a5, formattedName: n7, state: s10 } = e8, o6 = "error" === s10, l5 = "pending" === s10, d3 = "ready" === s10, c4 = { [L2.anchorDisabled]: l5 || o6 };
      let u5 = a5 || null;
      u5 && (u5 = S(u5));
      const h5 = z(a5, location.href), m7 = { [L2.iconSpinner]: l5, [L2.rotate]: l5, [L2.iconDownload]: h5 && d3, [L2.iconLaunchLink]: !h5 && d3, [L2.iconError]: o6, [L2.exportedFileError]: o6 }, _2 = { [L2.exportedFileError]: o6 };
      let b4;
      b4 = l5 ? t3.pending : d3 ? t3.ready : t3.errorMessage;
      const g4 = o6 ? "print-task:cim-symbol-unsupported" === i10.name ? t3.exportWebMapCIMError : t3.exportWebMapError : "";
      return n2("div", { "aria-label": b4, class: L2.exportedFile, "data-item": e8, key: n7, onclick: this._removeLink, title: g4 }, n2("a", { "aria-label": `${n7}. ${t3.linkReady}`, download: n7, href: u5, rel: "noreferrer", tabIndex: 0, target: "_blank", class: this.classes(L2.exportedFileLink, c4), onclick: this._handleLinkClick }, n2("span", { class: this.classes(m7) }), n2("span", { class: this.classes(L2.exportedFileLinkTitle, _2) }, n7)));
    });
  }
  _toggleLayoutPanel(e7) {
    const t3 = e7.target;
    this._toggleTab(t3.getAttribute("data-tab-id"));
  }
  _toggleTab(e7, t3 = true) {
    if (this._layoutTabSelected = e7 === C2.layout, this._layoutTabSelected) {
      const e8 = this.get("viewModel.templatesInfo.layout.choiceList");
      this.templateOptions.layout = e8 && e8[0];
    } else
      this.templateOptions.layout = x4;
    t3 && (this._activeTabFocusRequested = true);
  }
  _handleLayoutPanelKeyDown(e7) {
    const t3 = i(e7), i10 = e7.target.getAttribute("data-tab-id");
    if (k2(t3))
      return this._toggleTab(i10), e7.preventDefault(), void e7.stopPropagation();
    "ArrowLeft" !== t3 && "ArrowRight" !== t3 || (this._toggleTab(i10 === C2.layout ? C2.mapOnly : C2.layout), e7.preventDefault(), e7.stopPropagation());
  }
};
e2([y2()], E2.prototype, "allowedFormats", null), e2([y2()], E2.prototype, "allowedLayouts", null), e2([y2()], E2.prototype, "error", null), e2([y2({ type: O })], E2.prototype, "exportedLinks", void 0), e2([y2()], E2.prototype, "extraParameters", null), e2([y2()], E2.prototype, "headingLevel", void 0), e2([y2()], E2.prototype, "iconClass", void 0), e2([y2()], E2.prototype, "includeDefaultTemplates", null), e2([y2()], E2.prototype, "label", null), e2([y2(), e3("esri/widgets/Print/t9n/Print")], E2.prototype, "messages", void 0), e2([y2(), e3("esri/t9n/common")], E2.prototype, "messagesCommon", void 0), e2([y2()], E2.prototype, "portal", null), e2([y2()], E2.prototype, "printServiceUrl", null), e2([y2()], E2.prototype, "templateCustomTextElements", null), e2([y2({ type: s9 })], E2.prototype, "templateOptions", void 0), e2([y2()], E2.prototype, "view", null), e2([y2({ type: E })], E2.prototype, "viewModel", void 0), E2 = e2([n("esri.widgets.Print")], E2);
var A3 = E2;

// dep:@arcgis_core_widgets_Print
var arcgis_core_widgets_Print_default = A3;
export {
  arcgis_core_widgets_Print_default as default
};
//# sourceMappingURL=@arcgis_core_widgets_Print.js.map
