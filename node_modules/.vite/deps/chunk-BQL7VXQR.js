import {
  a,
  i,
  n as n2
} from "./chunk-ZLTZ3KAT.js";
import {
  r as r2
} from "./chunk-75RMBUYZ.js";
import {
  f,
  n
} from "./chunk-ZEEU5HOK.js";
import {
  r
} from "./chunk-MIHB3CIK.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js
var e = class extends i {
  constructor(r4, e3) {
    super(r4, "vec2", a.Pass, (s, o, t2) => s.setUniform2fv(r4, e3(o, t2)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/WebGL2Utils.js
var t = "Size";
var n3 = "InvSize";
function r3(r4, i3, o = false, u2 = 0) {
  if (r4.hasWebGL2Context) {
    const t2 = n2`vec2(textureSize(${i3}, ${n2.int(u2)}))`;
    return o ? "(1.0 / " + t2 + ")" : t2;
  }
  return o ? i3 + n3 : i3 + t;
}
function i2(t2, r4, i3, o = null, u2 = 0) {
  if (t2.hasWebGL2Context)
    return n2`texelFetch(${r4}, ivec2(${i3}), ${n2.int(u2)})`;
  let $ = n2`texture2D(${r4}, ${i3} * `;
  return $ += o ? n2`(${o}))` : n2`${r4 + n3})`, $;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/TextureSizeUniformType.js
var e2;
!function(e3) {
  e3[e3.None = 0] = "None", e3[e3.Size = 1] = "Size", e3[e3.InvSize = 2] = "InvSize";
}(e2 || (e2 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js
var f2 = class extends i {
  constructor(r4, s) {
    super(r4, "sampler2D", a.Pass, (e3, o, t2) => e3.bindTexture(r4, s(o, t2)));
  }
};
function u(o, c, p = e2.None) {
  const u2 = [new f2(o, c)];
  if (p & e2.Size) {
    const i3 = o + t;
    u2.push(new e(i3, (o2, t2) => {
      const i4 = c(o2, t2);
      return r(i4) ? r2(a2, i4.descriptor.width, i4.descriptor.height) : f;
    }));
  }
  if (p & e2.InvSize) {
    const t2 = o + n3;
    u2.push(new e(t2, (o2, t3) => {
      const i3 = c(o2, t3);
      return r(i3) ? r2(a2, 1 / i3.descriptor.width, 1 / i3.descriptor.height) : f;
    }));
  }
  return u2;
}
var a2 = n();

export {
  t,
  n3 as n,
  r3 as r,
  i2 as i,
  e,
  e2,
  f2 as f,
  u
};
//# sourceMappingURL=chunk-BQL7VXQR.js.map
