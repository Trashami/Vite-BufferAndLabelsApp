import {
  F,
  I,
  N,
  S,
  T,
  j as j2,
  k as k3,
  v as v2,
  x as x3
} from "./chunk-MKD3FBJ5.js";
import "./chunk-L6PG65Z3.js";
import "./chunk-WKJPACEU.js";
import "./chunk-OP2HNSVZ.js";
import "./chunk-TJ2I6XQT.js";
import "./chunk-EDHROVWI.js";
import "./chunk-34YPGGJT.js";
import {
  i as i2
} from "./chunk-VGNX3TFX.js";
import {
  c as c3
} from "./chunk-TZTENXCS.js";
import {
  n as n4,
  p as p4
} from "./chunk-RQPDRERN.js";
import "./chunk-MBLYC2KR.js";
import "./chunk-XGEPEYGB.js";
import {
  n as n5
} from "./chunk-6BYMCM5A.js";
import "./chunk-BR5PSTJI.js";
import {
  i as i3,
  j
} from "./chunk-2T7LFOXQ.js";
import "./chunk-NCONZRBI.js";
import "./chunk-76CXRT5P.js";
import {
  s as s2
} from "./chunk-LZKCWJVH.js";
import "./chunk-7Q5M7ANT.js";
import {
  a
} from "./chunk-LPRQBCQL.js";
import "./chunk-QR4K7IDQ.js";
import {
  o
} from "./chunk-7N45W3EA.js";
import {
  p as p5
} from "./chunk-MQVQXXLV.js";
import "./chunk-A4HIS5ZJ.js";
import {
  x as x2
} from "./chunk-AMLHWG76.js";
import "./chunk-OFQYIOO7.js";
import {
  v
} from "./chunk-G3HEFWHV.js";
import {
  p as p2
} from "./chunk-3GENFQBG.js";
import {
  c as c2
} from "./chunk-FX6IXM55.js";
import {
  O
} from "./chunk-QFFP6A5Q.js";
import {
  n as n3,
  p2 as p3
} from "./chunk-JP3KAUQB.js";
import "./chunk-INL7BDTP.js";
import "./chunk-PDEVQZ7U.js";
import "./chunk-7XXQ7762.js";
import "./chunk-DVGM5RQS.js";
import "./chunk-R6OA44DQ.js";
import "./chunk-QTYVDCOW.js";
import {
  c,
  d,
  f,
  l,
  m as m2,
  p
} from "./chunk-YGVY4EIZ.js";
import "./chunk-HSDU7DIL.js";
import "./chunk-FWRLW4G5.js";
import "./chunk-JNNRJ7GQ.js";
import "./chunk-E52E6T7N.js";
import {
  x
} from "./chunk-UK3I5WXR.js";
import {
  y as y2
} from "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-GY2AJLN6.js";
import "./chunk-W62B63EU.js";
import "./chunk-N43PI2UO.js";
import "./chunk-O6VYMEIX.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-HUQX7WZO.js";
import "./chunk-BYSA56OH.js";
import "./chunk-US2IWMHE.js";
import "./chunk-ZPYDYUP5.js";
import {
  n as n2
} from "./chunk-TDV3ZXCQ.js";
import {
  t as t3
} from "./chunk-XJCUKRCO.js";
import {
  b
} from "./chunk-SOEQPPQP.js";
import "./chunk-22F6X66Z.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import "./chunk-J6LQZWZI.js";
import "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import {
  k as k2
} from "./chunk-FUPLN7UM.js";
import {
  F as F2,
  x as x4
} from "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import {
  m
} from "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import {
  i,
  t as t2
} from "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import {
  w2 as w
} from "./chunk-UWG37XSU.js";
import {
  k2 as k
} from "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import "./chunk-HLM6QCL2.js";
import "./chunk-RXYULINL.js";
import "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-XQN7F674.js";
import "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import "./chunk-MJXQTGI2.js";
import {
  s
} from "./chunk-LIZHLHNA.js";
import "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  r,
  t
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/layers/graphics/sources/OGCFeatureSource.js
var C = class extends m {
  constructor() {
    super(...arguments), this.featureDefinition = null, this.type = "ogc-feature";
  }
  load(e2) {
    return this.addResolvingPromise(this._loadOGCServices(this.layer, e2)), this.when();
  }
  getSource() {
    const { featureDefinition: { collection: e2, layerDefinition: t4, spatialReference: s3, supportedCrs: r2 }, layer: { apiKey: o2, customParameters: p6, effectiveMaxRecordCount: i4 } } = this;
    return { type: "ogc-source", collection: e2, layerDefinition: t4, maxRecordCount: i4, queryParameters: { apiKey: o2, customParameters: p6 }, spatialReference: s3, supportedCrs: r2 };
  }
  queryExtent(e2, t4 = {}) {
    return null;
  }
  queryFeatureCount(e2, t4 = {}) {
    return null;
  }
  queryFeatures(e2, t4 = {}) {
    return this.queryFeaturesJSON(e2, t4).then((e3) => x.fromJSON(e3));
  }
  queryFeaturesJSON(e2, t4 = {}) {
    const s3 = this.getSource();
    return this.load(t4).then(() => N(s3, e2, t4));
  }
  queryObjectIds(e2, t4 = {}) {
    return null;
  }
  serviceSupportsSpatialReference(e2) {
    return !(!e2.isWGS84 && !e2.isWebMercator) || !!this.featureDefinition.supportedCrs[e2.wkid];
  }
  _conformsToType(e2, t4) {
    var _a;
    const s3 = new RegExp(`^${t4}$`, "i");
    return (_a = e2.conformsTo.some((e3) => s3.test(e3))) != null ? _a : false;
  }
  _getCapabilities(e2, t4) {
    return { analytics: { supportsCacheHint: false }, attachment: null, data: { isVersioned: false, supportsAttachment: false, supportsM: false, supportsZ: e2 }, metadata: { supportsAdvancedFieldProperties: false }, operations: { supportsCalculate: false, supportsTruncate: false, supportsValidateSql: false, supportsAdd: false, supportsDelete: false, supportsEditing: false, supportsChangeTracking: false, supportsQuery: false, supportsQueryAnalytics: false, supportsQueryAttachments: false, supportsQueryTopFeatures: false, supportsResizeAttachments: false, supportsSync: false, supportsUpdate: false, supportsExceedsLimitStatistics: false }, query: { maxRecordCount: t4, maxRecordCountFactor: void 0, standardMaxRecordCount: void 0, supportsCacheHint: false, supportsCentroid: false, supportsDisjointSpatialRelationship: false, supportsDistance: false, supportsDistinct: false, supportsExtent: false, supportsFormatPBF: false, supportsGeometryProperties: false, supportsHavingClause: false, supportsHistoricMoment: false, supportsMaxRecordCountFactor: false, supportsOrderBy: false, supportsPagination: false, supportsPercentileStatistics: false, supportsQuantization: false, supportsQuantizationEditMode: false, supportsQueryByOthers: false, supportsQueryGeometry: false, supportsResultType: false, supportsStandardizedQueriesOnly: false, supportsTopFeaturesQuery: false, supportsStatistics: false, supportsSpatialAggregationStatistics: false, supportedSpatialAggregationStatistics: { envelope: false, centroid: false, convexHull: false }, supportsDefaultSpatialReference: false, supportsFullTextSearch: false, supportsCompactGeometry: false, supportsSqlExpression: false, tileMaxRecordCount: void 0 }, queryRelated: { supportsCount: false, supportsOrderBy: false, supportsPagination: false, supportsCacheHint: false }, queryTopFeatures: { supportsCacheHint: false }, editing: { supportsDeleteByAnonymous: false, supportsDeleteByOthers: false, supportsGeometryUpdate: false, supportsGlobalId: false, supportsReturnServiceEditsInSourceSpatialReference: false, supportsRollbackOnFailure: false, supportsUpdateByAnonymous: false, supportsUpdateByOthers: false, supportsUploadWithItemId: false, supportsUpdateWithoutM: false } };
  }
  _getMaxRecordCount(e2) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i;
    return (_i = (_d = (_c = (_b = (_a = e2 == null ? void 0 : e2.components) == null ? void 0 : _a.parameters) == null ? void 0 : _b.limit) == null ? void 0 : _c.schema) == null ? void 0 : _d.maximum) != null ? _i : (_h = (_g = (_f = (_e = e2 == null ? void 0 : e2.components) == null ? void 0 : _e.parameters) == null ? void 0 : _f.limitFeatures) == null ? void 0 : _g.schema) == null ? void 0 : _h.maximum;
  }
  _getStorageSpatialReference(e2) {
    var _a;
    const t4 = (_a = e2.storageCrs) != null ? _a : F, s3 = v2(t4);
    return t(s3) ? k.WGS84 : new k({ wkid: s3 });
  }
  _getSupportedSpatialReferences(e2, t4) {
    var _a;
    const s3 = "#/crs", r2 = (_a = e2.crs) != null ? _a : [F], o2 = r2.includes(s3) ? r2.filter((e3) => e3 !== s3).concat(t4.crs) : r2, p6 = /^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;
    return o2.filter((e3) => !p6.test(e3));
  }
  async _loadOGCServices(e2, s3) {
    const r2 = r(s3) ? s3.signal : null, { apiKey: p6, collectionId: i4, customParameters: a2, fields: u, geometryType: g, hasZ: h, objectIdField: C2, timeInfo: R, url: w2 } = e2, x5 = { fields: u == null ? void 0 : u.map((e3) => e3.toJSON()), geometryType: t2.toJSON(g), hasZ: h, objectIdField: C2, timeInfo: R == null ? void 0 : R.toJSON() }, j3 = { apiKey: p6, customParameters: a2, signal: r2 }, F3 = await x3(w2, j3), [O2, v3] = await Promise.all([k3(F3, j3), T(F3, j3)]);
    if (!this._conformsToType(O2, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))
      throw new s("ogc-feature-layer:no-geojson-support", "Server does not support geojson");
    const T2 = v3.collections.find((e3) => e3.id === i4);
    if (!T2)
      throw new s("ogc-feature-layer:collection-not-found", "Server does not contain the named collection");
    const D = this._conformsToType(O2, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30") ? await S(F3, j3) : null, _ = await I(T2, x5, j3), b2 = this._getMaxRecordCount(D), P = this._getCapabilities(_.hasZ, b2), q = this._getStorageSpatialReference(T2).toJSON(), M2 = this._getSupportedSpatialReferences(T2, v3), A = new RegExp(`^${j2}`, "i"), E = {};
    for (const t4 of M2) {
      const e3 = v2(t4);
      r(e3) && (E[e3] || (E[e3] = t4.replace(A, "")));
    }
    this.featureDefinition = { capabilities: P, collection: T2, layerDefinition: _, spatialReference: q, supportedCrs: E };
  }
};
e([y()], C.prototype, "featureDefinition", void 0), e([y({ constructOnly: true })], C.prototype, "layer", void 0), e([y()], C.prototype, "type", void 0), C = e([n("esri.layers.graphics.sources.OGCFeatureSource")], C);

// node_modules/@arcgis/core/layers/OGCFeatureLayer.js
var M = s2();
var B = class extends i2(o(n4(p4(n2(c3(a(t3(c2(v(p2(O(b)))))))))))) {
  constructor(e2) {
    super(e2), this.collectionId = null, this.copyright = null, this.definitionExpression = null, this.description = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.hasZ = void 0, this.labelingInfo = null, this.labelsVisible = true, this.legendEnabled = true, this.maxRecordCount = null, this.objectIdField = null, this.operationalLayerType = "OGCFeatureLayer", this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new C({ layer: this }), this.spatialReference = null, this.title = null, this.type = "ogc-feature", this.typeIdField = null, this.types = null, this.url = null;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e2) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["OGCFeatureServer"] }, e2).then(() => this._fetchService(e2))), this.when();
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get effectiveMaxRecordCount() {
    var _a, _b, _c;
    return (_c = (_b = this.maxRecordCount) != null ? _b : (_a = this.capabilities) == null ? void 0 : _a.query.maxRecordCount) != null ? _c : 5e3;
  }
  get isTable() {
    return this.loaded && null == this.geometryType;
  }
  set renderer(e2) {
    F2(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  on(e2, r2) {
    return super.on(e2, r2);
  }
  createPopupTemplate(e2) {
    return p5(this, e2);
  }
  createQuery() {
    return new x2();
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  getFieldDomain(e2, r2) {
    var _a;
    let t4, i4 = false;
    const o2 = (_a = r2 == null ? void 0 : r2.feature) == null ? void 0 : _a.attributes, s3 = this.typeIdField && (o2 == null ? void 0 : o2[this.typeIdField]);
    return null != s3 && this.types && (i4 = this.types.some((r3) => {
      var _a2;
      return r3.id == s3 && (t4 = (_a2 = r3.domains) == null ? void 0 : _a2[e2], "inherited" === (t4 == null ? void 0 : t4.type) && (t4 = this._getLayerDomain(e2)), true);
    })), i4 || t4 || (t4 = this._getLayerDomain(e2)), t4;
  }
  queryFeatures(e2, r2) {
    return this.load().then(() => this.source.queryFeatures(x2.from(e2) || this.createQuery(), r2)).then((e3) => {
      var _a;
      return (_a = e3 == null ? void 0 : e3.features) == null ? void 0 : _a.forEach((e4) => {
        e4.layer = e4.sourceLayer = this;
      }), e3;
    });
  }
  serviceSupportsSpatialReference(e2) {
    var _a, _b;
    return (_b = (_a = this.source) == null ? void 0 : _a.serviceSupportsSpatialReference(e2)) != null ? _b : false;
  }
  async _fetchService(e2) {
    await this.source.load(e2), this.read(this.source.featureDefinition, { origin: "service" }), F2(this.renderer, this.fieldsIndex), x4(this.timeInfo, this.fieldsIndex);
  }
  _getLayerDomain(e2) {
    if (!this.fields)
      return null;
    for (const r2 of this.fields)
      if (r2.name === e2 && r2.domain)
        return r2.domain;
    return null;
  }
};
e([y({ readOnly: true, json: { origins: { service: { read: true } } } })], B.prototype, "capabilities", void 0), e([y({ type: String, json: { write: true } })], B.prototype, "collectionId", void 0), e([y({ type: String })], B.prototype, "copyright", void 0), e([y({ readOnly: true })], B.prototype, "defaultPopupTemplate", null), e([y({ type: String })], B.prototype, "definitionExpression", void 0), e([y({ readOnly: true, type: String, json: { origins: { service: { name: "collection.description" } } } })], B.prototype, "description", void 0), e([y({ type: String })], B.prototype, "displayField", void 0), e([y({ type: Number })], B.prototype, "effectiveMaxRecordCount", null), e([y(d)], B.prototype, "elevationInfo", void 0), e([y({ type: [y2], json: { origins: { service: { name: "layerDefinition.fields" } } } })], B.prototype, "fields", void 0), e([y(M.fieldsIndex)], B.prototype, "fieldsIndex", void 0), e([y({ readOnly: true, type: w, json: { origins: { service: { name: "layerDefinition.extent" } } } })], B.prototype, "fullExtent", void 0), e([y({ type: i.apiValues, json: { origins: { service: { name: "layerDefinition.geometryType", read: { reader: i.read } } } } })], B.prototype, "geometryType", void 0), e([y({ type: Boolean, json: { origins: { service: { name: "layerDefinition.hasZ" } } } })], B.prototype, "hasZ", void 0), e([y({ type: Boolean, readOnly: true })], B.prototype, "isTable", null), e([y({ type: [j], json: { origins: { "web-document": { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i3 }, write: true } } } })], B.prototype, "labelingInfo", void 0), e([y(m2)], B.prototype, "labelsVisible", void 0), e([y(c)], B.prototype, "legendEnabled", void 0), e([y({ type: Number })], B.prototype, "maxRecordCount", void 0), e([y({ type: String, json: { origins: { service: { name: "layerDefinition.objectIdField" } } } })], B.prototype, "objectIdField", void 0), e([y({ type: ["OGCFeatureLayer"] })], B.prototype, "operationalLayerType", void 0), e([y(p)], B.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { name: "popupInfo", write: true } })], B.prototype, "popupTemplate", void 0), e([y({ types: p3, json: { origins: { service: { name: "layerDefinition.drawingInfo.renderer", write: false }, "web-scene": { types: n3, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: true } })], B.prototype, "renderer", null), e([y(l)], B.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], B.prototype, "source", void 0), e([y({ readOnly: true, type: k, json: { origins: { service: { read: true } } } })], B.prototype, "spatialReference", void 0), e([y({ type: String, json: { write: { enabled: true, ignoreOrigin: true, isRequired: true }, origins: { service: { name: "collection.title" } } } })], B.prototype, "title", void 0), e([y({ readOnly: true, json: { read: false } })], B.prototype, "type", void 0), e([y({ type: String, readOnly: true })], B.prototype, "typeIdField", void 0), e([y({ type: [n5] })], B.prototype, "types", void 0), e([y(f)], B.prototype, "url", void 0), B = e([n("esri.layers.OGCFeatureLayer")], B);
var V = B;
export {
  V as default
};
//# sourceMappingURL=OGCFeatureLayer-DT7DNU3D.js.map
