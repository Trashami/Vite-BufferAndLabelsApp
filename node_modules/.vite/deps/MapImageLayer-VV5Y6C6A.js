import {
  E,
  y as y2,
  z
} from "./chunk-3AFEB5FG.js";
import {
  c as c2
} from "./chunk-GKDTZQDA.js";
import {
  n as n4
} from "./chunk-E5VMCRLK.js";
import "./chunk-OFTOCPN5.js";
import {
  i as i2
} from "./chunk-PHXBWNSB.js";
import "./chunk-4BIBXEQB.js";
import "./chunk-E4KPV765.js";
import {
  n as n2
} from "./chunk-CN5IW2C7.js";
import "./chunk-VYG3YGZX.js";
import {
  e as e2
} from "./chunk-65SMURZR.js";
import {
  i
} from "./chunk-VGNX3TFX.js";
import "./chunk-6BYMCM5A.js";
import "./chunk-BR5PSTJI.js";
import "./chunk-2T7LFOXQ.js";
import "./chunk-NCONZRBI.js";
import "./chunk-76CXRT5P.js";
import "./chunk-7Q5M7ANT.js";
import {
  a as a2
} from "./chunk-LPRQBCQL.js";
import "./chunk-QR4K7IDQ.js";
import {
  o as o2
} from "./chunk-7N45W3EA.js";
import "./chunk-MQVQXXLV.js";
import {
  p as p2
} from "./chunk-HAVCYBU2.js";
import "./chunk-A4HIS5ZJ.js";
import "./chunk-AMLHWG76.js";
import "./chunk-OFQYIOO7.js";
import {
  v
} from "./chunk-G3HEFWHV.js";
import {
  p
} from "./chunk-3GENFQBG.js";
import {
  c
} from "./chunk-FX6IXM55.js";
import {
  O
} from "./chunk-QFFP6A5Q.js";
import "./chunk-J5VTDQTQ.js";
import "./chunk-YF2CRSQX.js";
import "./chunk-JP3KAUQB.js";
import "./chunk-INL7BDTP.js";
import "./chunk-PDEVQZ7U.js";
import "./chunk-7XXQ7762.js";
import "./chunk-DVGM5RQS.js";
import "./chunk-R6OA44DQ.js";
import "./chunk-QTYVDCOW.js";
import {
  f
} from "./chunk-YGVY4EIZ.js";
import "./chunk-HSDU7DIL.js";
import "./chunk-FWRLW4G5.js";
import "./chunk-JNNRJ7GQ.js";
import "./chunk-E52E6T7N.js";
import "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-GY2AJLN6.js";
import "./chunk-W62B63EU.js";
import "./chunk-N43PI2UO.js";
import "./chunk-O6VYMEIX.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-HUQX7WZO.js";
import "./chunk-BYSA56OH.js";
import {
  T as T2
} from "./chunk-US2IWMHE.js";
import "./chunk-ZPYDYUP5.js";
import {
  n as n3
} from "./chunk-TDV3ZXCQ.js";
import {
  t as t2
} from "./chunk-XJCUKRCO.js";
import {
  b
} from "./chunk-SOEQPPQP.js";
import "./chunk-22F6X66Z.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import {
  a
} from "./chunk-REIQNAQW.js";
import "./chunk-J6LQZWZI.js";
import "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import "./chunk-FUPLN7UM.js";
import "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import {
  w2
} from "./chunk-UWG37XSU.js";
import "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import {
  r as r3
} from "./chunk-HLM6QCL2.js";
import {
  o
} from "./chunk-RXYULINL.js";
import "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-XQN7F674.js";
import {
  U
} from "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n,
  r2,
  t6 as t,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import {
  j,
  w
} from "./chunk-MJXQTGI2.js";
import {
  s
} from "./chunk-LIZHLHNA.js";
import {
  T
} from "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  r
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/layers/MapImageLayer.js
var q = class extends n3(a2(t2(E(y2(p2(c(v(O(p(i(o2(a(b))))))))))))) {
  constructor(...e3) {
    super(...e3), this.datesInUnknownTimezone = false, this.dpi = 96, this.gdbVersion = null, this.imageFormat = "png24", this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.isReference = null, this.labelsVisible = false, this.operationalLayerType = "ArcGISMapServiceLayer", this.sourceJSON = null, this.sublayers = null, this.type = "map-image", this.url = null;
  }
  normalizeCtorArgs(e3, r4) {
    return "string" == typeof e3 ? { url: e3, ...r4 } : e3;
  }
  load(e3) {
    const r4 = r(e3) ? e3.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Map Service"] }, e3).catch(w).then(() => this._fetchService(r4))), Promise.resolve(this);
  }
  readImageFormat(e3, r4) {
    const t3 = r4.supportedImageFormatTypes;
    return t3 && t3.includes("PNG32") ? "png32" : "png24";
  }
  writeSublayers(e3, r4, t3, o3) {
    if (!this.loaded || !e3)
      return;
    const i3 = e3.slice().reverse().flatten(({ sublayers: e4 }) => e4 && e4.toArray().reverse()).toArray();
    let s2 = false;
    if (this.capabilities && this.capabilities.operations.supportsExportMap && this.capabilities.exportMap.supportsDynamicLayers) {
      const e4 = t(o3.origin);
      if (e4 === r2.PORTAL_ITEM) {
        const e5 = this.createSublayersForOrigin("service").sublayers;
        s2 = n4(i3, e5, r2.SERVICE);
      } else if (e4 > r2.PORTAL_ITEM) {
        const e5 = this.createSublayersForOrigin("portal-item");
        s2 = n4(i3, e5.sublayers, t(e5.origin));
      }
    }
    const a3 = [], p3 = { writeSublayerStructure: s2, ...o3 };
    let n5 = s2;
    i3.forEach((e4) => {
      const r5 = e4.write({}, p3);
      a3.push(r5), n5 = n5 || "user" === e4.originOf("visible");
    });
    a3.some((e4) => Object.keys(e4).length > 1) && (r4.layers = a3), n5 && (r4.visibleLayers = i3.filter((e4) => e4.visible).map((e4) => e4.id));
  }
  createExportImageParameters(e3, r4, t3, o3) {
    const i3 = o3 && o3.pixelRatio || 1;
    e3 && this.version >= 10 && (e3 = e3.clone().shiftCentralMeridian());
    const s2 = new c2({ layer: this, floors: o3 == null ? void 0 : o3.floors, scale: i2({ extent: e3, width: r4 }) * i3 }), a3 = s2.toJSON();
    s2.destroy();
    const p3 = !o3 || !o3.rotation || this.version < 10.3 ? {} : { rotation: -o3.rotation }, n5 = e3 && e3.spatialReference, m = n5.wkid || JSON.stringify(n5.toJSON());
    a3.dpi *= i3;
    const l = {};
    if (o3 == null ? void 0 : o3.timeExtent) {
      const { start: e4, end: r5 } = o3.timeExtent.toJSON();
      l.time = e4 && r5 && e4 === r5 ? "" + e4 : `${e4 != null ? e4 : "null"},${r5 != null ? r5 : "null"}`;
    } else
      this.timeInfo && !this.timeInfo.hasLiveData && (l.time = "null,null");
    return { bbox: e3 && e3.xmin + "," + e3.ymin + "," + e3.xmax + "," + e3.ymax, bboxSR: m, imageSR: m, size: r4 + "," + t3, ...a3, ...p3, ...l };
  }
  async fetchImage(e3, r4, t3, o3) {
    return this._fetchImage("image", e3, r4, t3, o3);
  }
  async fetchImageBitmap(e3, r4, t3, o3) {
    const i3 = await this._fetchImage("blob", e3, r4, t3, o3);
    return createImageBitmap(i3);
  }
  async fetchRecomputedExtents(e3 = {}) {
    const o3 = { ...e3, query: { returnUpdates: true, f: "json", ...this.customParameters, token: this.apiKey } }, { data: i3 } = await U(this.url, o3), { extent: s2, fullExtent: a3, timeExtent: p3 } = i3, n5 = s2 || a3;
    return { fullExtent: n5 && w2.fromJSON(n5), timeExtent: p3 && T2.fromJSON({ start: p3[0], end: p3[1] }) };
  }
  loadAll() {
    return n2(this, (e3) => {
      e3(this.allSublayers);
    });
  }
  serviceSupportsSpatialReference(e3) {
    return e2(this, e3);
  }
  async _fetchImage(e3, t3, i3, s2, a3) {
    var _a;
    const p3 = { responseType: e3, signal: (_a = a3 == null ? void 0 : a3.signal) != null ? _a : null, query: { ...this.parsedUrl.query, ...this.createExportImageParameters(t3, i3, s2, a3), f: "image", ...this.refreshParameters, ...this.customParameters, token: this.apiKey } }, n5 = this.parsedUrl.path + "/export";
    if (null != p3.query.dynamicLayers && !this.capabilities.exportMap.supportsDynamicLayers)
      throw new s("mapimagelayer:dynamiclayer-not-supported", `service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`, { query: p3.query });
    try {
      const { data: e4 } = await U(n5, p3);
      return e4;
    } catch (l) {
      if (j(l))
        throw l;
      throw new s("mapimagelayer:image-fetch-error", `Unable to load image: ${n5}`, { error: l });
    }
  }
  async _fetchService(e3) {
    if (this.sourceJSON)
      return void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    const { data: t3, ssl: o3 } = await U(this.parsedUrl.path, { query: { f: "json", ...this.parsedUrl.query, ...this.customParameters, token: this.apiKey }, signal: e3 });
    o3 && (this.url = this.url.replace(/^http:/i, "https:")), this.sourceJSON = t3, this.read(t3, { origin: "service", url: this.parsedUrl });
  }
};
e([y({ type: Boolean })], q.prototype, "datesInUnknownTimezone", void 0), e([y()], q.prototype, "dpi", void 0), e([y()], q.prototype, "gdbVersion", void 0), e([y()], q.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], q.prototype, "readImageFormat", null), e([y({ json: { origins: { service: { read: { source: "maxImageHeight" } } } } })], q.prototype, "imageMaxHeight", void 0), e([y({ json: { origins: { service: { read: { source: "maxImageWidth" } } } } })], q.prototype, "imageMaxWidth", void 0), e([y()], q.prototype, "imageTransparency", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], q.prototype, "isReference", void 0), e([y({ json: { read: false, write: false } })], q.prototype, "labelsVisible", void 0), e([y({ type: ["ArcGISMapServiceLayer"] })], q.prototype, "operationalLayerType", void 0), e([y({ json: { read: false, write: false } })], q.prototype, "popupEnabled", void 0), e([y()], q.prototype, "sourceJSON", void 0), e([y({ json: { write: { ignoreOrigin: true } } })], q.prototype, "sublayers", void 0), e([r3("sublayers", { layers: { type: [z] }, visibleLayers: { type: [T] } })], q.prototype, "writeSublayers", null), e([y({ type: ["show", "hide", "hide-children"] })], q.prototype, "listMode", void 0), e([y({ json: { read: false }, readOnly: true, value: "map-image" })], q.prototype, "type", void 0), e([y(f)], q.prototype, "url", void 0), q = e([n("esri.layers.MapImageLayer")], q);
var F = q;
export {
  F as default
};
//# sourceMappingURL=MapImageLayer-VV5Y6C6A.js.map
