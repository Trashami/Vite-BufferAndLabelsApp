{
  "version": 3,
  "sources": ["../../@arcgis/core/node_modules/@esri/calcite-components/dist/components/form.js"],
  "sourcesContent": ["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { o as closestElementCrossShadowBoundary } from './dom.js';\nimport { h } from '@stencil/core/internal/client/index.js';\n\n/**\n * Exported for testing purposes.\n */\nconst hiddenFormInputSlotName = \"hidden-form-input\";\nfunction isCheckable(component) {\n  return \"checked\" in component;\n}\nconst onFormResetMap = new WeakMap();\nconst formComponentSet = new WeakSet();\nfunction hasRegisteredFormComponentParent(form, formComponentEl) {\n  // we use events as a way to test for nested form-associated components across shadow bounds\n  const formComponentRegisterEventName = \"calciteInternalFormComponentRegister\";\n  let hasRegisteredFormComponentParent = false;\n  form.addEventListener(formComponentRegisterEventName, (event) => {\n    hasRegisteredFormComponentParent = event\n      .composedPath()\n      .some((element) => formComponentSet.has(element));\n    event.stopPropagation();\n  }, { once: true });\n  formComponentEl.dispatchEvent(new CustomEvent(formComponentRegisterEventName, {\n    bubbles: true,\n    composed: true\n  }));\n  return hasRegisteredFormComponentParent;\n}\n/**\n * Helper to submit a form.\n *\n * @param component\n * @returns true if its associated form was submitted, false otherwise.\n */\nfunction submitForm(component) {\n  const { formEl } = component;\n  if (!formEl) {\n    return false;\n  }\n  \"requestSubmit\" in formEl ? formEl.requestSubmit() : formEl.submit();\n  return true;\n}\n/**\n * Helper to reset a form.\n *\n * @param component\n */\nfunction resetForm(component) {\n  var _a;\n  (_a = component.formEl) === null || _a === void 0 ? void 0 : _a.reset();\n}\n/**\n * Helper to set up form interactions on connectedCallback.\n *\n * @param component\n */\nfunction connectForm(component) {\n  const { el, value } = component;\n  const form = closestElementCrossShadowBoundary(el, \"form\");\n  if (!form || hasRegisteredFormComponentParent(form, el)) {\n    return;\n  }\n  component.formEl = form;\n  component.defaultValue = value;\n  if (isCheckable(component)) {\n    component.defaultChecked = component.checked;\n  }\n  const boundOnFormReset = (component.onFormReset || onFormReset).bind(component);\n  form.addEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.set(component.el, boundOnFormReset);\n  formComponentSet.add(el);\n}\nfunction onFormReset() {\n  if (isCheckable(this)) {\n    this.checked = this.defaultChecked;\n    return;\n  }\n  this.value = this.defaultValue;\n}\n/**\n * Helper to tear down form interactions on disconnectedCallback.\n *\n * @param component\n */\nfunction disconnectForm(component) {\n  const { el, formEl } = component;\n  if (!formEl) {\n    return;\n  }\n  const boundOnFormReset = onFormResetMap.get(el);\n  formEl.removeEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.delete(el);\n  component.formEl = null;\n  formComponentSet.delete(el);\n}\n/**\n * Helper for setting the default value on initialization after connectedCallback.\n *\n * Note that this is only needed if the default value cannot be determined on connectedCallback.\n *\n * @param component\n * @param value\n */\nfunction afterConnectDefaultValueSet(component, value) {\n  component.defaultValue = value;\n}\nconst hiddenInputChangeHandler = (event) => {\n  event.target.dispatchEvent(new CustomEvent(\"calciteInternalHiddenInputChange\", { bubbles: true }));\n};\nconst removeHiddenInputChangeEventListener = (input) => input.removeEventListener(\"change\", hiddenInputChangeHandler);\n/**\n * Helper for maintaining a form-associated's hidden input in sync with the component.\n *\n * Based on Ionic's approach: https://github.com/ionic-team/ionic-framework/blob/e4bf052794af9aac07f887013b9250d2a045eba3/core/src/utils/helpers.ts#L198\n *\n * @param component\n */\nfunction syncHiddenFormInput(component) {\n  const { el, formEl, name, value } = component;\n  const { ownerDocument } = el;\n  const inputs = el.querySelectorAll(`input[slot=\"${hiddenFormInputSlotName}\"]`);\n  if (!formEl || !name) {\n    inputs.forEach((input) => {\n      removeHiddenInputChangeEventListener(input);\n      input.remove();\n    });\n    return;\n  }\n  const values = Array.isArray(value) ? value : [value];\n  const extra = [];\n  const seen = new Set();\n  inputs.forEach((input) => {\n    const valueMatch = values.find((val) => \n    /* intentional non-strict equality check */\n    val == input.value);\n    if (valueMatch != null) {\n      seen.add(valueMatch);\n      defaultSyncHiddenFormInput(component, input, valueMatch);\n    }\n    else {\n      extra.push(input);\n    }\n  });\n  let docFrag;\n  values.forEach((value) => {\n    if (seen.has(value)) {\n      return;\n    }\n    let input = extra.pop();\n    if (!input) {\n      input = ownerDocument.createElement(\"input\");\n      input.slot = hiddenFormInputSlotName;\n    }\n    if (!docFrag) {\n      docFrag = ownerDocument.createDocumentFragment();\n    }\n    docFrag.append(input);\n    // emits when hidden input is autofilled\n    input.addEventListener(\"change\", hiddenInputChangeHandler);\n    defaultSyncHiddenFormInput(component, input, value);\n  });\n  if (docFrag) {\n    el.append(docFrag);\n  }\n  extra.forEach((input) => {\n    removeHiddenInputChangeEventListener(input);\n    input.remove();\n  });\n}\nfunction defaultSyncHiddenFormInput(component, input, value) {\n  var _a;\n  const { defaultValue, disabled, name, required } = component;\n  // keep in sync to prevent losing reset value\n  input.defaultValue = defaultValue;\n  input.disabled = disabled;\n  input.name = name;\n  input.required = required;\n  input.tabIndex = -1;\n  if (isCheckable(component)) {\n    // keep in sync to prevent losing reset value\n    input.defaultChecked = component.defaultChecked;\n    // heuristic to support default/on mode from https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n    input.value = component.checked ? value || \"on\" : \"\";\n    // we disable the component when not checked to avoid having its value submitted\n    if (!disabled && !component.checked) {\n      input.disabled = true;\n    }\n  }\n  else {\n    input.value = value || \"\";\n  }\n  (_a = component.syncHiddenFormInput) === null || _a === void 0 ? void 0 : _a.call(component, input);\n}\n/**\n * Helper to render the slot for form-associated component's hidden input.\n *\n * If the component has a default slot, this must be placed at the bottom of the component's root container to ensure it is the last child.\n *\n * render(): VNode {\n *   <Host>\n *     <div class={CSS.container}>\n *     // ...\n *     <HiddenFormInputSlot component={this} />\n *     </div>\n *   </Host>\n * }\n *\n * Note that the hidden-form-input Sass mixin must be added to the component's style to apply specific styles.\n *\n * @param root0\n * @param root0.component\n */\nconst HiddenFormInputSlot = ({ component }) => {\n  syncHiddenFormInput(component);\n  return h(\"slot\", { name: hiddenFormInputSlotName });\n};\n\nexport { HiddenFormInputSlot as H, afterConnectDefaultValueSet as a, connectForm as c, disconnectForm as d, resetForm as r, submitForm as s };\n"],
  "mappings": "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",
  "names": ["hasRegisteredFormComponentParent", "value"]
}
