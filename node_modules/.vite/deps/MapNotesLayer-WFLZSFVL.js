import {
  n as n3
} from "./chunk-V4I7Q273.js";
import {
  v as v2
} from "./chunk-NCXAKZRR.js";
import "./chunk-DUCSW4OU.js";
import "./chunk-WVDA5Z37.js";
import {
  An,
  en,
  rn,
  tn,
  un
} from "./chunk-FFVIDMFN.js";
import {
  Ze
} from "./chunk-53VWTVL2.js";
import "./chunk-6CR2FXC5.js";
import "./chunk-VYG3YGZX.js";
import "./chunk-65SMURZR.js";
import "./chunk-VGNX3TFX.js";
import "./chunk-TZTENXCS.js";
import "./chunk-RQPDRERN.js";
import "./chunk-MBLYC2KR.js";
import "./chunk-XGEPEYGB.js";
import "./chunk-6BYMCM5A.js";
import "./chunk-BR5PSTJI.js";
import "./chunk-2T7LFOXQ.js";
import "./chunk-NCONZRBI.js";
import "./chunk-76CXRT5P.js";
import "./chunk-LZKCWJVH.js";
import "./chunk-7Q5M7ANT.js";
import "./chunk-LPRQBCQL.js";
import "./chunk-QR4K7IDQ.js";
import "./chunk-7N45W3EA.js";
import "./chunk-MQVQXXLV.js";
import "./chunk-YTOF4Z6B.js";
import "./chunk-HAVCYBU2.js";
import "./chunk-4HXPP4EA.js";
import "./chunk-M3NPSHCI.js";
import "./chunk-SBKKCBDN.js";
import "./chunk-MLVV3H5S.js";
import "./chunk-A4HIS5ZJ.js";
import "./chunk-AMLHWG76.js";
import "./chunk-OFQYIOO7.js";
import "./chunk-ZJZBAYFU.js";
import {
  v
} from "./chunk-G3HEFWHV.js";
import "./chunk-3GENFQBG.js";
import {
  c
} from "./chunk-FX6IXM55.js";
import {
  O
} from "./chunk-QFFP6A5Q.js";
import "./chunk-O5PXWHV2.js";
import "./chunk-J5VTDQTQ.js";
import "./chunk-YF2CRSQX.js";
import "./chunk-JP3KAUQB.js";
import "./chunk-INL7BDTP.js";
import "./chunk-PDEVQZ7U.js";
import "./chunk-7XXQ7762.js";
import "./chunk-DVGM5RQS.js";
import "./chunk-R6OA44DQ.js";
import "./chunk-QTYVDCOW.js";
import "./chunk-YGVY4EIZ.js";
import "./chunk-HSDU7DIL.js";
import "./chunk-FWRLW4G5.js";
import "./chunk-JNNRJ7GQ.js";
import "./chunk-E52E6T7N.js";
import "./chunk-UK3I5WXR.js";
import {
  y as y3
} from "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-GY2AJLN6.js";
import "./chunk-W62B63EU.js";
import "./chunk-N43PI2UO.js";
import "./chunk-O6VYMEIX.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-HUQX7WZO.js";
import "./chunk-BYSA56OH.js";
import "./chunk-ZWUEORSX.js";
import "./chunk-US2IWMHE.js";
import "./chunk-ZL4T4NIV.js";
import "./chunk-NAKEKTIK.js";
import "./chunk-QWNKYSI4.js";
import "./chunk-FMJZBZWF.js";
import "./chunk-GOYVJTGW.js";
import "./chunk-ZPYDYUP5.js";
import {
  h as h2
} from "./chunk-36I5ESAQ.js";
import "./chunk-CYI2FLSH.js";
import {
  n as n2
} from "./chunk-TDV3ZXCQ.js";
import {
  t as t3
} from "./chunk-XJCUKRCO.js";
import {
  b
} from "./chunk-SOEQPPQP.js";
import "./chunk-22F6X66Z.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import "./chunk-REIQNAQW.js";
import {
  g
} from "./chunk-J6LQZWZI.js";
import {
  m as m2,
  y as y4
} from "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import "./chunk-FUPLN7UM.js";
import "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import {
  S
} from "./chunk-TQEOEDAZ.js";
import {
  m
} from "./chunk-SHFHZMHO.js";
import "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import {
  D,
  I,
  K,
  f,
  h
} from "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import {
  j
} from "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import {
  w2 as w
} from "./chunk-UWG37XSU.js";
import {
  E,
  k2 as k
} from "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import {
  r as r2
} from "./chunk-HLM6QCL2.js";
import {
  o as o2
} from "./chunk-RXYULINL.js";
import "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-XQN7F674.js";
import "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n,
  t2,
  y as y2
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import "./chunk-MJXQTGI2.js";
import {
  s
} from "./chunk-LIZHLHNA.js";
import "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import {
  o,
  y
} from "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  r,
  t
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/layers/MapNotesLayer.js
function z(e2) {
  return "markup" === e2.featureCollectionType || e2.layers.some((e3) => null != e3.layerDefinition.visibilityField || !U(e3));
}
function U({ layerDefinition: e2, featureSet: t4 }) {
  var _a;
  const r3 = (_a = e2.geometryType) != null ? _a : t4.geometryType;
  return H.find((t5) => {
    var _a2, _b, _c;
    return r3 === t5.geometryTypeJSON && ((_c = (_b = (_a2 = e2.drawingInfo) == null ? void 0 : _a2.renderer) == null ? void 0 : _b.symbol) == null ? void 0 : _c.type) === t5.identifyingSymbol.type;
  });
}
function W() {
  return new w({ xmin: -180, ymin: -90, xmax: 180, ymax: 90 });
}
var A = new y3({ name: "OBJECTID", alias: "OBJECTID", type: "oid", nullable: false, editable: false });
var $ = new y3({ name: "title", alias: "Title", type: "string", nullable: true, editable: true });
var q = class extends h2 {
  constructor(e2) {
    super(e2), this.visibilityMode = "inherited";
  }
  initialize() {
    for (const e2 of this.graphics)
      e2.sourceLayer = this.layer;
    this.graphics.on("after-add", (e2) => {
      e2.item.sourceLayer = this.layer;
    }), this.graphics.on("after-remove", (e2) => {
      e2.item.sourceLayer = null;
    });
  }
  get fullExtent() {
    var _a;
    const e2 = (_a = this.layer) == null ? void 0 : _a.spatialReference, t4 = this.fullBounds;
    return e2 ? t(t4) ? un(W(), e2).geometry : f(t4, e2) : null;
  }
  get fullBounds() {
    var _a;
    const e2 = (_a = this.layer) == null ? void 0 : _a.spatialReference;
    if (!e2)
      return null;
    const t4 = D();
    return this.graphics.forEach((r3) => {
      const o3 = r(r3.geometry) ? un(r3.geometry, e2).geometry : null;
      r(o3) && h(t4, "point" === o3.type ? o3 : o3.extent, t4);
    }), I(t4, K) ? null : t4;
  }
  get sublayers() {
    return this.graphics;
  }
};
e([y2({ readOnly: true })], q.prototype, "fullExtent", null), e([y2({ readOnly: true })], q.prototype, "fullBounds", null), e([y2({ readOnly: true })], q.prototype, "sublayers", null), e([y2()], q.prototype, "layer", void 0), e([y2()], q.prototype, "layerId", void 0), e([y2({ readOnly: true })], q.prototype, "visibilityMode", void 0), q = e([n("esri.layers.MapNotesLayer.MapNotesSublayer")], q);
var H = [{ geometryType: "polygon", geometryTypeJSON: "esriGeometryPolygon", id: "polygonLayer", layerId: 0, title: "Polygons", identifyingSymbol: new S().toJSON() }, { geometryType: "polyline", geometryTypeJSON: "esriGeometryPolyline", id: "polylineLayer", layerId: 1, title: "Polylines", identifyingSymbol: new m().toJSON() }, { geometryType: "multipoint", geometryTypeJSON: "esriGeometryMultipoint", id: "multipointLayer", layerId: 2, title: "Multipoints", identifyingSymbol: new y4().toJSON() }, { geometryType: "point", geometryTypeJSON: "esriGeometryPoint", id: "pointLayer", layerId: 3, title: "Points", identifyingSymbol: new y4().toJSON() }, { geometryType: "point", geometryTypeJSON: "esriGeometryPoint", id: "textLayer", layerId: 4, title: "Text", identifyingSymbol: new m2().toJSON() }];
var K2 = class extends n2(t3(c(v(O(b))))) {
  constructor(e2) {
    super(e2), this.capabilities = { operations: { supportsMapNotesEditing: true } }, this.featureCollections = null, this.featureCollectionJSON = null, this.featureCollectionType = "notes", this.legendEnabled = false, this.listMode = "hide-children", this.minScale = 0, this.maxScale = 0, this.spatialReference = k.WGS84, this.sublayers = new j(H.map((e3) => new q({ id: e3.id, layerId: e3.layerId, title: e3.title, layer: this }))), this.title = "Map Notes", this.type = "map-notes", this.visibilityMode = "inherited";
  }
  readCapabilities(e2, t4, r3) {
    return { operations: { supportsMapNotesEditing: !z(t4) && "portal-item" !== (r3 == null ? void 0 : r3.origin) } };
  }
  readFeatureCollections(e2, t4, o3) {
    if (!z(t4))
      return null;
    const i = t4.layers.map((e3) => {
      const t5 = new Ze();
      return t5.read(e3, o3), t5;
    });
    return new j({ items: i });
  }
  readLegacyfeatureCollectionJSON(e2, t4) {
    return z(t4) ? y(t4.featureCollection) : null;
  }
  get fullExtent() {
    var _a;
    const e2 = this.spatialReference, t4 = D();
    if (r(this.sublayers))
      this.sublayers.forEach(({ fullBounds: e3 }) => r(e3) ? h(t4, e3, t4) : t4, t4);
    else if ((_a = this.featureCollectionJSON) == null ? void 0 : _a.layers.some((e3) => e3.layerDefinition.extent)) {
      this.featureCollectionJSON.layers.forEach((r3) => {
        const o3 = un(r3.layerDefinition.extent, e2).geometry;
        r(o3) && h(t4, o3, t4);
      });
    }
    return I(t4, K) ? un(W(), e2).geometry : f(t4, e2);
  }
  readMinScale(e2, t4) {
    for (const r3 of t4.layers)
      if (null != r3.layerDefinition.minScale)
        return r3.layerDefinition.minScale;
    return 0;
  }
  readMaxScale(e2, t4) {
    for (const r3 of t4.layers)
      if (null != r3.layerDefinition.maxScale)
        return r3.layerDefinition.maxScale;
    return 0;
  }
  get multipointLayer() {
    return this._findSublayer("multipointLayer");
  }
  get pointLayer() {
    return this._findSublayer("pointLayer");
  }
  get polygonLayer() {
    return this._findSublayer("polygonLayer");
  }
  get polylineLayer() {
    return this._findSublayer("polylineLayer");
  }
  readSpatialReference(e2, t4) {
    return t4.layers.length ? k.fromJSON(t4.layers[0].layerDefinition.spatialReference) : k.WGS84;
  }
  readSublayers(e2, o3, i) {
    var _a;
    if (z(o3))
      return null;
    const a = [];
    let n4 = o3.layers.reduce((e3, t4) => {
      var _a2;
      return Math.max(e3, (_a2 = t4.layerDefinition.id) != null ? _a2 : -1);
    }, -1) + 1;
    for (const r3 of o3.layers) {
      const { layerDefinition: e3, featureSet: o4 } = r3, i2 = (_a = e3.id) != null ? _a : n4++, s2 = U(r3);
      if (r(s2)) {
        const r4 = new q({ id: s2.id, title: e3.name, layerId: i2, layer: this, graphics: o4.features.map(({ geometry: e4, symbol: r5, attributes: o5, popupInfo: i3 }) => g.fromJSON({ attributes: o5, geometry: e4, symbol: r5, popupTemplate: i3 })) });
        a.push(r4);
      }
    }
    return new j(a);
  }
  writeSublayers(e2, t4, r3, i) {
    var _a;
    const { minScale: n4, maxScale: p } = this;
    if (t(e2))
      return;
    const y5 = e2.some((e3) => e3.graphics.length > 0);
    if (!this.capabilities.operations.supportsMapNotesEditing)
      return void (y5 && ((_a = i == null ? void 0 : i.messages) == null ? void 0 : _a.push(new s("map-notes-layer:editing-not-supported", "New map notes cannot be added to this layer"))));
    const m3 = [];
    let u = this.spatialReference.toJSON();
    e:
      for (const o3 of e2)
        for (const e3 of o3.graphics)
          if (r(e3.geometry)) {
            u = e3.geometry.spatialReference.toJSON();
            break e;
          }
    for (const o3 of H) {
      const t5 = e2.find((e3) => o3.id === e3.id);
      this._writeMapNoteSublayer(m3, t5, o3, n4, p, u, i);
    }
    o("featureCollection.layers", m3, t4);
  }
  get textLayer() {
    return this._findSublayer("textLayer");
  }
  load(e2) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Feature Collection"] }, e2)), Promise.resolve(this);
  }
  read(e2, t4) {
    "featureCollection" in e2 && (e2 = y(e2), Object.assign(e2, e2.featureCollection)), super.read(e2, t4);
  }
  async beforeSave() {
    if (t(this.sublayers))
      return;
    let e2 = null;
    const t4 = [];
    for (const o3 of this.sublayers)
      for (const r4 of o3.graphics)
        if (r(r4.geometry)) {
          const o4 = r4.geometry;
          e2 ? E(o4.spatialReference, e2) || (An(o4.spatialReference, e2) || en() || await tn(), r4.geometry = rn(o4, e2)) : e2 = o4.spatialReference, t4.push(r4);
        }
    const r3 = await v2(t4.map((e3) => e3.geometry));
    t4.forEach((e3, t5) => e3.geometry = r3[t5]);
  }
  _findSublayer(e2) {
    var _a, _b;
    return t(this.sublayers) ? null : (_b = (_a = this.sublayers) == null ? void 0 : _a.find((t4) => t4.id === e2)) != null ? _b : null;
  }
  _writeMapNoteSublayer(e2, t4, r3, o3, l, n4, s2) {
    const p = [];
    if (!t(t4)) {
      for (const e3 of t4.graphics)
        this._writeMapNote(p, e3, r3.geometryType, s2);
      this._normalizeObjectIds(p, A), e2.push({ layerDefinition: { name: t4.title, drawingInfo: { renderer: { type: "simple", symbol: y(r3.identifyingSymbol) } }, id: t4.layerId, geometryType: r3.geometryTypeJSON, minScale: o3, maxScale: l, objectIdField: "OBJECTID", fields: [A.toJSON(), $.toJSON()], spatialReference: n4 }, featureSet: { features: p, geometryType: r3.geometryTypeJSON } });
    }
  }
  _writeMapNote(e2, t4, r3, o3) {
    var _a, _b;
    if (t(t4))
      return;
    const { geometry: i, symbol: n4, popupTemplate: s2 } = t4;
    if (t(i))
      return;
    if (i.type !== r3)
      return void ((_a = o3 == null ? void 0 : o3.messages) == null ? void 0 : _a.push(new t2("map-notes-layer:invalid-geometry-type", `Geometry "${i.type}" cannot be saved in "${r3}" layer`, { graphic: t4 })));
    if (t(n4))
      return void ((_b = o3 == null ? void 0 : o3.messages) == null ? void 0 : _b.push(new t2("map-notes-layer:no-symbol", "Skipping map notes with no symbol", { graphic: t4 })));
    const y5 = { attributes: { ...t4.attributes }, geometry: i.toJSON(), symbol: n4.toJSON() };
    r(s2) && (y5.popupInfo = s2.toJSON()), e2.push(y5);
  }
  _normalizeObjectIds(e2, t4) {
    const r3 = t4.name;
    let o3 = n3(r3, e2) + 1;
    const i = /* @__PURE__ */ new Set();
    for (const l of e2) {
      l.attributes || (l.attributes = {});
      const { attributes: e3 } = l;
      (null == e3[r3] || i.has(e3[r3])) && (e3[r3] = o3++), i.add(e3[r3]);
    }
  }
};
e([y2({ readOnly: true })], K2.prototype, "capabilities", void 0), e([o2(["portal-item", "web-map"], "capabilities", ["layers"])], K2.prototype, "readCapabilities", null), e([y2({ readOnly: true })], K2.prototype, "featureCollections", void 0), e([o2(["web-map", "portal-item"], "featureCollections", ["layers"])], K2.prototype, "readFeatureCollections", null), e([y2({ readOnly: true, json: { origins: { "web-map": { write: { enabled: true, target: "featureCollection" } } } } })], K2.prototype, "featureCollectionJSON", void 0), e([o2(["web-map", "portal-item"], "featureCollectionJSON", ["featureCollection"])], K2.prototype, "readLegacyfeatureCollectionJSON", null), e([y2({ readOnly: true, json: { read: true, write: { enabled: true, ignoreOrigin: true } } })], K2.prototype, "featureCollectionType", void 0), e([y2({ readOnly: true })], K2.prototype, "fullExtent", null), e([y2({ readOnly: true, json: { origins: { "web-map": { write: { target: "featureCollection.showLegend", overridePolicy() {
  return { enabled: null != this.featureCollectionJSON };
} } } } } })], K2.prototype, "legendEnabled", void 0), e([y2({ type: ["show", "hide", "hide-children"] })], K2.prototype, "listMode", void 0), e([y2({ type: Number, nonNullable: true, json: { write: false } })], K2.prototype, "minScale", void 0), e([o2(["web-map", "portal-item"], "minScale", ["layers"])], K2.prototype, "readMinScale", null), e([y2({ type: Number, nonNullable: true, json: { write: false } })], K2.prototype, "maxScale", void 0), e([o2(["web-map", "portal-item"], "maxScale", ["layers"])], K2.prototype, "readMaxScale", null), e([y2({ readOnly: true })], K2.prototype, "multipointLayer", null), e([y2({ value: "ArcGISFeatureLayer", type: ["ArcGISFeatureLayer"] })], K2.prototype, "operationalLayerType", void 0), e([y2({ readOnly: true })], K2.prototype, "pointLayer", null), e([y2({ readOnly: true })], K2.prototype, "polygonLayer", null), e([y2({ readOnly: true })], K2.prototype, "polylineLayer", null), e([y2({ type: k })], K2.prototype, "spatialReference", void 0), e([o2(["web-map", "portal-item"], "spatialReference", ["layers"])], K2.prototype, "readSpatialReference", null), e([y2({ readOnly: true, json: { origins: { "web-map": { write: { ignoreOrigin: true } } } } })], K2.prototype, "sublayers", void 0), e([o2("web-map", "sublayers", ["layers"])], K2.prototype, "readSublayers", null), e([r2("web-map", "sublayers")], K2.prototype, "writeSublayers", null), e([y2({ readOnly: true })], K2.prototype, "textLayer", null), e([y2()], K2.prototype, "title", void 0), e([y2({ readOnly: true, json: { read: false } })], K2.prototype, "type", void 0), K2 = e([n("esri.layers.MapNotesLayer")], K2);
var Q = K2;
export {
  Q as default
};
//# sourceMappingURL=MapNotesLayer-WFLZSFVL.js.map
