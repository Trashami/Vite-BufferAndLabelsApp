import {
  o
} from "./chunk-GQHKPMYA.js";
import {
  N,
  e,
  n
} from "./chunk-VRX4W75V.js";
import {
  l,
  s
} from "./chunk-2J2YGTXG.js";
import {
  r
} from "./chunk-MIHB3CIK.js";

// node_modules/@arcgis/core/views/interactive/snapping/candidates/DrapedEdgeSnappingCandidate.js
var r2 = class extends n {
  constructor(n2) {
    super({ ...n2, constraint: new N(n2.coordinateHelper, n2.edgeStart, n2.edgeEnd, n2.getGroundElevation) });
  }
  get hints() {
    return [new s(l.REFERENCE, this.constraint.start, this.constraint.end, this.elevationInfo, this.domain)];
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/featureSources/queryEngineUtils.js
function r3(e2, r4, a2, d) {
  switch (e2.type) {
    case "edge":
      return e2.draped ? new r2({ coordinateHelper: r4, edgeStart: r4.pointToVector(e2.start), edgeEnd: r4.pointToVector(e2.end), targetPoint: r4.pointToVector(e2.target), objectId: e2.objectId, getGroundElevation: d, elevationInfo: a2 }) : new e({ coordinateHelper: r4, edgeStart: r4.pointToVector(e2.start), edgeEnd: r4.pointToVector(e2.end), targetPoint: r4.pointToVector(e2.target), objectId: e2.objectId, elevationInfo: a2 });
    case "vertex":
      return new o({ coordinateHelper: r4, targetPoint: r4.pointToVector(e2.target), objectId: e2.objectId, elevationInfo: a2 });
  }
}
function a(t) {
  return r(t) && "3d" === t.type ? (e2, o2, n2) => t.elevationProvider.getElevation(e2, o2, n2, t.spatialReference, "ground") : () => null;
}

export {
  r3 as r,
  a
};
//# sourceMappingURL=chunk-RU3WEQBN.js.map
