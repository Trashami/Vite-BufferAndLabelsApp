{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/materials/StippleTextureRepository.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/ensureColor4.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/LineStipple.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{packFloatRGBA as t}from\"../../../../core/floatRGBA.js\";import{disposeMaybe as e,isNone as r,isSome as o}from\"../../../../core/maybe.js\";import{NoParameters as n}from\"../core/shaderModules/interfaces.js\";import{PixelFormat as s,PixelType as i,TextureWrapMode as c}from\"../../../webgl/enums.js\";import{Texture as a}from\"../../../webgl/Texture.js\";class u{constructor(t){this._rctx=t,this._cache=new Map}dispose(){this._cache.forEach((t=>e(t.stippleTexture))),this._cache.clear()}_acquire(t){if(r(t))return null;const e=this._patternId(t),o=this._cache.get(e);if(o)return o.refCount++,o;const{encodedData:n,paddedPixels:u}=p(t),l=new h(new a(this._rctx,{width:u,height:1,internalFormat:s.RGBA,pixelFormat:s.RGBA,dataType:i.UNSIGNED_BYTE,wrapMode:c.CLAMP_TO_EDGE},n));return this._cache.set(e,l),l}release(t){if(r(t))return;const e=this._patternId(t),n=this._cache.get(e);n&&(n.refCount--,0===n.refCount&&(o(n.stippleTexture)&&n.stippleTexture.dispose(),this._cache.delete(e)))}swap(t,e){const r=this._acquire(e);return this.release(t),r}_patternId(t){return`${t.pattern.join(\",\")}-r${t.pixelRatio}`}}class h extends n{constructor(t){super(),this.stippleTexture=t,this.refCount=1}}function p(e){const r=l(e),o=1/e.pixelRatio,n=f(e),s=d(e),i=(Math.floor(.5*(s-1))+.5)*o,c=[];let a=1;for(const t of r){for(let e=0;e<t;e++){const r=a*(Math.min(e,t-1-e)+.5)*o/i*.5+.5;c.push(r)}a=-a}const u=Math.round(r[0]/2),h=[...c.slice(u),...c.slice(0,u)],p=n+m,_=new Uint8Array(4*p);let x=4;for(const l of h)t(l,_,x),x+=4;return _.copyWithin(0,x-4,x),_.copyWithin(x,4,8),{encodedData:_,paddedPixels:p}}function l(t){return t.pattern.map((e=>Math.round(e*t.pixelRatio)))}function f(t){if(r(t))return 1;const e=l(t);return Math.floor(e.reduce(((t,e)=>t+e)))}function d(t){return l(t).reduce(((t,e)=>Math.max(t,e)))}const m=2;export{m as STIPPLE_TEXTURE_PADDING,u as StippleTextureRepository,d as computeLongestPattern,f as computeTextureSize};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{isNone as o}from\"../../../../core/maybe.js\";import{s as r}from\"../../../../chunks/vec4.js\";import{Z as s,c}from\"../../../../chunks/vec4f64.js\";function t(c){return o(c)?s:4===c.length?c:r(e,c[0],c[1],c[2],1)}const e=c();export{t as ensureColor4};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.25/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../../core/maybe.js\";import{RgbaFloatEncoding as t}from\"../util/RgbaFloatEncoding.glsl.js\";import{addCameraPosition as i}from\"../util/View.glsl.js\";import{textureSize as o}from\"../util/WebGL2Utils.js\";import{Float4PassUniform as r}from\"../../shaderModules/Float4PassUniform.js\";import{FloatPassUniform as a}from\"../../shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../../shaderModules/interfaces.js\";import{createTexture2DPassSizeUniforms as p}from\"../../shaderModules/Texture2DPassUniform.js\";import{TextureSizeUniformType as s}from\"../../shaderModules/TextureSizeUniformType.js\";import{STIPPLE_TEXTURE_PADDING as n,computeLongestPattern as d,computeTextureSize as c}from\"../../../materials/StippleTextureRepository.js\";import{ensureColor4 as f}from\"../../../shaders/ensureColor4.js\";function u(e,t){e.constants.add(\"stippleAlphaColorDiscard\",\"float\",.001),e.constants.add(\"stippleAlphaHighlightDiscard\",\"float\",.5),t.stippleEnabled?m(e,t):S(e)}function m(e,d){const c=!(d.draped&&d.stipplePreferContinuous),{vertex:u,fragment:m}=e;m.include(t),d.draped||(i(u,d),u.uniforms.add(new a(\"worldToScreenPerDistanceRatio\",((e,t)=>1/t.camera.perScreenPixelRatio))),u.code.add(l`float computeWorldToScreenRatio(vec3 segmentCenter) {\nfloat segmentDistanceToCamera = length(segmentCenter - cameraPosition);\nreturn worldToScreenPerDistanceRatio / segmentDistanceToCamera;\n}`)),e.varyings.add(\"vStippleDistance\",\"float\"),d.stippleRequiresClamp&&e.varyings.add(\"vStippleDistanceLimits\",\"vec2\"),d.stippleRequiresStretchMeasure&&e.varyings.add(\"vStipplePatternStretch\",\"float\"),u.code.add(l`\n    float discretizeWorldToScreenRatio(float worldToScreenRatio) {\n      float step = ${x};\n\n      float discreteWorldToScreenRatio = log(worldToScreenRatio);\n      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;\n      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);\n      return discreteWorldToScreenRatio;\n    }\n  `),u.code.add(l`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),u.code.add(l`\n    if (segmentLengthPseudoScreen >= ${c?\"patternLength\":\"1e4\"}) {\n  `),u.uniforms.add(new a(\"pixelRatio\",((e,t)=>t.camera.pixelRatio))),u.code.add(l`\n        // Round the screen length to get an integer number of pattern repetitions (minimum 1).\n        float repetitions = segmentLengthScreen / (patternLength * pixelRatio);\n        float flooredRepetitions = max(1.0, floor(repetitions + 0.5));\n        float segmentLengthScreenRounded = flooredRepetitions * patternLength;\n\n        ${d.stippleRequiresStretchMeasure?l`\n              float stretch = repetitions / flooredRepetitions;\n\n              // We need to impose a lower bound on the stretch factor to prevent the dots from merging together when there is only 1 repetition.\n              // 0.75 is the lowest possible stretch value for flooredRepetitions > 1, so it makes sense as lower bound.\n              vStipplePatternStretch = max(0.75, stretch);`:\"\"}\n\n        return vec2(0.0, segmentLengthScreenRounded);\n      }\n      return vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);\n    }\n  `),m.constants.add(\"stippleTexturePadding\",\"float\",n);const S=d.hasWebGL2Context?s.None:s.Size;m.uniforms.add(p(\"stipplePatternTexture\",(e=>e.stippleTexture),S)),m.uniforms.add([new a(\"stipplePatternSDFNormalizer\",(e=>h(e.stipplePattern))),new a(\"stipplePatternPixelSizeInv\",(e=>1/g(e)))]),m.code.add(l`\n    float padStippleTexture(float u) {\n      float paddedTextureSize = ${o(d,\"stipplePatternTexture\")}.x;\n      float unpaddedTextureSize = paddedTextureSize - stippleTexturePadding;\n\n      return (u * unpaddedTextureSize + stippleTexturePadding * 0.5) / paddedTextureSize;\n    }\n  `),m.code.add(l`\n    float getStippleSDF(out bool isClamped) {\n      ${d.stippleRequiresClamp?l`\n          float stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);\n          vec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;\n          isClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;`:l`\n          float stippleDistanceClamped = vStippleDistance;\n          isClamped = false;`}\n\n      float u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv;\n      ${d.stippleScaleWithLineWidth?l`u *= vLineSizeInv;`:\"\"}\n      u = padStippleTexture(fract(u));\n\n      float encodedSDF = rgba2float(texture2D(stipplePatternTexture, vec2(u, 0.5)));\n      float sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;\n\n      ${d.stippleRequiresStretchMeasure?l`return (sdf - 0.5) * vStipplePatternStretch + 0.5;`:l`return sdf;`}\n    }\n\n    float getStippleSDF() {\n      bool ignored;\n      return getStippleSDF(ignored);\n    }\n\n    float getStippleAlpha() {\n      bool isClamped;\n      float stippleSDF = getStippleSDF(isClamped);\n\n      float antiAliasedResult = ${d.stippleScaleWithLineWidth?l`clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);`:l`clamp(stippleSDF + 0.5, 0.0, 1.0);`}\n\n      return isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;\n    }\n  `),d.stippleOffColorEnabled?(m.uniforms.add(new r(\"stippleOffColor\",(e=>f(e.stippleOffColor)))),m.code.add(l`#define discardByStippleAlpha(stippleAlpha, threshold) {}\n#define blendStipple(color, stippleAlpha) mix(color, stippleOffColor, stippleAlpha)`)):m.code.add(l`#define discardByStippleAlpha(stippleAlpha, threshold) if (stippleAlpha < threshold) { discard; }\n#define blendStipple(color, stippleAlpha) vec4(color.rgb, color.a * stippleAlpha)`)}function S(e){e.fragment.code.add(l`float getStippleAlpha() { return 1.0; }\n#define discardByStippleAlpha(_stippleAlpha_, _threshold_) {}\n#define blendStipple(color, _stippleAlpha_) color`)}function h(t){return e(t)?(Math.floor(.5*(d(t)-1))+.5)/t.pixelRatio:1}function g(t){const i=t.stipplePattern;return e(i)?c(t.stipplePattern)/i.pixelRatio:1}const x=l.float(.4);export{u as LineStipple,g as computePixelSize};\n"],
  "mappings": "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",
  "names": ["u", "t", "e", "o", "n", "l", "r", "c", "a", "h", "p", "x", "t", "c", "r", "e", "u", "e", "t", "m", "d", "c", "a", "n", "S", "h", "r"]
}
