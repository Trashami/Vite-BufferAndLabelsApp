import {
  i
} from "./chunk-QTDVBI5T.js";
import {
  oe
} from "./chunk-L26SDFYA.js";
import "./chunk-6TQO4FJO.js";
import "./chunk-DPGI5XTT.js";
import "./chunk-QXJIQKLY.js";
import "./chunk-GRWIJKD6.js";
import "./chunk-WGK2FJEK.js";
import "./chunk-CNTOSDAN.js";
import "./chunk-LL5ZGGZR.js";
import "./chunk-Q5IFLFM5.js";
import {
  y
} from "./chunk-L4LV52OG.js";
import {
  u
} from "./chunk-PCWW275T.js";
import "./chunk-EWYYYS2T.js";
import "./chunk-7N2Z7KNR.js";
import "./chunk-DBT4KOKX.js";
import "./chunk-4Y3VLNR2.js";
import "./chunk-MU26VSON.js";
import "./chunk-5HIF32ZE.js";
import "./chunk-57QYUXCA.js";
import "./chunk-J42Y5N2P.js";
import "./chunk-DWAZ7HI7.js";
import "./chunk-POI555WS.js";
import "./chunk-JHLU6RPN.js";
import "./chunk-EPMXCACW.js";
import "./chunk-UCPKJYXN.js";
import "./chunk-KFLNKWNF.js";
import "./chunk-KUO7OCMN.js";
import "./chunk-KG5RWWIW.js";
import "./chunk-27YO3FKC.js";
import "./chunk-XNT3PUPA.js";
import "./chunk-JMGHYNUW.js";
import "./chunk-SFYX532J.js";
import "./chunk-XBFCIW4K.js";
import "./chunk-6TBB7UXB.js";
import "./chunk-UO3LS2M5.js";
import "./chunk-EQNT4A7P.js";
import "./chunk-ESF7LLEL.js";
import "./chunk-IOZMLQTF.js";
import "./chunk-2GP5D74I.js";
import "./chunk-R24MO4IV.js";
import "./chunk-YQBYWPBD.js";
import "./chunk-QISOH77W.js";
import "./chunk-XO5VJRK4.js";
import "./chunk-OAXPH6DL.js";
import "./chunk-O4DPVR3F.js";
import "./chunk-MATM5L52.js";
import "./chunk-4OM3EX6P.js";
import "./chunk-A22ACVMF.js";
import "./chunk-3OFVLRSL.js";
import "./chunk-UWKVAZQ6.js";
import "./chunk-FV3CMB37.js";
import "./chunk-4HL6BBWO.js";
import "./chunk-OEFH2SLX.js";
import "./chunk-I4YZGF7W.js";
import "./chunk-FZSI6IGI.js";
import "./chunk-7DLBSBVE.js";
import "./chunk-4XFEPZ26.js";
import "./chunk-FERTI5PU.js";
import "./chunk-VWCRJ6R6.js";
import "./chunk-MKNNZ33G.js";
import "./chunk-JQUWFKNU.js";
import "./chunk-UVQQJ3R6.js";
import "./chunk-QU433TMZ.js";
import "./chunk-IIAN3QNN.js";
import "./chunk-GX2FDWTU.js";
import "./chunk-TFHLTN6F.js";
import "./chunk-UDYHZLTE.js";
import "./chunk-IQBIGNPU.js";
import "./chunk-4JNOVZUK.js";
import "./chunk-ZNRXLY4R.js";
import "./chunk-JEA4MMTV.js";
import "./chunk-RG3AHHRL.js";
import "./chunk-SQSR6K2M.js";
import "./chunk-75RMBUYZ.js";
import "./chunk-TJ2I6XQT.js";
import "./chunk-EDHROVWI.js";
import "./chunk-34YPGGJT.js";
import "./chunk-NCXAKZRR.js";
import "./chunk-DUCSW4OU.js";
import "./chunk-WVDA5Z37.js";
import "./chunk-ZEEU5HOK.js";
import "./chunk-FFVIDMFN.js";
import "./chunk-XGEPEYGB.js";
import "./chunk-2T7LFOXQ.js";
import "./chunk-NCONZRBI.js";
import "./chunk-76CXRT5P.js";
import "./chunk-7Q5M7ANT.js";
import "./chunk-A4HIS5ZJ.js";
import "./chunk-OFQYIOO7.js";
import "./chunk-YF2CRSQX.js";
import {
  p,
  t
} from "./chunk-JP3KAUQB.js";
import "./chunk-INL7BDTP.js";
import "./chunk-PDEVQZ7U.js";
import "./chunk-7XXQ7762.js";
import "./chunk-DVGM5RQS.js";
import "./chunk-R6OA44DQ.js";
import "./chunk-QTYVDCOW.js";
import "./chunk-HSDU7DIL.js";
import "./chunk-FWRLW4G5.js";
import "./chunk-JNNRJ7GQ.js";
import "./chunk-E52E6T7N.js";
import {
  x
} from "./chunk-UK3I5WXR.js";
import "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-W62B63EU.js";
import "./chunk-N43PI2UO.js";
import "./chunk-O6VYMEIX.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-ZWUEORSX.js";
import "./chunk-QWNKYSI4.js";
import "./chunk-ZPYDYUP5.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import "./chunk-REIQNAQW.js";
import "./chunk-J6LQZWZI.js";
import "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import {
  k
} from "./chunk-FUPLN7UM.js";
import "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import {
  j
} from "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import "./chunk-UWG37XSU.js";
import "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import "./chunk-HLM6QCL2.js";
import "./chunk-RXYULINL.js";
import {
  h,
  l
} from "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-XQN7F674.js";
import "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import "./chunk-MJXQTGI2.js";
import "./chunk-LIZHLHNA.js";
import "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/views/2d/layers/GeoRSSLayerView2D.js
var y2 = class extends y(u) {
  constructor() {
    super(...arguments), this._graphicsViewMap = {}, this._popupTemplates = /* @__PURE__ */ new Map(), this.graphicsViews = [];
  }
  async hitTest(e2, r) {
    if (!this.graphicsViews.length)
      return null;
    const s = this.layer;
    return this.graphicsViews.reverse().map((r2) => {
      const i2 = this._popupTemplates.get(r2), o = r2.hitTest(e2);
      for (const e3 of o)
        e3.layer = s, e3.sourceLayer = s, e3.popupTemplate = i2;
      return o;
    }).flat().map((r2) => ({ type: "graphic", graphic: r2, layer: s, mapPoint: e2 }));
  }
  update(e2) {
    if (this.graphicsViews)
      for (const r of this.graphicsViews)
        r.processUpdate(e2);
  }
  attach() {
    this.handles.add([l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.featureCollections;
    }, (e2) => {
      this._clear();
      for (const { popupInfo: i2, featureSet: o, layerDefinition: t2 } of e2) {
        const e3 = x.fromJSON(o), p2 = new j(e3.features), h2 = t2.drawingInfo, m = i2 ? k.fromJSON(i2) : null, y3 = t(h2.renderer), g2 = new oe({ requestUpdateCallback: () => this.requestUpdate(), view: this.view, graphics: p2, renderer: y3, container: new i(this.view.featuresTilingScheme) });
        this._graphicsViewMap[e3.geometryType] = g2, this._popupTemplates.set(g2, m), "polygon" !== e3.geometryType || this.layer.polygonSymbol ? "polyline" !== e3.geometryType || this.layer.lineSymbol ? "point" !== e3.geometryType || this.layer.pointSymbol || (this.layer.pointSymbol = y3.symbol) : this.layer.lineSymbol = y3.symbol : this.layer.polygonSymbol = y3.symbol, this.graphicsViews.push(g2), this.container.addChild(g2.container);
      }
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.polygonSymbol;
    }, (e2) => {
      this._graphicsViewMap.polygon.renderer = new p({ symbol: e2 });
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.lineSymbol;
    }, (e2) => {
      this._graphicsViewMap.polyline.renderer = new p({ symbol: e2 });
    }, h), l(() => {
      var _a;
      return (_a = this.layer) == null ? void 0 : _a.pointSymbol;
    }, (e2) => {
      this._graphicsViewMap.point.renderer = new p({ symbol: e2 });
    }, h)], "georsslayerview");
  }
  detach() {
    this.handles.remove("georsslayerview"), this._clear();
  }
  moveStart() {
  }
  moveEnd() {
  }
  viewChange() {
    for (const e2 of this.graphicsViews)
      e2.viewChange();
  }
  _clear() {
    this.container.removeAllChildren();
    for (const e2 of this.graphicsViews)
      e2.destroy();
    this._graphicsViewMap = {}, this._popupTemplates.clear(), this.graphicsViews.length = 0;
  }
};
y2 = e([n("esri.views.2d.layers.GeoRSSLayerView2D")], y2);
var g = y2;
export {
  g as default
};
//# sourceMappingURL=GeoRSSLayerView2D-GSBGZVSW.js.map
