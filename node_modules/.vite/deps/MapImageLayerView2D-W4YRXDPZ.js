import {
  n as n3
} from "./chunk-CRF4L7JY.js";
import {
  v as v4
} from "./chunk-IZ7L4GV6.js";
import {
  a as a3
} from "./chunk-CWBK2DDW.js";
import {
  oe
} from "./chunk-L26SDFYA.js";
import "./chunk-6TQO4FJO.js";
import {
  a as a2,
  s as s5
} from "./chunk-KLOEF26H.js";
import "./chunk-DPGI5XTT.js";
import "./chunk-QPAL3PC4.js";
import "./chunk-QXJIQKLY.js";
import "./chunk-GRWIJKD6.js";
import "./chunk-WGK2FJEK.js";
import "./chunk-CNTOSDAN.js";
import "./chunk-LL5ZGGZR.js";
import "./chunk-Q5IFLFM5.js";
import {
  i as i7
} from "./chunk-VPBDKONJ.js";
import {
  y as y3
} from "./chunk-L4LV52OG.js";
import {
  u
} from "./chunk-PCWW275T.js";
import "./chunk-EWYYYS2T.js";
import "./chunk-7N2Z7KNR.js";
import "./chunk-DBT4KOKX.js";
import "./chunk-4Y3VLNR2.js";
import "./chunk-MU26VSON.js";
import "./chunk-5HIF32ZE.js";
import "./chunk-57QYUXCA.js";
import "./chunk-J42Y5N2P.js";
import "./chunk-DWAZ7HI7.js";
import "./chunk-POI555WS.js";
import "./chunk-JHLU6RPN.js";
import "./chunk-EPMXCACW.js";
import "./chunk-UCPKJYXN.js";
import "./chunk-KFLNKWNF.js";
import "./chunk-KUO7OCMN.js";
import "./chunk-KG5RWWIW.js";
import "./chunk-27YO3FKC.js";
import "./chunk-XNT3PUPA.js";
import "./chunk-JMGHYNUW.js";
import "./chunk-SFYX532J.js";
import "./chunk-XBFCIW4K.js";
import "./chunk-6TBB7UXB.js";
import "./chunk-UO3LS2M5.js";
import "./chunk-EQNT4A7P.js";
import "./chunk-ESF7LLEL.js";
import "./chunk-IOZMLQTF.js";
import "./chunk-2GP5D74I.js";
import "./chunk-R24MO4IV.js";
import "./chunk-YQBYWPBD.js";
import "./chunk-QISOH77W.js";
import "./chunk-XO5VJRK4.js";
import "./chunk-OAXPH6DL.js";
import "./chunk-O4DPVR3F.js";
import "./chunk-MATM5L52.js";
import "./chunk-4OM3EX6P.js";
import {
  d,
  s as s4
} from "./chunk-E24JZEAW.js";
import "./chunk-A22ACVMF.js";
import "./chunk-3OFVLRSL.js";
import "./chunk-UWKVAZQ6.js";
import "./chunk-FV3CMB37.js";
import {
  c as c2
} from "./chunk-GKDTZQDA.js";
import {
  i as i4
} from "./chunk-E5VMCRLK.js";
import "./chunk-4HL6BBWO.js";
import {
  n as n2
} from "./chunk-OFTOCPN5.js";
import {
  i as i3,
  r as r4
} from "./chunk-PHXBWNSB.js";
import "./chunk-OEFH2SLX.js";
import "./chunk-I4YZGF7W.js";
import "./chunk-FZSI6IGI.js";
import "./chunk-7DLBSBVE.js";
import "./chunk-4XFEPZ26.js";
import "./chunk-FERTI5PU.js";
import "./chunk-VWCRJ6R6.js";
import "./chunk-MKNNZ33G.js";
import "./chunk-JQUWFKNU.js";
import "./chunk-UVQQJ3R6.js";
import "./chunk-QU433TMZ.js";
import "./chunk-IIAN3QNN.js";
import "./chunk-GX2FDWTU.js";
import "./chunk-TFHLTN6F.js";
import "./chunk-UDYHZLTE.js";
import "./chunk-IQBIGNPU.js";
import "./chunk-4JNOVZUK.js";
import "./chunk-ZNRXLY4R.js";
import "./chunk-JEA4MMTV.js";
import "./chunk-RG3AHHRL.js";
import "./chunk-SQSR6K2M.js";
import "./chunk-75RMBUYZ.js";
import "./chunk-TJ2I6XQT.js";
import "./chunk-EDHROVWI.js";
import "./chunk-34YPGGJT.js";
import {
  v as v3
} from "./chunk-NCXAKZRR.js";
import "./chunk-DUCSW4OU.js";
import {
  f,
  i as i2,
  s as s3
} from "./chunk-WVDA5Z37.js";
import "./chunk-OOOPZLJE.js";
import "./chunk-U2WD23Z5.js";
import "./chunk-ZEEU5HOK.js";
import "./chunk-FFVIDMFN.js";
import "./chunk-XGEPEYGB.js";
import "./chunk-2T7LFOXQ.js";
import "./chunk-NCONZRBI.js";
import "./chunk-76CXRT5P.js";
import "./chunk-7Q5M7ANT.js";
import "./chunk-A4HIS5ZJ.js";
import "./chunk-OFQYIOO7.js";
import {
  t as t3
} from "./chunk-YF2CRSQX.js";
import "./chunk-INL7BDTP.js";
import "./chunk-7XXQ7762.js";
import "./chunk-DVGM5RQS.js";
import "./chunk-QTYVDCOW.js";
import {
  g
} from "./chunk-YGVY4EIZ.js";
import "./chunk-HSDU7DIL.js";
import "./chunk-FWRLW4G5.js";
import "./chunk-E52E6T7N.js";
import "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-W62B63EU.js";
import "./chunk-N43PI2UO.js";
import "./chunk-O6VYMEIX.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-ZWUEORSX.js";
import {
  T
} from "./chunk-US2IWMHE.js";
import "./chunk-QWNKYSI4.js";
import "./chunk-ZPYDYUP5.js";
import {
  i as i5
} from "./chunk-CYI2FLSH.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import {
  $
} from "./chunk-WJCI2CGX.js";
import "./chunk-REIQNAQW.js";
import {
  g as g2
} from "./chunk-J6LQZWZI.js";
import {
  y as y2
} from "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import "./chunk-FUPLN7UM.js";
import "./chunk-376OPXM4.js";
import {
  i as i6
} from "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import {
  j as j2
} from "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import {
  i
} from "./chunk-YWAQYJRC.js";
import {
  t as t2
} from "./chunk-B356PXLT.js";
import {
  c,
  v as v2
} from "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import {
  w2 as w
} from "./chunk-UWG37XSU.js";
import {
  k2 as k
} from "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import {
  r as r3
} from "./chunk-HLM6QCL2.js";
import {
  o
} from "./chunk-RXYULINL.js";
import {
  a,
  l as l2
} from "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-XQN7F674.js";
import {
  U
} from "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import {
  l
} from "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import {
  E,
  j,
  x
} from "./chunk-MJXQTGI2.js";
import {
  s as s2
} from "./chunk-LIZHLHNA.js";
import {
  r as r2,
  v
} from "./chunk-BTUHYGXO.js";
import {
  s2 as s
} from "./chunk-UA3YPL2R.js";
import {
  has
} from "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  r,
  t
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/rest/operations/identify.js
var o2 = (e2) => e2.spatialReference.wkid || JSON.stringify(e2.spatialReference);
function l3(r5, i8) {
  const { dpi: n4, gdbVersion: s6, geometry: l4, geometryPrecision: f5, height: p2, layerOption: m4, mapExtent: y5, maxAllowableOffset: c3, returnFieldName: u3, returnGeometry: d2, returnUnformattedValues: g3, returnZ: x2, spatialReference: b, timeExtent: h, tolerance: E2, width: O } = r5.toJSON(), { dynamicLayers: S, layerDefs: j3, layerIds: N } = a4(r5), J = i8 && r(i8.geometry) ? i8.geometry : null, R = { geometryPrecision: f5, maxAllowableOffset: c3, returnFieldName: u3, returnGeometry: d2, returnUnformattedValues: g3, returnZ: x2, tolerance: E2 }, $2 = J && J.toJSON() || l4;
  if (R.imageDisplay = `${O},${p2},${n4}`, s6 && (R.gdbVersion = s6), $2 && (delete $2.spatialReference, R.geometry = JSON.stringify($2), R.geometryType = c($2)), b ? R.sr = b.wkid || JSON.stringify(b) : $2 && $2.spatialReference ? R.sr = o2($2) : y5 && y5.spatialReference && (R.sr = o2(y5)), R.time = h ? [h.start, h.end].join(",") : null, y5) {
    const { xmin: e2, ymin: r6, xmax: t4, ymax: i9 } = y5;
    R.mapExtent = `${e2},${r6},${t4},${i9}`;
  }
  return j3 && (R.layerDefs = j3), S && !j3 && (R.dynamicLayers = S), R.layers = "popup" === m4 ? "visible" : m4, N && !S && (R.layers += `:${N.join(",")}`), R;
}
function a4(r5) {
  var _a, _b;
  const { mapExtent: t4, floors: o3, width: l4, sublayers: a7, layerIds: p2, layerOption: m4, gdbVersion: y5 } = r5, c3 = (_b = (_a = a7 == null ? void 0 : a7.find((e2) => null != e2.layer)) == null ? void 0 : _a.layer) == null ? void 0 : _b.serviceSublayers, u3 = "popup" === m4, d2 = {}, g3 = i3({ extent: t4, width: l4, spatialReference: t4 == null ? void 0 : t4.spatialReference }), x2 = [], b = (e2) => {
    const r6 = 0 === g3, t5 = 0 === e2.minScale || g3 <= e2.minScale, i8 = 0 === e2.maxScale || g3 >= e2.maxScale;
    if (e2.visible && (r6 || t5 && i8))
      if (e2.sublayers)
        e2.sublayers.forEach(b);
      else {
        if (false === (p2 == null ? void 0 : p2.includes(e2.id)) || u3 && (!e2.popupTemplate || !e2.popupEnabled))
          return;
        x2.unshift(e2);
      }
  };
  if (a7 == null ? void 0 : a7.forEach(b), a7 && !x2.length)
    d2.layerIds = [];
  else {
    const r6 = i4(x2, c3, y5), t5 = x2.map((e2) => {
      const r7 = n2(o3, e2);
      return e2.toExportImageJSON(r7);
    });
    if (r6)
      d2.dynamicLayers = JSON.stringify(t5);
    else {
      if (a7) {
        let e2 = x2.map(({ id: e3 }) => e3);
        p2 && (e2 = e2.filter((e3) => p2.includes(e3))), d2.layerIds = e2;
      } else
        (p2 == null ? void 0 : p2.length) && (d2.layerIds = p2);
      const r7 = f2(o3, x2);
      if (r(r7) && r7.length) {
        const e2 = {};
        for (const t6 of r7)
          t6.definitionExpression && (e2[t6.id] = t6.definitionExpression);
        Object.keys(e2).length && (d2.layerDefs = JSON.stringify(e2));
      }
    }
  }
  return d2;
}
function f2(e2, t4) {
  const i8 = !!(e2 == null ? void 0 : e2.length), s6 = t4.filter((e3) => null != e3.definitionExpression || i8 && null != e3.floorInfo);
  return s6.length ? s6.map((t5) => {
    const i9 = n2(e2, t5), s7 = t3(i9, t5.definitionExpression);
    return { id: t5.id, definitionExpression: s7 };
  }) : null;
}

// node_modules/@arcgis/core/rest/support/IdentifyParameters.js
var m;
var a5 = m = class extends l {
  constructor(t4) {
    super(t4), this.dpi = 96, this.floors = null, this.gdbVersion = null, this.geometry = null, this.geometryPrecision = null, this.height = 400, this.layerIds = null, this.layerOption = "top", this.mapExtent = null, this.maxAllowableOffset = null, this.returnFieldName = true, this.returnGeometry = false, this.returnM = false, this.returnUnformattedValues = true, this.returnZ = false, this.spatialReference = null, this.sublayers = null, this.timeExtent = null, this.tolerance = null, this.width = 400;
  }
  static from(t4) {
    return v(m, t4);
  }
};
e([y({ type: Number, json: { write: true } })], a5.prototype, "dpi", void 0), e([y()], a5.prototype, "floors", void 0), e([y({ type: String, json: { write: true } })], a5.prototype, "gdbVersion", void 0), e([y({ types: i, json: { read: v2, write: true } })], a5.prototype, "geometry", void 0), e([y({ type: Number, json: { write: true } })], a5.prototype, "geometryPrecision", void 0), e([y({ type: Number, json: { write: true } })], a5.prototype, "height", void 0), e([y({ type: [Number], json: { write: true } })], a5.prototype, "layerIds", void 0), e([y({ type: ["top", "visible", "all", "popup"], json: { write: true } })], a5.prototype, "layerOption", void 0), e([y({ type: w, json: { write: true } })], a5.prototype, "mapExtent", void 0), e([y({ type: Number, json: { write: true } })], a5.prototype, "maxAllowableOffset", void 0), e([y({ type: Boolean, json: { write: true } })], a5.prototype, "returnFieldName", void 0), e([y({ type: Boolean, json: { write: true } })], a5.prototype, "returnGeometry", void 0), e([y({ type: Boolean, json: { write: true } })], a5.prototype, "returnM", void 0), e([y({ type: Boolean, json: { write: true } })], a5.prototype, "returnUnformattedValues", void 0), e([y({ type: Boolean, json: { write: true } })], a5.prototype, "returnZ", void 0), e([y({ type: k, json: { write: true } })], a5.prototype, "spatialReference", void 0), e([y()], a5.prototype, "sublayers", void 0), e([y({ type: T, json: { write: true } })], a5.prototype, "timeExtent", void 0), e([y({ type: Number, json: { write: true } })], a5.prototype, "tolerance", void 0), e([y({ type: Number, json: { write: true } })], a5.prototype, "width", void 0), a5 = m = e([n("esri.rest.support.IdentifyParameters")], a5);
var u2 = a5;

// node_modules/@arcgis/core/rest/support/IdentifyResult.js
var m2 = class extends l {
  constructor(r5) {
    super(r5), this.displayFieldName = null, this.feature = null, this.layerId = null, this.layerName = null;
  }
  readFeature(r5, t4) {
    return g2.fromJSON({ attributes: { ...t4.attributes }, geometry: { ...t4.geometry } });
  }
  writeFeature(r5, e2) {
    if (!r5)
      return;
    const { attributes: t4, geometry: s6 } = r5;
    t4 && (e2.attributes = { ...t4 }), r(s6) && (e2.geometry = s6.toJSON(), e2.geometryType = t2.toJSON(s6.type));
  }
};
e([y({ type: String, json: { write: true } })], m2.prototype, "displayFieldName", void 0), e([y({ type: g2 })], m2.prototype, "feature", void 0), e([o("feature", ["attributes", "geometry"])], m2.prototype, "readFeature", null), e([r3("feature")], m2.prototype, "writeFeature", null), e([y({ type: Number, json: { write: true } })], m2.prototype, "layerId", void 0), e([y({ type: String, json: { write: true } })], m2.prototype, "layerName", void 0), m2 = e([n("esri.rest.support.IdentifyResult")], m2);
var y4 = m2;

// node_modules/@arcgis/core/rest/identify.js
async function f3(u3, i8, f5) {
  const c3 = (i8 = a6(i8)).geometry ? [i8.geometry] : [], l4 = f(u3);
  return l4.path += "/identify", v3(c3).then((e2) => {
    const t4 = l3(i8, { geometry: e2 && e2[0] }), u4 = s3({ ...l4.query, f: "json", ...t4 }), a7 = i2(u4, f5);
    return U(l4.path, a7).then(m3).then((r5) => p(r5, i8.sublayers));
  });
}
function m3(r5) {
  const e2 = r5.data;
  return e2.results = e2.results || [], e2.exceededTransferLimit = Boolean(e2.exceededTransferLimit), e2.results = e2.results.map((r6) => y4.fromJSON(r6)), e2;
}
function a6(r5) {
  return r5 = u2.from(r5);
}
function p(r5, e2) {
  if (!(e2 == null ? void 0 : e2.length))
    return r5;
  const t4 = /* @__PURE__ */ new Map();
  function o3(r6) {
    t4.set(r6.id, r6), r6.sublayers && r6.sublayers.forEach(o3);
  }
  e2.forEach(o3);
  for (const s6 of r5.results)
    s6.feature.sourceLayer = t4.get(s6.layerId);
  return r5;
}

// node_modules/@arcgis/core/views/layers/MapImageLayerView.js
var _ = null;
var F = (F2) => {
  let I = class extends F2 {
    constructor() {
      super(...arguments), this._featuresResolutions = /* @__PURE__ */ new WeakMap(), this.highlightGraphics = new i5(), this.updateHighlightedFeatures = x(async (e2) => {
        this.destroyed || this.updatingHandles.addPromise(this._updateHighlightedFeaturesGeometries(e2).catch(() => {
        }));
      });
    }
    initialize() {
      this.exportImageParameters = new c2({ layer: this.layer }), this.handles.add([a(() => this.highlightGraphics, "change", (e2) => {
        this.updatingHandles.addPromise(this._updateHighlightedFeaturesSymbols(e2.added).catch(() => {
        })), this.updateHighlightedFeatures(this._highlightGeometriesResolution);
      })]);
    }
    destroy() {
      this.exportImageParameters.destroy(), this.exportImageParameters = null;
    }
    get exportImageVersion() {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.commitProperty("version"), this.commitProperty("timeExtent"), (this._get("exportImageVersion") || 0) + 1;
    }
    async fetchPopupFeatures(e2, r5) {
      var _a, _b, _c, _d, _e, _f;
      const { layer: s6 } = this;
      if (!e2)
        throw new s2("mapimagelayer:fetchPopupFeatures", "Nothing to fetch without area", { layer: s6 });
      const i8 = (_c = (_b = (_a = this.layer.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsQuery) != null ? _c : true;
      if (!(((_f = (_e = (_d = this.layer.capabilities) == null ? void 0 : _d.operations) == null ? void 0 : _e.supportsIdentify) != null ? _f : true) && this.layer.version >= 10.5) && !i8)
        throw new s2("mapimagelayer:fetchPopupFeatures-not-supported", "query operation is disabled for this service", { layer: s6 });
      return i8 ? this._fetchPopupFeaturesUsingQueries(e2, r5) : this._fetchPopupFeaturesUsingIdentify(e2, r5);
    }
    canResume() {
      var _a;
      return !!super.canResume() && !((_a = this.timeExtent) == null ? void 0 : _a.isEmpty);
    }
    async _updateHighlightedFeaturesSymbols(e2) {
      for (const t4 of e2) {
        const e3 = "renderer" in t4.sourceLayer && t4.sourceLayer.renderer;
        "geometryType" in t4.sourceLayer && "point" === t4.sourceLayer.geometryType && e3 && "getSymbolAsync" in e3 && e3.getSymbolAsync(t4).then(async (r5) => {
          var _a;
          let s6 = "width" in r5 && "height" in r5 && null != r5.width && null != r5.height ? Math.max(r5.width, r5.height) : "size" in r5 ? r5.size : null;
          const i8 = "visualVariables" in e3 && ((_a = e3.visualVariables) == null ? void 0 : _a.find((e4) => "size" === e4.type));
          i8 && (_ || (_ = (await import("./visualVariableUtils-VEK2HJVO.js")).getSize), s6 = _(i8, t4, { view: this.view.type, scale: this.view.scale, shape: "simple-marker" === r5.type ? r5.style : null })), this.highlightGraphics.includes(t4) && (t4.symbol = new y2({ style: "square", size: s6, xoffset: "xoffset" in r5 ? r5.xoffset : 0, yoffset: "yoffset" in r5 ? r5.yoffset : 0 }), t4.visible = true, this.highlightGraphicUpdated(t4, "symbol"));
        });
      }
    }
    async _updateHighlightedFeaturesGeometries(e2) {
      this._highlightGeometriesResolution = e2;
      const t4 = this.highlightGraphics;
      if (!t4.length || !this.layer.capabilities.operations.supportsQuery)
        return;
      const s6 = this._getTargetResolution(e2), i8 = /* @__PURE__ */ new Map();
      for (const n4 of t4)
        if (!this._featuresResolutions.has(n4) || this._featuresResolutions.get(n4) > s6) {
          const e3 = n4.sourceLayer;
          r2(i8, e3, () => /* @__PURE__ */ new Map()).set(n4.getObjectId(), n4);
        }
      const o3 = Array.from(i8, ([e3, t5]) => {
        const r5 = e3.createQuery();
        return r5.objectIds = [...t5.keys()], r5.outFields = [e3.objectIdField], r5.returnGeometry = true, r5.maxAllowableOffset = s6, r5.outSpatialReference = this.view.spatialReference, e3.queryFeatures(r5);
      }), a7 = await Promise.all(o3);
      if (!this.destroyed)
        for (const { features: r5 } of a7)
          for (const e3 of r5) {
            const t5 = e3.sourceLayer, r6 = i8.get(t5).get(e3.getObjectId());
            r6 && this.highlightGraphics.includes(r6) && (r6.geometry = e3.geometry, this.highlightGraphicUpdated(r6, "geometry"), this._featuresResolutions.set(r6, s6));
          }
    }
    _getTargetResolution(e2) {
      const t4 = e2 * $(this.view.spatialReference), r5 = t4 / 16;
      return r5 <= 10 ? 0 : e2 / t4 * r5;
    }
    async _fetchPopupFeaturesUsingIdentify(e2, t4) {
      const r5 = await this._createIdentifyParameters(e2, t4);
      if (t(r5))
        return [];
      const { results: i8 } = await f3(this.layer.parsedUrl, r5);
      return i8.map((e3) => e3.feature);
    }
    async _createIdentifyParameters(e2, t4) {
      const { floors: r5, spatialReference: s6, scale: o3 } = this.view, a7 = r(t4) ? t4.event : null, n4 = await this._collectPopupProviders(this.layer.sublayers, o3, t4);
      if (!n4.length)
        return null;
      await Promise.all(n4.map(({ sublayer: e3 }) => e3.load().catch(() => {
      })));
      const l4 = Math.min(has("mapimagelayer-popup-identify-max-tolerance"), this.layer.allSublayers.reduce((e3, t5) => t5.renderer ? s5({ renderer: t5.renderer, event: a7 }) : e3, 2)), p2 = this.createFetchPopupFeaturesQueryGeometry(e2, l4), u3 = r4(o3, s6), m4 = Math.round(p2.width / u3), y5 = new w({ xmin: p2.center.x - u3 * m4, ymin: p2.center.y - u3 * m4, xmax: p2.center.x + u3 * m4, ymax: p2.center.y + u3 * m4, spatialReference: p2.spatialReference });
      return new u2({ floors: r5, gdbVersion: this.layer.gdbVersion, geometry: e2, height: m4, layerOption: "popup", mapExtent: y5, returnGeometry: true, spatialReference: s6, sublayers: this.layer.sublayers, timeExtent: this.timeExtent, tolerance: l4, width: m4 });
    }
    async _fetchPopupFeaturesUsingQueries(e2, t4) {
      const r5 = await this._collectPopupProviders(this.layer.sublayers, this.view.scale, t4), s6 = r(t4) ? t4.event : null, o3 = r5.map(async ({ sublayer: t5, popupTemplate: r6 }) => {
        var _a, _b;
        await t5.load().catch(() => {
        });
        const o4 = t5.createQuery(), a7 = s5({ renderer: t5.renderer, event: s6 }), n4 = this.createFetchPopupFeaturesQueryGeometry(e2, a7);
        if (o4.geometry = n4, o4.outFields = await d(t5, r6), o4.timeExtent = this.timeExtent, "floors" in this.view) {
          const e3 = (_b = (_a = this.view) == null ? void 0 : _a.floors) == null ? void 0 : _b.clone(), r7 = n2(e3, t5);
          r(r7) && (o4.where = o4.where ? `(${o4.where}) AND (${r7})` : r7);
        }
        const l4 = this._getTargetResolution(n4.width / a7), p2 = await this._loadArcadeModules(r6), u3 = "point" === t5.geometryType || p2 && p2.arcadeUtils.hasGeometryOperations(r6);
        u3 || (o4.maxAllowableOffset = l4);
        const { features: h } = await t5.queryFeatures(o4), c3 = u3 ? 0 : l4;
        for (const e3 of h)
          this._featuresResolutions.set(e3, c3);
        return h;
      });
      return (await E(o3)).reverse().reduce((e3, t5) => t5.value ? [...e3, ...t5.value] : e3, []).filter((e3) => null != e3);
    }
    async _collectPopupProviders(e2, t4, r5) {
      const s6 = [], o3 = async (e3) => {
        const a8 = 0 === e3.minScale || t4 <= e3.minScale, n4 = 0 === e3.maxScale || t4 >= e3.maxScale;
        if (e3.visible && a8 && n4) {
          if (e3.sublayers)
            e3.sublayers.forEach(o3);
          else if (e3.popupEnabled) {
            const t5 = s4(e3, { ...r5, defaultPopupTemplateEnabled: false });
            r(t5) && s6.unshift({ sublayer: e3, popupTemplate: t5 });
          }
        }
      }, a7 = e2.toArray().reverse().map(o3);
      return await Promise.all(a7), s6;
    }
    _loadArcadeModules(e2) {
      var _a;
      if (((_a = e2.expressionInfos) == null ? void 0 : _a.length) || Array.isArray(e2.content) && e2.content.some((e3) => "expression" === e3.type))
        return i6();
    }
  };
  return e([y()], I.prototype, "highlightGraphics", void 0), e([y()], I.prototype, "exportImageParameters", void 0), e([y({ readOnly: true })], I.prototype, "exportImageVersion", null), e([y()], I.prototype, "layer", void 0), e([y()], I.prototype, "suspended", void 0), e([y(g)], I.prototype, "timeExtent", void 0), I = e([n("esri.views.layers.MapImageLayerView")], I), I;
};

// node_modules/@arcgis/core/views/2d/layers/MapImageLayerView2D.js
var f4 = class extends F(i7(y3(u))) {
  update(e2) {
    this.strategy.update(e2).catch((e3) => {
      j(e3) || s.getLogger(this.declaredClass).error(e3);
    }), e2.stationary && this.updateHighlightedFeatures(e2.state.resolution), this._highlightView.processUpdate(e2);
  }
  attach() {
    const { imageMaxWidth: e2, imageMaxHeight: t4, version: i8 } = this.layer, r5 = i8 >= 10.3, s6 = i8 >= 10;
    this._bitmapContainer = new a3(), this.container.addChild(this._bitmapContainer), this._highlightView = new oe({ view: this.view, graphics: this.highlightGraphics, requestUpdateCallback: () => this.requestUpdate(), container: new n3(this.view.featuresTilingScheme) }), this.container.addChild(this._highlightView.container), this.strategy = new v4({ container: this._bitmapContainer, fetchSource: this.fetchImageBitmap.bind(this), requestUpdate: this.requestUpdate.bind(this), imageMaxWidth: e2, imageMaxHeight: t4, imageRotationSupported: r5, imageNormalizationSupported: s6, hidpi: true }), this.handles.add(l2(() => this.exportImageVersion, () => this.requestUpdate()), "exportImageVersion"), this.handles.add(l2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.floors;
    }, () => this.requestUpdate()), "view.floors"), this.requestUpdate();
  }
  detach() {
    this.handles.remove("exportImageVersion"), this.handles.remove("view.floors"), this.strategy.destroy(), this.container.removeAllChildren(), this._bitmapContainer.removeAllChildren(), this._highlightView.destroy();
  }
  moveStart() {
  }
  viewChange() {
  }
  moveEnd() {
    this.requestUpdate();
  }
  highlight(e2) {
    let r5 = null;
    if (e2 instanceof g2 ? r5 = [e2] : j2.isCollection(e2) && e2.length > 0 ? r5 = e2.toArray() : Array.isArray(e2) && e2.length > 0 && (r5 = e2), r5 = r5 == null ? void 0 : r5.filter(Boolean), !r5 || !r5.length)
      return { remove: () => {
      } };
    for (const t4 of r5)
      "geometryType" in t4.sourceLayer && "point" === t4.sourceLayer.geometryType && (t4.visible = false);
    return this.highlightGraphics.addMany(r5), { remove: () => {
      this.highlightGraphics.removeMany(r5);
    } };
  }
  supportsSpatialReference(e2) {
    return this.layer.serviceSupportsSpatialReference(e2);
  }
  createFetchPopupFeaturesQueryGeometry(e2, t4) {
    return a2(e2, t4, this.view);
  }
  async doRefresh() {
    this.requestUpdate();
  }
  isUpdating() {
    return this.strategy.updating || this.updateRequested;
  }
  highlightGraphicUpdated(e2, t4) {
    this._highlightView.graphicUpdateHandler({ graphic: e2, property: t4 });
  }
  fetchImage(e2, t4, i8, r5) {
    return this.layer.fetchImage(e2, t4, i8, { timeExtent: this.timeExtent, floors: this.view.floors, ...r5 });
  }
  fetchImageBitmap(e2, t4, i8, r5) {
    return this.layer.fetchImageBitmap(e2, t4, i8, { timeExtent: this.timeExtent, floors: this.view.floors, ...r5 });
  }
};
e([y()], f4.prototype, "strategy", void 0), e([y()], f4.prototype, "updating", void 0), f4 = e([n("esri.views.2d.layers.MapImageLayerView2D")], f4);
var v5 = f4;
export {
  v5 as default
};
//# sourceMappingURL=MapImageLayerView2D-W4YRXDPZ.js.map
