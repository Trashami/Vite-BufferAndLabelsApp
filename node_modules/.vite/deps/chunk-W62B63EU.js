import {
  r
} from "./chunk-NAN5J6QS.js";
import {
  l
} from "./chunk-RAX2HD42.js";
import {
  l as l2
} from "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n,
  y as y2
} from "./chunk-OOLCFNXJ.js";
import {
  T
} from "./chunk-BTUHYGXO.js";
import {
  y
} from "./chunk-HVKDYDPP.js";

// node_modules/@arcgis/core/rest/support/ColorRamp.js
var e2 = class extends l2 {
  constructor(r2) {
    super(r2), this.type = null;
  }
};
e([y2({ readOnly: true, json: { read: false, write: true } })], e2.prototype, "type", void 0), e2 = e([n("esri.rest.support.ColorRamp")], e2);
var p = e2;

// node_modules/@arcgis/core/rest/support/AlgorithmicColorRamp.js
var m;
var c = m = class extends p {
  constructor(o) {
    super(o), this.algorithm = null, this.fromColor = null, this.toColor = null, this.type = "algorithmic";
  }
  clone() {
    return new m({ fromColor: y(this.fromColor), toColor: y(this.toColor), algorithm: this.algorithm });
  }
};
e([r({ esriCIELabAlgorithm: "cie-lab", esriHSVAlgorithm: "hsv", esriLabLChAlgorithm: "lab-lch" })], c.prototype, "algorithm", void 0), e([y2({ type: l, json: { type: [T], write: true } })], c.prototype, "fromColor", void 0), e([y2({ type: l, json: { type: [T], write: true } })], c.prototype, "toColor", void 0), e([y2({ type: ["algorithmic"] })], c.prototype, "type", void 0), c = m = e([n("esri.rest.support.AlgorithmicColorRamp")], c);
var a = c;

// node_modules/@arcgis/core/rest/support/MultipartColorRamp.js
var c2;
var m2 = c2 = class extends p {
  constructor(o) {
    super(o), this.colorRamps = null, this.type = "multipart";
  }
  clone() {
    return new c2({ colorRamps: y(this.colorRamps) });
  }
};
e([y2({ type: [a], json: { write: true } })], m2.prototype, "colorRamps", void 0), e([y2({ type: ["multipart"] })], m2.prototype, "type", void 0), m2 = c2 = e([n("esri.rest.support.MultipartColorRamp")], m2);
var a2 = m2;

// node_modules/@arcgis/core/rest/support/colorRamps.js
var m3 = { key: "type", base: p, typeMap: { algorithmic: a, multipart: a2 } };
function p2(o) {
  return o && o.type ? "algorithmic" === o.type ? a.fromJSON(o) : "multipart" === o.type ? a2.fromJSON(o) : null : null;
}

export {
  a2 as a,
  m3 as m,
  p2 as p
};
//# sourceMappingURL=chunk-W62B63EU.js.map
