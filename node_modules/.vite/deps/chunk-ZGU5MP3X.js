import {
  e as e2
} from "./chunk-QFWDN2OM.js";
import {
  a
} from "./chunk-372DRRBO.js";
import {
  r
} from "./chunk-X7GQR2IY.js";
import {
  o as o3
} from "./chunk-ZSBQER52.js";
import {
  d
} from "./chunk-GDICPMRK.js";
import {
  n as n2
} from "./chunk-S6WNSMC7.js";
import {
  e as e3
} from "./chunk-JPRTIOCM.js";
import {
  i2 as i,
  t as t2
} from "./chunk-AMNM3DGI.js";
import {
  t
} from "./chunk-RNRS2JL4.js";
import {
  h
} from "./chunk-SBPLVEUA.js";
import {
  u
} from "./chunk-3IISYLTT.js";
import {
  v
} from "./chunk-7QNA4ADD.js";
import {
  o as o2
} from "./chunk-MYQCUAHK.js";
import {
  e
} from "./chunk-C6PUUIY2.js";
import {
  n,
  o
} from "./chunk-ZLTZ3KAT.js";
import {
  O
} from "./chunk-RUM3DXFX.js";

// node_modules/@arcgis/core/chunks/ColorMaterial.glsl.js
function v2(v3) {
  const f2 = new o(), { vertex: C, fragment: y } = f2, j = v3.output === h.Depth, L = v3.hasMultipassTerrain && (v3.output === h.Color || v3.output === h.Alpha);
  return v(C, v3), f2.include(r, v3), f2.include(e2, v3), f2.include(d, v3), f2.attributes.add(O.POSITION, "vec3"), f2.varyings.add("vpos", "vec3"), L && f2.varyings.add("depth", "float"), j && (f2.include(o3, v3), i(f2), t2(f2)), C.code.add(n`
    void main(void) {
      vpos = position;
      forwardNormalizedVertexColor();
      forwardObjectAndLayerIdColor();
      ${L ? "depth = (view * vec4(vpos, 1.0)).z;" : ""}
      gl_Position = ${j ? n`transformPositionWithDepth(proj, view, vpos, nearFar, linearDepth);` : n`transformPosition(proj, view, vpos);`}
    }
  `), f2.include(u, v3), L && f2.include(n2, v3), y.include(e3), y.uniforms.add(new e("eColor", (e4) => e4.color)), v3.output === h.Highlight && f2.include(a, v3), y.code.add(n`
  void main() {
    discardBySlice(vpos);
    ${L ? "terrainDepthTest(gl_FragCoord, depth);" : ""}
    vec4 fColor = ${v3.hasVertexColors ? "vColor * eColor;" : "eColor;"}

    if (fColor.a < ${n.float(t)}) {
      discard;
    }

    ${v3.output === h.Alpha ? n`gl_FragColor = vec4(fColor.a);` : ""}

    ${v3.output === h.Color ? n`gl_FragColor = highlightSlice(fColor, vpos); ${v3.transparencyPassType === o2.Color ? "gl_FragColor = premultiplyAlpha(gl_FragColor);" : ""}` : ""}
    ${v3.output === h.Highlight ? n`outputHighlight();` : ""};
    ${v3.output === h.Depth ? n`outputDepth(linearDepth);` : ""};
    ${v3.output === h.ObjectAndLayerIdColor ? n`outputObjectAndLayerIdColor();` : ""}
  }
  `), f2;
}
var f = Object.freeze(Object.defineProperty({ __proto__: null, build: v2 }, Symbol.toStringTag, { value: "Module" }));

export {
  v2 as v,
  f
};
//# sourceMappingURL=chunk-ZGU5MP3X.js.map
