import {
  e as e3
} from "./chunk-FGA4AGTH.js";
import {
  e as e2
} from "./chunk-6ZCPLPAF.js";
import {
  a,
  i
} from "./chunk-ZLTZ3KAT.js";
import {
  e
} from "./chunk-FZQZIM7U.js";
import {
  c
} from "./chunk-RT3T2K4S.js";
import {
  o
} from "./chunk-3LR5O4WA.js";
import {
  f,
  n
} from "./chunk-D4V6J5BT.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Float3DrawUniform.js
var o2 = class extends i {
  constructor(r, o4) {
    super(r, "vec3", a.Draw, (e4, s, t, i2) => e4.setUniform3fv(r, o4(s, t, i2)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Matrix4DrawUniform.js
var o3 = class extends i {
  constructor(r, o4) {
    super(r, "mat4", a.Draw, (e4, s, t) => e4.setUniformMatrix4fv(r, o4(s, t)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js
function c2(r, e4) {
  e4.instancedDoublePrecision ? r.constants.add("cameraPosition", "vec3", f) : r.uniforms.add(new o2("cameraPosition", (r2, e5) => o(w, e5.camera.viewInverseTransposeMatrix[3] - r2.origin[0], e5.camera.viewInverseTransposeMatrix[7] - r2.origin[1], e5.camera.viewInverseTransposeMatrix[11] - r2.origin[2])));
}
function v(e4, i2) {
  if (!i2.instancedDoublePrecision)
    return void e4.uniforms.add([new e3("proj", (r, e5) => e5.camera.projectionMatrix), new o3("view", (e5, a2) => c(f2, a2.camera.viewMatrix, e5.origin)), new o2("localOrigin", (r) => r.origin)]);
  const o4 = (r) => o(w, r.camera.viewInverseTransposeMatrix[3], r.camera.viewInverseTransposeMatrix[7], r.camera.viewInverseTransposeMatrix[11]);
  e4.uniforms.add([new e3("proj", (r, e5) => e5.camera.projectionMatrix), new e3("view", (e5, a2) => c(f2, a2.camera.viewMatrix, o4(a2))), new e2("localOrigin", (r, e5) => o4(e5))]);
}
var f2 = e();
var w = n();
function d(r) {
  r.uniforms.add(new e3("viewNormal", (r2, e4) => e4.camera.viewInverseTransposeMatrix));
}

export {
  o2 as o,
  c2 as c,
  v,
  d
};
//# sourceMappingURL=chunk-7QNA4ADD.js.map
