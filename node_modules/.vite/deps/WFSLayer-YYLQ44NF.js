import {
  C,
  D,
  W,
  X,
  z
} from "./chunk-7JBWIBEU.js";
import "./chunk-YINMVLPI.js";
import "./chunk-L6PG65Z3.js";
import {
  l as l2,
  o as o3
} from "./chunk-WKJPACEU.js";
import "./chunk-OP2HNSVZ.js";
import "./chunk-34YPGGJT.js";
import "./chunk-FFVIDMFN.js";
import {
  c as c3
} from "./chunk-TZTENXCS.js";
import {
  n as n4,
  p as p4
} from "./chunk-RQPDRERN.js";
import "./chunk-MBLYC2KR.js";
import "./chunk-XGEPEYGB.js";
import {
  i as i2,
  j as j2
} from "./chunk-2T7LFOXQ.js";
import "./chunk-NCONZRBI.js";
import "./chunk-76CXRT5P.js";
import {
  s as s2
} from "./chunk-LZKCWJVH.js";
import "./chunk-7Q5M7ANT.js";
import {
  a as a2
} from "./chunk-LPRQBCQL.js";
import "./chunk-QR4K7IDQ.js";
import {
  o as o2
} from "./chunk-7N45W3EA.js";
import {
  p as p5
} from "./chunk-MQVQXXLV.js";
import "./chunk-A4HIS5ZJ.js";
import {
  x as x3
} from "./chunk-AMLHWG76.js";
import "./chunk-OFQYIOO7.js";
import {
  v
} from "./chunk-G3HEFWHV.js";
import {
  p as p2
} from "./chunk-3GENFQBG.js";
import {
  c as c2
} from "./chunk-FX6IXM55.js";
import {
  O
} from "./chunk-QFFP6A5Q.js";
import {
  n as n3,
  p2 as p3
} from "./chunk-JP3KAUQB.js";
import "./chunk-INL7BDTP.js";
import "./chunk-PDEVQZ7U.js";
import "./chunk-7XXQ7762.js";
import "./chunk-DVGM5RQS.js";
import "./chunk-R6OA44DQ.js";
import "./chunk-QTYVDCOW.js";
import {
  c,
  d,
  f,
  l,
  m as m2,
  p,
  u
} from "./chunk-YGVY4EIZ.js";
import "./chunk-HSDU7DIL.js";
import "./chunk-FWRLW4G5.js";
import "./chunk-JNNRJ7GQ.js";
import "./chunk-E52E6T7N.js";
import {
  x as x2
} from "./chunk-UK3I5WXR.js";
import {
  y as y2
} from "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import "./chunk-6Z6ZAVRA.js";
import "./chunk-PK4W65H4.js";
import "./chunk-GY2AJLN6.js";
import "./chunk-W62B63EU.js";
import "./chunk-N43PI2UO.js";
import "./chunk-O6VYMEIX.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-HUQX7WZO.js";
import "./chunk-BYSA56OH.js";
import "./chunk-ZWUEORSX.js";
import "./chunk-US2IWMHE.js";
import {
  u as u2
} from "./chunk-ZL4T4NIV.js";
import "./chunk-NAKEKTIK.js";
import "./chunk-QWNKYSI4.js";
import "./chunk-FMJZBZWF.js";
import "./chunk-GOYVJTGW.js";
import "./chunk-ZPYDYUP5.js";
import {
  n as n2
} from "./chunk-TDV3ZXCQ.js";
import {
  t
} from "./chunk-XJCUKRCO.js";
import {
  b
} from "./chunk-SOEQPPQP.js";
import "./chunk-22F6X66Z.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import {
  a
} from "./chunk-REIQNAQW.js";
import "./chunk-J6LQZWZI.js";
import "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import {
  k as k2
} from "./chunk-FUPLN7UM.js";
import {
  F,
  x as x4
} from "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import {
  m
} from "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import {
  i
} from "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import {
  w2 as w
} from "./chunk-UWG37XSU.js";
import {
  k2 as k
} from "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import {
  r as r2
} from "./chunk-HLM6QCL2.js";
import "./chunk-RXYULINL.js";
import "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-XQN7F674.js";
import "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import {
  j
} from "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import "./chunk-7QMMKGW4.js";
import {
  e as e2,
  n2 as n,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import {
  E,
  x
} from "./chunk-MJXQTGI2.js";
import {
  s
} from "./chunk-LIZHLHNA.js";
import {
  T
} from "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import {
  has,
  o
} from "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  e,
  r
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/layers/graphics/sources/WFSSource.js
var F2 = class extends a(m) {
  constructor() {
    super(...arguments), this._connection = null, this.capabilities = l2(false, false), this.type = "wfs", this.refresh = x(async (e3) => {
      await this.load();
      const { extent: t2 } = await this._connection.invoke("refresh", e3);
      return t2 && (this.sourceJSON.extent = t2), { dataChanged: true, updates: { extent: this.sourceJSON.extent } };
    });
  }
  load(e3) {
    const t2 = r(e3) ? e3.signal : null;
    return this.addResolvingPromise(this._startWorker({ signal: t2 })), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  async openPorts() {
    return await this.load(), this._connection.openPorts();
  }
  async queryFeatures(e3, t2 = {}) {
    await this.load(t2);
    const r3 = await this._connection.invoke("queryFeatures", e3 ? e3.toJSON() : null, t2);
    return x2.fromJSON(r3);
  }
  async queryFeaturesJSON(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatures", e3 ? e3.toJSON() : null, t2);
  }
  async queryFeatureCount(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatureCount", e3 ? e3.toJSON() : null, t2);
  }
  async queryObjectIds(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryObjectIds", e3 ? e3.toJSON() : null, t2);
  }
  async queryExtent(e3, t2 = {}) {
    await this.load(t2);
    const r3 = await this._connection.invoke("queryExtent", e3 ? e3.toJSON() : null, t2);
    return { count: r3.count, extent: w.fromJSON(r3.extent) };
  }
  async querySnapping(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("querySnapping", e3, t2);
  }
  async _createLoadOptions(e3) {
    var _a, _b;
    const { url: r3, customParameters: o4, name: s3, namespaceUri: i3, spatialReference: n5, fields: c4, geometryType: p6, swapXY: l3 } = this.layer;
    if (!r3)
      throw new s("wfs-layer:missing-url", "WFSLayer must be created with a url");
    this.wfsCapabilities || (this.wfsCapabilities = await D(r3, { customParameters: o4, ...e3 }));
    const m3 = ["fields", "geometryType", "name", "namespaceUri", "spatialReference", "swapXY"].some((e4) => null == this.layer[e4]), y3 = m3 ? await X(this.wfsCapabilities, s3, i3, { spatialReference: n5, customParameters: o4, signal: e3 == null ? void 0 : e3.signal }) : { ...z(c4 != null ? c4 : []), geometryType: p6, name: s3, namespaceUri: i3, spatialReference: n5, swapXY: l3 }, g = e(W(this.wfsCapabilities.readFeatureTypes(), y3.name, y3.namespaceUri)), S = i.toJSON(y3.geometryType);
    return { customParameters: o4, featureType: g, fields: (_b = (_a = y3.fields) == null ? void 0 : _a.map((e4) => e4.toJSON())) != null ? _b : [], geometryField: y3.geometryField, geometryType: S, getFeatureUrl: this.wfsCapabilities.operations.GetFeature.url, getFeatureOutputFormat: this.wfsCapabilities.operations.GetFeature.outputFormat, objectIdField: y3.objectIdField, spatialReference: y3.spatialReference.toJSON(), swapXY: !!y3.swapXY };
  }
  async _startWorker(e3) {
    const [t2, r3] = await E([this._createLoadOptions(e3), u2("WFSSourceWorker", { ...e3, strategy: has("feature-layers-workers") ? "dedicated" : "local" })]), o4 = t2.error || r3.error || null, s3 = r3.value || null;
    if (o4)
      throw s3 && s3.close(), o4;
    const a3 = t2.value;
    this._connection = r3.value;
    const { extent: i3 } = await this._connection.invoke("load", a3, e3);
    this.sourceJSON = { extent: i3, fields: a3.fields, geometryType: a3.geometryType, objectIdField: a3.objectIdField, geometryField: a3.geometryField, drawingInfo: o3(a3.geometryType), name: a3.featureType.title, wfsInfo: { name: a3.featureType.name, featureUrl: a3.getFeatureUrl, maxFeatures: 3e3, swapXY: a3.swapXY, supportedSpatialReferences: a3.featureType.supportedSpatialReferences, version: "2.0.0", wfsNamespace: a3.featureType.namespaceUri } };
  }
};
e2([y()], F2.prototype, "capabilities", void 0), e2([y({ constructOnly: true })], F2.prototype, "layer", void 0), e2([y()], F2.prototype, "sourceJSON", void 0), e2([y()], F2.prototype, "type", void 0), e2([y()], F2.prototype, "wfsCapabilities", void 0), F2 = e2([n("esri.layers.graphics.sources.WFSSource")], F2);

// node_modules/@arcgis/core/layers/WFSLayer.js
var J;
var M = s2();
var _ = J = class extends c3(o2(n4(p4(n2(a2(p2(t(c2(v(O(b))))))))))) {
  constructor(e3) {
    super(e3), this.copyright = null, this.customParameters = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.featureUrl = void 0, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "WFS", this.maxFeatures = 3e3, this.mode = 0, this.name = null, this.namespaceUri = null, this.outFields = null, this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new F2({ layer: this }), this.spatialReference = k.WGS84, this.spatialReferences = [4326], this.swapXY = void 0, this.title = "WFS", this.type = "wfs", this.url = null, this.version = void 0;
  }
  static fromWFSLayerInfo(e3) {
    const { customParameters: r3, fields: t2, geometryField: i3, geometryType: o4, name: s3, namespaceUri: n5, objectIdField: p6, spatialReference: a3, swapXY: l3, url: d2, wfsCapabilities: m3 } = e3;
    return new J({ customParameters: r3, fields: t2, geometryField: i3, geometryType: o4, name: s3, namespaceUri: n5, objectIdField: p6, spatialReference: a3, swapXY: l3, url: d2, wfsCapabilities: m3 });
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e3) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WFS"] }, e3).then(() => this.source.load(e3)).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo", "spatialReference", "name", "namespaceUri"], "service"), F(this.renderer, this.fieldsIndex), x4(this.timeInfo, this.fieldsIndex);
    })), Promise.resolve(this);
  }
  get capabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.capabilities;
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  writeFields(e3, r3, t2) {
    const i3 = e3.filter((e4) => e4.name !== C);
    this.geometryField && i3.unshift(new y2({ name: this.geometryField, alias: this.geometryField, type: "geometry" })), o(t2, i3.map((e4) => e4.toJSON()), r3);
  }
  get parsedUrl() {
    return j(this.url);
  }
  set renderer(e3) {
    F(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  get wfsCapabilities() {
    var _a;
    return (_a = this.source) == null ? void 0 : _a.wfsCapabilities;
  }
  set wfsCapabilities(e3) {
    this.source && (this.source.wfsCapabilities = e3);
  }
  createPopupTemplate(e3) {
    return p5(this, e3);
  }
  createQuery() {
    const e3 = new x3();
    e3.returnGeometry = true, e3.outFields = ["*"], e3.where = this.definitionExpression || "1=1";
    const { timeOffset: r3, timeExtent: t2 } = this;
    return e3.timeExtent = null != r3 && null != t2 ? t2.offset(-r3.value, r3.unit) : t2 || null, e3;
  }
  getFieldDomain(e3, r3) {
    var _a;
    return (_a = this.getField(e3)) == null ? void 0 : _a.domain;
  }
  getField(e3) {
    var _a;
    return (_a = this.fieldsIndex) == null ? void 0 : _a.get(e3);
  }
  queryFeatures(e3, r3) {
    return this.load().then(() => this.source.queryFeatures(x3.from(e3) || this.createQuery(), r3)).then((e4) => {
      if (e4 == null ? void 0 : e4.features)
        for (const r4 of e4.features)
          r4.layer = r4.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, r3) {
    return this.load().then(() => this.source.queryObjectIds(x3.from(e3) || this.createQuery(), r3));
  }
  queryFeatureCount(e3, r3) {
    return this.load().then(() => this.source.queryFeatureCount(x3.from(e3) || this.createQuery(), r3));
  }
  queryExtent(e3, r3) {
    return this.load().then(() => this.source.queryExtent(x3.from(e3) || this.createQuery(), r3));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e3, updates: r3 } = await this.source.refresh(this.customParameters);
      return r(r3) && this.read(r3, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e3;
    } catch {
    }
    return false;
  }
};
e2([y({ readOnly: true })], _.prototype, "capabilities", null), e2([y({ type: String })], _.prototype, "copyright", void 0), e2([y({ readOnly: true })], _.prototype, "createQueryVersion", null), e2([y({ json: { name: "wfsInfo.customParameters", write: { ignoreOrigin: true } } })], _.prototype, "customParameters", void 0), e2([y({ readOnly: true })], _.prototype, "defaultPopupTemplate", null), e2([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], _.prototype, "definitionExpression", void 0), e2([y({ type: String })], _.prototype, "displayField", void 0), e2([y(d)], _.prototype, "elevationInfo", void 0), e2([y({ type: String, readOnly: true, json: { name: "wfsInfo.featureUrl", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "featureUrl", void 0), e2([y({ type: [y2], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], _.prototype, "fields", void 0), e2([r2("fields")], _.prototype, "writeFields", null), e2([y(M.fieldsIndex)], _.prototype, "fieldsIndex", void 0), e2([y({ type: w, json: { name: "extent" } })], _.prototype, "fullExtent", void 0), e2([y()], _.prototype, "geometryField", void 0), e2([y({ type: String, json: { read: { source: "layerDefinition.geometryType", reader: i.read }, write: { target: "layerDefinition.geometryType", writer: i.write, ignoreOrigin: true }, origins: { service: { read: i.read } } } })], _.prototype, "geometryType", void 0), e2([y({ type: String })], _.prototype, "id", void 0), e2([y(m2)], _.prototype, "labelsVisible", void 0), e2([y({ type: [j2], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i2 }, write: true } })], _.prototype, "labelingInfo", void 0), e2([y(c)], _.prototype, "legendEnabled", void 0), e2([y({ type: ["show", "hide"] })], _.prototype, "listMode", void 0), e2([y({ type: String })], _.prototype, "objectIdField", void 0), e2([y({ type: ["WFS"] })], _.prototype, "operationalLayerType", void 0), e2([y({ type: T, json: { name: "wfsInfo.maxFeatures", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "maxFeatures", void 0), e2([y({ type: [0], readOnly: true, json: { origins: { "web-map": { write: { ignoreOrigin: true, isRequired: true } } } } })], _.prototype, "mode", void 0), e2([y({ type: String, json: { name: "wfsInfo.name", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "name", void 0), e2([y({ type: String, json: { name: "wfsInfo.wfsNamespace", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "namespaceUri", void 0), e2([y(u)], _.prototype, "opacity", void 0), e2([y(M.outFields)], _.prototype, "outFields", void 0), e2([y({ readOnly: true })], _.prototype, "parsedUrl", null), e2([y(p)], _.prototype, "popupEnabled", void 0), e2([y({ type: k2, json: { name: "popupInfo", write: true } })], _.prototype, "popupTemplate", void 0), e2([y({ types: p3, json: { origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: n3, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: { ignoreOrigin: true } } })], _.prototype, "renderer", null), e2([y(l)], _.prototype, "screenSizePerspectiveEnabled", void 0), e2([y({ readOnly: true })], _.prototype, "source", void 0), e2([y({ type: k, json: { name: "layerDefinition.spatialReference", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "extent.spatialReference" } } } })], _.prototype, "spatialReference", void 0), e2([y({ readOnly: true, type: [T], json: { name: "wfsInfo.supportedSpatialReferences", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "spatialReferences", void 0), e2([y({ type: Boolean, value: false, json: { name: "wfsInfo.swapXY", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "swapXY", void 0), e2([y({ json: { write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "name" } } } })], _.prototype, "title", void 0), e2([y({ json: { read: false }, readOnly: true })], _.prototype, "type", void 0), e2([y(f)], _.prototype, "url", void 0), e2([y({ type: String, readOnly: true, json: { name: "wfsInfo.version", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "version", void 0), e2([y()], _.prototype, "wfsCapabilities", null), _ = J = e2([n("esri.layers.WFSLayer")], _);
var k3 = _;
export {
  k3 as default
};
//# sourceMappingURL=WFSLayer-YYLQ44NF.js.map
