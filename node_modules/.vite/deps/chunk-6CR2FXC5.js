import {
  p
} from "./chunk-VYG3YGZX.js";
import {
  v as v2
} from "./chunk-YTOF4Z6B.js";
import {
  c as c2,
  d as d2
} from "./chunk-MLVV3H5S.js";
import {
  x
} from "./chunk-AMLHWG76.js";
import {
  L,
  b,
  g,
  m
} from "./chunk-J5VTDQTQ.js";
import {
  r as r3
} from "./chunk-YF2CRSQX.js";
import {
  I,
  d,
  f,
  v
} from "./chunk-YGVY4EIZ.js";
import {
  n as n2,
  t
} from "./chunk-GLGOVVCK.js";
import {
  le,
  me
} from "./chunk-WJCI2CGX.js";
import {
  c3 as c
} from "./chunk-FUPLN7UM.js";
import {
  i
} from "./chunk-KXVMEIWT.js";
import {
  j
} from "./chunk-UDND2Z3V.js";
import {
  w2 as w
} from "./chunk-UWG37XSU.js";
import {
  k2 as k
} from "./chunk-LNZAOBFW.js";
import {
  r as r2
} from "./chunk-HLM6QCL2.js";
import {
  o
} from "./chunk-RXYULINL.js";
import {
  s as s3
} from "./chunk-VWYWOOPX.js";
import {
  s as s4
} from "./chunk-M5VHU5LK.js";
import {
  l
} from "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n,
  y as y2
} from "./chunk-OOLCFNXJ.js";
import {
  s as s2
} from "./chunk-LIZHLHNA.js";
import {
  S
} from "./chunk-BTUHYGXO.js";
import {
  s2 as s
} from "./chunk-UA3YPL2R.js";
import {
  has,
  y
} from "./chunk-HVKDYDPP.js";
import {
  r
} from "./chunk-MIHB3CIK.js";

// node_modules/@arcgis/core/form/ExpressionInfo.js
var s5;
var p2 = s5 = class extends l {
  constructor(e4) {
    super(e4), this.expression = null, this.name = null, this.returnType = "boolean", this.title = null;
  }
  clone() {
    return new s5({ name: this.name, title: this.title, expression: this.expression, returnType: this.returnType });
  }
};
e([y2({ type: String, json: { write: true } })], p2.prototype, "expression", void 0), e([y2({ type: String, json: { write: true } })], p2.prototype, "name", void 0), e([y2({ type: ["boolean", "date", "number", "string"], json: { write: true } })], p2.prototype, "returnType", void 0), e([y2({ type: String, json: { write: true } })], p2.prototype, "title", void 0), p2 = s5 = e([n("esri.form.ExpressionInfo")], p2);
var i2 = p2;

// node_modules/@arcgis/core/form/elements/Element.js
var e2 = class extends l {
  constructor(t2) {
    super(t2), this.description = null, this.label = null, this.type = null, this.visibilityExpression = null;
  }
};
e([y2({ type: String, json: { write: true } })], e2.prototype, "description", void 0), e([y2({ type: String, json: { write: true } })], e2.prototype, "label", void 0), e([y2()], e2.prototype, "type", void 0), e([y2({ type: String, json: { write: true } })], e2.prototype, "visibilityExpression", void 0), e2 = e([n("esri.form.elements.Element")], e2);
var i3 = e2;

// node_modules/@arcgis/core/form/elements/inputs/AttachmentInput.js
var s6;
var p3 = s6 = class extends l {
  constructor(t2) {
    super(t2), this.type = null;
  }
  clone() {
    return new s6({ type: this.type });
  }
};
e([y2({ type: ["attachment", "audio", "document", "image", "signature", "video"], json: { write: true } })], p3.prototype, "type", void 0), p3 = s6 = e([n("esri.form.elements.inputs.AttachmentInput")], p3);
var c3 = p3;

// node_modules/@arcgis/core/form/elements/AttachmentElement.js
var i4;
var p4 = i4 = class extends i3 {
  constructor(t2) {
    super(t2), this.attachmentKeyword = null, this.editable = true, this.input = null, this.type = "attachment";
  }
  clone() {
    return new i4({ attachmentKeyword: this.attachmentKeyword, description: this.description, editable: this.editable, input: this.input, label: this.label, visibilityExpression: this.visibilityExpression });
  }
};
e([y2({ type: String, json: { write: true } })], p4.prototype, "attachmentKeyword", void 0), e([y2({ type: Boolean, json: { write: true } })], p4.prototype, "editable", void 0), e([y2({ type: c3, json: { read: { source: "inputType" }, write: { target: "inputType" } } })], p4.prototype, "input", void 0), e([y2({ type: ["attachment"], json: { read: false, write: true } })], p4.prototype, "type", void 0), p4 = i4 = e([n("esri.form.elements.AttachmentElement")], p4);
var n3 = p4;

// node_modules/@arcgis/core/form/elements/inputs/Input.js
var e3 = class extends l {
  constructor(r4) {
    super(r4), this.type = null;
  }
};
e([y2()], e3.prototype, "type", void 0), e3 = e([n("esri.form.elements.inputs.Input")], e3);
var p5 = e3;

// node_modules/@arcgis/core/form/elements/inputs/TextInput.js
var s7 = class extends p5 {
  constructor(r4) {
    super(r4), this.maxLength = null, this.minLength = 0;
  }
};
e([y2({ type: Number, json: { write: true } })], s7.prototype, "maxLength", void 0), e([y2({ type: Number, json: { write: true } })], s7.prototype, "minLength", void 0), s7 = e([n("esri.form.elements.inputs.TextInput")], s7);
var p6 = s7;

// node_modules/@arcgis/core/form/elements/inputs/BarcodeScannerInput.js
var o2;
var c4 = o2 = class extends p6 {
  constructor(r4) {
    super(r4), this.type = "barcode-scanner";
  }
  clone() {
    return new o2({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
e([y2({ type: ["barcode-scanner"], json: { read: false, write: true } })], c4.prototype, "type", void 0), c4 = o2 = e([n("esri.form.elements.inputs.BarcodeScannerInput")], c4);
var n4 = c4;

// node_modules/@arcgis/core/form/elements/inputs/ComboBoxInput.js
var s8;
var p7 = s8 = class extends p5 {
  constructor(o4) {
    super(o4), this.noValueOptionLabel = null, this.showNoValueOption = true, this.type = "combo-box";
  }
  clone() {
    return new s8({ showNoValueOption: this.showNoValueOption, noValueOptionLabel: this.noValueOptionLabel });
  }
};
e([y2({ type: String, json: { write: true } })], p7.prototype, "noValueOptionLabel", void 0), e([y2({ type: Boolean, json: { write: true } })], p7.prototype, "showNoValueOption", void 0), e([y2({ type: ["combo-box"], json: { read: false, write: true } })], p7.prototype, "type", void 0), p7 = s8 = e([n("esri.form.elements.inputs.ComboBoxInput")], p7);
var i5 = p7;

// node_modules/@arcgis/core/form/elements/inputs/DateTimePickerInput.js
var s9;
function n5(e4) {
  return null != e4 ? new Date(e4) : null;
}
function a(e4) {
  return e4 ? e4.getTime() : null;
}
var m2 = s9 = class extends p5 {
  constructor(e4) {
    super(e4), this.includeTime = false, this.max = null, this.min = null, this.type = "datetime-picker";
  }
  readMax(e4, r4) {
    return n5(r4.max);
  }
  writeMax(e4, r4) {
    r4.max = a(e4);
  }
  readMin(e4, r4) {
    return n5(r4.min);
  }
  writeMin(e4, r4) {
    r4.min = a(e4);
  }
  clone() {
    return new s9({ includeTime: this.includeTime, max: this.max, min: this.min, type: this.type });
  }
};
e([y2({ type: Boolean, json: { write: true } })], m2.prototype, "includeTime", void 0), e([y2({ type: Date, json: { type: Number, write: true } })], m2.prototype, "max", void 0), e([o("max")], m2.prototype, "readMax", null), e([r2("max")], m2.prototype, "writeMax", null), e([y2({ type: Date, json: { type: Number, write: true } })], m2.prototype, "min", void 0), e([o("min")], m2.prototype, "readMin", null), e([r2("min")], m2.prototype, "writeMin", null), e([y2({ type: ["datetime-picker"], json: { read: false, write: true } })], m2.prototype, "type", void 0), m2 = s9 = e([n("esri.form.elements.inputs.DateTimePickerInput")], m2);
var c5 = m2;

// node_modules/@arcgis/core/form/elements/inputs/RadioButtonsInput.js
var s10;
var p8 = s10 = class extends p5 {
  constructor(o4) {
    super(o4), this.noValueOptionLabel = null, this.showNoValueOption = true, this.type = "radio-buttons";
  }
  clone() {
    return new s10({ noValueOptionLabel: this.noValueOptionLabel, showNoValueOption: this.showNoValueOption });
  }
};
e([y2({ type: String, json: { write: true } })], p8.prototype, "noValueOptionLabel", void 0), e([y2({ type: Boolean, json: { write: true } })], p8.prototype, "showNoValueOption", void 0), e([y2({ type: ["radio-buttons"], json: { read: false, write: true } })], p8.prototype, "type", void 0), p8 = s10 = e([n("esri.form.elements.inputs.RadioButtonsInput")], p8);
var i6 = p8;

// node_modules/@arcgis/core/form/elements/inputs/SwitchInput.js
var s11;
var p9 = s11 = class extends p5 {
  constructor(o4) {
    super(o4), this.offValue = null, this.onValue = null, this.type = "switch";
  }
  clone() {
    return new s11({ offValue: this.offValue, onValue: this.onValue });
  }
};
e([y2({ type: [String, Number], json: { write: true } })], p9.prototype, "offValue", void 0), e([y2({ type: [String, Number], json: { write: true } })], p9.prototype, "onValue", void 0), e([y2({ type: ["switch"], json: { read: false, write: true } })], p9.prototype, "type", void 0), p9 = s11 = e([n("esri.form.elements.inputs.SwitchInput")], p9);
var i7 = p9;

// node_modules/@arcgis/core/form/elements/inputs/TextAreaInput.js
var o3;
var p10 = o3 = class extends p6 {
  constructor(t2) {
    super(t2), this.type = "text-area";
  }
  clone() {
    return new o3({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
e([y2({ type: ["text-area"], json: { read: false, write: true } })], p10.prototype, "type", void 0), p10 = o3 = e([n("esri.form.elements.inputs.TextAreaInput")], p10);
var a2 = p10;

// node_modules/@arcgis/core/form/elements/inputs/TextBoxInput.js
var s12;
var p11 = s12 = class extends p6 {
  constructor(t2) {
    super(t2), this.type = "text-box";
  }
  clone() {
    return new s12({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
e([y2({ type: ["text-box"], json: { read: false, write: true } })], p11.prototype, "type", void 0), p11 = s12 = e([n("esri.form.elements.inputs.TextBoxInput")], p11);
var c6 = p11;

// node_modules/@arcgis/core/form/elements/support/inputs.js
var m3 = { base: p5, key: "type", typeMap: { "barcode-scanner": n4, "combo-box": i5, "datetime-picker": c5, "radio-buttons": i6, switch: i7, "text-area": a2, "text-box": c6 } };

// node_modules/@arcgis/core/form/elements/FieldElement.js
var n6;
var l2 = n6 = class extends i3 {
  constructor(e4) {
    super(e4), this.domain = null, this.editable = true, this.editableExpression = null, this.fieldName = null, this.hint = null, this.input = null, this.requiredExpression = null, this.type = "field", this.valueExpression = null;
  }
  clone() {
    return new n6({ description: this.description, domain: this.domain, editable: this.editable, editableExpression: this.editableExpression, fieldName: this.fieldName, hint: this.hint, input: this.input, label: this.label, requiredExpression: this.requiredExpression, valueExpression: this.valueExpression, visibilityExpression: this.visibilityExpression });
  }
};
e([y2({ types: n2, json: { read: { reader: t }, write: true } })], l2.prototype, "domain", void 0), e([y2({ type: Boolean, json: { write: true } })], l2.prototype, "editable", void 0), e([y2({ type: String, json: { write: true } })], l2.prototype, "editableExpression", void 0), e([y2({ type: String, json: { write: true } })], l2.prototype, "fieldName", void 0), e([y2({ type: String, json: { write: true } })], l2.prototype, "hint", void 0), e([y2({ types: m3, json: { read: { source: "inputType" }, write: { target: "inputType" } } })], l2.prototype, "input", void 0), e([y2({ type: String, json: { write: true } })], l2.prototype, "requiredExpression", void 0), e([y2({ type: String, json: { read: false, write: true } })], l2.prototype, "type", void 0), e([y2({ type: String, json: { write: true } })], l2.prototype, "valueExpression", void 0), l2 = n6 = e([n("esri.form.elements.FieldElement")], l2);
var a3 = l2;

// node_modules/@arcgis/core/form/elements/RelationshipElement.js
var p12;
var l3 = p12 = class extends i3 {
  constructor(e4) {
    super(e4), this.displayCount = null, this.displayType = "list", this.editable = true, this.orderByFields = null, this.relationshipId = null, this.type = "relationship";
  }
  clone() {
    return new p12({ description: this.description, displayCount: this.displayCount, displayType: this.displayType, editable: this.editable, label: this.label, orderByFields: y(this.orderByFields), relationshipId: this.relationshipId, visibilityExpression: this.visibilityExpression });
  }
};
e([y2({ type: Number, json: { write: true } })], l3.prototype, "displayCount", void 0), e([y2({ type: ["list"], json: { write: true } })], l3.prototype, "displayType", void 0), e([y2({ type: Boolean, json: { write: true } })], l3.prototype, "editable", void 0), e([y2({ type: [c], json: { write: true } })], l3.prototype, "orderByFields", void 0), e([y2({ type: Number, json: { write: true } })], l3.prototype, "relationshipId", void 0), e([y2({ type: ["relationship"], json: { read: false, write: true } })], l3.prototype, "type", void 0), l3 = p12 = e([n("esri.form.elements.RelationshipElement")], l3);
var d3 = l3;

// node_modules/@arcgis/core/form/support/elements.js
function n7(t2) {
  return { typesWithGroup: { base: i3, key: "type", typeMap: { attachment: n3, field: a3, group: t2, relationship: d3 } }, typesWithoutGroup: { base: i3, key: "type", typeMap: { attachment: n3, field: a3, relationship: d3 } } };
}
function i8(t2, e4, p15 = true) {
  if (!t2)
    return null;
  const r4 = p15 ? e4.typesWithGroup.typeMap : e4.typesWithoutGroup.typeMap;
  return t2.filter((t3) => r4[t3.type]).map((t3) => r4[t3.type].fromJSON(t3));
}
function u(t2, e4, p15 = true) {
  if (!t2)
    return null;
  const r4 = p15 ? e4.typesWithGroup.typeMap : e4.typesWithoutGroup.typeMap;
  return t2.filter((t3) => r4[t3.type]).map((t3) => t3.toJSON());
}
function s13(e4, p15, r4 = true) {
  return e4 ? e4.map((e5) => S(r4 ? p15.typesWithGroup : p15.typesWithoutGroup, e5)) : null;
}

// node_modules/@arcgis/core/form/elements/GroupElement.js
var d4;
var u2 = d4 = class extends i3 {
  constructor(e4) {
    super(e4), this.elements = null, this.initialState = "expanded", this.type = "group";
  }
  castElements(e4) {
    return s13(e4, f2, false);
  }
  readElements(e4, t2) {
    return i8(t2.formElements, f2, false);
  }
  writeElements(e4, t2) {
    t2.formElements = u(e4, f2, false);
  }
  clone() {
    return new d4({ description: this.description, elements: y(this.elements), initialState: this.initialState, label: this.label, visibilityExpression: this.visibilityExpression });
  }
};
e([y2({ json: { write: true } })], u2.prototype, "elements", void 0), e([s3("elements")], u2.prototype, "castElements", null), e([o("elements", ["formElements"])], u2.prototype, "readElements", null), e([r2("elements")], u2.prototype, "writeElements", null), e([y2({ type: ["collapsed", "expanded"], json: { write: true } })], u2.prototype, "initialState", void 0), e([y2({ type: String, json: { read: false, write: true } })], u2.prototype, "type", void 0), u2 = d4 = e([n("esri.form.elements.GroupElement")], u2);
var f2 = n7(u2);
var y3 = u2;

// node_modules/@arcgis/core/form/FormTemplate.js
var f3;
var j2 = n7(y3);
var h = f3 = class extends l {
  constructor(e4) {
    super(e4), this.description = null, this.elements = null, this.expressionInfos = null, this.preserveFieldValuesWhenHidden = false, this.title = null;
  }
  castElements(e4) {
    return s13(e4, j2);
  }
  readElements(e4, t2) {
    return i8(t2.formElements, j2);
  }
  writeElements(e4, t2) {
    t2.formElements = u(e4, j2);
  }
  clone() {
    return new f3({ description: this.description, expressionInfos: y(this.expressionInfos), elements: y(this.elements), title: this.title, preserveFieldValuesWhenHidden: this.preserveFieldValuesWhenHidden });
  }
};
e([y2({ type: String, json: { write: true } })], h.prototype, "description", void 0), e([y2({ json: { write: true } })], h.prototype, "elements", void 0), e([s3("elements")], h.prototype, "castElements", null), e([o("elements", ["formElements"])], h.prototype, "readElements", null), e([r2("elements")], h.prototype, "writeElements", null), e([y2({ type: [i2], json: { write: true } })], h.prototype, "expressionInfos", void 0), e([y2({ type: Boolean, json: { default: false, write: true } })], h.prototype, "preserveFieldValuesWhenHidden", void 0), e([y2({ type: String, json: { write: true } })], h.prototype, "title", void 0), h = f3 = e([n("esri.form.FormTemplate")], h);
var y4 = h;

// node_modules/@arcgis/core/layers/support/featureLayerUtils.js
var i9 = new s4({ esriGeometryPoint: "point", esriGeometryMultipoint: "multipoint", esriGeometryPolyline: "polyline", esriGeometryPolygon: "polygon", esriGeometryMultiPatch: "multipatch" });
var c7 = { name: "supportsName", size: "supportsSize", contentType: "supportsContentType", keywords: "supportsKeywords", exifInfo: "supportsExifInfo" };
function l4(t2, e4, r4) {
  return !!(t2 && t2.hasOwnProperty(e4) ? t2[e4] : r4);
}
function d5(t2, e4, r4) {
  return t2 && t2.hasOwnProperty(e4) ? t2[e4] : r4;
}
function y5(t2) {
  var _a;
  const e4 = (_a = t2 == null ? void 0 : t2.supportedSpatialAggregationStatistics) == null ? void 0 : _a.map((t3) => t3.toLowerCase());
  return { envelope: !!(e4 == null ? void 0 : e4.includes("envelopeaggregate")), centroid: !!(e4 == null ? void 0 : e4.includes("centroidaggregate")), convexHull: !!(e4 == null ? void 0 : e4.includes("convexhullaggregate")) };
}
function m4(t2, e4) {
  var _a;
  const r4 = (_a = t2 == null ? void 0 : t2.supportedOperationsWithCacheHint) == null ? void 0 : _a.map((t3) => t3.toLowerCase());
  return !!(r4 == null ? void 0 : r4.includes(e4.toLowerCase()));
}
function h2(t2, e4, r4) {
  return { analytics: f4(e4), attachment: w2(e4), data: g2(e4), metadata: C(e4), operations: b2(e4.capabilities || t2, e4, r4), query: A(e4, r4), queryRelated: R(e4), queryTopFeatures: S2(e4), editing: Q(e4) };
}
function f4(t2) {
  return { supportsCacheHint: m4(t2.advancedQueryCapabilities, "queryAnalytics") };
}
function w2(t2) {
  const e4 = t2.attachmentProperties, r4 = { supportsName: false, supportsSize: false, supportsContentType: false, supportsKeywords: false, supportsExifInfo: false, supportsCacheHint: m4(t2.advancedQueryCapabilities, "queryAttachments"), supportsResize: l4(t2, "supportsAttachmentsResizing", false) };
  return e4 && Array.isArray(e4) && e4.forEach((t3) => {
    const e5 = c7[t3.name];
    e5 && (r4[e5] = !!t3.isEnabled);
  }), r4;
}
function g2(t2) {
  return { isVersioned: l4(t2, "isDataVersioned", false), supportsAttachment: l4(t2, "hasAttachments", false), supportsM: l4(t2, "hasM", false), supportsZ: l4(t2, "hasZ", false) };
}
function C(t2) {
  return { supportsAdvancedFieldProperties: l4(t2, "supportsFieldDescriptionProperty", false) };
}
function b2(t2, e4, s14) {
  const a6 = t2 ? t2.toLowerCase().split(",").map((t3) => t3.trim()) : [], n9 = s14 ? m(s14) : null, p15 = a6.includes(r(n9) && "MapServer" === n9.serverType ? "data" : "query"), u3 = a6.includes("editing") && !e4.datesInUnknownTimezone;
  let i10 = u3 && a6.includes("create"), c9 = u3 && a6.includes("delete"), d6 = u3 && a6.includes("update");
  const y6 = a6.includes("changetracking"), m5 = e4.advancedQueryCapabilities;
  return u3 && !(i10 || c9 || d6) && (i10 = c9 = d6 = true), { supportsCalculate: l4(e4, "supportsCalculate", false), supportsTruncate: l4(e4, "supportsTruncate", false), supportsValidateSql: l4(e4, "supportsValidateSql", false), supportsAdd: i10, supportsDelete: c9, supportsEditing: u3, supportsChangeTracking: y6, supportsQuery: p15, supportsQueryAnalytics: l4(m5, "supportsQueryAnalytic", false), supportsQueryAttachments: l4(m5, "supportsQueryAttachments", false), supportsQueryTopFeatures: l4(m5, "supportsTopFeaturesQuery", false), supportsResizeAttachments: l4(e4, "supportsAttachmentsResizing", false), supportsSync: a6.includes("sync"), supportsUpdate: d6, supportsExceedsLimitStatistics: l4(e4, "supportsExceedsLimitStatistics", false) };
}
function A(t2, e4) {
  const r4 = t2.advancedQueryCapabilities, s14 = t2.ownershipBasedAccessControlForFeatures, o4 = t2.archivingInfo, n9 = B(t2), p15 = e4 == null ? void 0 : e4.includes("MapServer"), u3 = !has("mapserver-pbf-enabled") && p15 && (n9 != null ? n9 : 0) < 10.81, i10 = g(e4), c9 = (t2.supportedQueryFormats || "").split(",").reduce((t3, e5) => {
    const r5 = e5.toLowerCase().trim();
    return r5 && t3.add(r5), t3;
  }, /* @__PURE__ */ new Set());
  return { supportsStatistics: l4(r4, "supportsStatistics", t2.supportsStatistics), supportsPercentileStatistics: l4(r4, "supportsPercentileStatistics", false), supportsSpatialAggregationStatistics: l4(r4, "supportsSpatialAggregationStatistics", false), supportedSpatialAggregationStatistics: y5(r4), supportsCentroid: l4(r4, "supportsReturningGeometryCentroid", false), supportsDistance: l4(r4, "supportsQueryWithDistance", false), supportsDistinct: l4(r4, "supportsDistinct", t2.supportsAdvancedQueries), supportsExtent: l4(r4, "supportsReturningQueryExtent", false), supportsGeometryProperties: l4(r4, "supportsReturningGeometryProperties", false), supportsHavingClause: l4(r4, "supportsHavingClause", false), supportsOrderBy: l4(r4, "supportsOrderBy", t2.supportsAdvancedQueries), supportsPagination: l4(r4, "supportsPagination", false), supportsQuantization: l4(t2, "supportsCoordinatesQuantization", false), supportsQuantizationEditMode: l4(t2, "supportsQuantizationEditMode", false), supportsQueryGeometry: l4(t2, "supportsReturningQueryGeometry", false), supportsResultType: l4(r4, "supportsQueryWithResultType", false), supportsMaxRecordCountFactor: l4(r4, "supportsMaxRecordCountFactor", false), supportsSqlExpression: l4(r4, "supportsSqlExpression", false), supportsStandardizedQueriesOnly: l4(t2, "useStandardizedQueries", false), supportsTopFeaturesQuery: l4(r4, "supportsTopFeaturesQuery", false), supportsQueryByOthers: l4(s14, "allowOthersToQuery", true), supportsHistoricMoment: l4(o4, "supportsQueryWithHistoricMoment", false), supportsFormatPBF: !u3 && c9.has("pbf"), supportsDisjointSpatialRelationship: l4(r4, "supportsDisjointSpatialRel", false), supportsCacheHint: l4(r4, "supportsQueryWithCacheHint", false) || m4(r4, "query"), supportsDefaultSpatialReference: l4(r4, "supportsDefaultSR", false), supportsCompactGeometry: i10, supportsFullTextSearch: l4(r4, "supportsFullTextSearch", false), maxRecordCountFactor: d5(t2, "maxRecordCountFactor", void 0), maxRecordCount: d5(t2, "maxRecordCount", void 0), standardMaxRecordCount: d5(t2, "standardMaxRecordCount", void 0), tileMaxRecordCount: d5(t2, "tileMaxRecordCount", void 0) };
}
function R(t2) {
  const e4 = t2.advancedQueryCapabilities, r4 = l4(e4, "supportsAdvancedQueryRelated", false);
  return { supportsPagination: l4(e4, "supportsQueryRelatedPagination", false), supportsCount: r4, supportsOrderBy: r4, supportsCacheHint: m4(e4, "queryRelated") };
}
function S2(t2) {
  return { supportsCacheHint: m4(t2.advancedQueryCapabilities, "queryTopFilter") };
}
function Q(t2) {
  const e4 = t2.ownershipBasedAccessControlForFeatures;
  return { supportsGeometryUpdate: l4(t2, "allowGeometryUpdates", true), supportsGlobalId: l4(t2, "supportsApplyEditsWithGlobalIds", false), supportsReturnServiceEditsInSourceSpatialReference: l4(t2, "supportsReturnServiceEditsInSourceSR", false), supportsRollbackOnFailure: l4(t2, "supportsRollbackOnFailureParameter", false), supportsUpdateWithoutM: l4(t2, "allowUpdateWithoutMValues", false), supportsUploadWithItemId: l4(t2, "supportsAttachmentsByUploadId", false), supportsDeleteByAnonymous: l4(e4, "allowAnonymousToDelete", true), supportsDeleteByOthers: l4(e4, "allowOthersToDelete", true), supportsUpdateByAnonymous: l4(e4, "allowAnonymousToUpdate", true), supportsUpdateByOthers: l4(e4, "allowOthersToUpdate", true) };
}
async function F(e4, r4, s14, o4) {
  const { source: a6 } = await e4.load();
  if (await q(e4, r4, o4), !a6.addAttachment)
    throw new s2(o4, "Layer source does not support addAttachment capability");
  return a6.addAttachment(r4, s14);
}
function q(e4, r4, s14) {
  const { attributes: o4 } = r4, { objectIdField: a6 } = e4;
  return e4.get("capabilities.data.supportsAttachment") ? r4 ? o4 ? a6 && o4[a6] ? Promise.resolve() : Promise.reject(new s2(s14, `feature is missing the identifying attribute ${a6}`)) : Promise.reject(new s2(s14, "'attributes' are required on a feature to query attachments")) : Promise.reject(new s2(s14, "A feature is required to add/delete/update attachments")) : Promise.reject(new s2(s14, "this layer doesn't support attachments"));
}
async function x2(e4, r4, s14, o4, a6) {
  const { source: n9 } = await e4.load();
  if (await q(e4, r4, a6), !n9.updateAttachment)
    throw new s2(a6, "Layer source does not support updateAttachment capability");
  return n9.updateAttachment(r4, s14, o4);
}
async function P(t2, e4, r4) {
  const s14 = await import("./editingSupport-6MAA475O.js"), o4 = await t2.load();
  return s14.applyEdits(o4, o4.source, e4, r4);
}
async function O(e4, r4, s14, o4) {
  const { source: a6 } = await e4.load();
  if (await q(e4, r4, o4), !a6.deleteAttachments)
    throw new s2(o4, "Layer source does not support deleteAttachments capability");
  return a6.deleteAttachments(r4, s14);
}
async function v3(e4, r4, s14) {
  const { source: o4 } = await e4.load({ signal: r4 == null ? void 0 : r4.signal });
  if (!o4.fetchRecomputedExtents)
    throw new s2(s14, "Layer source does not support fetchUpdates capability");
  return o4.fetchRecomputedExtents(r4);
}
async function E(e4, r4, s14, o4) {
  var _a, _b;
  r4 = c2.from(r4);
  const { source: a6, capabilities: p15 } = await e4.load();
  if (!((_a = p15 == null ? void 0 : p15.data) == null ? void 0 : _a.supportsAttachment))
    throw new s2(o4, "this layer doesn't support attachments");
  const { attachmentTypes: u3, objectIds: i10, globalIds: c9, num: l6, size: d6, start: y6, where: m5 } = r4;
  if (!((_b = p15 == null ? void 0 : p15.operations) == null ? void 0 : _b.supportsQueryAttachments)) {
    const e5 = i10 && i10.length > 1, s15 = u3 && u3.length, a7 = c9 && c9.length, n9 = d6 && d6.length;
    if (e5 || s15 || a7 || n9 || l6 || y6 || m5)
      throw new s2(o4, "when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported", r4);
  }
  if (!(i10 == null ? void 0 : i10.length) && !m5)
    throw new s2(o4, "'objectIds' or 'where' are required to perform attachment query", r4);
  if (!a6.queryAttachments)
    throw new s2(o4, "Layer source does not support queryAttachments capability", r4);
  return a6.queryAttachments(r4);
}
async function I2(e4, r4, s14, o4) {
  var _a;
  const { source: a6 } = await e4.load();
  if (!a6.queryObjectIds)
    throw new s2(o4, "Layer source does not support queryObjectIds capability");
  return a6.queryObjectIds((_a = x.from(r4)) != null ? _a : e4.createQuery(), s14);
}
async function T(e4, r4, s14, o4) {
  var _a;
  const { source: a6 } = await e4.load();
  if (!a6.queryFeatureCount)
    throw new s2(o4, "Layer source does not support queryFeatureCount capability");
  return a6.queryFeatureCount((_a = x.from(r4)) != null ? _a : e4.createQuery(), s14);
}
async function j3(e4, r4, s14, o4) {
  var _a;
  const { source: a6 } = await e4.load();
  if (!a6.queryExtent)
    throw new s2(o4, "Layer source does not support queryExtent capability");
  return a6.queryExtent((_a = x.from(r4)) != null ? _a : e4.createQuery(), s14);
}
async function M(e4, r4, s14, o4) {
  const { source: a6 } = await e4.load();
  if (!a6.queryRelatedFeatures)
    throw new s2(o4, "Layer source does not support queryRelatedFeatures capability");
  return a6.queryRelatedFeatures(d2.from(r4), s14);
}
async function D(e4, r4, s14, o4) {
  const { source: a6 } = await e4.load();
  if (!a6.queryRelatedFeaturesCount)
    throw new s2(o4, "Layer source does not support queryRelatedFeaturesCount capability");
  return a6.queryRelatedFeaturesCount(d2.from(r4), s14);
}
async function G(t2) {
  const e4 = t2.source;
  if (e4 == null ? void 0 : e4.refresh)
    try {
      const { dataChanged: s14, updates: o4 } = await e4.refresh();
      if (r(o4) && (t2.sourceJSON = { ...t2.sourceJSON, ...o4 }, t2.read(o4, { origin: "service", url: t2.parsedUrl })), s14)
        return true;
    } catch {
    }
  if (t2.definitionExpression)
    try {
      return (await r3(t2.definitionExpression, t2.fieldsIndex)).hasDateFunctions;
    } catch {
    }
  return false;
}
function L2(t2) {
  const e4 = new x(), r4 = t2.get("capabilities.data"), s14 = t2.get("capabilities.query");
  e4.historicMoment = t2.historicMoment, e4.gdbVersion = t2.gdbVersion, e4.returnGeometry = true, s14 && (e4.compactGeometryEnabled = s14.supportsCompactGeometry, e4.defaultSpatialReferenceEnabled = s14.supportsDefaultSpatialReference), r4 && (r4.supportsZ && null != t2.returnZ && (e4.returnZ = t2.returnZ), r4.supportsM && null != t2.returnM && (e4.returnM = t2.returnM)), e4.outFields = ["*"];
  const { timeOffset: o4, timeExtent: a6 } = t2;
  return e4.timeExtent = null != o4 && null != a6 ? a6.offset(-o4.value, o4.unit) : a6 || null, e4.multipatchOption = "multipatch" === t2.geometryType ? "xyFootprint" : null, e4;
}
function z(t2) {
  const { globalIdField: e4, fields: r4 } = t2;
  if (e4)
    return e4;
  if (r4) {
    for (const s14 of r4)
      if ("esriFieldTypeGlobalID" === s14.type)
        return s14.name;
  }
}
function U(t2) {
  const { objectIdField: e4, fields: r4 } = t2;
  if (e4)
    return e4;
  if (r4) {
    for (const s14 of r4)
      if ("esriFieldTypeOID" === s14.type)
        return s14.name;
  }
}
function B(t2) {
  return t2.currentVersion ? t2.currentVersion : t2.hasOwnProperty("capabilities") || t2.hasOwnProperty("drawingInfo") || t2.hasOwnProperty("hasAttachments") || t2.hasOwnProperty("htmlPopupType") || t2.hasOwnProperty("relationships") || t2.hasOwnProperty("timeInfo") || t2.hasOwnProperty("typeIdField") || t2.hasOwnProperty("types") ? 10 : 9.3;
}

// node_modules/@arcgis/core/layers/support/FeatureIndex.js
var p13 = class extends i(l) {
  constructor(o4) {
    super(o4);
  }
};
e([y2({ constructOnly: true, json: { write: true } })], p13.prototype, "name", void 0), e([y2({ constructOnly: true, json: { write: true } })], p13.prototype, "fields", void 0), e([y2({ constructOnly: true, json: { write: true } })], p13.prototype, "isAscending", void 0), e([y2({ constructOnly: true, json: { write: true } })], p13.prototype, "indexType", void 0), e([y2({ constructOnly: true, json: { write: true } })], p13.prototype, "isUnique", void 0), e([y2({ constructOnly: true, json: { write: true } })], p13.prototype, "description", void 0), p13 = e([n("esri.layers.support.FeatureIndex")], p13);

// node_modules/@arcgis/core/layers/support/GeometryFieldsInfo.js
var a4 = class extends i(l) {
  constructor(e4) {
    super(e4), this.shapeAreaField = null, this.shapeLengthField = null, this.units = null;
  }
};
e([y2({ type: String, json: { read: { source: "shapeAreaFieldName" } } })], a4.prototype, "shapeAreaField", void 0), e([y2({ type: String, json: { read: { source: "shapeLengthFieldName" } } })], a4.prototype, "shapeLengthField", void 0), e([y2({ type: String, json: { read: (e4) => le.read(e4) || me.read(e4) } })], a4.prototype, "units", void 0), a4 = e([n("esri.layers.support.GeometryFieldsInfo")], a4);
var c8 = a4;

// node_modules/@arcgis/core/layers/support/Relationship.js
var n8 = new s4({ esriRelCardinalityOneToOne: "one-to-one", esriRelCardinalityOneToMany: "one-to-many", esriRelCardinalityManyToMany: "many-to-many" });
var a5 = new s4({ esriRelRoleOrigin: "origin", esriRelRoleDestination: "destination" });
var l5 = class extends i(l) {
  constructor(e4) {
    super(e4), this.cardinality = null, this.composite = null, this.id = null, this.keyField = null, this.keyFieldInRelationshipTable = null, this.name = null, this.relatedTableId = null, this.relationshipTableId = null, this.role = null;
  }
};
e([y2({ json: { read: n8.read, write: n8.write } })], l5.prototype, "cardinality", void 0), e([y2({ json: { read: true, write: true } })], l5.prototype, "composite", void 0), e([y2({ json: { read: true, write: true } })], l5.prototype, "id", void 0), e([y2({ json: { read: true, write: true } })], l5.prototype, "keyField", void 0), e([y2({ json: { read: true, write: true } })], l5.prototype, "keyFieldInRelationshipTable", void 0), e([y2({ json: { read: true, write: true } })], l5.prototype, "name", void 0), e([y2({ json: { read: true, write: true } })], l5.prototype, "relatedTableId", void 0), e([y2({ json: { read: true, write: true } })], l5.prototype, "relationshipTableId", void 0), e([y2({ json: { read: a5.read, write: a5.write } })], l5.prototype, "role", void 0), l5 = e([n("esri.layers.support.Relationship")], l5);
var p14 = l5;

// node_modules/@arcgis/core/layers/mixins/FeatureLayerBase.js
var M2 = (M3) => {
  let E2 = class extends M3 {
    constructor() {
      super(...arguments), this.capabilities = null, this.copyright = null, this.datesInUnknownTimezone = false, this.displayField = null, this.definitionExpression = null, this.editFieldsInfo = null, this.editingInfo = null, this.elevationInfo = null, this.floorInfo = null, this.fullExtent = null, this.gdbVersion = null, this.geometryFieldsInfo = null, this.geometryType = null, this.hasM = void 0, this.hasZ = void 0, this.heightModelInfo = null, this.historicMoment = null, this.isTable = false, this.layerId = void 0, this.minScale = 0, this.maxScale = 0, this.globalIdField = null, this.objectIdField = null, this.relationships = null, this.sourceJSON = null, this.returnM = void 0, this.returnZ = void 0, this.serviceDefinitionExpression = null, this.spatialReference = k.WGS84, this.subtypeField = null, this.trackIdField = null, this.indexes = new (j.ofType(p13))(), this.userIsAdmin = false, this.version = void 0;
    }
    readCapabilitiesFromService(e4, o4) {
      return h2(e4, o4, this.url);
    }
    readEditingInfo(e4, o4) {
      const { editingInfo: r4 } = o4;
      return r4 ? { lastEditDate: null != r4.lastEditDate ? new Date(r4.lastEditDate) : null } : null;
    }
    readIsTableFromService(e4, o4) {
      return "Table" === o4.type;
    }
    readMinScale(e4, o4) {
      return o4.effectiveMinScale || e4 || 0;
    }
    readMaxScale(e4, o4) {
      return o4.effectiveMaxScale || e4 || 0;
    }
    readGlobalIdFieldFromService(e4, o4) {
      return z(o4);
    }
    readObjectIdFieldFromService(e4, o4) {
      return U(o4);
    }
    readServiceDefinitionExpression(e4, o4) {
      return o4.definitionQuery || o4.definitionExpression;
    }
    set url(e4) {
      const o4 = L({ layer: this, url: e4, nonStandardUrlAllowed: true, logger: s.getLogger(this.declaredClass) });
      this._set("url", o4.url), null != o4.layerId && this._set("layerId", o4.layerId);
    }
    writeUrl(e4, o4, r4, t2) {
      b(this, e4, null, o4, t2);
    }
    readVersion(e4, o4) {
      return B(o4);
    }
  };
  return e([y2({ readOnly: true, json: { read: false, origins: { service: { read: { source: ["advancedQueryCapabilities", "allowGeometryUpdates", "allowUpdateWithoutMValues", "archivingInfo", "capabilities", "datesInUnknownTimezone", "hasAttachments", "hasM", "hasZ", "maxRecordCount", "maxRecordCountFactor", "ownershipBasedAccessControlForFeatures", "standardMaxRecordCount", "supportedQueryFormats", "supportsAdvancedQueries", "supportsApplyEditsWithGlobalIds", "supportsAttachmentsByUploadId", "supportsAttachmentsResizing", "supportsCalculate", "supportsCoordinatesQuantization", "supportsExceedsLimitStatistics", "supportsFieldDescriptionProperty", "supportsQuantizationEditMode", "supportsRollbackOnFailureParameter", "supportsStatistics", "supportsTruncate", "supportsValidateSql", "tileMaxRecordCount", "useStandardizedQueries"] } } } } })], E2.prototype, "capabilities", void 0), e([o("service", "capabilities")], E2.prototype, "readCapabilitiesFromService", null), e([y2({ type: String, json: { origins: { service: { read: { source: "copyrightText" } } } } })], E2.prototype, "copyright", void 0), e([y2({ type: Boolean })], E2.prototype, "datesInUnknownTimezone", void 0), e([y2({ type: String, json: { origins: { service: { read: { source: "displayField" } } } } })], E2.prototype, "displayField", void 0), e([y2({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], E2.prototype, "definitionExpression", void 0), e([y2({ readOnly: true })], E2.prototype, "editFieldsInfo", void 0), e([y2({ readOnly: true })], E2.prototype, "editingInfo", void 0), e([o("editingInfo")], E2.prototype, "readEditingInfo", null), e([y2((() => {
    const e4 = y(d), o4 = e4.json.origins;
    return o4["web-map"] = { read: false, write: false }, o4["portal-item"] = { read: false, write: false }, e4;
  })())], E2.prototype, "elevationInfo", void 0), e([y2({ type: p, json: { read: { source: "layerDefinition.floorInfo" }, write: { target: "layerDefinition.floorInfo" } } })], E2.prototype, "floorInfo", void 0), e([y2({ type: w, json: { origins: { service: { read: { source: "extent" } } } } })], E2.prototype, "fullExtent", void 0), e([y2()], E2.prototype, "gdbVersion", void 0), e([y2({ readOnly: true, type: c8, json: { read: { source: "geometryProperties" } } })], E2.prototype, "geometryFieldsInfo", void 0), e([y2({ type: ["point", "polygon", "polyline", "multipoint", "multipatch", "mesh"], json: { origins: { service: { read: i9.read } } } })], E2.prototype, "geometryType", void 0), e([y2({ type: Boolean, json: { origins: { service: { read: true } } } })], E2.prototype, "hasM", void 0), e([y2({ type: Boolean, json: { origins: { service: { read: true } } } })], E2.prototype, "hasZ", void 0), e([y2({ readOnly: true, type: v2 })], E2.prototype, "heightModelInfo", void 0), e([y2({ type: Date })], E2.prototype, "historicMoment", void 0), e([y2({ readOnly: true })], E2.prototype, "isTable", void 0), e([o("service", "isTable", ["type"])], E2.prototype, "readIsTableFromService", null), e([y2({ type: Number, json: { origins: { service: { read: { source: "id" } }, "portal-item": { read: false, write: { target: "id" } } }, read: false } })], E2.prototype, "layerId", void 0), e([y2(v)], E2.prototype, "minScale", void 0), e([o("service", "minScale", ["minScale", "effectiveMinScale"])], E2.prototype, "readMinScale", null), e([y2(I)], E2.prototype, "maxScale", void 0), e([o("service", "maxScale", ["maxScale", "effectiveMaxScale"])], E2.prototype, "readMaxScale", null), e([y2({ type: String })], E2.prototype, "globalIdField", void 0), e([o("service", "globalIdField", ["globalIdField", "fields"])], E2.prototype, "readGlobalIdFieldFromService", null), e([y2({ type: String })], E2.prototype, "objectIdField", void 0), e([o("service", "objectIdField", ["objectIdField", "fields"])], E2.prototype, "readObjectIdFieldFromService", null), e([y2({ type: [p14], readOnly: true })], E2.prototype, "relationships", void 0), e([y2()], E2.prototype, "sourceJSON", void 0), e([y2({ type: Boolean })], E2.prototype, "returnM", void 0), e([y2({ type: Boolean })], E2.prototype, "returnZ", void 0), e([y2({ readOnly: true })], E2.prototype, "serviceDefinitionExpression", void 0), e([o("service", "serviceDefinitionExpression", ["definitionQuery", "definitionExpression"])], E2.prototype, "readServiceDefinitionExpression", null), e([y2({ type: k, json: { origins: { service: { read: { source: "extent.spatialReference" } } } } })], E2.prototype, "spatialReference", void 0), e([y2({ type: String, readOnly: true, json: { origins: { service: { read: true } } } })], E2.prototype, "subtypeField", void 0), e([y2({ type: String, json: { read: { source: "timeInfo.trackIdField" } } })], E2.prototype, "trackIdField", void 0), e([y2({ readOnly: true, json: { write: false } })], E2.prototype, "serverGens", void 0), e([y2({ type: j.ofType(p13), readOnly: true })], E2.prototype, "indexes", void 0), e([y2(f)], E2.prototype, "url", null), e([r2("url")], E2.prototype, "writeUrl", null), e([y2({ readOnly: true })], E2.prototype, "userIsAdmin", void 0), e([y2({ json: { origins: { service: { read: true } }, read: false } })], E2.prototype, "version", void 0), e([o("service", "version", ["currentVersion", "capabilities", "drawingInfo", "hasAttachments", "htmlPopupType", "relationships", "timeInfo", "typeIdField", "types"])], E2.prototype, "readVersion", null), E2 = e([n("esri.layers.mixins.FeatureLayerBase")], E2), E2;
};

export {
  y4 as y,
  i9 as i,
  h2 as h,
  F,
  x2 as x,
  P,
  O,
  v3 as v,
  E,
  I2 as I,
  T,
  j3 as j,
  M,
  D,
  G,
  L2 as L,
  z,
  U,
  M2
};
//# sourceMappingURL=chunk-6CR2FXC5.js.map
