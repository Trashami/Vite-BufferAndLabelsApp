import {
  n
} from "./chunk-D4V6J5BT.js";
import {
  a,
  n as n2
} from "./chunk-OSHI574D.js";

// node_modules/@arcgis/core/chunks/vec3.js
function s(t) {
  const n3 = t[0], a2 = t[1], s2 = t[2];
  return Math.sqrt(n3 * n3 + a2 * a2 + s2 * s2);
}
function r(t, n3) {
  return t[0] = n3[0], t[1] = n3[1], t[2] = n3[2], t;
}
function o(t, n3, a2, s2) {
  return t[0] = n3, t[1] = a2, t[2] = s2, t;
}
function u(t, n3, a2) {
  return t[0] = n3[0] + a2[0], t[1] = n3[1] + a2[1], t[2] = n3[2] + a2[2], t;
}
function e(t, n3, a2) {
  return t[0] = n3[0] - a2[0], t[1] = n3[1] - a2[1], t[2] = n3[2] - a2[2], t;
}
function c(t, n3, a2) {
  return t[0] = n3[0] * a2[0], t[1] = n3[1] * a2[1], t[2] = n3[2] * a2[2], t;
}
function i(t, n3, a2) {
  return t[0] = n3[0] / a2[0], t[1] = n3[1] / a2[1], t[2] = n3[2] / a2[2], t;
}
function h(t, n3) {
  return t[0] = Math.ceil(n3[0]), t[1] = Math.ceil(n3[1]), t[2] = Math.ceil(n3[2]), t;
}
function M(t, n3) {
  return t[0] = Math.floor(n3[0]), t[1] = Math.floor(n3[1]), t[2] = Math.floor(n3[2]), t;
}
function f(t, n3) {
  return t[0] = Math.abs(n3[0]), t[1] = Math.abs(n3[1]), t[2] = Math.abs(n3[2]), t;
}
function l(t, n3) {
  return t[0] = Math.sign(n3[0]), t[1] = Math.sign(n3[1]), t[2] = Math.sign(n3[2]), t;
}
function m(t, n3, a2) {
  return t[0] = Math.min(n3[0], a2[0]), t[1] = Math.min(n3[1], a2[1]), t[2] = Math.min(n3[2], a2[2]), t;
}
function d(t, n3, a2) {
  return t[0] = Math.max(n3[0], a2[0]), t[1] = Math.max(n3[1], a2[1]), t[2] = Math.max(n3[2], a2[2]), t;
}
function b(t, n3) {
  return t[0] = Math.round(n3[0]), t[1] = Math.round(n3[1]), t[2] = Math.round(n3[2]), t;
}
function g(t, n3, a2) {
  return t[0] = n3[0] * a2, t[1] = n3[1] * a2, t[2] = n3[2] * a2, t;
}
function q(t, n3, a2, s2) {
  return t[0] = n3[0] + a2[0] * s2, t[1] = n3[1] + a2[1] * s2, t[2] = n3[2] + a2[2] * s2, t;
}
function x(t, n3) {
  const a2 = n3[0] - t[0], s2 = n3[1] - t[1], r2 = n3[2] - t[2];
  return Math.sqrt(a2 * a2 + s2 * s2 + r2 * r2);
}
function p(t, n3) {
  const a2 = n3[0] - t[0], s2 = n3[1] - t[1], r2 = n3[2] - t[2];
  return a2 * a2 + s2 * s2 + r2 * r2;
}
function v(t) {
  const n3 = t[0], a2 = t[1], s2 = t[2];
  return n3 * n3 + a2 * a2 + s2 * s2;
}
function j(t, n3) {
  return t[0] = -n3[0], t[1] = -n3[1], t[2] = -n3[2], t;
}
function y(t, n3) {
  return t[0] = 1 / n3[0], t[1] = 1 / n3[1], t[2] = 1 / n3[2], t;
}
function z(t, n3) {
  const a2 = n3[0], s2 = n3[1], r2 = n3[2];
  let o2 = a2 * a2 + s2 * s2 + r2 * r2;
  return o2 > 0 && (o2 = 1 / Math.sqrt(o2), t[0] = n3[0] * o2, t[1] = n3[1] * o2, t[2] = n3[2] * o2), t;
}
function P(t, n3) {
  return t[0] * n3[0] + t[1] * n3[1] + t[2] * n3[2];
}
function _(t, n3, a2) {
  const s2 = n3[0], r2 = n3[1], o2 = n3[2], u2 = a2[0], e2 = a2[1], c2 = a2[2];
  return t[0] = r2 * c2 - o2 * e2, t[1] = o2 * u2 - s2 * c2, t[2] = s2 * e2 - r2 * u2, t;
}
function A(t, n3, a2, s2) {
  const r2 = n3[0], o2 = n3[1], u2 = n3[2];
  return t[0] = r2 + s2 * (a2[0] - r2), t[1] = o2 + s2 * (a2[1] - o2), t[2] = u2 + s2 * (a2[2] - u2), t;
}
function D(t, n3, a2, s2, r2, o2) {
  const u2 = o2 * o2, e2 = u2 * (2 * o2 - 3) + 1, c2 = u2 * (o2 - 2) + o2, i2 = u2 * (o2 - 1), h2 = u2 * (3 - 2 * o2);
  return t[0] = n3[0] * e2 + a2[0] * c2 + s2[0] * i2 + r2[0] * h2, t[1] = n3[1] * e2 + a2[1] * c2 + s2[1] * i2 + r2[1] * h2, t[2] = n3[2] * e2 + a2[2] * c2 + s2[2] * i2 + r2[2] * h2, t;
}
function I(t, n3, a2, s2, r2, o2) {
  const u2 = 1 - o2, e2 = u2 * u2, c2 = o2 * o2, i2 = e2 * u2, h2 = 3 * o2 * e2, M2 = 3 * c2 * u2, f2 = c2 * o2;
  return t[0] = n3[0] * i2 + a2[0] * h2 + s2[0] * M2 + r2[0] * f2, t[1] = n3[1] * i2 + a2[1] * h2 + s2[1] * M2 + r2[1] * f2, t[2] = n3[2] * i2 + a2[2] * h2 + s2[2] * M2 + r2[2] * f2, t;
}
function L(t, n3) {
  n3 = n3 || 1;
  const s2 = n2, r2 = 2 * s2() * Math.PI, o2 = 2 * s2() - 1, u2 = Math.sqrt(1 - o2 * o2) * n3;
  return t[0] = Math.cos(r2) * u2, t[1] = Math.sin(r2) * u2, t[2] = o2 * n3, t;
}
function O(t, n3, a2) {
  const s2 = n3[0], r2 = n3[1], o2 = n3[2];
  return t[0] = a2[0] * s2 + a2[4] * r2 + a2[8] * o2 + a2[12], t[1] = a2[1] * s2 + a2[5] * r2 + a2[9] * o2 + a2[13], t[2] = a2[2] * s2 + a2[6] * r2 + a2[10] * o2 + a2[14], t;
}
function S(t, n3, a2) {
  const s2 = n3[0], r2 = n3[1], o2 = n3[2];
  return t[0] = s2 * a2[0] + r2 * a2[3] + o2 * a2[6], t[1] = s2 * a2[1] + r2 * a2[4] + o2 * a2[7], t[2] = s2 * a2[2] + r2 * a2[5] + o2 * a2[8], t;
}
function E(t, n3, a2) {
  const s2 = a2[0], r2 = a2[1], o2 = a2[2], u2 = a2[3], e2 = n3[0], c2 = n3[1], i2 = n3[2];
  let h2 = r2 * i2 - o2 * c2, M2 = o2 * e2 - s2 * i2, f2 = s2 * c2 - r2 * e2, l2 = r2 * f2 - o2 * M2, m2 = o2 * h2 - s2 * f2, d2 = s2 * M2 - r2 * h2;
  const b2 = 2 * u2;
  return h2 *= b2, M2 *= b2, f2 *= b2, l2 *= 2, m2 *= 2, d2 *= 2, t[0] = e2 + h2 + l2, t[1] = c2 + M2 + m2, t[2] = i2 + f2 + d2, t;
}
function Q(t, n3, a2, s2) {
  const r2 = [], o2 = [];
  return r2[0] = n3[0] - a2[0], r2[1] = n3[1] - a2[1], r2[2] = n3[2] - a2[2], o2[0] = r2[0], o2[1] = r2[1] * Math.cos(s2) - r2[2] * Math.sin(s2), o2[2] = r2[1] * Math.sin(s2) + r2[2] * Math.cos(s2), t[0] = o2[0] + a2[0], t[1] = o2[1] + a2[1], t[2] = o2[2] + a2[2], t;
}
function R(t, n3, a2, s2) {
  const r2 = [], o2 = [];
  return r2[0] = n3[0] - a2[0], r2[1] = n3[1] - a2[1], r2[2] = n3[2] - a2[2], o2[0] = r2[2] * Math.sin(s2) + r2[0] * Math.cos(s2), o2[1] = r2[1], o2[2] = r2[2] * Math.cos(s2) - r2[0] * Math.sin(s2), t[0] = o2[0] + a2[0], t[1] = o2[1] + a2[1], t[2] = o2[2] + a2[2], t;
}
function T(t, n3, a2, s2) {
  const r2 = [], o2 = [];
  return r2[0] = n3[0] - a2[0], r2[1] = n3[1] - a2[1], r2[2] = n3[2] - a2[2], o2[0] = r2[0] * Math.cos(s2) - r2[1] * Math.sin(s2), o2[1] = r2[0] * Math.sin(s2) + r2[1] * Math.cos(s2), o2[2] = r2[2], t[0] = o2[0] + a2[0], t[1] = o2[1] + a2[1], t[2] = o2[2] + a2[2], t;
}
function k(t, n3) {
  r(w, t), r(B, n3), z(w, w), z(B, B);
  const a2 = P(w, B);
  return a2 > 1 ? 0 : a2 < -1 ? Math.PI : Math.acos(a2);
}
var w = n();
var B = n();
function C(t) {
  return "vec3(" + t[0] + ", " + t[1] + ", " + t[2] + ")";
}
function F(t, n3) {
  return t[0] === n3[0] && t[1] === n3[1] && t[2] === n3[2];
}
function G(t, a2) {
  if (t === a2)
    return true;
  const s2 = t[0], r2 = t[1], o2 = t[2], u2 = a2[0], e2 = a2[1], c2 = a2[2], i2 = a();
  return Math.abs(s2 - u2) <= i2 * Math.max(1, Math.abs(s2), Math.abs(u2)) && Math.abs(r2 - e2) <= i2 * Math.max(1, Math.abs(r2), Math.abs(e2)) && Math.abs(o2 - c2) <= i2 * Math.max(1, Math.abs(o2), Math.abs(c2));
}
function H(t, n3, a2) {
  const s2 = a2[0] - n3[0], r2 = a2[1] - n3[1], o2 = a2[2] - n3[2];
  let u2 = s2 * s2 + r2 * r2 + o2 * o2;
  return u2 > 0 ? (u2 = 1 / Math.sqrt(u2), t[0] = s2 * u2, t[1] = r2 * u2, t[2] = o2 * u2, t) : (t[0] = 0, t[1] = 0, t[2] = 0, t);
}
var J = e;
var K = c;
var N = i;
var U = x;
var X = p;
var Y = s;
var Z = v;
var V = Object.freeze(Object.defineProperty({ __proto__: null, length: s, copy: r, set: o, add: u, subtract: e, multiply: c, divide: i, ceil: h, floor: M, abs: f, sign: l, min: m, max: d, round: b, scale: g, scaleAndAdd: q, distance: x, squaredDistance: p, squaredLength: v, negate: j, inverse: y, normalize: z, dot: P, cross: _, lerp: A, hermite: D, bezier: I, random: L, transformMat4: O, transformMat3: S, transformQuat: E, rotateX: Q, rotateY: R, rotateZ: T, angle: k, str: C, exactEquals: F, equals: G, direction: H, sub: J, mul: K, div: N, dist: U, sqrDist: X, len: Y, sqrLen: Z }, Symbol.toStringTag, { value: "Module" }));

export {
  s,
  r,
  o,
  u,
  e,
  c,
  i,
  g,
  q,
  x,
  p,
  v,
  j,
  z,
  P,
  _,
  A,
  O,
  S,
  E,
  T,
  F,
  G,
  H,
  J,
  U,
  X,
  Y,
  Z
};
//# sourceMappingURL=chunk-3LR5O4WA.js.map
