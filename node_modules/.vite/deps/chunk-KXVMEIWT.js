import {
  e,
  e2,
  m as m2,
  n2 as n,
  r2 as r
} from "./chunk-OOLCFNXJ.js";
import {
  m
} from "./chunk-HVKDYDPP.js";
import {
  f
} from "./chunk-MIHB3CIK.js";

// node_modules/@arcgis/core/core/Clonable.js
var i = (s) => {
  let i2 = class extends s {
    clone() {
      var _a;
      const o = f(e2(this), "unable to clone instance of non-accessor class"), s2 = o.metadatas, c = o.store, i3 = {}, l2 = /* @__PURE__ */ new Map();
      for (const r2 in s2) {
        const o2 = s2[r2], n2 = c == null ? void 0 : c.originOf(r2), a2 = o2.clonable;
        if (o2.readOnly || false === a2 || n2 !== r.USER && n2 !== r.DEFAULTS && n2 !== r.WEB_MAP && n2 !== r.WEB_SCENE)
          continue;
        const p = this[r2];
        let f2 = null;
        f2 = "function" == typeof a2 ? a2(p) : "reference" === a2 ? p : m(p), null != p && null == f2 || (n2 === r.DEFAULTS ? l2.set(r2, f2) : i3[r2] = f2);
      }
      const a = new (0, Object.getPrototypeOf(this).constructor)(i3);
      if (l2.size) {
        const o2 = (_a = e2(a)) == null ? void 0 : _a.store;
        if (o2)
          for (const [s3, t] of l2)
            o2.set(s3, t, r.DEFAULTS);
      }
      return a;
    }
  };
  return i2 = e([n("esri.core.Clonable")], i2), i2;
};
var l = class extends i(m2) {
};
l = e([n("esri.core.Clonable")], l);

export {
  i,
  l
};
//# sourceMappingURL=chunk-KXVMEIWT.js.map
