import {
  n as n2
} from "./chunk-44ZQUD2T.js";
import "./chunk-QPAL3PC4.js";
import {
  o
} from "./chunk-MGP5J42F.js";
import "./chunk-QXJIQKLY.js";
import "./chunk-GRWIJKD6.js";
import "./chunk-WGK2FJEK.js";
import "./chunk-CNTOSDAN.js";
import "./chunk-7N2Z7KNR.js";
import "./chunk-DBT4KOKX.js";
import "./chunk-EPMXCACW.js";
import "./chunk-KG5RWWIW.js";
import "./chunk-27YO3FKC.js";
import "./chunk-6TBB7UXB.js";
import "./chunk-UO3LS2M5.js";
import "./chunk-EQNT4A7P.js";
import "./chunk-2GP5D74I.js";
import "./chunk-QISOH77W.js";
import "./chunk-XO5VJRK4.js";
import "./chunk-OAXPH6DL.js";
import "./chunk-O4DPVR3F.js";
import "./chunk-MATM5L52.js";
import "./chunk-4OM3EX6P.js";
import "./chunk-3OFVLRSL.js";
import "./chunk-UWKVAZQ6.js";
import "./chunk-FV3CMB37.js";
import "./chunk-TFHLTN6F.js";
import "./chunk-UDYHZLTE.js";
import "./chunk-IQBIGNPU.js";
import "./chunk-4JNOVZUK.js";
import "./chunk-ZNRXLY4R.js";
import "./chunk-75RMBUYZ.js";
import "./chunk-TJ2I6XQT.js";
import "./chunk-EDHROVWI.js";
import "./chunk-34YPGGJT.js";
import "./chunk-ZEEU5HOK.js";
import {
  l,
  u
} from "./chunk-INL7BDTP.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-REIQNAQW.js";
import "./chunk-NRP45AHD.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-EHPBHJYZ.js";
import "./chunk-3MNMDUQZ.js";
import "./chunk-UWG37XSU.js";
import "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import "./chunk-HLM6QCL2.js";
import "./chunk-RXYULINL.js";
import "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import "./chunk-MJXQTGI2.js";
import "./chunk-LIZHLHNA.js";
import "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/views/2d/layers/features/tileRenderers/support/HeatmapSource.js
var i = class {
  constructor() {
    this.gradient = null, this.height = 512, this.width = 512;
  }
  render(i2) {
    l(i2, 512, this.intensities, this.gradient, this.minDensity, this.maxDensity);
  }
};

// node_modules/@arcgis/core/views/2d/layers/features/tileRenderers/HeatmapTileRenderer.js
var o2 = class extends o {
  constructor(e2) {
    super(e2), this._intensityInfo = { minDensity: 0, maxDensity: 0 }, this.type = "heatmap", this.featuresView = { attributeView: { initialize: () => {
    }, requestUpdate: () => {
    } }, requestRender: () => {
    } }, this._container = new n2(e2.tileInfoView);
  }
  createTile(e2) {
    const t = this._container.createTile(e2);
    return this.tileInfoView.getTileCoords(t.bitmap, e2), t.bitmap.resolution = this.tileInfoView.getTileResolution(e2), t;
  }
  onConfigUpdate() {
    const e2 = this.layer.renderer;
    if ("heatmap" === e2.type) {
      const { minDensity: t, maxDensity: r, colorStops: s } = e2;
      this._intensityInfo.minDensity = t, this._intensityInfo.maxDensity = r, this._gradient = u(s), this.tiles.forEach((e3) => {
        const i2 = e3.bitmap.source;
        i2 && (i2.minDensity = t, i2.maxDensity = r, i2.gradient = this._gradient, e3.bitmap.invalidateTexture());
      });
    }
  }
  hitTest() {
    return Promise.resolve([]);
  }
  install(e2) {
    e2.addChild(this._container);
  }
  uninstall(e2) {
    this._container.removeAllChildren(), e2.removeChild(this._container);
  }
  disposeTile(e2) {
    this._container.removeChild(e2), e2.destroy();
  }
  supportsRenderer(e2) {
    return e2 && "heatmap" === e2.type;
  }
  onTileData(e2) {
    const t = this.tiles.get(e2.tileKey);
    if (!t)
      return;
    const i2 = e2.intensityInfo, { minDensity: r, maxDensity: s } = this._intensityInfo, o3 = t.bitmap.source || new i();
    o3.intensities = i2 && i2.matrix || null, o3.minDensity = r, o3.maxDensity = s, o3.gradient = this._gradient, t.bitmap.source = o3, this._container.addChild(t), this._container.requestRender(), this.requestUpdate();
  }
  onTileError(e2) {
    console.error(e2);
  }
  lockGPUUploads() {
  }
  unlockGPUUploads() {
  }
  fetchResource(e2, t) {
    return console.error(e2), Promise.reject();
  }
};
o2 = e([n("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")], o2);
var a = o2;
export {
  a as default
};
//# sourceMappingURL=HeatmapTileRenderer-L3UOB6PU.js.map
