import {
  E,
  b,
  i,
  l,
  p as p3,
  s as s2
} from "./chunk-2J2YGTXG.js";
import {
  C,
  d,
  j,
  o as o2,
  p as p2
} from "./chunk-75RMBUYZ.js";
import {
  n as n2,
  t as t2
} from "./chunk-ZEEU5HOK.js";
import {
  g
} from "./chunk-C5H57NTD.js";
import {
  J,
  P,
  Y,
  Z,
  _,
  e,
  o,
  p,
  q,
  s,
  x
} from "./chunk-3LR5O4WA.js";
import {
  n,
  r as r2,
  t
} from "./chunk-D4V6J5BT.js";
import {
  r
} from "./chunk-MIHB3CIK.js";

// node_modules/@arcgis/core/views/support/geometry3dUtils.js
function Y2({ start: t4, end: o3, type: c }, u, f) {
  const i2 = [], a = u, p4 = o2(D, o3, t4), A2 = o2(T, t4, a), L = p2(p4), h = 2 * j(p4, A2), d2 = h * h - 4 * L * (p2(A2) - f * f);
  if (0 === d2) {
    const n4 = -h / (2 * L);
    (c === q2.PLANE || n4 >= 0) && i2.push(d(r2(0, 0, u[2]), t4, p4, n4));
  } else if (d2 > 0) {
    const n4 = Math.sqrt(d2), s3 = (-h + n4) / (2 * L);
    (c === q2.PLANE || s3 >= 0) && i2.push(d(r2(0, 0, u[2]), t4, p4, s3));
    const r3 = (-h - n4) / (2 * L);
    (c === q2.PLANE || r3 >= 0) && i2.push(d(r2(0, 0, u[2]), t4, p4, r3));
  }
  return i2;
}
function j2(t4, s3) {
  const e3 = t4.start, c = t4.end, p4 = o2(D, c, e3), A2 = o(T, -p4[1], p4[0], 0), L = s3.start, h = s3.end, d2 = J(B, h, L), m = P(d2, A2), y = o(C2, e3[0], e3[1], 0), E3 = J(G, y, L), N2 = P(E3, A2);
  if (Math.abs(m) < z)
    return Math.abs(N2), [];
  const Y3 = q(J2, L, d2, N2 / m);
  if (s3.type === b.RAY) {
    const t5 = J(K, Y3, L);
    if (P(t5, d2) < -z)
      return [];
  }
  if (t4.type === q2.HALF_PLANE) {
    const t5 = C(K, Y3, e3);
    if (j(t5, p4) < -z)
      return [];
  }
  return [t(Y3)];
}
function l2(t4, n4) {
  return x2(g2(O, n4[2], t4), n4);
}
function I(t4, n4) {
  const s3 = 0, r3 = b2(g2(O, s3, t4), g2(Q, s3, n4)), e3 = [];
  for (const o3 of r3)
    e3.push(t2(o3));
  return e3;
}
function v(t4, n4) {
  return F(t4, g2(O, t4[2], n4));
}
function M(t4, n4) {
  return H(g2(O, t4[2], n4), t4);
}
function k(t4, n4, s3) {
  const r3 = o(D, t4[0], t4[1], n4[2]), e3 = e(T, r3, n4), o3 = s3 / s(e3);
  return q(n(), n4, e3, o3);
}
function F(t4, { start: n4, end: s3, type: r3 }) {
  const e3 = J(D, t4, n4), o3 = J(T, s3, n4), c = P(e3, o3) / P(o3, o3);
  return q(n(), n4, o3, r3 === b.RAY ? Math.max(c, 0) : c);
}
function H({ start: t4, end: n4, type: s3 }, r3) {
  const e3 = J(D, r3, t4), o3 = J(T, n4, t4);
  if (s3 === b.RAY && P(o3, e3) < -z)
    return x(t4, r3);
  const c = _(B, o3, e3);
  return Y(c) / Y(o3);
}
function _2({ start: o3, end: c, type: u }, p4, A2) {
  const L = [];
  if (g(o3[2], p4[2], z) && g(c[2], p4[2], z)) {
    const t4 = o3, f = p4, i2 = o2(D, c, t4), a = o2(T, t4, f), h = p2(i2), d2 = 2 * j(i2, a), m = d2 * d2 - 4 * h * (p2(a) - A2 * A2);
    if (0 === m) {
      const n4 = -d2 / (2 * h);
      (u === b.LINE || n4 >= 0) && L.push(d(r2(0, 0, p4[2]), t4, i2, n4));
    } else if (m > 0) {
      const n4 = Math.sqrt(m), s3 = (-d2 + n4) / (2 * h);
      (u === b.LINE || s3 >= 0) && L.push(d(r2(0, 0, p4[2]), t4, i2, s3));
      const r3 = (-d2 - n4) / (2 * h);
      (u === b.LINE || r3 >= 0) && L.push(d(r2(0, 0, p4[2]), t4, i2, r3));
    }
  } else {
    const n4 = J(D, c, o3);
    if (g(n4[2], 0, z))
      return L;
    const s3 = (p4[2] - o3[2]) / n4[2], r3 = q(T, o3, n4, s3);
    if (u === b.RAY) {
      const t4 = J(B, r3, o3);
      if (P(n4, t4) < -z)
        return L;
    }
    for (const t4 of U(p4, A2, r3))
      L.push(t4);
  }
  return L;
}
function b2(n4, s3) {
  const r3 = n4.start, e3 = n4.end, o3 = s3.start, c = s3.end, u = J(D, e3, r3), p4 = J(T, c, o3), A2 = J(B, o3, r3), L = _(C2, u, p4), d2 = P(A2, L);
  if (!g(d2, 0, z))
    return [];
  const y = Z(L);
  if (g(y, 0, z))
    return [];
  const E3 = _(G, A2, p4), N2 = P(E3, L) / y, Y3 = q(J2, r3, u, N2);
  if (n4.type === b.RAY) {
    const t4 = J(K, Y3, r3);
    if (P(u, t4) < -z)
      return [];
  }
  if (s3.type === b.RAY) {
    const t4 = J(K, Y3, o3);
    if (P(p4, t4) < -z)
      return [];
  }
  return [t(Y3)];
}
function x2({ start: t4, end: n4, type: s3 }, r3) {
  const e3 = J(D, r3, t4), o3 = J(T, n4, t4), c = _(B, o3, e3);
  if (Z(c) / Z(o3) < z)
    switch (s3) {
      case b.LINE:
        return [t(r3)];
      case b.RAY:
        return P(o3, e3) < -z ? [] : [t(r3)];
    }
  return [];
}
function U(n4, s3, r3) {
  return g(n4[2], r3[2], z) && g(p(r3, n4), s3 * s3, z) ? [t(r3)] : [];
}
function g2(t4, n4, { start: s3, end: r3, type: e3 }) {
  return o(t4.start, s3[0], s3[1], n4), o(t4.end, r3[0], r3[1], n4), t4.type = w[e3], t4;
}
var q2;
!function(t4) {
  t4[t4.PLANE = 0] = "PLANE", t4[t4.HALF_PLANE = 1] = "HALF_PLANE";
}(q2 || (q2 = {}));
var w = { [q2.PLANE]: b.LINE, [q2.HALF_PLANE]: b.RAY };
var z = 1e-6;
var D = n();
var T = n();
var B = n();
var C2 = n();
var G = n();
var J2 = n();
var K = n();
var O = { start: n(), end: n(), type: b.LINE };
var Q = { start: n(), end: n(), type: b.LINE };

// node_modules/@arcgis/core/views/interactive/snapping/SnappingConstraint.js
var x3 = class {
  constructor(t4) {
    this.coordinateHelper = t4;
  }
  intersect(t4) {
    return w2(this, t4);
  }
};
var j3 = class extends x3 {
  constructor(t4, e3) {
    super(t4), this.point = e3, this.pointXYZ = t4.toXYZ(e3);
  }
  equals(t4) {
    return _3(t4) && i(this.point, t4.point);
  }
  check(t4) {
    const e3 = this.coordinateHelper.toXYZ(t4, D2);
    return p(e3, this.pointXYZ) < p3.pointThreshold;
  }
  closestTo() {
    return this.coordinateHelper.clone(this.point);
  }
};
var O2 = class extends x3 {
  constructor(t4, e3, s3, n4) {
    super(t4), this.start = e3, this.end = s3, this.type = n4, this.startXYZ = t4.toXYZ(e3), this.endXYZ = t4.toXYZ(s3), this.lineLike = { start: this.startXYZ, end: this.endXYZ, type: this.type };
  }
  equals(t4) {
    return S(t4) && this.type === t4.type && i(this.start, t4.start) && i(this.end, t4.end);
  }
  check(t4) {
    const e3 = this.coordinateHelper.toXYZ(t4, D2);
    return H(this.lineLike, e3) < p3.pointOnLineThreshold;
  }
  closestTo(t4) {
    const e3 = this.coordinateHelper, s3 = e3.toXYZ(t4, D2), n4 = F(s3, this.lineLike);
    return e3.fromXYZ(n4);
  }
};
var A = class extends O2 {
  constructor(t4, e3, s3) {
    super(t4, e3, s3, b.LINE);
  }
};
var E2 = class extends x3 {
  constructor(t4, e3, s3, n4) {
    super(t4), this.intersection = e3, this.first = s3, this.second = n4;
  }
  equals(t4) {
    return t4 instanceof E2 && this.first.equals(t4.first) && this.second.equals(t4.second);
  }
  check() {
    return false;
  }
  closestTo() {
    return this.coordinateHelper.clone(this.intersection);
  }
};
var I2 = class extends x3 {
  constructor(t4, e3, s3, n4) {
    super(t4), this.basePoint = e3, this.first = s3, this.second = n4;
  }
  equals(t4) {
    return t4 instanceof I2 && this.first.equals(t4.first) && this.second.equals(t4.second);
  }
  check() {
    return false;
  }
  closestTo(t4) {
    const e3 = this.basePoint, s3 = this.coordinateHelper, n4 = s3.toXYZ(t4, D2), r3 = o(J3, e3[0], e3[1], n4[2]);
    return s3.fromXYZ(r3);
  }
};
var P2 = class extends x3 {
  constructor(t4, e3, s3) {
    super(t4), this.center = e3, this.radius = s3, this.centerXYZ = t4.toXYZ(e3);
  }
  equals(t4) {
    return z2(t4) && this.center[0] === t4.center[0] && this.center[1] === t4.center[1] && this.radius === t4.radius;
  }
  check() {
    return false;
  }
  closestTo(t4) {
    const e3 = this.coordinateHelper, s3 = e3.toXYZ(t4, D2), n4 = k(s3, this.centerXYZ, this.radius);
    return n4[2] = e3.getZ(t4, this.centerXYZ[2]), e3.fromXYZ(n4);
  }
};
var b3 = class extends x3 {
  constructor(t4, e3, s3, n4) {
    super(t4), this.start = e3, this.end = s3, this.type = n4, this.planeLike = { start: e3, end: s3, type: n4 };
  }
  equals(t4) {
    return B2(t4) && this.type === t4.type && i(this.start, t4.start) && i(this.end, t4.end);
  }
  check(t4) {
    const e3 = this.coordinateHelper.toXYZ(t4, D2);
    return M(e3, this.planeLike) < p3.pointOnLineThreshold;
  }
  closestTo(t4) {
    const e3 = this.coordinateHelper, s3 = e3.toXYZ(t4, D2), n4 = v(s3, this.planeLike);
    return e3.fromXYZ(n4);
  }
  closestEndTo(t4) {
    const { start: n4, end: r3 } = this;
    return Math.sign(j(o2(K2, r3, n4), o2(Q2, t4, n4))) > 0 ? r3 : n4;
  }
};
var v2 = class extends b3 {
  constructor(t4, e3, s3) {
    super(t4, e3, s3, q2.HALF_PLANE);
  }
};
var G2 = class extends b3 {
  constructor(t4, e3, s3) {
    super(t4, e3, s3, q2.PLANE);
  }
};
var N = class extends x3 {
  constructor(t4, e3, s3, n4) {
    super(t4), this.start = e3, this.end = s3, this.getZ = n4, this.planeLike = { start: e3, end: s3, type: q2.HALF_PLANE };
  }
  equals(t4) {
    return C3(t4) && i(this.start, t4.start) && i(this.end, t4.end) && this.getZ === t4.getZ;
  }
  check(t4) {
    const e3 = this.coordinateHelper.toXYZ(t4, D2), s3 = U2(this, e3);
    return p(e3, s3) < p3.pointThreshold;
  }
  closestTo(t4) {
    const e3 = this.coordinateHelper, s3 = U2(this, e3.toXYZ(t4, D2));
    return e3.fromXYZ(s3);
  }
  addIfOnTheGround(e3, s3) {
    for (const n4 of s3) {
      const s4 = this.getZ(n4[0], n4[1], n4[2]);
      r(s4) && Math.abs(n4[2] - s4) < z && (n4[2] = s4, e3.push(n4));
    }
  }
};
function U2(e3, s3) {
  const n4 = v(s3, e3.planeLike), r3 = e3.getZ(s3[0], s3[1], s3[2]);
  return r(r3) && (n4[2] = r3), n4;
}
function w2(t4, e3) {
  let s3 = [];
  if (_3(t4)) {
    const { pointXYZ: n4 } = t4;
    S(e3) ? s3 = x2(e3.lineLike, n4) : z2(e3) ? s3 = U(e3.centerXYZ, e3.radius, n4) : B2(e3) ? s3 = l2(e3.planeLike, n4) : C3(e3) && (s3 = F2(e3, t4));
  } else if (S(t4)) {
    const { lineLike: n4 } = t4;
    _3(e3) ? s3 = x2(n4, e3.pointXYZ) : S(e3) ? s3 = b2(n4, e3.lineLike) : z2(e3) ? s3 = _2(n4, e3.centerXYZ, e3.radius) : B2(e3) ? s3 = j2(e3.planeLike, n4) : C3(e3) && (s3 = F2(e3, t4));
  } else if (z2(t4)) {
    const { centerXYZ: n4, radius: r3 } = t4;
    S(e3) ? s3 = _2(e3.lineLike, n4, r3) : _3(e3) ? s3 = U(n4, r3, e3.pointXYZ) : B2(e3) ? s3 = Y2(e3.planeLike, n4, r3) : C3(e3) && (s3 = F2(e3, t4));
  } else if (B2(t4)) {
    const { planeLike: n4, coordinateHelper: r3 } = t4;
    if (B2(e3))
      return I(n4, e3.planeLike).map((s4) => new I2(r3, r3.fromXYZ(s4), t4, e3));
    _3(e3) ? s3 = l2(n4, e3.pointXYZ) : S(e3) ? s3 = j2(n4, e3.lineLike) : z2(e3) ? s3 = Y2(n4, e3.centerXYZ, e3.radius) : C3(e3) && (s3 = F2(e3, t4));
  } else
    C3(t4) && (s3 = F2(t4, e3));
  return M2(s3, t4, e3);
}
function F2(e3, s3) {
  const { planeLike: n4, getZ: r3 } = e3, i2 = [];
  if (_3(s3))
    e3.addIfOnTheGround(i2, l2(n4, s3.pointXYZ));
  else if (S(s3))
    e3.addIfOnTheGround(i2, j2(n4, s3.lineLike));
  else if (z2(s3))
    e3.addIfOnTheGround(i2, Y2(n4, s3.centerXYZ, s3.radius));
  else if (B2(s3) || C3(s3))
    for (const [c, a] of I(n4, s3.planeLike)) {
      const e4 = r3(c, a, 0);
      r(e4) && i2.push(r2(c, a, e4));
    }
  return i2;
}
function M2(t4, e3, s3) {
  const n4 = e3.coordinateHelper;
  return t4.map((t5) => new E2(n4, n4.fromXYZ(t5), e3, s3));
}
function _3(t4) {
  return t4 instanceof j3;
}
function S(t4) {
  return t4 instanceof O2;
}
function z2(t4) {
  return t4 instanceof P2;
}
function B2(t4) {
  return t4 instanceof b3;
}
function C3(t4) {
  return t4 instanceof N;
}
var D2 = n();
var J3 = n();
var K2 = n2();
var Q2 = n2();

// node_modules/@arcgis/core/views/interactive/snapping/candidates/SnappingCandidate.js
var t3 = class {
  constructor(t4, i2, o3, s3, n4) {
    this.coordinateHelper = t4, this.targetPoint = i2, this.constraint = o3, this.elevationInfo = s3, this.domain = n4;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/candidates/FeatureSnappingCandidate.js
var n3 = class extends t3 {
  constructor({ coordinateHelper: o3, targetPoint: n4, objectId: e3, constraint: r3, elevationInfo: i2 }) {
    super(o3, n4, r3, i2, E.FEATURE), this.objectId = e3;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/candidates/EdgeSnappingCandidate.js
var e2 = class extends n3 {
  constructor(n4) {
    super({ ...n4, constraint: new A(n4.coordinateHelper, n4.edgeStart, n4.edgeEnd) });
  }
  get hints() {
    return [new s2(l.REFERENCE, this.constraint.start, this.constraint.end, this.elevationInfo, this.domain)];
  }
};

export {
  F,
  j3 as j,
  E2 as E,
  P2 as P,
  v2 as v,
  G2 as G,
  N,
  t3 as t,
  n3 as n,
  e2 as e
};
//# sourceMappingURL=chunk-VRX4W75V.js.map
