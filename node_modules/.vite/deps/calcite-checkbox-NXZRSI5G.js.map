{
  "version": 3,
  "sources": ["../../@arcgis/core/node_modules/@esri/calcite-components/dist/components/checkbox.js", "../../@arcgis/core/node_modules/@esri/calcite-components/dist/components/calcite-checkbox.js"],
  "sourcesContent": ["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client/index.js';\nimport { g as guid } from './guid.js';\nimport { c as connectForm, d as disconnectForm, H as HiddenFormInputSlot } from './form.js';\nimport { c as connectLabel, d as disconnectLabel, g as getLabelText } from './label2.js';\nimport { u as updateHostInteraction } from './interactive.js';\nimport { t as toAriaBoolean } from './dom.js';\nimport { i as isActivationKey } from './key.js';\n\nconst checkboxCss = \"@keyframes in{0%{opacity:0}100%{opacity:1}}@keyframes in-down{0%{opacity:0;transform:translate3D(0, -5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-up{0%{opacity:0;transform:translate3D(0, 5px, 0)}100%{opacity:1;transform:translate3D(0, 0, 0)}}@keyframes in-scale{0%{opacity:0;transform:scale3D(0.95, 0.95, 1)}100%{opacity:1;transform:scale3D(1, 1, 1)}}:root{--calcite-animation-timing:calc(150ms * var(--calcite-internal-duration-factor));--calcite-internal-duration-factor:var(--calcite-duration-factor, 1);--calcite-internal-animation-timing-fast:calc(100ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-medium:calc(200ms * var(--calcite-internal-duration-factor));--calcite-internal-animation-timing-slow:calc(300ms * var(--calcite-internal-duration-factor))}.calcite-animate{opacity:0;animation-fill-mode:both;animation-duration:var(--calcite-animation-timing)}.calcite-animate__in{animation-name:in}.calcite-animate__in-down{animation-name:in-down}.calcite-animate__in-up{animation-name:in-up}.calcite-animate__in-scale{animation-name:in-scale}@media (prefers-reduced-motion: reduce){:root{--calcite-internal-duration-factor:0.01}}:root{--calcite-floating-ui-transition:var(--calcite-animation-timing)}:host([hidden]){display:none}:host([disabled]){pointer-events:none;cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-ui-opacity-disabled)}:host([scale=s]){--calcite-checkbox-size:0.75rem}:host([scale=m]){--calcite-checkbox-size:var(--calcite-font-size--1)}:host([scale=l]){--calcite-checkbox-size:1rem}:host{position:relative;display:inline-flex;cursor:pointer;-webkit-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}:host .check-svg,:host .toggle{inline-size:var(--calcite-checkbox-size);block-size:var(--calcite-checkbox-size)}:host .check-svg{pointer-events:none;box-sizing:border-box;display:block;overflow:hidden;background-color:var(--calcite-ui-foreground-1);fill:currentColor;stroke:currentColor;stroke-width:1;transition:all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;box-shadow:inset 0 0 0 1px var(--calcite-ui-border-input);color:var(--calcite-ui-background)}:host([checked]) .check-svg,:host([indeterminate]) .check-svg{background-color:var(--calcite-ui-brand);box-shadow:inset 0 0 0 1px var(--calcite-ui-brand)}:host([hovered]) .toggle .check-svg,:host .toggle:hover .check-svg{box-shadow:inset 0 0 0 2px var(--calcite-ui-brand)}.toggle{outline-color:transparent}.toggle:active,.toggle:focus,.toggle:focus-visible{outline:2px solid var(--calcite-ui-brand);outline-offset:2px}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}::slotted(input[slot=hidden-form-input]){margin:0 !important;opacity:0 !important;outline:none !important;padding:0 !important;position:absolute !important;inset:0 !important;transform:none !important;-webkit-appearance:none !important;z-index:-1 !important}\";\n\nconst Checkbox = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.calciteInternalCheckboxBlur = createEvent(this, \"calciteInternalCheckboxBlur\", 6);\n    this.calciteCheckboxChange = createEvent(this, \"calciteCheckboxChange\", 6);\n    this.calciteInternalCheckboxFocus = createEvent(this, \"calciteInternalCheckboxFocus\", 6);\n    //--------------------------------------------------------------------------\n    //\n    //  Properties\n    //\n    //--------------------------------------------------------------------------\n    /** When `true`, the component is checked. */\n    this.checked = false;\n    /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n    this.disabled = false;\n    /**\n     * The hovered state of the checkbox.\n     *\n     * @internal\n     */\n    this.hovered = false;\n    /**\n     * When `true`, the component is initially indeterminate, which is independent from its `checked` value.\n     *\n     * The state is visual only, and can look different across browsers.\n     *\n     * @mdn [indeterminate](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes)\n     */\n    this.indeterminate = false;\n    /**\n     * When `true`, the component must have a value in order for the form to submit.\n     *\n     * @internal\n     */\n    this.required = false;\n    /** Specifies the size of the component. */\n    this.scale = \"m\";\n    //--------------------------------------------------------------------------\n    //\n    //  Private Properties\n    //\n    //--------------------------------------------------------------------------\n    this.checkedPath = \"M5.5 12L2 8.689l.637-.636L5.5 10.727l8.022-7.87.637.637z\";\n    this.indeterminatePath = \"M13 8v1H3V8z\";\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    this.getPath = () => this.indeterminate ? this.indeterminatePath : this.checked ? this.checkedPath : \"\";\n    this.toggle = () => {\n      if (!this.disabled) {\n        this.checked = !this.checked;\n        this.setFocus();\n        this.indeterminate = false;\n        this.calciteCheckboxChange.emit();\n      }\n    };\n    this.keyDownHandler = (event) => {\n      if (isActivationKey(event.key)) {\n        this.toggle();\n        event.preventDefault();\n      }\n    };\n    this.clickHandler = () => {\n      this.toggle();\n    };\n    //--------------------------------------------------------------------------\n    //\n    //  Event Listeners\n    //\n    //--------------------------------------------------------------------------\n    this.onToggleBlur = () => {\n      this.calciteInternalCheckboxBlur.emit(false);\n    };\n    this.onToggleFocus = () => {\n      this.calciteInternalCheckboxFocus.emit(true);\n    };\n    this.onLabelClick = () => {\n      this.toggle();\n    };\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    var _a;\n    (_a = this.toggleEl) === null || _a === void 0 ? void 0 : _a.focus();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    this.guid = this.el.id || `calcite-checkbox-${guid()}`;\n    connectLabel(this);\n    connectForm(this);\n  }\n  disconnectedCallback() {\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  render() {\n    return (h(Host, { onClick: this.clickHandler, onKeyDown: this.keyDownHandler }, h(\"div\", { \"aria-checked\": toAriaBoolean(this.checked), \"aria-label\": getLabelText(this), class: \"toggle\", onBlur: this.onToggleBlur, onFocus: this.onToggleFocus, ref: (toggleEl) => (this.toggleEl = toggleEl), role: \"checkbox\", tabIndex: this.disabled ? undefined : 0 }, h(\"svg\", { \"aria-hidden\": \"true\", class: \"check-svg\", viewBox: \"0 0 16 16\" }, h(\"path\", { d: this.getPath() })), h(\"slot\", null)), h(HiddenFormInputSlot, { component: this })));\n  }\n  get el() { return this; }\n  static get style() { return checkboxCss; }\n}, [1, \"calcite-checkbox\", {\n    \"checked\": [1540],\n    \"disabled\": [516],\n    \"guid\": [1537],\n    \"hovered\": [1540],\n    \"indeterminate\": [1540],\n    \"label\": [1],\n    \"name\": [520],\n    \"required\": [516],\n    \"scale\": [513],\n    \"value\": [8],\n    \"setFocus\": [64]\n  }]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"calcite-checkbox\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"calcite-checkbox\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Checkbox);\n      }\n      break;\n  } });\n}\ndefineCustomElement();\n\nexport { Checkbox as C, defineCustomElement as d };\n", "/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.97\n */\nimport { C as Checkbox, d as defineCustomElement$1 } from './checkbox.js';\n\nconst CalciteCheckbox = Checkbox;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteCheckbox, defineCustomElement };\n"],
  "mappings": "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",
  "names": ["defineCustomElement"]
}
