import {
  o,
  s
} from "./chunk-3LR5O4WA.js";

// node_modules/@arcgis/core/core/mathUtils.js
var e = new Float32Array(1);
function i(t) {
  --t;
  for (let n = 1; n < 32; n <<= 1)
    t |= t >> n;
  return t + 1;
}
function a(t, n, r3) {
  return Math.min(Math.max(t, n), r3);
}
function c(t) {
  return 0 == (t & t - 1);
}
function f(t) {
  return t--, t |= t >> 1, t |= t >> 2, t |= t >> 4, t |= t >> 8, t |= t >> 16, ++t;
}
function h(t, n, r3) {
  return t + (n - t) * r3;
}
function m(t) {
  return t * Math.PI / 180;
}
function b(t) {
  return 180 * t / Math.PI;
}
function F(t, n = 1e-6) {
  return (t < 0 ? -1 : 1) / Math.max(Math.abs(t), n);
}
function l(t) {
  return Math.acos(a(t, -1, 1));
}
function N(t) {
  return Math.asin(a(t, -1, 1));
}
function g(t, n, r3 = 1e-6) {
  if (t === n)
    return true;
  if (!Number.isFinite(t) || !Number.isFinite(n))
    return false;
  return (t > n ? t - n : n - t) <= r3;
}
var E = new DataView(new ArrayBuffer(Float64Array.BYTES_PER_ELEMENT));
function B(t) {
  return E.setFloat64(0, t), E.getBigInt64(0);
}
function I(t) {
  return E.setBigInt64(0, t), E.getFloat64(0);
}
var p = BigInt("1000000");
var w = x(1);
function x(t) {
  const n = B(t = Math.abs(t)), r3 = I(n <= p ? p : n - p);
  return Math.abs(t - r3);
}
function j(t, n, r3 = 1e-6) {
  if (t === n)
    return true;
  if (!Number.isFinite(t) || !Number.isFinite(n))
    return false;
  const u = Math.abs(t - n), e2 = Math.abs(t), i2 = Math.abs(n);
  if (0 === t || 0 === n || e2 < 1e-12 && i2 < 1e-12) {
    if (u > 0.01 * r3)
      return false;
  } else if (u / (e2 + i2) > r3)
    return false;
  return true;
}
function A(t) {
  return P(Math.max(-D, Math.min(t, D)));
}
function P(t) {
  return e[0] = t, e[0];
}
function L(t, u) {
  const e2 = s(t), i2 = N(t[2] / e2), a2 = Math.atan2(t[1] / e2, t[0] / e2);
  return o(u, e2, i2, a2), u;
}
function d(t) {
  const n = t[0] * t[0] + t[1] * t[1] + t[2] * t[2], r3 = t[3] * t[3] + t[4] * t[4] + t[5] * t[5], u = t[6] * t[6] + t[7] * t[7] + t[8] * t[8];
  return !(g(n, 1) && g(r3, 1) && g(u, 1));
}
var D = P(34028234663852886e22);

export {
  i,
  a,
  c,
  f,
  h,
  m,
  b,
  F,
  l,
  N,
  g,
  j,
  A,
  L,
  d,
  D
};
//# sourceMappingURL=chunk-C5H57NTD.js.map
