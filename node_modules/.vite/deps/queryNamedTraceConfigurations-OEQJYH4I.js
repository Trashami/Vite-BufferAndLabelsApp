import {
  c
} from "./chunk-XFAJKRMY.js";
import {
  f,
  i,
  s
} from "./chunk-WVDA5Z37.js";
import "./chunk-QFFP6A5Q.js";
import "./chunk-RXYULINL.js";
import {
  U
} from "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-M5VHU5LK.js";
import {
  l
} from "./chunk-7QMMKGW4.js";
import {
  e,
  n2 as n,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import "./chunk-MJXQTGI2.js";
import "./chunk-LIZHLHNA.js";
import "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/rest/networks/support/QueryNamedTraceConfigurationsResult.js
var a = class extends l {
  constructor(r) {
    super(r), this.namedTraceConfigurations = [];
  }
};
e([y({ type: [c], json: { read: { source: "traceConfigurations" }, write: { target: "traceConfigurations" } } })], a.prototype, "namedTraceConfigurations", void 0), a = e([n("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")], a);
var p = a;

// node_modules/@arcgis/core/rest/networks/queryNamedTraceConfigurations.js
async function e2(e3, n2, i2) {
  const g = f(e3), l2 = n2.toJSON();
  n2.globalIds && n2.globalIds.length > 0 && (l2.globalIds = JSON.stringify(n2.globalIds)), n2.creators && n2.creators.length > 0 && (l2.creators = JSON.stringify(n2.creators)), n2.tags && n2.tags.length > 0 && (l2.tags = JSON.stringify(n2.tags)), n2.names && n2.names.length > 0 && (l2.names = JSON.stringify(n2.names));
  const f2 = { ...l2, f: "json" }, m = s({ ...g.query, ...f2 }), u = i(m, { ...i2, method: "post" }), c2 = `${g.path}/traceConfigurations/query`, { data: p2 } = await U(c2, u);
  if (!p2)
    return null;
  return p.fromJSON(p2);
}
export {
  e2 as queryNamedTraceConfigurations
};
//# sourceMappingURL=queryNamedTraceConfigurations-OEQJYH4I.js.map
