import {
  St,
  W
} from "./chunk-KAN4HXCG.js";
import {
  has
} from "./chunk-HVKDYDPP.js";

// node_modules/@arcgis/core/support/revision.js
var c = "20221116";
var a = "c99cca5ea449339768164a82fc9ad4e384e5826d";

// node_modules/@arcgis/core/kernel.js
var a2 = "4.25";
var r = { async request(t, a3) {
  var _a, _b;
  const { default: r2 } = await import("./request-2G4EFZ2V.js"), s2 = t.options, n2 = s2.responseType;
  s2.signal = a3 == null ? void 0 : a3.signal, s2.responseType = "native" === n2 || "native-request-init" === n2 ? "native-request-init" : n2 && ["blob", "json", "text"].includes(n2) && ((_a = W(t.url)) == null ? void 0 : _a.after) ? n2 : "array-buffer";
  const o2 = await r2(t.url, s2), i = { data: o2.data, ssl: o2.ssl };
  switch ((_b = o2.requestOptions) == null ? void 0 : _b.responseType) {
    case "native-request-init":
      return delete i.data.signal, i;
    case "blob":
      i.data = await i.data.arrayBuffer();
      break;
    case "json":
      i.data = new TextEncoder().encode(JSON.stringify(i.data)).buffer;
      break;
    case "text":
      i.data = new TextEncoder().encode(i.data).buffer;
  }
  return { result: i, transferList: [i.data] };
} };
var s;
function n(e) {
  s = e;
}
function o(e) {
  const a3 = s && s.findCredential(e);
  return a3 && a3.token ? St(e, "token", a3.token) : e;
}
has("host-webworker");

export {
  c,
  a,
  a2,
  r,
  s,
  n,
  o
};
//# sourceMappingURL=chunk-ZHAW7FZS.js.map
