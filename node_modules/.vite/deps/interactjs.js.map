{
  "version": 3,
  "sources": ["../../interactjs/dist/_header.js", "../../interactjs/dist/node_modules/browser-pack-flat/_prelude", "../../interactjs/dist/packages/@interactjs/utils/isWindow.ts", "../../interactjs/dist/packages/@interactjs/utils/window.ts", "../../interactjs/dist/packages/@interactjs/utils/is.ts", "../../interactjs/dist/packages/@interactjs/actions/drag/plugin.ts", "../../interactjs/dist/packages/@interactjs/utils/domObjects.ts", "../../interactjs/dist/packages/@interactjs/utils/browser.ts", "../../interactjs/dist/packages/@interactjs/utils/domUtils.ts", "../../interactjs/dist/packages/@interactjs/utils/extend.ts", "../../interactjs/dist/packages/@interactjs/utils/rect.ts", "../../interactjs/dist/packages/@interactjs/utils/getOriginXY.ts", "../../interactjs/dist/packages/@interactjs/utils/normalizeListeners.ts", "../../interactjs/dist/packages/@interactjs/utils/hypot.ts", "../../interactjs/dist/packages/@interactjs/utils/pointerExtend.ts", "../../interactjs/dist/packages/@interactjs/utils/pointerUtils.ts", "../../interactjs/dist/packages/@interactjs/core/BaseEvent.ts", "../../interactjs/dist/packages/@interactjs/utils/arr.ts", "../../interactjs/dist/packages/@interactjs/actions/drop/DropEvent.ts", "../../interactjs/dist/packages/@interactjs/actions/drop/plugin.ts", "../../interactjs/dist/packages/@interactjs/actions/gesture/plugin.ts", "../../interactjs/dist/packages/@interactjs/actions/resize/plugin.ts", "../../interactjs/dist/packages/@interactjs/actions/plugin.ts", "../../interactjs/dist/packages/@interactjs/utils/raf.ts", "../../interactjs/dist/packages/@interactjs/auto-scroll/plugin.ts", "../../interactjs/dist/packages/@interactjs/utils/misc.ts", "../../interactjs/dist/packages/@interactjs/auto-start/InteractableMethods.ts", "../../interactjs/dist/packages/@interactjs/auto-start/base.ts", "../../interactjs/dist/packages/@interactjs/auto-start/dragAxis.ts", "../../interactjs/dist/packages/@interactjs/auto-start/hold.ts", "../../interactjs/dist/packages/@interactjs/auto-start/plugin.ts", "../../interactjs/dist/packages/@interactjs/core/interactablePreventDefault.ts", "../../interactjs/dist/packages/@interactjs/dev-tools/visualizer/plugin.ts", "../../interactjs/dist/packages/@interactjs/dev-tools/plugin.ts", "../../interactjs/dist/packages/@interactjs/utils/clone.ts", "../../interactjs/dist/packages/@interactjs/modifiers/Modification.ts", "../../interactjs/dist/packages/@interactjs/modifiers/base.ts", "../../interactjs/dist/packages/@interactjs/core/options.ts", "../../interactjs/dist/packages/@interactjs/core/InteractEvent.ts", "../../interactjs/dist/packages/@interactjs/core/PointerInfo.ts", "../../interactjs/dist/packages/@interactjs/core/Interaction.ts", "../../interactjs/dist/packages/@interactjs/offset/plugin.ts", "../../interactjs/dist/packages/@interactjs/inertia/plugin.ts", "../../interactjs/dist/packages/@interactjs/core/Eventable.ts", "../../interactjs/dist/packages/@interactjs/core/isNonNativeEvent.ts", "../../interactjs/dist/packages/@interactjs/core/InteractStatic.ts", "../../interactjs/dist/packages/@interactjs/core/Interactable.ts", "../../interactjs/dist/packages/@interactjs/core/InteractableSet.ts", "../../interactjs/dist/packages/@interactjs/core/events.ts", "../../interactjs/dist/packages/@interactjs/core/interactionFinder.ts", "../../interactjs/dist/packages/@interactjs/core/interactions.ts", "../../interactjs/dist/packages/@interactjs/core/scope.ts", "../../interactjs/dist/packages/@interactjs/interact/index.ts", "../../interactjs/dist/packages/@interactjs/snappers/edgeTarget.ts", "../../interactjs/dist/packages/@interactjs/snappers/elements.ts", "../../interactjs/dist/packages/@interactjs/snappers/grid.ts", "../../interactjs/dist/packages/@interactjs/snappers/plugin.ts", "../../interactjs/dist/packages/@interactjs/modifiers/aspectRatio.ts", "../../interactjs/dist/packages/@interactjs/modifiers/noop.ts", "../../interactjs/dist/packages/@interactjs/modifiers/restrict/pointer.ts", "../../interactjs/dist/packages/@interactjs/modifiers/restrict/edges.ts", "../../interactjs/dist/packages/@interactjs/modifiers/restrict/rect.ts", "../../interactjs/dist/packages/@interactjs/modifiers/restrict/size.ts", "../../interactjs/dist/packages/@interactjs/modifiers/snap/pointer.ts", "../../interactjs/dist/packages/@interactjs/modifiers/snap/size.ts", "../../interactjs/dist/packages/@interactjs/modifiers/snap/edges.ts", "../../interactjs/dist/packages/@interactjs/modifiers/all.ts", "../../interactjs/dist/packages/@interactjs/modifiers/plugin.ts", "../../interactjs/dist/packages/@interactjs/pointer-events/PointerEvent.ts", "../../interactjs/dist/packages/@interactjs/pointer-events/base.ts", "../../interactjs/dist/packages/@interactjs/pointer-events/holdRepeat.ts", "../../interactjs/dist/packages/@interactjs/pointer-events/interactableTargets.ts", "../../interactjs/dist/packages/@interactjs/pointer-events/plugin.ts", "../../interactjs/dist/packages/@interactjs/reflow/plugin.ts", "../../interactjs/dist/packages/@interactjs/interactjs/index.ts", "../../interactjs/dist/packages/interactjs/index.ts", "../../interactjs/dist/node_modules/browser-pack-flat/_postlude", "dep:interactjs"],
  "sourcesContent": ["/**\n * interact.js 1.10.17\n *\n * Copyright (c) 2012-present Taye Adeyemi <dev@taye.me>\n * https://interactjs.io/license\n */\n", "(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;\n", "export default (thing: any) => !!(thing && thing.Window) && thing instanceof thing.Window\n", "import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init (window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow (node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n", "import isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is HTMLElement | SVGElement => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof Element)\n    ? thing instanceof Element || thing instanceof _window.Element\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n", "import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionMethod, ListenersArg } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable: DraggableMethod\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport type DraggableMethod = ActionMethod<DraggableOptions>\n\nexport interface DraggableOptions extends PerActionDefaults {\n  startAxis?: 'x' | 'y' | 'xy'\n  lockAxis?: 'x' | 'y' | 'xy' | 'start'\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nfunction install (scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move ({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\n/**\n * ```js\n * interact(element).draggable({\n *     onstart: function (event) {},\n *     onmove : function (event) {},\n *     onend  : function (event) {},\n *\n *     // the axis in which the first movement must be\n *     // for the drag sequence to start\n *     // 'xy' by default - any direction\n *     startAxis: 'x' || 'y' || 'xy',\n *\n *     // 'xy' by default - don't restrict to one axis (move in any direction)\n *     // 'x' or 'y' to restrict movement to either axis\n *     // 'start' to restrict movement to the axis the drag started in\n *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n *\n *     // max number of drags that can happen concurrently\n *     // with elements of this Interactable. Infinity by default\n *     max: Infinity,\n *\n *     // max number of drags that can target the same element+Interactable\n *     // 1 by default\n *     maxPerElement: 2\n * })\n *\n * var isDraggable = interact('element').draggable(); // true\n * ```\n *\n * Get or set whether drag actions can be performed on the target\n *\n * @alias Interactable.prototype.draggable\n *\n * @param {boolean | object} [options] true/false or An object with event\n * listeners to be fired on drag events (object makes the Interactable\n * draggable)\n * @return {boolean | Interactable} boolean indicating if this can be the\n * target of drag events, or this Interctable\n */\nconst draggable: DraggableMethod = function draggable (\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag as DraggableOptions\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DraggableOptions,\n\n  getCursor () {\n    return 'move'\n  },\n}\n\nexport default drag\n", "const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} = {\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank () {}\n\nexport default domObjects\n\nfunction init (window: Window) {\n  const win = window as any\n\n  domObjects.document = win.document\n  domObjects.DocumentFragment = win.DocumentFragment || blank\n  domObjects.SVGElement = win.SVGElement || blank\n  domObjects.SVGSVGElement = win.SVGSVGElement || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element = win.Element || blank\n  domObjects.HTMLElement = win.HTMLElement || domObjects.Element\n\n  domObjects.Event = win.Event\n  domObjects.Touch = win.Touch || blank\n  domObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent\n}\n", "import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init (window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  // https://github.com/taye/interact.js/issues/703#issuecomment-471570492\n  browser.supportsPointerEvent = (navigator as any).pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = (\n    'matches' in Element.prototype\n      ? 'matches'\n      : 'webkitMatchesSelector' in Element.prototype\n        ? 'webkitMatchesSelector'\n        : 'mozMatchesSelector' in Element.prototype\n          ? 'mozMatchesSelector'\n          : 'oMatchesSelector' in Element.prototype\n            ? 'oMatchesSelector'\n            : 'msMatchesSelector'\n  ) as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n        up: 'MSPointerUp',\n        down: 'MSPointerDown',\n        over: 'mouseover',\n        out: 'mouseout',\n        move: 'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up: 'pointerup',\n        down: 'pointerdown',\n        over: 'pointerover',\n        out: 'pointerout',\n        move: 'pointermove',\n        cancel: 'pointercancel',\n      }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n", "import type { Rect, Target, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains (parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest (element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode (node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector (element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement (elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents (node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan (higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo (element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement (element: Element) {\n  return (element as any).correspondingUseElement || element\n}\n\nexport function getScrollXY (relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect (element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect (element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath (node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector (value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n", "export default function extend<T, U extends object> (dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    ;(dest as unknown as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n", "import type {\n  HasGetRect,\n  RectResolvable,\n  Rect,\n  Element,\n  Point,\n  FullRect,\n  EdgeOptions,\n} from '@interactjs/core/types'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult (value: any, target: HasGetRect, element: Node) {\n  if (value === 'parent') {\n    return parentNode(element)\n  }\n\n  if (value === 'self') {\n    return target.getRect(element as Element)\n  }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]> (\n  value: RectResolvable<T>,\n  target?: HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  } else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Rect\n}\n\nexport function rectToXY (rect: Rect | Point) {\n  return (\n    rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    }\n  )\n}\n\nexport function xywhToTlbr<T extends Partial<Rect & Point>> (rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left = rect.x || 0\n    rect.top = rect.y || 0\n    rect.right = rect.right || rect.left + rect.width\n    rect.bottom = rect.bottom || rect.top + rect.height\n  }\n\n  return rect as Rect & T\n}\n\nexport function tlbrToXywh (rect: Rect & Partial<Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x = rect.left || 0\n    rect.y = rect.top || 0\n    rect.width = rect.width || (rect.right || 0) - rect.x\n    rect.height = rect.height || (rect.bottom || 0) - rect.y\n  }\n\n  return rect as FullRect & Point\n}\n\nexport function addEdges (edges: EdgeOptions, rect: Rect, delta: Point) {\n  if (edges.left) {\n    rect.left += delta.x\n  }\n  if (edges.right) {\n    rect.right += delta.x\n  }\n  if (edges.top) {\n    rect.top += delta.y\n  }\n  if (edges.bottom) {\n    rect.bottom += delta.y\n  }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n", "import type { PerActionDefaults } from '@interactjs/core/options'\nimport type { ActionName, HasGetRect } from '@interactjs/core/types'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function (\n  target: HasGetRect & { options: PerActionDefaults },\n  element: Node,\n  actionName?: ActionName,\n) {\n  const actionOptions = (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n", "import type { EventTypes, Listener, ListenersArg } from '@interactjs/core/types'\n\nimport extend from './extend'\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize (\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[],\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    return type.reduce<NormalizedListeners>((acc, t) => extend(acc, normalize(t, listeners, result)), result)\n  }\n\n  // ({ type: fn }) -> ('', { type: fn })\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split (type: string) {\n  return type.trim().split(/ +/)\n}\n", "export default (x: number, y: number) => Math.sqrt(x * x + y * y)\n", "export default function pointerExtend<T> (dest: Partial<T & { __set?: Partial<T> }>, source: T) {\n  dest.__set ||= {} as any\n\n  for (const prop in source) {\n    if (typeof dest[prop] !== 'function' && prop !== '__set') {\n      Object.defineProperty(dest, prop, {\n        get () {\n          if (prop in dest.__set) return dest.__set[prop]\n\n          return (dest.__set[prop] = source[prop] as any)\n        },\n        set (value: any) {\n          dest.__set[prop] = value\n        },\n        configurable: true,\n      })\n    }\n  }\n  return dest\n}\n", "import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords (dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas (targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity (targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords (targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer (pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY (type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY (pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY (pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId (pointer: { pointerId?: number, identifier?: number, type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords (dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair (event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage (pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox (event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance (event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle (event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType (pointer: { pointerType?: string, identifier?: number, type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n    // be either a MouseEvent, TouchEvent, or Touch object\n      /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets (event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords (): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent (coords: MockCoords) {\n  const event = {\n    coords,\n    get page () {\n      return this.coords.page\n    },\n    get client () {\n      return this.coords.client\n    },\n    get timeStamp () {\n      return this.coords.timeStamp\n    },\n    get pageX () {\n      return this.coords.page.x\n    },\n    get pageY () {\n      return this.coords.page.y\n    },\n    get clientX () {\n      return this.coords.client.x\n    },\n    get clientY () {\n      return this.coords.client.y\n    },\n    get pointerId () {\n      return this.coords.pointerId\n    },\n    get target () {\n      return this.coords.target\n    },\n    get type () {\n      return this.coords.type\n    },\n    get pointerType () {\n      return this.coords.pointerType\n    },\n    get buttons () {\n      return this.coords.buttons\n    },\n    preventDefault () {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/types'\n\nexport class BaseEvent<T extends ActionName | null = never> {\n  declare type: string\n  declare target: EventTarget\n  declare currentTarget: Node\n  declare interactable: Interactable\n  declare _interaction: Interaction<T>\n  declare timeStamp: number\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor (interaction: Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends ActionName> {\n  interaction: InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get (this: BaseEvent) {\n    return this._interaction._proxy\n  },\n  set (this: BaseEvent) {},\n})\n", "type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>) => array[findIndex(array, func)]\n", "import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\n\nimport type { DropState } from './plugin'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  declare target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Element\n  draggable: Interactable\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor (dropState: DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave' ? dropState.prev : dropState.cur\n\n    this.type = type\n    this.target = element\n    this.currentTarget = element\n    this.dropzone = dropzone\n    this.dragEvent = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable = dragEvent.interactable\n    this.timeStamp = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject () {\n    const { dropState } = this._interaction\n\n    if (\n      this.type !== 'dropactivate' &&\n      (!this.dropzone || dropState.cur.dropzone !== this.dropzone || dropState.cur.element !== this.target)\n    ) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(\n        activeDrops,\n        ({ dropzone, element }) => dropzone === this.dropzone && element === this.target,\n      )\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    } else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault () {}\n\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n", "import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n  | string\n  | Element\n  | (({ dropzone, draggableElement }: { dropzone: Interactable, draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    dropzone: DropzoneMethod\n    dropCheck: (\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ) => boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    dynamicDrop: (this: InteractStatic, newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    /** @lends module:interact */\n    interactStatic: interact,\n    /** @lends Interactable */\n    Interactable,\n    defaults,\n  } = scope\n\n  scope.usePlugin(drag)\n\n  /**\n   *\n   * ```js\n   * interact('.drop').dropzone({\n   *   accept: '.can-drop' || document.getElementById('single-drop'),\n   *   overlap: 'pointer' || 'center' || zeroToOne\n   * }\n   * ```\n   *\n   * Returns or sets whether draggables can be dropped onto this target to\n   * trigger drop events\n   *\n   * Dropzones can receive the following events:\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\n   *  - `drop` when a draggable is dropped into this dropzone\n   *\n   * Use the `accept` option to allow only elements that match the given CSS\n   * selector or element. The value can be:\n   *\n   *  - **an Element** - only that element can be dropped into this dropzone.\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\n   *  - **`null`** - accept options is cleared - it accepts any element.\n   *\n   * Use the `overlap` option to set how drops are checked for. The allowed\n   * values are:\n   *\n   *   - `'pointer'`, the pointer must be over the dropzone (default)\n   *   - `'center'`, the draggable element's center must be over the dropzone\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n   *   over the dropzone\n   *\n   * Use the `checker` option to specify a function to check if a dragged element\n   * is over this Interactable.\n   *\n   * @param {boolean | object | null} [options] The new options to be set.\n   * @return {object | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  /**\n   * ```js\n   * interact(target)\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\n   *                       dropped,           // bool result of the default checker\n   *                       dropzone,          // dropzone Interactable\n   *                       dropElement,       // dropzone elemnt\n   *                       draggable,         // draggable Interactable\n   *                       draggableElement) {// draggable element\n   *\n   *   return dropped && event.target.hasAttribute('allow-drop')\n   * }\n   * ```\n   */\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  /**\n   * Returns or sets whether the dimensions of dropzone elements are calculated\n   * on every dragmove or only on dragstart for the default dropChecker\n   *\n   * @param {boolean} [newValue] True to check on each move. False to check only\n   * before start\n   * @return {boolean | interact} The current setting or interact\n   */\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDrops ({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    // query for new elements if necessary\n    const dropElements = (\n      is.string(dropzone.target)\n        ? dropzone._context.querySelectorAll(dropzone.target)\n        : is.array(dropzone.target)\n          ? dropzone.target\n          : [dropzone.target]\n    ) as Element[]\n\n    for (const dropzoneElement of dropElements) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents (activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops (scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDrops(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop (\n  { dropState, interactable: draggable, element: dragElement }: Partial<Interaction>,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    validDrops.push(\n      dropzone.dropCheck(dragEvent, pointerEvent, draggable, dragElement, dropzoneElement, rect)\n        ? dropzoneElement\n        : null,\n    )\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents (interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const { dropState } = interaction\n  const dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null\n    dropEvents.activate.dropzone = null\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null\n    dropEvents.deactivate.dropzone = null\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dropEvents.move.dragmove = dragEvent\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\nRecord<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents (interaction: Interaction, events: FiredDropEvents) {\n  const { dropState } = interaction\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated ({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const { dropState } = interaction\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod (interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      interactable.off(interactable.options.drop.listeners)\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod (\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n        dragEvent,\n        event,\n        dropped,\n        interactable,\n        dropElement,\n        draggable,\n        draggableElement,\n      )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      // reset active dropzones\n      dropState.activeDrops = null\n      dropState.events = null\n      dropState.activeDrops = getActiveDrops(scope, interaction.element)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      fireDropEvents(interaction, interaction.dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      interaction.dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null\n        dropState.events = null\n        dropState.cur.dropzone = null\n        dropState.cur.element = null\n        dropState.prev.dropzone = null\n        dropState.prev.element = null\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n", "import type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionMethod, Rect, PointerType, ListenersArg } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport type GesturableMethod = ActionMethod<GesturableOptions>\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable: GesturableMethod\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GesturableOptions extends PerActionDefaults {\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install (scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  /**\n   * ```js\n   * interact(element).gesturable({\n   *     onstart: function (event) {},\n   *     onmove : function (event) {},\n   *     onend  : function (event) {},\n   *\n   *     // limit multiple gestures.\n   *     // See the explanation in {@link Interactable.draggable} example\n   *     max: Infinity,\n   *     maxPerElement: 1,\n   * })\n   *\n   * var isGestureable = interact(element).gesturable()\n   * ```\n   *\n   * Gets or sets whether multitouch gestures can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of gesture events, or this Interactable\n   */\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as GesturableOptions\n  } as GesturableMethod\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps ({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor () {\n    return ''\n  },\n}\n\nexport default gesture\n", "import type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionName,\n  ActionProps,\n  ActionMethod,\n  EdgeOptions,\n  FullRect,\n  ListenersArg,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\nexport type ResizableMethod = ActionMethod<ResizableOptions>\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable: ResizableMethod\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction<T extends ActionName | null = ActionName> {\n    resizeAxes: 'x' | 'y' | 'xy'\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizableOptions extends PerActionDefaults {\n  square?: boolean\n  preserveAspectRatio?: boolean\n  edges?: EdgeOptions | null\n  axis?: 'x' | 'y' | 'xy' // deprecated\n  invert?: 'none' | 'negate' | 'reposition'\n  margin?: number\n  squareResize?: boolean\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install (scope: Scope) {\n  const {\n    actions,\n    browser,\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  /**\n   * ```js\n   * interact(element).resizable({\n   *   onstart: function (event) {},\n   *   onmove : function (event) {},\n   *   onend  : function (event) {},\n   *\n   *   edges: {\n   *     top   : true,       // Use pointer coords to check for resize.\n   *     left  : false,      // Disable resizing from left edge.\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\n   *     right : handleEl    // Resize if pointer target is the given Element\n   *   },\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height are adjusted at a 1:1 ratio.\n   *     square: false,\n   *\n   *     // Width and height can be adjusted independently. When `true`, width and\n   *     // height maintain the aspect ratio they had when resizing started.\n   *     preserveAspectRatio: false,\n   *\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   *   // 'negate' will allow the rect to have negative width/height\n   *   // 'reposition' will keep the width/height positive by swapping\n   *   // the top and bottom edges and/or swapping the left and right edges\n   *   invert: 'none' || 'negate' || 'reposition'\n   *\n   *   // limit multiple resizes.\n   *   // See the explanation in the {@link Interactable.draggable} example\n   *   max: Infinity,\n   *   maxPerElement: 1,\n   * })\n   *\n   * var isResizeable = interact(element).resizable()\n   * ```\n   *\n   * Gets or sets whether resize actions can be performed on the target\n   *\n   * @param {boolean | object} [options] true/false or An object with event\n   * listeners to be fired on resize events (object makes the Interactable\n   * resizable)\n   * @return {boolean | Interactable} A boolean indicating if this can be the\n   * target of resize elements, or this Interactable\n   */\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as ResizableMethod\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker (arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable (interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge (\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      const edge = width >= 0 ? rect.left : rect.right\n      return page.x < edge + margin\n    }\n    if (name === 'top') {\n      const edge = height >= 0 ? rect.top : rect.bottom\n      return page.y < edge + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n    value === element\n    : // otherwise check if element matches value as selector\n    dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors (browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n      x: 'e-resize',\n      y: 's-resize',\n      xy: 'se-resize',\n\n      top: 'n-resize',\n      left: 'w-resize',\n      bottom: 's-resize',\n      right: 'e-resize',\n      topleft: 'se-resize',\n      bottomright: 'se-resize',\n      topright: 'ne-resize',\n      bottomleft: 'ne-resize',\n    }\n    : {\n      x: 'ew-resize',\n      y: 'ns-resize',\n      xy: 'nwse-resize',\n\n      top: 'ns-resize',\n      left: 'ew-resize',\n      bottom: 'ns-resize',\n      right: 'ew-resize',\n      topleft: 'nwse-resize',\n      bottomright: 'nwse-resize',\n      topright: 'nesw-resize',\n      bottomleft: 'nesw-resize',\n    }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end ({ iEvent, interaction }: { iEvent: InteractEvent<any, any>, interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes ({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor ({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n", "import type { Scope } from '@interactjs/core/scope'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n\nexport default {\n  id: 'actions',\n  install (scope: Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n", "let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init (global: Window | typeof globalThis) {\n  request = global.requestAnimationFrame\n  cancel = global.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = global[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel =\n        global[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        global[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(global)\n  cancel = cancel && cancel.bind(global)\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const token = global.setTimeout(() => {\n        // eslint-disable-next-line n/no-callback-literal\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token as any\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, PointerType } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement | string\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install (scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction<ActionName> | null,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start (interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop () {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll () {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check (interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName> ({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer (value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll (container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize (container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName> (\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n", "import type { ActionName, ActionProps } from '@interactjs/core/types'\n\nimport { window } from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      ;(window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction<T extends ActionName> (dest: ActionProps<any>, src: ActionProps<T>) {\n  dest.name = src.name\n  dest.axis = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport const sign = (n: number) => (n >= 0 ? 1 : -1)\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { ActionProps, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interactable,\n      pointer: PointerType,\n      event: PointerEventType,\n      interaction: Interaction,\n      element: Element,\n    ) => ActionProps | null\n    styleCursor: typeof styleCursor\n    actionChecker: typeof actionChecker\n    ignoreFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n    allowFrom: {\n      (...args: any[]): Interactable\n      (): boolean\n    }\n  }\n}\n\nfunction install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction (\n    this: Interactable,\n    pointer: PointerType,\n    event: PointerEventType,\n    interaction: Interaction,\n    element: Element,\n  ): ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  /**\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n   * of it's parents match the given CSS selector or Element, no\n   * drag/resize/gesture is started.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `ignoreFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .draggable({\n   *     ignoreFrom: 'input, textarea, a[href]'',\n   *   })\n   *   .pointerEvents({\n   *     ignoreFrom: '[no-pointer]',\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to not ignore any elements\n   * @return {string | Element | object} The current ignoreFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  /**\n   *\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\n   * `pointerdown` or `touchstart` event or any of it's parents match the given\n   * CSS selector or Element.\n   *\n   * @deprecated\n   * Don't use this method. Instead set the `allowFrom` option for each action\n   * or for `pointerEvents`\n   *\n   * ```js\n   * interact(targett)\n   *   .resizable({\n   *     allowFrom: '.resize-handle',\n   *   .pointerEvents({\n   *     allowFrom: '.handle',,\n   *   })\n   * ```\n   *\n   * @param {string | Element | null} [newValue] a CSS selector string, an\n   * Element or `null` to allow from any element\n   * @return {string | Element | object} The current allowFrom value or this\n   * Interactable\n   */\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  /**\n   * ```js\n   * interact('.resize-drag')\n   *   .resizable(true)\n   *   .draggable(true)\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n   *\n   *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n   *       // force drag with handle target\n   *       action.name = drag\n   *     }\n   *     else {\n   *       // resize from the top and right edges\n   *       action.name  = 'resize'\n   *       action.edges = { top: true, right: true }\n   *     }\n   *\n   *     return action\n   * })\n   * ```\n   *\n   * Returns or sets the function used to check action to be performed on\n   * pointerDown\n   *\n   * @param {function | null} [checker] A function which takes a pointer event,\n   * defaultAction string, interactable, element and interaction as parameters\n   * and returns an object with name property 'drag' 'resize' or 'gesture' and\n   * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n   * props.\n   * @return {Function | Interactable} The checker function or this Interactable\n   */\n  Interactable.prototype.actionChecker = actionChecker\n\n  /**\n   * Returns or sets whether the the cursor should be changed depending on the\n   * action that would be performed if the mouse were pressed and dragged.\n   *\n   * @param {boolean} [newValue]\n   * @return {boolean | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker (\n  interactable: Interactable,\n  event: PointerEventType,\n  interaction: Interaction,\n  element: Element,\n  scope: Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons =\n    (event as MouseEvent).buttons ||\n    {\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    }[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor(this: Interactable): boolean\nfunction styleCursor(this: Interactable, newValue: boolean): typeof this\nfunction styleCursor (this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker (this: Interactable, checker: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type {\n  CursorChecker,\n  PointerType,\n  PointerEventType,\n  Element,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\nimport InteractableMethods from './InteractableMethods'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install (scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  /**\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\n   * default only 1 interaction is allowed at a time (for backwards\n   * compatibility). To allow multiple interactions on the same Interactables and\n   * elements, you need to enable it in the draggable, resizable and gesturable\n   * `'max'` and `'maxPerElement'` options.\n   *\n   * @alias module:interact.maxInteractions\n   *\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n   */\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove (arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop ({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName> (\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches (\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo (\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches (interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare (\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName> (\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions (newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor (element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName> (interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope } from '@interactjs/core/scope'\nimport type { ActionName, Element } from '@interactjs/core/types'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart ({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis (startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\n\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install (scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration (interaction: Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) {\n    return null\n  }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nconst hold: Plugin = {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const holdDuration = getHoldDuration(interaction)\n\n      if (holdDuration > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\nexport default hold\n", "import type { Scope } from '@interactjs/core/scope'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n\nexport default {\n  id: 'auto-start',\n  install (scope: Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerEventType } from '@interactjs/core/types'\nimport { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault: typeof preventDefault\n    checkAndPreventDefault: (event: Event) => void\n  }\n}\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\nfunction preventDefault(this: Interactable): PreventDefaultValue\nfunction preventDefault(this: Interactable, newValue: PreventDefaultValue): typeof this\nfunction preventDefault (this: Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n}\n\nfunction checkAndPreventDefault (interactable: Interactable, scope: Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') return\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (\n    is.element(event.target) &&\n    matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')\n  ) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent ({ interaction, event }: { interaction: Interaction, event: PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install (scope: Scope) {\n  /** @lends Interactable */\n  const { Interactable } = scope\n\n  /**\n   * Returns or sets whether to prevent the browser's default behaviour in\n   * response to pointer events. Can be set to:\n   *  - `'always'` to always prevent\n   *  - `'never'` to never prevent\n   *  - `'auto'` to let interact.js try to determine what would be best\n   *\n   * @param {string} [newValue] `'always'`, `'never'` or `'auto'`\n   * @return {string | Interactable} The current setting or this Interactable\n   */\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        if (\n          interaction.element &&\n          (interaction.element === event.target || nodeContains(interaction.element, event.target))\n        ) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n", "export default {}\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, OptionMethod } from '@interactjs/core/types'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport visualizer from '@interactjs/dev-tools/visualizer/plugin'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as win from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    logger: Logger\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    visializer: typeof visualizer\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    devTools?: DevToolsOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    devTools: OptionMethod<DevToolsOptions>\n  }\n}\n\nexport interface DevToolsOptions {\n  ignore: { [P in keyof typeof CheckName]?: boolean }\n}\n\nexport interface Logger {\n  warn: (...args: any[]) => void\n  error: (...args: any[]) => void\n  log: (...args: any[]) => void\n}\n\nexport interface Check {\n  name: CheckName\n  text: string\n  perform: (interaction: Interaction) => boolean\n  getInfo: (interaction: Interaction) => any[]\n}\n\nenum CheckName {\n  touchAction = 'touchAction',\n  boxSizing = 'boxSizing',\n  noListeners = 'noListeners',\n}\n\nconst prefix = '[interact.js] '\nconst links = {\n  touchAction: 'https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action',\n  boxSizing: 'https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing',\n}\n\n// eslint-disable-next-line no-undef\nconst isProduction = process.env.NODE_ENV === 'production'\n\nfunction install (scope: Scope, { logger }: { logger?: Logger } = {}) {\n  const { Interactable, defaults } = scope\n\n  scope.logger = logger || console\n\n  defaults.base.devTools = {\n    ignore: {},\n  }\n\n  Interactable.prototype.devTools = function (options?: object) {\n    if (options) {\n      extend(this.options.devTools, options)\n      return this\n    }\n\n    return this.options.devTools\n  }\n\n  scope.usePlugin(visualizer)\n}\n\nconst checks: Check[] = [\n  {\n    name: CheckName.touchAction,\n    perform ({ element }) {\n      return !parentHasStyle(element, 'touchAction', /pan-|pinch|none/)\n    },\n    getInfo ({ element }) {\n      return [element, links.touchAction]\n    },\n    text: 'Consider adding CSS \"touch-action: none\" to this element\\n',\n  },\n\n  {\n    name: CheckName.boxSizing,\n    perform (interaction) {\n      const { element } = interaction\n\n      return (\n        interaction.prepared.name === 'resize' &&\n        element instanceof domObjects.HTMLElement &&\n        !hasStyle(element, 'boxSizing', /border-box/)\n      )\n    },\n    text: 'Consider adding CSS \"box-sizing: border-box\" to this resizable element',\n    getInfo ({ element }) {\n      return [element, links.boxSizing]\n    },\n  },\n\n  {\n    name: CheckName.noListeners,\n    perform (interaction) {\n      const actionName = interaction.prepared.name\n      const moveListeners = interaction.interactable.events.types[`${actionName}move`] || []\n\n      return !moveListeners.length\n    },\n    getInfo (interaction) {\n      return [interaction.prepared.name, interaction.interactable]\n    },\n    text: 'There are no listeners set for this action',\n  },\n]\n\nfunction hasStyle (element: HTMLElement, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  const value = element.style[prop] || win.window.getComputedStyle(element)[prop]\n  return styleRe.test((value || '').toString())\n}\n\nfunction parentHasStyle (element: Element, prop: keyof CSSStyleDeclaration, styleRe: RegExp) {\n  let parent = element as HTMLElement\n\n  while (is.element(parent)) {\n    if (hasStyle(parent, prop, styleRe)) {\n      return true\n    }\n\n    parent = parentNode(parent) as HTMLElement\n  }\n\n  return false\n}\n\nconst id = 'dev-tools'\nconst defaultExport: Plugin = isProduction\n  ? { id, install: () => {} }\n  : {\n    id,\n    install,\n    listeners: {\n      'interactions:action-start': ({ interaction }, scope) => {\n        for (const check of checks) {\n          const options = interaction.interactable && interaction.interactable.options\n\n          if (\n            !(options && options.devTools && options.devTools.ignore[check.name]) &&\n              check.perform(interaction)\n          ) {\n            scope.logger.warn(prefix + check.text, ...check.getInfo(interaction))\n          }\n        }\n      },\n    },\n    checks,\n    CheckName,\n    links,\n    prefix,\n  }\n\nexport default defaultExport\n", "import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object> (source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n", "import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport default class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  edges!: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor (interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n  }\n\n  start ({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.edges = extend({}, interaction.edges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg (arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect = arg.rect || interaction.rect\n    arg.edges = this.edges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll (arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll (arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(this.interaction.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction (arg: { phase: EventPhase, rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply (\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd (arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop (arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates (modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords ({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo (options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom (other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy () {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult (coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList (interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset (rect, coords) {\n  return rect\n    ? {\n      left: coords.x - rect.left,\n      top: coords.y - rect.top,\n      right: rect.right - coords.x,\n      bottom: rect.bottom - coords.y,\n    }\n    : {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    }\n}\n", "import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\n\nimport Modification from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result,\n> (module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers ({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, arg.interaction.coords.start.page)\n      arg.interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => arg.interaction.modification.setAndApply(arg),\n\n    'interactions:before-action-end': (arg) => arg.interaction.modification.beforeEnd(arg),\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n", "import type { Point, Listeners, OrBoolean, Element } from '@interactjs/core/types'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'auto' | 'never' | string\n  deltaSource?: 'page' | 'client'\n  context?: Node\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\nPartial<PerActionDefaults> & {\n  [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n}\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n", "import type { Point, FullRect, PointerEventType, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\nimport type { ActionName } from './types'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  declare target: Element\n  declare currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get () {\n      return this.page.x\n    },\n    set (value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get () {\n      return this.page.y\n    },\n    set (value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get () {\n      return this.client.x\n    },\n    set (value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get () {\n      return this.client.y\n    },\n    set (value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get () {\n      return this.delta.x\n    },\n    set (value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get () {\n      return this.delta.y\n    },\n    set (value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get () {\n      return this.velocity.x\n    },\n    set (value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get () {\n      return this.velocity.y\n    },\n    set (value) {\n      this.velocity.y = value\n    },\n  },\n})\n", "import type { PointerEventType, PointerType } from '@interactjs/core/types'\n\nexport class PointerInfo {\n  id: number\n  pointer: PointerType\n  event: PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor (id: number, pointer: PointerType, event: PointerEventType, downTime: number, downTarget: Node) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n", "import type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n} from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { Interactable } from './Interactable'\nimport { PointerInfo } from './PointerInfo'\nimport type { ActionDefaults } from './options'\nimport type { Scope } from './scope'\nimport type { ActionName, ActionProps } from './types'\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>, event: Event, type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\nInteraction<T>,\nkeyof typeof _ProxyValues | keyof typeof _ProxyMethods\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  // current interactable being interacted with\n  interactable: Interactable | null = null\n\n  // the target element of the interactable\n  element: Element | null = null\n  rect: FullRect | null = null\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  edges: EdgeOptions | null = null\n\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  // keep track of added pointers\n  pointers: PointerInfo[] = []\n\n  // pointerdown/mousedown/touchstart event\n  downEvent: PointerEventType | null = null\n\n  downPointer: PointerType = {} as PointerType\n\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n      pointer: null,\n      event: null,\n      eventTarget: null,\n    }\n\n  // previous action event\n  prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  _interacting = false\n  _ending = false\n  _stopped = true\n  _proxy: InteractionProxy<T> | null = null\n\n  simulation = null\n\n  /** @internal */ get pointerMoveTolerance () {\n    return 1\n  }\n\n  /**\n   * @alias Interaction.prototype.move\n   */\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  readonly _id: number = idCounter++\n\n  /** */\n  constructor ({ pointerType, scopeFire }: { pointerType?: string, scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get () {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param {object} action   The action to be performed - drag, resize, etc.\n   * @param {Interactable} target  The Interactable to target\n   * @param {Element} element The DOM Element to target\n   * @return {Boolean} Whether the interaction was successfully started\n   */\n  start<A extends ActionName> (action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move (signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  documentBlur (event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   *\n   * @param {PointerEvent} [event]\n   */\n  end (event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction () {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting () {\n    return this._interacting\n  }\n\n  /** */\n  stop () {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  getPointerIndex (pointer: any) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  getPointerInfo (pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  updatePointer (pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  removePointer (pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  _updateLatestPointer (pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy () {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  _createPreparedEvent<P extends EventPhase> (\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  _fireEvent<P extends EventPhase> (iEvent: InteractEvent<T, P>) {\n    this.interactable?.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  _doPhase<P extends EventPhase> (\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  _now () {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n", "import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/core/types'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal (interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction ({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd ({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end ({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending (interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy (this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords ({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending (interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install (scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n", "import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\nimport Modification from '@interactjs/modifiers/Modification'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install (scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor (interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start (event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia () {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd () {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame (tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick () {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick () {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume ({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end () {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop () {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start ({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume (arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop ({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions ({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue (t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint (\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad (t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n", "import type { Listener, ListenersArg, Rect } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nfunction fireUntilImmediateStopped (event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor (options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string, propagationStopped?: boolean }> (event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off (type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect (_element: Element): Rect {\n    return null\n  }\n}\n", "import type { Actions } from '@interactjs/core/types'\n\nexport default function isNonNativeEvent (type: string, actions: Actions) {\n  if (actions.phaselessTypes[type]) {\n    return true\n  }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n", "/** @module interact */\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target } from '@interactjs/core/types'\nimport browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Interactable } from './Interactable'\nimport isNonNativeEvent from './isNonNativeEvent'\nimport type { Options } from './options'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    (target: Target, options?: Options): Interactable\n    getPointerAverage: typeof pointerUtils.pointerAverage\n    getTouchBBox: typeof pointerUtils.touchBBox\n    getTouchDistance: typeof pointerUtils.touchDistance\n    getTouchAngle: typeof pointerUtils.touchAngle\n    getElementRect: typeof domUtils.getElementRect\n    getElementClientRect: typeof domUtils.getElementClientRect\n    matchesSelector: typeof domUtils.matchesSelector\n    closest: typeof domUtils.closest\n    /** @internal */ globalEvents: any\n    version: string\n    /** @internal */ scope: Scope\n    use(\n      plugin: Plugin,\n      options?: {\n        [key: string]: any\n      },\n    ): any\n    isSet(target: Target, options?: any): boolean\n    on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n    off(type: EventTypes, listener: any, options?: object): any\n    debug(): any\n    supportsTouch(): boolean\n    supportsPointerEvent(): boolean\n    stop(): any\n    pointerMoveTolerance(newValue?: number): any\n    addDocument(doc: Document, options?: object): void\n    removeDocument(doc: Document): void\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\ntype _InteractStatic = import('@interactjs/core/InteractStatic').InteractStatic\n\nexport function createInteractStatic (scope: Scope): _InteractStatic {\n  /**\n   * ```js\n   * interact('#draggable').draggable(true)\n   *\n   * var rectables = interact('rect')\n   * rectables\n   *   .gesturable(true)\n   *   .on('gesturemove', function (event) {\n   *       // ...\n   *   })\n   * ```\n   *\n   * The methods of this variable can be used to set elements as interactables\n   * and also to change various default settings.\n   *\n   * Calling it as a function and passing an element or a valid CSS selector\n   * string returns an Interactable object which has various methods to configure\n   * it.\n   *\n   * @global\n   *\n   * @param {Element | string} target The HTML or SVG Element to interact with\n   * or CSS selector\n   * @return {Interactable}\n   */\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.get(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as _InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  /**\n   * Use a plugin\n   *\n   * @alias module:interact.use\n   *\n   */\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  /**\n   * Check if an element or selector has been set with the {@link interact}\n   * function\n   *\n   * @alias module:interact.isSet\n   *\n   * @param {Target} target The Element or string being searched for\n   * @param {object} options\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  /**\n   * @deprecated\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\n   *\n   * @alias module:interact.on\n   *\n   * @param {string | array | object} type The types of events to listen for\n   * @param {function} listener The function event (s)\n   * @param {object | boolean} [options] object or useCapture flag for\n   * addEventListener\n   * @return {object} interact\n   */\n  interact.on = warnOnce(function on (type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  /**\n   * @deprecated\n   * Removes a global InteractEvent listener or DOM event from `document`\n   *\n   * @alias module:interact.off\n   *\n   * @param {string | array | object} type The types of events that were listened\n   * for\n   * @param {function} listener The listener function to be removed\n   * @param {object | boolean} options [options] object or useCapture flag for\n   * removeEventListener\n   * @return {object} interact\n   */\n  interact.off = warnOnce(function off (type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  /**\n   * @alias module:interact.supportsTouch\n   *\n   * @return {boolean} Whether or not the browser supports touch input\n   */\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  /**\n   * @alias module:interact.supportsPointerEvent\n   *\n   * @return {boolean} Whether or not the browser supports PointerEvents\n   */\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  /**\n   * Cancels all interactions (end events are not fired)\n   *\n   * @alias module:interact.stop\n   *\n   * @return {object} interact\n   */\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   *\n   * @alias module:interact.pointerMoveTolerance\n   *\n   * @param {number} [newValue] The movement from the start position must be greater than this value\n   * @return {interact | number}\n   */\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n", "/* eslint-disable no-dupe-class-members */\nimport type { Scope } from '@interactjs/core/scope'\nimport type {\n  ActionMap,\n  ActionMethod,\n  ActionName,\n  Actions,\n  Context,\n  Element,\n  EventTypes,\n  Listeners,\n  ListenersArg,\n  OrBoolean,\n  Target,\n} from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport isNonNativeEvent from './isNonNativeEvent'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults, Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\n/** */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults (): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly options!: Required<Options>\n  readonly _actions: Actions\n  readonly target: Target\n  readonly events = new Eventable()\n  readonly _context: Context\n  readonly _win: Window\n  readonly _doc: Document\n  readonly _scopeEvents: Scope['events']\n\n  /** @internal */ _rectChecker?: typeof Interactable.prototype.getRect\n\n  /** */\n  constructor (\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents (actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners (actionName: ActionName, prev: Listeners, cur: Listeners) {\n    if (is.array(prev) || is.object(prev)) {\n      this.off(actionName, prev)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this.on(actionName, cur)\n    }\n  }\n\n  setPerAction (actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect (element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker (checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this._rectChecker = checker\n\n      this.getRect = (element) => {\n        const rect = extend({}, this._rectChecker(element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete this.getRect\n      delete this._rectChecker\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  _backCompatOption (optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin (newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource (newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context () {\n    return this._context\n  }\n\n  inContext (element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  testIgnoreAllow (\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue, allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  testAllow (this: Interactable, allowFrom: IgnoreValue, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  testIgnore (this: Interactable, ignoreFrom: IgnoreValue, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }> (iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  _onOff (method: 'on' | 'off', typeArg: EventTypes, listenerArg?: ListenersArg | null, options?: any) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const addRemove = method === 'on' ? 'add' : 'remove'\n    const listeners = normalizeListeners(typeArg, listenerArg)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[`${addRemove}Delegate` as 'addDelegate' | 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[addRemove](this.target, type, listener, options)\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on (types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff('on', types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off (types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff('off', types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set (options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset () {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target as Node, 'all')\n    }\n  }\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target, Context } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\ninterface InteractableScopeProp {\n  context: Context\n  interactable: Interactable\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: InteractableScopeProp[]\n  } = {}\n\n  scope: Scope\n\n  constructor (scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target, _context: context } = interactable\n        const targetMappings: InteractableScopeProp[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(targetMappings, (m) => m.context === context)\n        if (targetMappings[targetIndex]) {\n          // Destroying mappingInfo's context and interactable\n          targetMappings[targetIndex].context = null\n          targetMappings[targetIndex].interactable = null\n        }\n        targetMappings.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new (target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n    const mappingInfo = { context: interactable._context, interactable }\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(mappingInfo)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(mappingInfo)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  get (target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const targetMappings: InteractableScopeProp[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!targetMappings) {\n      return null\n    }\n\n    const found = arr.find(\n      targetMappings,\n      (m) => m.context === context && (isSelector || m.interactable.inContext(target as any)),\n    )\n\n    return found && found.interactable\n  }\n\n  forEachMatch<T> (node: Node, callback: (interactable: Interactable) => T) {\n    for (const interactable of this.list) {\n      let ret: void | T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n          is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n          node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n", "import type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ntype Listener = (event: Event | FakeEvent) => any\n\nfunction install (scope: Scope) {\n  const targets: Array<{\n    eventTarget: EventTarget\n    events: { [type: string]: Listener[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: Array<[Listener, { capture: boolean, passive: boolean }]>\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture () {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive () {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add (eventTarget: EventTarget, type: string, listener: Listener, optionalArg?: boolean | any) {\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (eventTarget.addEventListener && !arr.contains(target.events[type], listener)) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push(listener)\n    }\n  }\n\n  function remove (\n    eventTarget: EventTarget,\n    type: string,\n    listener?: 'all' | Listener,\n    optionalArg?: boolean | any,\n  ) {\n    const options = getOptions(optionalArg)\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          remove(eventTarget, type, typeListeners[i], options)\n        }\n        return\n      } else {\n        for (let i = 0; i < typeListeners.length; i++) {\n          if (typeListeners[i] === listener) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate (selector: string, context: Node, type: string, listener: Listener, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push([listener, options])\n  }\n\n  function removeDelegate (\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: Listener,\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const [fn, { capture, passive }] = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (fn === listener && capture === options.capture && passive === options.passive) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener (event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const [fn, { capture, passive }] of listeners) {\n            if (capture === options.capture && passive === options.passive) {\n              fn(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture (this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor (originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault () {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation () {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation () {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions (param: { [index: string]: any } | boolean): { capture: boolean, passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  const options = extend({}, param) as any\n\n  options.capture = !!param.capture\n  options.passive = !!param.passive\n\n  return options\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\n\nexport interface SearchDetails {\n  pointer: PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: EventTarget\n  curEventTarget: EventTarget\n  scope: Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search (details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume ({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (\n        interaction.simulation &&\n        interaction.simulation.allowResume &&\n        interaction.pointerType === pointerType\n      ) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen ({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) {\n          continue\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer ({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle ({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && pointerType === interaction.pointerType) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId (interaction: Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n", "import type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Listener } from '@interactjs/core/types'\nimport browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport InteractionBase from './Interaction'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string, listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install (scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener (event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class <T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance () {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance (value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now () {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName> (options: { pointerType?: string, scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls () {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions (method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction (searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'> (\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n", "import type Interaction from '@interactjs/core/Interaction'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport { Eventable } from './Eventable'\nimport { InteractEvent } from './InteractEvent'\nimport { createInteractStatic } from './InteractStatic'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport events from './events'\nimport interactions from './interactions'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\nimport type { Actions } from './types'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase, options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {} as any,\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document, options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n      list: [],\n      map: {},\n    }\n\n  constructor () {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults () {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase> (this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset (this: InteractableBase) {\n        super.unset()\n\n        const index = scope.interactables.list.indexOf(this)\n        if (index < 0) return\n\n        super.unset()\n        scope.interactables.list.splice(index, 1)\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners (map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName> (name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init (window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled (plugin: Plugin) {\n    return this._plugins.map[plugin.id] || this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin (plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (before[otherId] || before[pluginIdRoot(otherId)]) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument (doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument (doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex (doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions (doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now () {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\nexport function initScope (scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot (id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n", "import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact = scope.interactStatic\n\nexport default interact\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : this\nscope.init(_global)\n", "export default () => {}\n", "export default () => {}\n", "import type { Rect, Point } from '@interactjs/core/types'\nimport type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\n\nexport type GridOptions = (Partial<Rect> | Point) & {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\n\nexport default (grid: GridOptions) => {\n  const coordFields = (\n    [\n      ['x', 'y'],\n      ['left', 'top'],\n      ['right', 'bottom'],\n      ['width', 'height'],\n    ] as const\n  ).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n", "import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n", "/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This module forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport Modification from './Modification'\nimport { makeModifier } from './base'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\nAspectRatioOptions,\n{\n  startCoords: Point\n  startRect: Rect\n  linkedEdges: EdgeOptions\n  ratio: number\n  equalDelta: boolean\n  xIsPrimaryAxis: boolean\n  edgeSign: {\n    x: number\n    y: number\n  }\n  subModification: Modification\n}\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start (arg) {\n    const { state, rect, edges: originalEdges, pageCoords: coords } = arg\n    let { ratio } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: originalEdges.top || (originalEdges.left && !originalEdges.bottom),\n      left: originalEdges.left || (originalEdges.top && !originalEdges.right),\n      bottom: originalEdges.bottom || (originalEdges.right && !originalEdges.top),\n      right: originalEdges.right || (originalEdges.bottom && !originalEdges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(originalEdges.left || originalEdges.right)\n\n    if (state.equalDelta) {\n      const sign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)\n      state.edgeSign = {\n        x: sign,\n        y: sign,\n      }\n    } else {\n      state.edgeSign = {\n        x: linkedEdges.left ? -1 : 1,\n        y: linkedEdges.top ? -1 : 1,\n      }\n    }\n\n    extend(arg.edges, linkedEdges)\n\n    if (!modifiers || !modifiers.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set (arg) {\n    const { state, rect, coords } = arg\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(state.linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: state.linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta ({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign.y\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign.x\n  }\n}\n\nfunction setRatio (\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign.y\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign.x\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n", "import type { ModifierFunction } from './types'\n\nconst noop = (() => {}) as unknown as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule, ModifierState } from '../types'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\nRestrictOptions,\n{\n  offset: Rect\n}\n>\n\nfunction start ({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set ({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect (\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n", "// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\nRestrictEdgesOptions,\n{\n  inner: Rect\n  outer: Rect\n  offset: RestrictEdgesOptions['offset']\n}\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start ({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set ({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect (rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n", "import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect () {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect (_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n", "import type { Point, Rect, Size } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start (arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\nModifierState<\nRestrictSizeOptions & { inner: Rect, outer: Rect },\n{\n  min: Rect\n  max: Rect\n}\n>\n\nfunction set (arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n", "import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets: SnapTarget[] | null\n  // target range\n  range: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints: Point[] | null\n  // startCoords = offset snapping from drag start page position\n  offset: Point | RectResolvable<[Interaction]> | 'startCoords' | null\n  offsetWithOrigin?: boolean\n  origin: RectResolvable<[Element]> | Point | null\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\nSnapOptions,\n{\n  offsets?: Offset[]\n  closest?: any\n  targetFields?: string[][]\n}\n>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n        index,\n        relativePoint,\n        x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n        y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n      }))\n      : [\n        {\n          index: 0,\n          relativePoint: null,\n          x: snapOffset.x,\n          y: snapOffset.y,\n        },\n      ]\n}\n\nfunction set (arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable, interaction.element, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets.length; index < len; index++) {\n      const snapTarget = options.targets[index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n        closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n          distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n          (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n        !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin (arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n", "// This module allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set (arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n", "/**\n * @module modifiers/snapEdges\n *\n * @description\n * WOW> This module allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start (arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: null,\n    range: null,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n", "/* eslint-disable n/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n", "import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\nimport all from './all'\nimport base from './base'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install (scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n", "import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/core/types'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport default class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  declare type: T\n  declare originalEvent: PointerEventType\n  declare pointerId: number\n  declare pointerType: string\n  declare double: boolean\n  declare pageX: number\n  declare pageY: number\n  declare clientX: number\n  declare clientY: number\n  declare dt: number\n  declare eventable: any;\n  [key: string]: any\n\n  /** */\n  constructor (\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double =\n        !!interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n      this.double = true\n    }\n  }\n\n  _subtractOrigin ({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin ({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault () {\n    this.originalEvent.preventDefault()\n  }\n}\n\nexport { PointerEvent }\n", "import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string> (\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n        {\n          interaction,\n          pointer,\n          event,\n          eventTarget,\n          type: 'doubletap',\n        },\n        scope,\n      )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string> (\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) => target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps ({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo ({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold ({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold (arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold (\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp (\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { ListenerMap, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\n\nimport type PointerEvent from './PointerEvent'\nimport basePlugin from './base'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install (scope: Scope) {\n  scope.usePlugin(basePlugin)\n\n  const { pointerEvents } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew ({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') return\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired (\n  { interaction, pointerEvent, eventTarget, targets }: SignalArgs['pointerEvents:fired'],\n  scope: Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) return\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) return\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire(\n      {\n        interaction,\n        eventTarget,\n        type: 'hold',\n        pointer: pointerEvent,\n        event: pointerEvent,\n      },\n      scope,\n    )\n  }, interval)\n}\n\nfunction endHoldRepeat ({ interaction }: { interaction: Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      ;(acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents: typeof pointerEventsMethod\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install (scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = pointerEventsMethod\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nfunction pointerEventsMethod (this: Interactable, options: any) {\n  extend(this.events.options, options)\n\n  return this\n}\n\nconst plugin: Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({ targets, node, type, eventTarget }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n          interactable.testIgnoreAllow(options, node, eventTarget)\n        ) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n", "import type { Plugin } from '@interactjs/core/scope'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n\nconst plugin: Plugin = {\n  id: 'pointer-events',\n  install (scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, ActionProps, Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    reflow: <T extends ActionName>(action: ActionProps<T>) => ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nexport function install (scope: Scope) {\n  const {\n    /** @lends Interactable */\n    Interactable,\n  } = scope\n\n  scope.actions.phases.reflow = true\n\n  /**\n   * ```js\n   * const interactable = interact(target)\n   * const drag = { name: drag, axis: 'x' }\n   * const resize = { name: resize, edges: { left: true, bottom: true }\n   *\n   * interactable.reflow(drag)\n   * interactable.reflow(resize)\n   * ```\n   *\n   * Start an action sequence to re-apply modifiers, check drops, etc.\n   *\n   * @param { Object } action The action to begin\n   * @param { string } action.name The name of the action\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n   */\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName> (\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = (\n    is.string(interactable.target)\n      ? arr.from(interactable._context.querySelectorAll(interactable.target))\n      : [interactable.target]\n  ) as Element[]\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName> (\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = scope.window as unknown as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n      interaction._reflowResolve = resolve\n    })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n", "import actions from '@interactjs/actions/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reflow from '@interactjs/reflow/plugin'\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n\nconst _ = {\n  actions,\n  autoScroll,\n  autoStart,\n  interactablePreventDefault,\n  devTools,\n  inertia,\n  interact,\n  modifiers,\n  offset,\n  pointerEvents,\n  reflow,\n}\n\n// Exported so that the related module augmentations will be referenced in\n// generated .d.ts file\nexport type __internal_plugin_types__ = typeof _\n", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n", "\nreturn _$index_79;\n\n});\n", "export default require(\"./node_modules/interactjs/dist/interact.min.js\");"],
  "mappings": "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",
  "names": ["t", "e", "o", "n", "r", "i", "a", "s", "l", "u", "c", "f", "d", "p", "v", "g", "h", "y", "m", "b", "x", "w", "_", "P", "O", "E"]
}
