import {
  g as g2
} from "./chunk-OC4VQIMD.js";
import {
  C2 as C,
  Z,
  a,
  q
} from "./chunk-44WW37FH.js";
import "./chunk-6W5CPYUF.js";
import "./chunk-FS3REKZ4.js";
import "./chunk-CCMJCJP5.js";
import "./chunk-6NRJP66X.js";
import "./chunk-KDTWVGPE.js";
import "./chunk-YBAOLQVA.js";
import "./chunk-IJUE2JUP.js";
import "./chunk-URFNTHOE.js";
import "./chunk-QISOH77W.js";
import "./chunk-QB3YZMAB.js";
import "./chunk-77RDPZ67.js";
import "./chunk-ZX55SO5Y.js";
import "./chunk-FCIHN4UG.js";
import "./chunk-UWKVAZQ6.js";
import "./chunk-NGFMX3UT.js";
import "./chunk-XFDO4CMR.js";
import "./chunk-IVLBGTXL.js";
import "./chunk-GHN7C53L.js";
import "./chunk-XLJB6BCW.js";
import "./chunk-CNM6M4B2.js";
import "./chunk-OFXOSNPT.js";
import "./chunk-IMBIE27L.js";
import "./chunk-2NKIENHY.js";
import "./chunk-2J2YGTXG.js";
import "./chunk-I4YZGF7W.js";
import "./chunk-C6BDJNUQ.js";
import "./chunk-KXA4TECI.js";
import "./chunk-Y3Q6KWWE.js";
import "./chunk-VHXWATHW.js";
import "./chunk-OJ2HHY2O.js";
import "./chunk-RG3AHHRL.js";
import "./chunk-75RMBUYZ.js";
import "./chunk-LT5KLTS5.js";
import "./chunk-SERWCSJG.js";
import "./chunk-MFXTPFHI.js";
import "./chunk-RW4M3CI3.js";
import "./chunk-ZEEU5HOK.js";
import "./chunk-FFVIDMFN.js";
import "./chunk-ZN2ROKCE.js";
import "./chunk-NWBHRPMR.js";
import "./chunk-IIUWTGWW.js";
import "./chunk-K6AYGXUT.js";
import "./chunk-BHXTNOEK.js";
import "./chunk-IS4TIT4N.js";
import "./chunk-I4RYNNL6.js";
import "./chunk-GLGOVVCK.js";
import "./chunk-BUVDI6S7.js";
import "./chunk-NDQ5FHGV.js";
import "./chunk-ZWUEORSX.js";
import "./chunk-FMJZBZWF.js";
import "./chunk-GOYVJTGW.js";
import "./chunk-ZPYDYUP5.js";
import "./chunk-36I5ESAQ.js";
import "./chunk-CYI2FLSH.js";
import "./chunk-TDV3ZXCQ.js";
import "./chunk-XJCUKRCO.js";
import "./chunk-SOEQPPQP.js";
import "./chunk-22F6X66Z.js";
import "./chunk-AIDV7EKX.js";
import "./chunk-FZQZIM7U.js";
import "./chunk-YM6PUX7G.js";
import "./chunk-QEYOWTXD.js";
import "./chunk-CZBRZ6SU.js";
import "./chunk-KDO6J2FO.js";
import "./chunk-RT3T2K4S.js";
import "./chunk-WJCI2CGX.js";
import "./chunk-REIQNAQW.js";
import {
  g
} from "./chunk-J6LQZWZI.js";
import {
  y as y2
} from "./chunk-OD3FDQCI.js";
import "./chunk-J2PJNRU7.js";
import "./chunk-56SPM3WK.js";
import "./chunk-XMZAPOBR.js";
import "./chunk-BLJKKR5D.js";
import {
  d
} from "./chunk-ZGNCYHMZ.js";
import "./chunk-X2S4RQJ4.js";
import "./chunk-FUPLN7UM.js";
import "./chunk-376OPXM4.js";
import "./chunk-DER356EU.js";
import "./chunk-MZIWIEIR.js";
import "./chunk-TQEOEDAZ.js";
import "./chunk-SHFHZMHO.js";
import "./chunk-NRP45AHD.js";
import "./chunk-IWQ7452U.js";
import "./chunk-NAN5J6QS.js";
import "./chunk-B4DKBAM3.js";
import "./chunk-6M2AHKYV.js";
import "./chunk-SZIJNKCV.js";
import "./chunk-6O43OEU5.js";
import "./chunk-J2K7ZDSV.js";
import "./chunk-2UML3WQZ.js";
import "./chunk-KXVMEIWT.js";
import "./chunk-UDND2Z3V.js";
import "./chunk-23Y3DIC6.js";
import "./chunk-JUVQV3R3.js";
import "./chunk-RAX2HD42.js";
import "./chunk-ZYRIJWLX.js";
import "./chunk-C5H57NTD.js";
import "./chunk-3LR5O4WA.js";
import "./chunk-GDVNKPJ7.js";
import "./chunk-D4V6J5BT.js";
import "./chunk-OSHI574D.js";
import "./chunk-YWAQYJRC.js";
import "./chunk-B356PXLT.js";
import "./chunk-EHPBHJYZ.js";
import {
  u
} from "./chunk-3MNMDUQZ.js";
import {
  w
} from "./chunk-UWG37XSU.js";
import "./chunk-LNZAOBFW.js";
import "./chunk-PF5I4XZQ.js";
import "./chunk-HLM6QCL2.js";
import "./chunk-RXYULINL.js";
import "./chunk-5NXILPDI.js";
import "./chunk-THVR7IAM.js";
import "./chunk-ZWJJTUFL.js";
import "./chunk-XQN7F674.js";
import "./chunk-DMI7A7TC.js";
import "./chunk-ZHAW7FZS.js";
import "./chunk-KAN4HXCG.js";
import "./chunk-4FEGON7M.js";
import "./chunk-VWYWOOPX.js";
import "./chunk-M5VHU5LK.js";
import "./chunk-CXFRNDG4.js";
import "./chunk-7QMMKGW4.js";
import {
  e as e2,
  n,
  n2,
  y
} from "./chunk-OOLCFNXJ.js";
import "./chunk-6KZ2LTDA.js";
import "./chunk-U2XHEJM7.js";
import "./chunk-MJXQTGI2.js";
import "./chunk-LIZHLHNA.js";
import "./chunk-BTUHYGXO.js";
import "./chunk-UA3YPL2R.js";
import "./chunk-HVKDYDPP.js";
import "./chunk-6QC7MLLS.js";
import {
  e,
  i,
  r,
  s
} from "./chunk-MIHB3CIK.js";
import "./chunk-OL3AADLO.js";

// node_modules/@arcgis/core/views/2d/interactive/editingTools/draw/symbols.js
var t = new d({ data: { type: "CIMSymbolReference", symbol: { type: "CIMLineSymbol", symbolLayers: [{ type: "CIMSolidStroke", effects: [{ type: "CIMGeometricEffectDashes", dashTemplate: [3.75, 3.75], lineDashEnding: "HalfPattern", controlPointEnding: "NoConstraint" }], enable: true, capStyle: "Butt", joinStyle: "Round", miterLimit: 10, width: 1.6, color: [255, 255, 255, 255] }, { type: "CIMSolidStroke", enable: true, capStyle: "Butt", joinStyle: "Round", miterLimit: 10, width: 2, color: [0, 0, 0, 255] }] } } });
var l = new y2({ style: "circle", size: 6, color: [127, 127, 127, 1], outline: { color: [50, 50, 50], width: 1 } });
var i2 = new y2({ style: "circle", size: 6, color: [255, 127, 0, 1], outline: { color: [50, 50, 50], width: 1 } });

// node_modules/@arcgis/core/views/2d/interactive/editingTools/draw/DrawGraphicTool2D.js
var E = class extends Z {
  constructor(e3) {
    super(e3), this._visualElementGraphics = { outline: null, regularVertices: null, activeVertex: null }, this.activeFillSymbol = null, this.type = "draw-2d", this._visualElementSymbols = { outline: i(e3.activeLineSymbol, t), regularVertices: i(e3.regularVerticesSymbol, l), activeVertex: i(e3.activeVertexSymbol, i2), fill: e(e3.activeFillSymbol) };
  }
  normalizeCtorArgs(e3) {
    const t2 = { ...e3 };
    return delete t2.activeFillSymbol, delete t2.activeVertexSymbol, delete t2.regularVerticesSymbol, delete t2.activeLineSymbol, t2;
  }
  initializeGraphic(e3) {
    return r(this._visualElementSymbols.fill) && (e3.symbol = this._visualElementSymbols.fill), null;
  }
  makeDrawOperation() {
    const { defaultZ: e3, hasZ: t2, view: i3 } = this;
    return new C({ view: i3, manipulators: this.manipulators, geometryType: q(this.geometryType), drawingMode: this.mode, hasZ: t2, defaultZ: e3, snapToSceneEnabled: this.snapToScene, drawSurface: new a(i3, t2, e3), hasM: false, snappingManager: this.snappingManager, snappingVisualizer: new g2(this.internalGraphicsLayer), tooltipOptions: this.tooltipOptions });
  }
  onActiveVertexChanged(e3) {
    if ("point" === this.geometryType)
      return null;
    const [r2, s2] = e3, n3 = new w({ x: r2, y: s2, spatialReference: this.view.spatialReference });
    return r(this._visualElementGraphics.activeVertex) ? (this._visualElementGraphics.activeVertex.geometry = n3, null) : (this._visualElementGraphics.activeVertex = new g({ geometry: n3, symbol: this._visualElementSymbols.activeVertex, attributes: { displayOrder: 2 } }), this.internalGraphicsLayer.add(this._visualElementGraphics.activeVertex), this.internalGraphicsLayer.graphics.sort(_), n(() => {
      r(this._visualElementGraphics.activeVertex) && (this.internalGraphicsLayer.remove(this._visualElementGraphics.activeVertex), this._visualElementGraphics.activeVertex = s(this._visualElementGraphics.activeVertex));
    }));
  }
  onOutlineChanged(e3) {
    const r2 = e3.clone();
    if ("polyline" === r2.type) {
      const e4 = r2.paths[r2.paths.length - 1];
      e4.splice(0, e4.length - 2);
    }
    return r(this._visualElementGraphics.outline) ? (this._visualElementGraphics.outline.geometry = r2, null) : (this._visualElementGraphics.outline = new g({ geometry: r2, symbol: this._visualElementSymbols.outline, attributes: { displayOrder: 0 } }), this.internalGraphicsLayer.add(this._visualElementGraphics.outline), this.internalGraphicsLayer.graphics.sort(_), n(() => {
      r(this._visualElementGraphics.outline) && (this.internalGraphicsLayer.remove(this._visualElementGraphics.outline), this._visualElementGraphics.outline = s(this._visualElementGraphics.outline));
    }));
  }
  onRegularVerticesChanged(e3) {
    const r2 = new u({ points: e3, spatialReference: this.view.spatialReference });
    return r(this._visualElementGraphics.regularVertices) ? (this._visualElementGraphics.regularVertices.geometry = r2, null) : (this._visualElementGraphics.regularVertices = new g({ geometry: r2, symbol: this._visualElementSymbols.regularVertices, attributes: { displayOrder: 1 } }), this.internalGraphicsLayer.add(this._visualElementGraphics.regularVertices), this.internalGraphicsLayer.graphics.sort(_), n(() => {
      r(this._visualElementGraphics.regularVertices) && (this.internalGraphicsLayer.remove(this._visualElementGraphics.regularVertices), this._visualElementGraphics.regularVertices = s(this._visualElementGraphics.regularVertices));
    }));
  }
};
function _(e3, t2) {
  var _a, _b, _c, _d;
  return ((_b = (_a = e3.attributes) == null ? void 0 : _a.displayOrder) != null ? _b : -1 / 0) - ((_d = (_c = t2.attributes) == null ? void 0 : _c.displayOrder) != null ? _d : -1 / 0);
}
e2([y()], E.prototype, "activeFillSymbol", void 0), e2([y({ readOnly: true })], E.prototype, "type", void 0), e2([y({ constructOnly: true, nonNullable: true })], E.prototype, "view", void 0), E = e2([n2("esri.views.2d.interactive.draw.DrawGraphicTool2D")], E);
export {
  E as DrawGraphicTool2D
};
//# sourceMappingURL=editingTools-XAY5ZOQU.js.map
