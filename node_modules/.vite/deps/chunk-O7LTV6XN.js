import {
  C
} from "./chunk-4TWWY75O.js";
import {
  e as e3
} from "./chunk-TWJNUVV2.js";
import {
  c
} from "./chunk-HUQX7WZO.js";
import {
  a
} from "./chunk-ZPYDYUP5.js";
import {
  i
} from "./chunk-22F6X66Z.js";
import {
  c3 as c2,
  l as l3,
  x
} from "./chunk-OD3FDQCI.js";
import {
  e as e2,
  u
} from "./chunk-NRP45AHD.js";
import {
  l as l2
} from "./chunk-RAX2HD42.js";
import {
  l
} from "./chunk-D4V6J5BT.js";
import {
  U
} from "./chunk-DMI7A7TC.js";
import {
  has
} from "./chunk-HVKDYDPP.js";
import {
  e,
  f,
  q,
  r,
  t
} from "./chunk-MIHB3CIK.js";

// node_modules/@arcgis/core/symbols/support/gfxUtils.js
var n = "picture-fill";
var l4 = "simple-fill";
var c3 = "simple-line";
var a2 = "simple-marker";
var m = "text";
var p = "cim";
var u2 = new e3(1e3);
function f2(t2) {
  const r2 = t2.style;
  let o = null;
  if (t2)
    switch (t2.type) {
      case a2:
        "cross" !== r2 && "x" !== r2 && (o = t2.color);
        break;
      case l4:
        "solid" === r2 ? o = t2.color : "none" !== r2 && (o = { type: "pattern", x: 0, y: 0, src: a(`esri/symbols/patterns/${r2}.png`), width: 5, height: 5 });
        break;
      case n:
        o = { type: "pattern", src: t2.url, width: u(t2.width) * t2.xscale, height: u(t2.height) * t2.yscale, x: u(t2.xoffset), y: u(t2.yoffset) };
        break;
      case m:
        o = t2.color;
        break;
      case p:
        o = C(t2);
    }
  return o;
}
function h(e4, t2) {
  const o = e4 + "-" + t2;
  return void 0 !== u2.get(o) ? Promise.resolve(u2.get(o)) : U(e4, { responseType: "image" }).then((e5) => {
    const r2 = e5.data, s = r2.naturalWidth, i2 = r2.naturalHeight, n2 = document.createElement("canvas");
    n2.width = s, n2.height = i2;
    const l5 = n2.getContext("2d");
    l5.fillStyle = t2, l5.fillRect(0, 0, s, i2), l5.globalCompositeOperation = "destination-in", l5.drawImage(r2, 0, 0);
    const c4 = n2.toDataURL();
    return u2.put(o, c4), c4;
  });
}
function y(e4) {
  if (!e4)
    return null;
  let t2 = null;
  switch (e4.type) {
    case l4:
    case n:
    case a2:
      t2 = y(e4.outline);
      break;
    case c3: {
      const r2 = u(e4.width);
      null != e4.style && "none" !== e4.style && 0 !== r2 && (t2 = { color: e4.color, style: d(e4.style), width: r2, cap: e4.cap, join: "miter" === e4.join ? u(e4.miterLimit) : e4.join });
      break;
    }
    default:
      t2 = null;
  }
  return t2;
}
var d = (() => {
  const e4 = {};
  return (t2) => {
    if (e4[t2])
      return e4[t2];
    const r2 = t2.replace(/-/g, "");
    return e4[t2] = r2, r2;
  };
})();
var g = new l2([128, 128, 128]);

// node_modules/@arcgis/core/symbols/support/utils.js
var p2 = /\/resource\/(.*?)\.svg$/;
var h2 = new l2("white");
function b(e4) {
  const t2 = e4.symbolLayers && e4.symbolLayers.length;
  if (!t2)
    return;
  const o = e4.symbolLayers.getItemAt(t2 - 1);
  return "outline" in o ? q(o, "outline", "size") : void 0;
}
function w(e4) {
  var _a;
  if (!e4)
    return 0;
  if (c2(e4)) {
    const t2 = b(e4);
    return r(t2) ? t2 : 0;
  }
  return e2((_a = y(e4)) == null ? void 0 : _a.width);
}
function d2(e4) {
  if (t(e4) || !("symbolLayers" in e4) || t(e4.symbolLayers))
    return false;
  switch (e4.type) {
    case "point-3d":
      return e4.symbolLayers.some((e5) => "object" === e5.type);
    case "line-3d":
      return e4.symbolLayers.some((e5) => "path" === e5.type);
    case "polygon-3d":
      return e4.symbolLayers.some((e5) => "object" === e5.type || "extrude" === e5.type);
    default:
      return false;
  }
}
function g2(e4, t2) {
  const o = f(t2.resource).href;
  return !has("esri-canvas-svg-support") && e4.styleOrigin && p2.test(o) ? o.replace(p2, "/resource/png/$1.png") : o;
}
function j(r2, n2) {
  if (!r2)
    return null;
  let l5 = null;
  return c2(r2) ? l5 = k(r2) : x(r2) && (l5 = r2.color ? new l2(r2.color) : null), l5 ? L(l5, n2) : null;
}
function k(t2) {
  const o = t2.symbolLayers;
  if (!o)
    return null;
  let r2 = null;
  return o.forEach((e4) => {
    var _a;
    "object" === e4.type && null != ((_a = e4.resource) == null ? void 0 : _a.href) || (r2 = "water" === e4.type ? e(e4.color) : r(e4.material) ? e(e4.material.color) : null);
  }), r2 ? new l2(r2) : null;
}
function L(t2, o) {
  if (null == o || null == t2)
    return t2;
  const r2 = t2.toRgba();
  return r2[3] = r2[3] * o, new l2(r2);
}
function z(e4, t2, o) {
  const r2 = e4.symbolLayers;
  if (!r2)
    return;
  const i2 = (e5) => {
    var _a;
    const r3 = r(e5) ? e5 : null;
    return L(t2 = (_a = t2 != null ? t2 : r3) != null ? _a : null != o ? h2 : null, o);
  };
  r2.forEach((e5) => {
    var _a;
    if ("object" !== e5.type || null == ((_a = e5.resource) == null ? void 0 : _a.href) || t2)
      if ("water" === e5.type)
        e5.color = i2(e5.color);
      else {
        const t3 = r(e5.material) ? e5.material.color : null, r3 = i2(t3);
        t(e5.material) ? e5.material = new l3({ color: r3 }) : e5.material.color = r3, null != o && "outline" in e5 && r(e5.outline) && r(e5.outline.color) && (e5.outline.color = L(e5.outline.color, o));
      }
  });
}
function v(e4, t2, o) {
  (t2 = t2 != null ? t2 : e4.color) && (e4.color = L(t2, o)), null != o && "outline" in e4 && e4.outline && e4.outline.color && (e4.outline.color = L(e4.outline.color, o));
}
function x2(r2, n2, l5) {
  r2 && (n2 || null != l5) && (n2 && (n2 = new l2(n2)), c2(r2) ? z(r2, n2, l5) : x(r2) && v(r2, n2, l5));
}
async function S(e4, t2) {
  const o = e4.symbolLayers;
  o && await c(o, async (e5) => U2(e5, t2));
}
async function U2(e4, t2) {
  switch (e4.type) {
    case "extrude":
      R(e4, t2);
      break;
    case "icon":
    case "line":
    case "text":
      O(e4, t2);
      break;
    case "path":
      A(e4, t2);
      break;
    case "object":
      await $(e4, t2);
  }
}
function O(e4, t2) {
  const o = E(t2);
  r(o) && (e4.size = o);
}
function E(e4) {
  for (const t2 of e4)
    if ("number" == typeof t2)
      return t2;
  return null;
}
function R(e4, t2) {
  e4.size = "number" == typeof t2[2] ? t2[2] : 0;
}
async function $(e4, t2) {
  const { resourceSize: o, symbolSize: r2 } = await D(e4), n2 = C2(t2, o, r2);
  e4.width = I(t2[0], r2[0], o[0], n2), e4.depth = I(t2[1], r2[1], o[1], n2), e4.height = I(t2[2], r2[2], o[2], n2);
}
function A(e4, t2) {
  const o = C2(t2, l, [e4.width, void 0, e4.height]);
  e4.width = I(t2[0], e4.width, 1, o), e4.height = I(t2[2], e4.height, 1, o);
}
function C2(e4, t2, o) {
  for (let r2 = 0; r2 < 3; r2++) {
    const n2 = e4[r2];
    switch (n2) {
      case "symbol-value": {
        const e5 = o[r2];
        return null != e5 ? e5 / t2[r2] : 1;
      }
      case "proportional":
        break;
      default:
        if (n2 && t2[r2])
          return n2 / t2[r2];
    }
  }
  return 1;
}
async function D(e4) {
  const t2 = await import("./symbolLayerUtils-O3J5ZKIJ.js"), o = await t2.computeObjectLayerResourceSize(e4, 10), { width: r2, height: n2, depth: l5 } = e4, i2 = [r2, l5, n2];
  let s = 1;
  for (let c4 = 0; c4 < 3; c4++) {
    const e5 = i2[c4];
    if (null != e5) {
      s = e5 / o[c4];
      break;
    }
  }
  for (let c4 = 0; c4 < 3; c4++)
    null == i2[c4] && (i2[c4] = o[c4] * s);
  return { resourceSize: o, symbolSize: i2 };
}
function I(e4, t2, o, r2) {
  switch (e4) {
    case "proportional":
      return o * r2;
    case "symbol-value":
      return null != t2 ? t2 : o;
    default:
      return e4;
  }
}
function J(e4, t2) {
  const o = E(t2);
  if (!t(o))
    switch (e4.type) {
      case "simple-marker":
        e4.size = o;
        break;
      case "picture-marker": {
        const t3 = e4.width / e4.height;
        t3 > 1 ? (e4.width = o, e4.height = o * t3) : (e4.width = o * t3, e4.height = o);
        break;
      }
      case "simple-line":
        e4.width = o;
        break;
      case "text":
        e4.font.size = o;
    }
}
async function M(e4, r2) {
  if (e4 && r2)
    return c2(e4) ? S(e4, r2) : void (x(e4) && J(e4, r2));
}
function N(e4, r2, n2) {
  if (e4 && null != r2)
    if (c2(e4)) {
      const t2 = e4.symbolLayers;
      t2 && t2.forEach((e5) => {
        if (e5 && "object" === e5.type)
          switch (n2) {
            case "tilt":
              e5.tilt = r2;
              break;
            case "roll":
              e5.roll = r2;
              break;
            default:
              e5.heading = r2;
          }
      });
    } else
      x(e4) && ("simple-marker" !== e4.type && "picture-marker" !== e4.type && "text" !== e4.type || (e4.angle = r2));
}
function q2(e4) {
  if (!e4)
    return null;
  const t2 = e4.effects.filter((e5) => "bloom" !== e5.type).map((e5) => e5.toJSON());
  return i(t2);
}
function B(e4) {
  return r(e4) && "polygon-3d" === e4.type && e4.symbolLayers.some((e5) => "extrude" === e5.type);
}

export {
  f2 as f,
  h,
  y,
  d,
  g,
  w,
  d2,
  g2,
  j,
  x2 as x,
  M,
  N,
  q2 as q,
  B
};
//# sourceMappingURL=chunk-O7LTV6XN.js.map
