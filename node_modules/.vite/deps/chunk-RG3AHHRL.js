import {
  a
} from "./chunk-OSHI574D.js";

// node_modules/@arcgis/core/chunks/mat2d.js
function a2(t, a3) {
  return t[0] = a3[0], t[1] = a3[1], t[2] = a3[2], t[3] = a3[3], t[4] = a3[4], t[5] = a3[5], t;
}
function n(t) {
  return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = 0, t[5] = 0, t;
}
function s(t, a3, n2, s2, r2, u2, o2) {
  return t[0] = a3, t[1] = n2, t[2] = s2, t[3] = r2, t[4] = u2, t[5] = o2, t;
}
function r(t, a3) {
  const n2 = a3[0], s2 = a3[1], r2 = a3[2], u2 = a3[3], o2 = a3[4], e2 = a3[5];
  let c2 = n2 * u2 - s2 * r2;
  return c2 ? (c2 = 1 / c2, t[0] = u2 * c2, t[1] = -s2 * c2, t[2] = -r2 * c2, t[3] = n2 * c2, t[4] = (r2 * e2 - u2 * o2) * c2, t[5] = (s2 * o2 - n2 * e2) * c2, t) : null;
}
function u(t) {
  return t[0] * t[3] - t[1] * t[2];
}
function o(t, a3, n2) {
  const s2 = a3[0], r2 = a3[1], u2 = a3[2], o2 = a3[3], e2 = a3[4], c2 = a3[5], i2 = n2[0], h2 = n2[1], M2 = n2[2], f2 = n2[3], b2 = n2[4], l2 = n2[5];
  return t[0] = s2 * i2 + u2 * h2, t[1] = r2 * i2 + o2 * h2, t[2] = s2 * M2 + u2 * f2, t[3] = r2 * M2 + o2 * f2, t[4] = s2 * b2 + u2 * l2 + e2, t[5] = r2 * b2 + o2 * l2 + c2, t;
}
function e(t, a3, n2) {
  const s2 = a3[0], r2 = a3[1], u2 = a3[2], o2 = a3[3], e2 = a3[4], c2 = a3[5], i2 = Math.sin(n2), h2 = Math.cos(n2);
  return t[0] = s2 * h2 + u2 * i2, t[1] = r2 * h2 + o2 * i2, t[2] = s2 * -i2 + u2 * h2, t[3] = r2 * -i2 + o2 * h2, t[4] = e2, t[5] = c2, t;
}
function c(t, a3, n2) {
  const s2 = a3[0], r2 = a3[1], u2 = a3[2], o2 = a3[3], e2 = a3[4], c2 = a3[5], i2 = n2[0], h2 = n2[1];
  return t[0] = s2 * i2, t[1] = r2 * i2, t[2] = u2 * h2, t[3] = o2 * h2, t[4] = e2, t[5] = c2, t;
}
function i(t, a3, n2) {
  const s2 = a3[0], r2 = a3[1], u2 = a3[2], o2 = a3[3], e2 = a3[4], c2 = a3[5], i2 = n2[0], h2 = n2[1];
  return t[0] = s2, t[1] = r2, t[2] = u2, t[3] = o2, t[4] = s2 * i2 + u2 * h2 + e2, t[5] = r2 * i2 + o2 * h2 + c2, t;
}
function h(t, a3) {
  const n2 = Math.sin(a3), s2 = Math.cos(a3);
  return t[0] = s2, t[1] = n2, t[2] = -n2, t[3] = s2, t[4] = 0, t[5] = 0, t;
}
function M(t, a3) {
  return t[0] = a3[0], t[1] = 0, t[2] = 0, t[3] = a3[1], t[4] = 0, t[5] = 0, t;
}
function f(t, a3) {
  return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = a3[0], t[5] = a3[1], t;
}
function b(t) {
  return "mat2d(" + t[0] + ", " + t[1] + ", " + t[2] + ", " + t[3] + ", " + t[4] + ", " + t[5] + ")";
}
function l(t) {
  return Math.sqrt(t[0] ** 2 + t[1] ** 2 + t[2] ** 2 + t[3] ** 2 + t[4] ** 2 + t[5] ** 2 + 1);
}
function m(t, a3, n2) {
  return t[0] = a3[0] + n2[0], t[1] = a3[1] + n2[1], t[2] = a3[2] + n2[2], t[3] = a3[3] + n2[3], t[4] = a3[4] + n2[4], t[5] = a3[5] + n2[5], t;
}
function d(t, a3, n2) {
  return t[0] = a3[0] - n2[0], t[1] = a3[1] - n2[1], t[2] = a3[2] - n2[2], t[3] = a3[3] - n2[3], t[4] = a3[4] - n2[4], t[5] = a3[5] - n2[5], t;
}
function p(t, a3, n2) {
  return t[0] = a3[0] * n2, t[1] = a3[1] * n2, t[2] = a3[2] * n2, t[3] = a3[3] * n2, t[4] = a3[4] * n2, t[5] = a3[5] * n2, t;
}
function x(t, a3, n2, s2) {
  return t[0] = a3[0] + n2[0] * s2, t[1] = a3[1] + n2[1] * s2, t[2] = a3[2] + n2[2] * s2, t[3] = a3[3] + n2[3] * s2, t[4] = a3[4] + n2[4] * s2, t[5] = a3[5] + n2[5] * s2, t;
}
function y(t, a3) {
  return t[0] === a3[0] && t[1] === a3[1] && t[2] === a3[2] && t[3] === a3[3] && t[4] === a3[4] && t[5] === a3[5];
}
function g(a3, n2) {
  const s2 = a3[0], r2 = a3[1], u2 = a3[2], o2 = a3[3], e2 = a3[4], c2 = a3[5], i2 = n2[0], h2 = n2[1], M2 = n2[2], f2 = n2[3], b2 = n2[4], l2 = n2[5], m2 = a();
  return Math.abs(s2 - i2) <= m2 * Math.max(1, Math.abs(s2), Math.abs(i2)) && Math.abs(r2 - h2) <= m2 * Math.max(1, Math.abs(r2), Math.abs(h2)) && Math.abs(u2 - M2) <= m2 * Math.max(1, Math.abs(u2), Math.abs(M2)) && Math.abs(o2 - f2) <= m2 * Math.max(1, Math.abs(o2), Math.abs(f2)) && Math.abs(e2 - b2) <= m2 * Math.max(1, Math.abs(e2), Math.abs(b2)) && Math.abs(c2 - l2) <= m2 * Math.max(1, Math.abs(c2), Math.abs(l2));
}
var S = o;
var j = d;
var q = Object.freeze(Object.defineProperty({ __proto__: null, copy: a2, identity: n, set: s, invert: r, determinant: u, multiply: o, rotate: e, scale: c, translate: i, fromRotation: h, fromScaling: M, fromTranslation: f, str: b, frob: l, add: m, subtract: d, multiplyScalar: p, multiplyScalarAndAdd: x, exactEquals: y, equals: g, mul: S, sub: j }, Symbol.toStringTag, { value: "Module" }));

export {
  n,
  s,
  r,
  o,
  e,
  c,
  i,
  h,
  M,
  f
};
//# sourceMappingURL=chunk-RG3AHHRL.js.map
