/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{loadArcade as e}from"../../support/arcadeOnDemand.js";import{getWellKnownBasemapId as t}from"../../support/basemapUtils.js";const r=",",i={light:["streets","gray","topo","terrain","national-geographic","oceans","osm","gray-vector","streets-vector","topo-vector","streets-relief-vector","streets-navigation-vector","arcgis-light-gray","arcgis-navigation","arcgis-streets","arcgis-streets-relief","arcgis-topographic","arcgis-oceans","osm-standard","osm-standard-relief","osm-streets","osm-streets-relief","osm-light-gray","arcgis-terrain","arcgis-charted-territory","arcgis-community","arcgis-colored-pencil","arcgis-modern-antique","arcgis-midcentury","arcgis-newspaper","arcgis-hillshade-light"],dark:["satellite","hybrid","dark-gray","dark-gray-vector","streets-night-vector","arcgis-imagery","arcgis-imagery-standard","arcgis-dark-gray","arcgis-navigation-night","arcgis-streets-night","osm-dark-gray","arcgis-nova","arcgis-hillshade-dark"]},n="percent-of-total",s="field",a={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},o=["integer","small-integer"];let c=null;async function l(t){const{field:r,field2:i,field3:n,normalizationField:s,valueExpression:a}=t;let o=[];if(a){if(!c){const{arcadeUtils:t}=await e();c=t}o=c.extractFieldNames(a)}return r&&o.push(r),i&&o.push(i),n&&o.push(n),s&&o.push(s),o}function g(e){let t=e.normalizationType;return t||(e.normalizationField?t=s:null!=e.normalizationTotal&&(t=n)),t}function u(e){return String(e).padStart(2,"0")}function d(e,t,r){let i;if("date"===t||"number"===t){"number"===t&&(e=new Date(e));i=`TIMESTAMP'${r?e.getFullYear():e.getUTCFullYear()}-${u((r?e.getMonth():e.getUTCMonth())+1)}-${u(r?e.getDate():e.getUTCDate())} ${u(r?e.getHours():e.getUTCHours())}:${u(r?e.getMinutes():e.getUTCMinutes())}:${u(r?e.getSeconds():e.getUTCSeconds())}'`}else i=e;return i}function f(e,t,r,i){const{hasQueryEngine:n}=e;let s=`(${d(r,m(e,r),n)} - ${d(t,m(e,t),n)})`;n&&(s=`(${s} * ${a.milliseconds})`);let o=a[i],c="/";o<1&&(o=1/o,c="*");return{sqlExpression:1===o?s:`(${s} ${c} ${o})`,sqlWhere:null}}function m(e,t){if(t instanceof Date)return"date";if("number"==typeof t)return"number";if("string"==typeof t){const r=e.getField(t);if("<now>"===t.toLowerCase())return;if(r&&"date"===r.type)return"field"}}function p(e,t=i){for(const r in t)if(t[r].includes(e))return r}function h(e,r,i=!0){let n=null;return e&&("string"==typeof e?r.includes(e)&&(n=e):n=t(e)),i?n||"gray":n}function y(e,t){const r=t&&e.getField(t);return r&&o.includes(r.type)}function $(e){return`cast(${e} as float)`}export{r as FIELD_DELIMITER,$ as castIntegerFieldToFloat,i as defaultBasemapGroups,p as getBasemapGroup,h as getBasemapId,f as getDateDiffSQL,m as getDateType,l as getFieldsList,g as getNormalizationType,y as isIntegerField,a as unitValueInDays};
