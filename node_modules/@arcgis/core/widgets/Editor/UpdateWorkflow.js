/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import{makeHandle as t}from"../../core/handleUtils.js";import{isSome as i}from"../../core/maybe.js";import{onAbort as a,createAbortError as o,throwIfAborted as s,isAborted as r}from"../../core/promiseUtils.js";import{watch as d}from"../../core/reactiveUtils.js";import"../../core/Logger.js";import"../../core/accessorSupport/ensureType.js";import"../../core/arrayUtils.js";import"../../core/Error.js";import"../../core/has.js";import{subclass as n}from"../../core/accessorSupport/decorators/subclass.js";import{highlightsSupported as l}from"../../views/support/layerViewUtils.js";import{Edits as c}from"./Edits.js";import u from"./UpdateWorkflowData.js";import m from"./Workflow.js";import{createWorkflowSteps as h,fetchCandidates as f,fetchFullFeature as p,findLayerInfo as g,getVisualVariableAttributes as w,setUpGeometryUpdate as v,isTerminalUpdateEventType as y}from"./workflowUtils.js";var b;const M="candidate-highlight";let j=b=class extends m{constructor(e){super(e),this.type="update"}static create(e,t,i){const a=new b({data:new u({edits:new c,viewModel:e}),onCommit:async e=>{const t=e.edits.feature,a=t.sourceLayer,o=t.clone();if(!e.edits.attributesModified){const{objectIdField:e}=a;o.attributes={[e]:t.getAttribute(e)}}e.edits.geometryModified||(o.geometry=null),await i(a,{updateFeatures:[o]})}});return a._set("steps",this._createWorkflowSteps(a,t)),a}highlight(e){const{data:{viewModel:{view:t}}}=this,i=e&&t.allLayerViews.items.find((({layer:t})=>t===e.layer));l(i)&&this.handles.add(i.highlight(e),M)}unhighlight(){this.handles.remove(M)}static _createWorkflowSteps(e,n="awaiting-feature-to-update"){const{data:l,handles:c}=e,u=new Map;return h(["awaiting-feature-to-update","awaiting-update-feature-candidate","editing-existing-feature","adding-attachment","editing-attachment"],n,{"awaiting-feature-to-update":()=>({id:"awaiting-feature-to-update",async setUp(){const{spinnerViewModel:e,view:t}=l.viewModel;let i=null;c.add({remove(){i&&(i.abort(),i=null)}},this.id),l.edits.feature=null;const r=t.on("immediate-click",(r=>{e.location=r.mapPoint,e.visible=!0,i&&i.abort();const{editableItems:d}=l.viewModel;i=new AbortController,new Promise(((e,s)=>{a(i.signal,(()=>s(o()))),e(f(d,t,r,i.signal))})).then((e=>{if(s(i),l.candidates=e.reduce(((e,t)=>t.error?e:[...e,...t.value]),[]),l.viewModel.spinnerViewModel.visible=1===l.candidates.length,0!==l.candidates.length)if(1===l.candidates.length){const e=l.candidates[0];l.edits.feature=e,l.viewModel.activeWorkflow.go("editing-existing-feature").catch((()=>{})).then((()=>l.viewModel.spinnerViewModel.visible=!1))}else l.viewModel.activeWorkflow.next()}))}));t.focus(),c.add(r,this.id)},async tearDown(){c.remove(this.id)}}),"awaiting-update-feature-candidate":()=>({id:"awaiting-update-feature-candidate",async setUp(){const{edits:t}=l;t.feature=null,c.add(d((()=>t.feature),(t=>{e.unhighlight(),e.highlight(t)})),this.id)},async tearDown(){e.unhighlight(),c.remove(this.id)}}),"editing-existing-feature":()=>({id:"editing-existing-feature",async setUp(){if(c.has("editing-existing-feature"))return;const a=l.edits.feature,{attachmentsViewModel:o,editableItems:s,featureFormViewModel:n,layerInfos:m,sketchViewModel:h,view:f}=l.viewModel;l.editableItem=s.find((e=>e.layer===a.layer));const b=new AbortController;c.add({remove:()=>b.abort()},this.id);const M=f.whenLayerView(a.layer),j=p(a,f,b.signal),k=await M,U=await j;if(r(b))return;l.edits.updateGeometry(U.geometry),l.edits.updateAttributes(U.attributes),l.edits.trackChanges(),o.set({graphic:U,mode:"view"});const V=U.sourceLayer,x=g(m,V)?.formTemplate,E=f.spatialReference;n.set({arcadeEditType:"UPDATE",feature:U,formTemplate:x,spatialReference:E,view:f});const I="createInteractiveEditSession"in k?k.createInteractiveEditSession(a):null,W=[n.on("value-change",(e=>{l.edits.updateAttributes(n.getValues()),U.attributes=l.edits.feature.attributes,I&&I.setAttribute(e.fieldName,e.value)})),d((()=>o.mode),(e=>{"add"===e&&l.viewModel.activeWorkflow.go("adding-attachment"),"edit"===e&&l.viewModel.activeWorkflow.go("editing-attachment")}))];I&&(W.push(t((()=>I.rollback()))),c.add(t((()=>I.commit())),e._handleKeys.afterCommit));if(l.editableItem.geometryUpdatesEnabled){h.allowDeleteKey=!1;const t=w(U),{interactive:a,visual:o}=await v(U,t,h,f,(({geometry:e,attributes:a},o)=>{if(i(t.rotation)){const{field:e}=t.rotation;n.setValue(e,a[e])}if(i(t.size)){const{field:e}=t.size;n.setValue(e,a[e])}l.edits.updateAttributes(a),l.edits.updateGeometry(e),n.feature.geometry=e,("undo"===o.type||"redo"===o.type||"update"===o.type&&i(o.toolEventInfo)&&y(o.toolEventInfo.type))&&n.notifyFeatureGeometryChanged()}),u);W.push(a,o),c.add(a,e._handleKeys.beforeCommit),c.add(o,e._handleKeys.afterCommit)}else e.highlight(U);c.add(W,this.id)},async tearDown({cancelled:t}){t&&(e.unhighlight(),c.remove(this.id))}}),"adding-attachment":()=>({id:"adding-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){l.viewModel.attachmentsViewModel.mode="view"}}),"editing-attachment":()=>({id:"editing-attachment",parent:"editing-existing-feature",async setUp(){},async tearDown(){l.viewModel.attachmentsViewModel.mode="view"}})})}};j=b=e([n("esri.widgets.Editor.UpdateWorkflow")],j);const k=j;export{k as default};
