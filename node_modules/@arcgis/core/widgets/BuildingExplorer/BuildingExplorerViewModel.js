/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../core/Accessor.js";import t from"../../core/Collection.js";import{referenceSetter as r}from"../../core/collectionUtils.js";import i from"../../core/Handles.js";import o from"../../core/Logger.js";import{isSome as l}from"../../core/maybe.js";import{isAbortError as a}from"../../core/promiseUtils.js";import{watch as p,whenOnce as n}from"../../core/reactiveUtils.js";import{property as d}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/accessorSupport/ensureType.js";import{subclass as y}from"../../core/accessorSupport/decorators/subclass.js";import h from"../../layers/BuildingSceneLayer.js";import c from"../../layers/support/BuildingFilter.js";import m from"./BuildingDisciplinesViewModel.js";import u from"./BuildingLevel.js";import f from"./BuildingPhase.js";import{showFullModel as g}from"./support/buildingLayerUtils.js";import{setFilterOnLayers as j,getFilterBlockSolid as _,getFilterBlockXRay as v,generateFilterId as w}from"./support/filterUtils.js";import{createLoadLayersFunction as L}from"./support/layerUtils.js";let B=class extends s{constructor(e){super(e),this.view=null,this.state="disabled",this.level=new u,this.phase=new f,this.disciplines=new m,this._handles=new i,this._loadLayers=L(),this.layers=new t}initialize(){this._handles.add([this.layers.on("change",(()=>this._onLayersChange())),p((()=>({state:this.state,layers:this.layers,filter:this._filter})),(({state:e,layers:s,filter:t})=>{"ready"===e&&j(s,t)}),{initial:!0})]),this._onLayersChange()}destroy(){this._handles.destroy(),this.level.destroyed||this.level.destroy(),this.phase.destroyed||this.phase.destroy(),this.disciplines.destroyed||this.disciplines.destroy()}get isSupported(){return"3d"===this.view?.type}get layers(){return this._get("layers")}set layers(e){const s=e.filter((e=>e instanceof h));s.length!==e.length&&o.getLogger(this.declaredClass).error("Some layers are not BuildingSceneLayers but only BuildingSceneLayers can be passed to the widget."),this._set("layers",r(s,this._get("layers")))}get _filter(){const e=this.level.filterExpressions,s=this.phase.filterExpressions,t=[],r=_([e.solid,s.solid]);l(r)&&t.push(r);const i=v([e.xRay,s.xRay]);return l(i)&&t.push(i),0===t.length?null:new c({id:w(),name:"Building Explorer Filter",filterBlocks:t})}async _onLayersChange(){const e=this.layers;if(this.level.layers=e,this.phase.layers=e,this.disciplines.layers=e,0!==e.length){this._set("state","loading");try{await this._loadLayers(e),await Promise.all([n((()=>"ready"===this.level.state)),n((()=>"ready"===this.phase.state)),n((()=>"ready"===this.disciplines.state))]),e.forEach(g),this._set("state","ready")}catch(s){a(s)||this._set("state","failed")}}else this._set("state","disabled")}};e([d({value:null})],B.prototype,"view",void 0),e([d()],B.prototype,"isSupported",null),e([d({type:t,nonNullable:!0})],B.prototype,"layers",null),e([d({readOnly:!0})],B.prototype,"state",void 0),e([d({readOnly:!0,type:u})],B.prototype,"level",void 0),e([d({readOnly:!0,type:f})],B.prototype,"phase",void 0),e([d({readOnly:!0,type:m})],B.prototype,"disciplines",void 0),e([d()],B.prototype,"_filter",null),B=e([y("esri.widgets.BuildingExplorer.BuildingExplorerViewModel")],B);const b=B;export{b as default};
