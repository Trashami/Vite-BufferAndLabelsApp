/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{isSome as e,assertIsSome as o}from"../../../core/maybe.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as n}from"../../../core/accessorSupport/decorators/subclass.js";import a from"./Column.js";import{autoLink as r}from"../../support/uriUtils.js";const s={input:"esri-editor-column__cell-input",inputContainer:"esri-editor-column__cell-input--container"},u={showInput:"Enter",hideInput:"Escape"};let l=class extends a{constructor(t){super(t),this.activeEditInfo=null,this.cellValueValidatorFunction=({oldValue:t,value:e})=>t!==e,this.editable=!1,this.inputRenderFunction=({root:t,column:e,rowData:o})=>{if(this.activeEditInfo?.updating)return;if(!this.editable)return;const i=this.getCellValue(e,o),n=this.createInputElement({root:t,column:e,rowData:o,value:i});this._set("activeEditInfo",{column:e,input:n,root:t,rowData:o,updating:!0,oldValue:i});const a=this.createInputContainer();a.appendChild(n),this.removeCellContent(t),t.appendChild(a),n.focus(),n instanceof HTMLInputElement&&n.select(),this.grid?.notifyResize()},this.loadingMessage="",this.inputType="text",this.maxLength=null,this.parseInputValueFunction=({input:t})=>t.value,this.renderFunction=t=>{const{root:o,column:i,rowData:n}=t,{activeEditInfo:a}=this;if(a&&a.updating)return;const s=this.getCellValue(i,n),l=this.cellValueFormatFunction({column:i,rowData:n,value:s});o.onclick=()=>o.focus(),o.ondblclick=()=>this.inputRenderFunction(t),o.ontouchend=()=>this.inputRenderFunction(t);const c=this.grid?.getSlotElementByName(o.slot),p=c?.parentElement;p&&!p.onkeydown&&(p.onkeydown=e=>{e.key!==u.showInput||this.activeEditInfo||this.inputRenderFunction(t),e.key===u.hideInput&&this.activeEditInfo&&this.cancel()}),e(s)&&e(l)?o.title=l.toString():o.title&&o.removeAttribute("title");const d=r(this.messagesURIUtils,l);l?.toString()!==o.innerHTML&&d!==o.innerHTML&&(o.innerHTML=d)},this.required=!1,this.store=null,this.updateRowItemFunction=({rowData:t,column:e,value:i})=>{o(t),t.item[e.path]=i},this.updateStoreItemFunction=async({rowData:t,column:e,value:i})=>{o(t),await(this.store?.updateItem({index:t.index,name:e.path,value:i}))}}cancel(){const{activeEditInfo:t}=this;if(!t)return;const{column:e,root:o,rowData:i,oldValue:n}=t;this._set("activeEditInfo",null);const a=this.cellValueFormatFunction({column:e,rowData:i,value:n}),s=r(this.messagesURIUtils,a);o.innerHTML=s,this.grid?.notifyResize()}createInputContainer(){const t=document.createElement("div");return t.classList.add(s.inputContainer),t}createInputElement({value:t}){const e=document.createElement("input");return e.classList.add(s.input),null!=this.maxLength&&(e.maxLength=this.maxLength),e.type=this.inputType,e.value=t,e.onblur=()=>{e.onblur=null,this.submit()},e}async submit(){const{activeEditInfo:t}=this;if(!t)return;const{column:o,input:i,root:n,rowData:a,oldValue:s}=t,u=this.parseInputValueFunction({input:i,column:o,rowData:a});if(!this.cellValueValidatorFunction({value:u,oldValue:s,column:o,rowData:a}))this.cancel();else{n.innerHTML=this.loadingMessage,this.grid?.notifyResize();try{await this.updateStoreItemFunction({rowData:a,column:o,value:u}),this.updateRowItemFunction({rowData:a,column:o,value:u});const t=this.getCellValue(o,a),i=this.cellValueFormatFunction({column:o,rowData:a,value:t});e(t)&&e(i)?n.title=i.toString():n.title&&n.removeAttribute("title");const s=r(this.messagesURIUtils,i);n.innerHTML=s,this.emit("value-change",{column:o,rowData:a,value:t}),this._set("activeEditInfo",null),this.grid?.notifyResize()}catch(l){this.cancel()}}}};t([i({readOnly:!0})],l.prototype,"activeEditInfo",void 0),t([i()],l.prototype,"cellValueValidatorFunction",void 0),t([i()],l.prototype,"editable",void 0),t([i()],l.prototype,"inputRenderFunction",void 0),t([i({constructOnly:!0})],l.prototype,"loadingMessage",void 0),t([i()],l.prototype,"inputType",void 0),t([i()],l.prototype,"maxLength",void 0),t([i()],l.prototype,"parseInputValueFunction",void 0),t([i()],l.prototype,"renderFunction",void 0),t([i()],l.prototype,"required",void 0),t([i()],l.prototype,"store",void 0),t([i()],l.prototype,"updateRowItemFunction",void 0),t([i()],l.prototype,"updateStoreItemFunction",void 0),l=t([n("esri.widgets.FeatureTable.Grid.EditorColumn")],l);const c=l;export{c as default};
