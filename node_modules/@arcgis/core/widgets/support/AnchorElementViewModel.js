/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import o from"../../core/Evented.js";import t from"../../core/Handles.js";import{destroyMaybe as r,isSome as s,applySome as i}from"../../core/maybe.js";import{when as c,watch as n}from"../../core/reactiveUtils.js";import{property as a}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";var l;const d=Symbol("anchorHandles");let m=class extends o.EventedAccessor{constructor(e){super(e),this[l]=new t,this.location=null,this.screenLocationEnabled=!1,this.view=null,this[d].add([c((()=>i(this.screenLocationEnabled?this.view:null,(e=>[e.size,"3d"===e.type?e.camera:e.viewpoint]))),(()=>this.notifyChange("screenLocation"))),n((()=>this.screenLocation),((e,o)=>{s(e)&&s(o)&&this.emit("view-change")}))])}destroy(){this.view=null,this[d]=r(this[d])}get screenLocation(){const{location:e,view:o,screenLocationEnabled:t}=this;return t&&s(e)&&s(o)&&o.ready?o.toScreen(e):null}};l=d,e([a()],m.prototype,"location",void 0),e([a()],m.prototype,"screenLocation",null),e([a()],m.prototype,"screenLocationEnabled",void 0),e([a()],m.prototype,"view",void 0),m=e([p("esri.widgets.support.AnchorElementViewModel")],m);const h=m;export{h as default};
