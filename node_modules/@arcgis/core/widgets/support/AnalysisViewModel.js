/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../chunks/tslib.es6.js";import s from"../../core/Accessor.js";import{createTask as t}from"../../core/asyncUtils.js";import i from"../../core/Logger.js";import{isSome as n,applySome as r,abortMaybe as a,isNone as o,removeMaybe as l}from"../../core/maybe.js";import{throwIfAborted as c,isAbortError as h,isAborted as p}from"../../core/promiseUtils.js";import{watch as y,syncAndInitial as w,sync as d,whenOnce as _,when as u}from"../../core/reactiveUtils.js";import{property as v}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/accessorSupport/ensureType.js";import{subclass as V}from"../../core/accessorSupport/decorators/subclass.js";var m;!function(e){e[e.PENDING=0]="PENDING",e[e.WAIT_FOR_VIEW_READY=1]="WAIT_FOR_VIEW_READY",e[e.RUNNING=2]="RUNNING"}(m||(m={}));let g=class extends s{constructor(e={}){super(e),this.view=null,this.analysisView=null,this._reconnectViewTask=null,this._forceInteractiveHandle=null,this._parentChangeFromReconnect=!1,this._startUserOperation=null,this.logger=i.getLogger(this.declaredClass);const s=e?.analysis;n(s)?this.analysis=s:(this._set("analysis",this.constructAnalysis()),this._set("isAnalysisOwner",!0)),e&&null!=e.visible&&(this.visible=e.visible)}normalizeCtorArgs(e){const{analysis:s,...t}=e;return t}initialize(){this.addHandles([y((()=>({readyAndNotSupported:n(this.view)&&this.view.ready&&!this.supported})),(({readyAndNotSupported:e})=>{e&&this.logger.errorOnce(this.unsupportedErrorMessage)}),w),y((()=>r(this.analysis,(({parent:e})=>e))),(e=>{this._parentChangeFromReconnect||e===this.view||this._set("isAnalysisOwner",!1);const s=!this._parentChangeFromReconnect;this._parentChangeFromReconnect=!1,s&&this._scheduleViewReconnect()}),d),y((()=>({view:this.view,ready:n(this.view)&&this.view.ready,supported:this.supported})),(({view:e},{view:s})=>{e!==s&&(this._startUserOperation=a(this._startUserOperation),this._disconnectFromView(s)),this._scheduleViewReconnect()}),w)])}destroy(){this._reconnectViewTask=a(this._reconnectViewTask),this._startUserOperation=a(this._startUserOperation),n(this.analysisView)&&(this.analysisView.visible=void 0),this._disconnectFromView(this.view),this._set("view",null),n(this.analysis)&&this.isAnalysisOwner&&(this.analysis.destroy(),this._set("analysis",null))}get supported(){return o(this.view)||this.view.type===this.supportedViewType}set visible(e){this._set("visible",e),n(this.analysisView)&&(this.analysisView.visible=e)}get active(){return n(this.tool)&&this.tool.active}get disabled(){return o(this.view)||!this.view.ready||!this.supported}set analysis(e){e!==this._get("analysis")&&(this._startUserOperation=a(this._startUserOperation),this._disconnectFromView(this.view),this._setExternalAnalysis(e),this._scheduleViewReconnect())}get ready(){return n(this.analysisView)&&!this.connectingToView}get connectingToView(){return n(this._reconnectViewTask)}get isAnalysisOwner(){return this._get("isAnalysisOwner")}get tool(){return n(this.analysisView)?this.analysisView.tool:null}clear(){this._startUserOperation=a(this._startUserOperation),this._resetInteractiveCreationState(),n(this.tool)&&n(this.view)&&this.view.activeTool===this.tool&&(this.view.activeTool=null)}async start(){this.clear();const e={task:null,abort:null,state:m.PENDING},s=t((async s=>{if(e.state=m.WAIT_FOR_VIEW_READY,await _((()=>this.ready),s),e.state=m.RUNNING,o(this.analysisView)||o(this.view))return;const t=this.analysisView.tool;o(t)||(this.view.activeTool=t,u((()=>t.created),(()=>{t.active&&n(this.view)&&(this.view.activeTool=null)}),{initial:!0,once:!0}))}));return e.task=s,e.abort=()=>s.abort(),this._startUserOperation=e,s.promise}onConnectToAnalysisView(e){}onDisconnectFromAnalysisView(){}_scheduleViewReconnect(){this._reconnectViewTask=a(this._reconnectViewTask);const e=t((async s=>{try{await this._reconnectView(s)}catch(t){if(c(s),!h(t))return void this.logger.warn("Failed to use analysis in view model",t);throw t}finally{e===this._reconnectViewTask&&(this._reconnectViewTask=null)}}));this._reconnectViewTask=e}async _reconnectView(e){const{view:s}=this,t=n(s)&&s.ready&&this.supported,i=this.analysis;if(this._startUserOperation=O(this._startUserOperation),this._disconnectFromView(s),t&&!o(s)&&!o(i)){if(this.isAnalysisOwner){if(n(i.parent))return void this.logger.errorOnce("expected owned analysis to have null parent when connecting to view");this._parentChangeFromReconnect=!0,s.analyses.add(i)}this.analysisView=await s.whenAnalysisView(i),p(e)?this._startUserOperation=O(this._startUserOperation):(this.analysisView.visible=this.visible,this._forceInteractiveHandle=this.analysisView.forceInteractiveForViewModel(),this.addHandles(this._forceInteractiveHandle),this.onConnectToAnalysisView(this.analysisView))}}_disconnectFromView(e){n(e)&&this.isAnalysisOwner&&e.analyses.includes(this.analysis)&&(this._parentChangeFromReconnect=!0,this.analysis.clear(),e.analyses.remove(this.analysis)),this.onDisconnectFromAnalysisView(),this._forceInteractiveHandle=l(this._forceInteractiveHandle),this.analysisView=null}_setExternalAnalysis(e){n(this.analysisView)&&!this.isAnalysisOwner&&(this.analysisView.visible=void 0,this._forceInteractiveHandle=l(this._forceInteractiveHandle)),this.analysisView=null,this._set("isAnalysisOwner",!1),this._set("analysis",e),this._parentChangeFromReconnect=!1}_resetInteractiveCreationState(){this.analysis.clear(),n(this.tool)&&this.tool.resetCreated()}get testInfo(){return{analysisView:this.analysisView}}};function O(e){return n(e)&&e.state>=m.RUNNING?(e.abort(),null):e}e([v()],g.prototype,"supported",null),e([v()],g.prototype,"view",void 0),e([v({type:Boolean,value:!0})],g.prototype,"visible",null),e([v()],g.prototype,"active",null),e([v()],g.prototype,"disabled",null),e([v({nonNullable:!0})],g.prototype,"analysis",null),e([v()],g.prototype,"analysisView",void 0),e([v()],g.prototype,"ready",null),e([v()],g.prototype,"connectingToView",null),e([v({readOnly:!0})],g.prototype,"isAnalysisOwner",null),e([v()],g.prototype,"_reconnectViewTask",void 0),e([v()],g.prototype,"_forceInteractiveHandle",void 0),e([v()],g.prototype,"tool",null),g=e([V("esri.widgets.support.AnalysisViewModel")],g);export{g as AnalysisViewModel};
