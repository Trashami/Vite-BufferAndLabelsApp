/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import{getAssetUrl as e}from"../../assets.js";import o from"../../Graphic.js";import"../../intl.js";import i from"../../core/Collection.js";import s from"../../core/Error.js";import r from"../../core/Evented.js";import n from"../../core/Handles.js";import a from"../../core/Logger.js";import{isSome as h}from"../../core/maybe.js";import{watch as c,when as d,initial as l}from"../../core/reactiveUtils.js";import{property as m}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import{cast as v}from"../../core/accessorSupport/decorators/cast.js";import{subclass as p}from"../../core/accessorSupport/decorators/subclass.js";import u from"../../geometry/Point.js";import{load as g}from"../../geometry/projection.js";import f from"../../symbols/PictureMarkerSymbol.js";import _ from"./support/Conversion.js";import{isValidPoint as w,isSupportedNotation as C}from"./support/coordinateConversionUtils.js";import{generateDefaultFormats as y,setDefaultPatterns as b}from"./support/formatUtils.js";import{GoToMixin as M}from"../support/GoTo.js";import{onLocaleChange as P,getLocale as j}from"../../intl/locale.js";import{fetchMessageBundle as L}from"../../intl/messages.js";const S={default:"default",crosshair:"crosshair"},F=new u([0,0,500]),E="xy",A=["mgrs","utm","usng","dd","dms","ddm"],x="esri__coordinateConversionWidgetState",W={conversions:"conversions",formats:"formats",view:"view",viewChange:"view-change"},G="esri/images/search/search-symbol-32.png";let T=class extends(M(r.EventedAccessor)){constructor(t){super(t),this._conversionPromise=null,this._handles=new n,this._locationGraphic=null,this._pointerCount=0,this.conversions=new i,this.formats=new i,this.formatterAvailable=!1,this.messages=null,this.filteredFormats=new i,this.locationSymbol=new f({url:e(G),width:24,height:24}),this.storageEnabled=!0,this.storageType="session",this.view=null,this._saveWidgetState=this._saveWidgetState.bind(this),this._handleFormatChange=this._handleFormatChange.bind(this),this._handleConversionChange=this._handleConversionChange.bind(this),this._handleViewChange=this._handleViewChange.bind(this),this._onClick=this._onClick.bind(this),this._onPointerMove=this._onPointerMove.bind(this),this._onPointerDown=this._onPointerDown.bind(this),this._onPointerUp=this._onPointerUp.bind(this)}initialize(){const t=async()=>this.messages=await L("esri/widgets/CoordinateConversion/t9n/CoordinateConversion");this.formats.addMany(y()),t().then((()=>{if(!this.destroyed&&(b(this.messages,this.formats),this.storageEnabled&&this._loadWidgetState(),this.formats.forEach((t=>{t.viewModel=this,this._handles.add(c((()=>t.currentPattern),this._saveWidgetState),t.name)})),this._handles.add(this.conversions.on("change",this._handleConversionChange),W.conversions),this._handles.add(this.formats.on("change",this._handleFormatChange),W.formats),this._handles.add(P((()=>{t().then((()=>{b(this.messages,this.formats)}))}))),g().then((()=>{this.formatterAvailable=!0})).catch((t=>{a.getLogger(this.declaredClass).error(new s("coordinate-conversion:projection-load-failed","Failed to load the projection module.",{error:t})),this.formatterAvailable=!1,this._filterFormatsAndConversions()})).then((()=>this._handles.add(c((()=>this.view),this._handleViewChange,l),W.viewChange))),0===this.conversions.length)){const t=this.formats.find((t=>t.name===E))||this.formats.getItemAt(0);this.conversions.add(new _({format:t}))}}))}destroy(){this._handles.removeAll(),this._cleanUpView(this.view),this.view=null}castConversions(t){return this._castToConversions(t)}set currentLocation(t){this._set("currentLocation",t),this._updateConversions()}get currentLocation(){return this._get("currentLocation")||null}set mode(t){switch(t){case"capture":this.currentLocation=null,this._startCaptureMode(),this._set("mode",t);break;case"live":this._startLiveMode(),this._set("mode",t)}}get mode(){return this._get("mode")||"live"}get state(){const{messages:t,view:e}=this,o=e?.ready;return t?o?"ready":e?"loading":"disabled":"disabled"}get storage(){const{storageType:t}=this;return"session"===t?sessionStorage:localStorage}get waitingForConversions(){return null!=this._conversionPromise}setLocation(t){if(this.view.graphics.remove(this._locationGraphic),t){const e=t.clone();e.hasZ&&(e.z=void 0),this._locationGraphic=new o({geometry:e,symbol:this.get("locationSymbol")}),this.view.graphics.add(this._locationGraphic)}}convert(t,e){return w(e)?Promise.resolve().then((()=>t.convert(e))):Promise.reject(new s("coordinate-conversion:invalid-point","Invalid point cannot be converted.",{point:e}))}goToLocation(t){const e=this.view,o="3d"===e.type?e.clippingArea:null,i=e.map?.basemap?.baseLayers;if(o||i?.length>0){const e=o??i.getItemAt(0)?.fullExtent;if(h(e)&&!e.contains(t))return Promise.reject(new s("coordinate-conversion:go-to-failed","Point outside basemap extent.",{point:t}))}return this.callGoTo({target:t})}pause(){this.currentLocation=null,this._handles.remove(W.view),this.view&&(this.view.cursor=S.default,this.view.graphics.remove(this._locationGraphic))}previewConversion(t,e=this.currentLocation||F){return this._convertMany([t],e).then((()=>t.displayCoordinate))}resume(){"capture"===this.mode?this._startCaptureMode():this._startLiveMode()}reverseConvert(t,e){return e.reverseConvert(t)}async updateConversions(t,e){if(!e||!e.type||"point"!==e.type)throw this._clearConversions(this.conversions),new s("coordinate-conversion:invalid-input-point","Point is invalid, conversions cannot be updated.",{point:e});return this._convertMany(t,e)}_castToConversions(t){const e=new i;return t.forEach((t=>{let o;if(t instanceof _)o=t;else if("string"==typeof t){const e=this.formats.find((e=>e.name===t));e&&(o=new _({format:e}))}o&&e.add(o)})),e}_cleanUpView(t){t&&(t.graphics.remove(this._locationGraphic),this._handles.remove(W.view),t.cursor=S.default)}_clearConversions(t){t.forEach((t=>{t.position={location:null,coordinate:null}}))}_convertMany(t,e){return Promise.all(t.map((t=>t.format.convert(e).then((e=>(t.position=e,t))).catch((()=>{t.position=null}))))).then((()=>t))}_handleConversionChange(t){t.added.forEach((t=>{const e=t.format;e.viewModel=this,this.currentLocation&&(this._set("waitingForConversions",!0),this.convert(e,this.currentLocation).then((e=>{t.position=e,this._set("waitingForConversions",!1)})))})),this._saveWidgetState()}_handleFormatChange(t){t.added.forEach((t=>{this._handles.add(c((()=>t.currentPattern),this._saveWidgetState),t.name),t.viewModel=this})),t.removed.forEach((t=>{t.viewModel=null;const e=this.conversions.filter((e=>e.format===t));this.conversions.removeMany(e),this._handles.remove(t.name)}))}_loadWidgetState(){try{const t=JSON.parse(this.storage.getItem(x));t&&this._setWidgetState(t)}catch(t){a.getLogger(this.declaredClass).error(new s("coordinate-conversion:invalid-session-storage-json","Could not read from storage.",{error:t}))}}_startCaptureMode(){this._handles.remove(W.view),this.view&&(this.view.cursor=S.crosshair,this.currentLocation&&this.setLocation(this.currentLocation),this._handles.add(this.view.on("click",this._onClick),W.view))}_startLiveMode(){this._pointerCount=0,this._handles.remove(W.view),this.view&&(this.view.cursor=S.default,this.view.graphics.remove(this._locationGraphic),this._handles.add([this.view.on("pointer-down",this._onPointerDown),this.view.on("pointer-up",this._onPointerUp),this.view.on("pointer-move",this._onPointerMove)],W.view))}_handleViewChange(t,e){e&&e!==t&&this._cleanUpView(e),t&&("capture"===this.mode?this._startCaptureMode():this._startLiveMode(),e&&this._filterFormatsAndConversions())}_onClick(t){if(0===t.button){const e=this.view.toMap(t),o=e&&e.normalize();this.setLocation(o),this.currentLocation=o}}_onPointerDown(t){const{pointerType:e}=t;if(this._pointerCount++,("touch"===e||"pen"===e)&&1===this._pointerCount){const e=this.view.toMap(t);this.currentLocation=e&&e.normalize()}}_onPointerMove(t){const{pointerType:e}=t;if("mouse"===e||1===this._pointerCount){const e=this.view.toMap(t);this.currentLocation=e&&e.normalize()}}_onPointerUp(){this._pointerCount--}_setWidgetState(t){try{t.formats.forEach((e=>{const o=this.formats.find((t=>t.name===e.name));o&&t.locale===j()&&e.currentPattern&&(o.currentPattern=e.currentPattern),o&&e.index>=0&&this.conversions.add(new _({format:o}))}))}catch(e){a.getLogger(this.declaredClass).warn(new s("coordinate-conversion:session-storage-read-error","Could not get widget state from stored JSON.",{error:e}))}}_saveWidgetState(){if(!this.storageEnabled)return;const t=this._toJSON();try{this.storage.setItem(x,JSON.stringify({formats:t,locale:j()}))}catch(e){a.getLogger(this.declaredClass).error(new s("coordinate-conversion:local-storage-write-error","Could not write to localStorage.",{error:e}))}}async _updateConversions(){try{await this.updateConversions(this.conversions.toArray(),this.currentLocation)}catch{}}_toJSON(){return this.formats.filter((t=>{const e=t.name;return"xy"===e||"basemap"===e||C(e)})).map((t=>({name:t.name,currentPattern:t.currentPattern,defaultPattern:t.defaultPattern,index:this.conversions.findIndex((e=>e.format===t))}))).sort(((t,e)=>t.index-e.index)).toArray()}_filterFormatsAndConversions(){const{formatterAvailable:t,conversions:e,formats:o}=this;t||this._handles.add(d((()=>this.view.spatialReference),(t=>{const i=t.isWebMercator||t.isWGS84,s=o.filter((t=>{const{name:e}=t;return!!A.includes(e)||"xy"===e&&!i})),r=this.filteredFormats.filter((t=>"xy"===t.name&&i&&!this.formats.includes(t))),n=e.filter((t=>s.includes(t.format)));o.removeMany(s),e.removeMany(n),this.filteredFormats.addMany(s.filter((t=>!this.filteredFormats.includes(t)))),o.addMany(r)}),{once:!0,initial:!0}),W.view)}};t([m()],T.prototype,"conversions",void 0),t([v("conversions")],T.prototype,"castConversions",null),t([m({type:u})],T.prototype,"currentLocation",null),t([m()],T.prototype,"formats",void 0),t([m()],T.prototype,"messages",void 0),t([m()],T.prototype,"mode",null),t([m()],T.prototype,"filteredFormats",void 0),t([m({readOnly:!0})],T.prototype,"state",null),t([m()],T.prototype,"locationSymbol",void 0),t([m({readOnly:!0,dependsOn:["storageType"]})],T.prototype,"storage",null),t([m()],T.prototype,"storageEnabled",void 0),t([m()],T.prototype,"storageType",void 0),t([m({readOnly:!0})],T.prototype,"waitingForConversions",null),t([m()],T.prototype,"view",void 0),T=t([p("esri.widgets.CoordinateConversion.CoordinateConversionViewModel")],T);const U=T;export{U as default};
