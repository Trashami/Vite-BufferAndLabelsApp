/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import t from"../request.js";import{fromJSON as e}from"../renderers/support/jsonUtils.js";import{executeQuery as r}from"./query/executeQuery.js";import{parseUrl as o}from"./utils.js";import"../kernel.js";import"../core/urlUtils.js";import"./query/support/AttachmentInfo.js";import"./support/AttachmentQuery.js";import"../geometry/Extent.js";import"../geometry/Geometry.js";import"../geometry/Multipoint.js";import"../geometry/Point.js";import"../geometry/Polygon.js";import"../geometry/Polyline.js";import"../geometry/support/normalizeUtils.js";import"../core/Error.js";import"../core/pbf.js";import"../core/unitUtils.js";import"../geometry/support/spatialReferenceUtils.js";import i from"./support/Query.js";import"../geometry.js";import"./support/FeatureSet.js";import"../layers/graphics/featureConversionUtils.js";import"./support/RelationshipQuery.js";import"./support/TopFeaturesQuery.js";import s from"./support/StatisticDefinition.js";async function n(e,r,i,s){const n=o(e),{source:l,checkValueRange:u}=r,{classificationDefinition:p}=i,m={...i.toJSON(),f:"json"};let c=null;if(c="esri.tasks.support.ClassBreaksDefinition"===p.declaredClass?p.classificationField:p.attributeField,l){const t={source:l?.toJSON()};m.layer=JSON.stringify(t)}m.classificationDef&&(m.classificationDef=JSON.stringify(m.classificationDef));let f={query:m};s&&(f={...s,...f});const j={url:n.path,field:c,checkValueRange:u},y=n.path+"/generateRenderer";return t(y,f).then((t=>a(j,t)))}function a(t,e){const{field:o,checkValueRange:n,url:a}=t,u=e&&e.data;if(!u)return;if(!n){const t=l(u);return Promise.resolve(t)}const p=new s({statisticType:"min",onStatisticField:o}),m=new s({statisticType:"max",onStatisticField:o}),c=new i({outStatistics:[p,m]});return r(a,c).then((t=>{const e=t.features[0].attributes;let r=null,o=null;for(const i in e)0===i.toLowerCase().indexOf("min")?r=e[i]:o=e[i];return l(u,r,o)}))}function l(t,r,o){if("classBreaks"===t.type){const i=e(t);return{classBreaks:i.classBreakInfos.map(((t,e)=>(0===e&&null!=r&&(t.minValue=r),e===i.classBreakInfos.length-1&&null!=o&&(t.maxValue=o),{minValue:t.minValue,maxValue:t.maxValue,label:t.label}))),normalizationTotal:i.normalizationTotal}}return{uniqueValues:t.uniqueValueInfos.map(((e,i)=>(0===i&&null!=r&&(e.value=r),i===t.uniqueValueInfos.length-1&&null!=o&&(e.value=o),{count:e.count,value:e.value,label:e.label})))}}export{n as generateRenderer};
