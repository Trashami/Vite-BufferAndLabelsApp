/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import t from"../../Graphic.js";import{isNone as e,isSome as r}from"../../core/maybe.js";import o from"../../geometry/Extent.js";import s from"../../geometry/Mesh.js";import n from"../../geometry/Point.js";import{fromAxisAndAngle as a}from"../../geometry/support/axisAngleDegrees.js";import i from"../../geometry/support/MeshTransform.js";import u from"./FeatureSet.js";function l(o,s,n){const a=n.features;n.features=[],delete n.geometryType;const i=u.fromJSON(n);if(i.geometryType="mesh",!n.assetMaps)return i;const l=E(s,n.assetMaps),m=i.spatialReference,p=n.globalIdFieldName,g=e(o.outFields)||!o.outFields.length?()=>({}):c(o.outFields.includes("*")?null:new Set(o.outFields));for(const e of a){const o=f(e,p,m,s,l);r(o)&&i.features.push(new t({geometry:o,attributes:g(e)}))}return i}function c(t){return({attributes:e})=>{if(!e)return{};if(!t)return e;for(const r in e)t.has(r)||delete e[r];return e}}function f(t,e,r,n,a){const i=t.attributes[e],u=a.get(i);if(null==u||u.status===g.FAILED||null==u.url)return null;const l=m(t,r,n),c=o.fromJSON(t.geometry);c.spatialReference=r;const f=p(t.attributes,n,u.geographic);return u.status===g.PENDING?s.createIncomplete(l,{extent:c,transform:f}):s.createWithExternalSource(l,[{name:u.name,source:u.url}],{extent:c,transform:f})}function m({attributes:t},e,{transformFieldRoles:r}){return new n({x:t[r.originX],y:t[r.originY],z:t[r.originZ],spatialReference:e})}function p(t,{transformFieldRoles:e},r){return new i({translation:[t[e.translationX],t[e.translationY],t[e.translationZ]],rotation:a([t[e.rotationX],t[e.rotationY],t[e.rotationZ]],t[e.rotationDeg]),scale:[t[e.scaleX],t[e.scaleY],t[e.scaleZ]],geographic:r})}var g;function E(t,e){const r=new Map;for(const o of e){const t=o.parentGlobalId;if(null==t)continue;const e=o.assetName,s=o.assetURL,n=o.conversionStatus;let a=r.get(t);if(null!=a)throw new Error("multiple asset parts not expected.");switch(a={name:e,status:g.FAILED,url:s,geographic:D(o.flags).projectVertices},r.set(t,a),n){case"COMPLETED":case"SUBMITTED":a.status=g.COMPLETED;break;case"INPROGRESS":a.status=g.PENDING;break;default:a.status=g.FAILED}}return r}function D(t){return{projectVertices:t.includes("PROJECT_VERTICES")}}!function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"}(g||(g={}));export{l as meshFeatureSetFromJSON};
