/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../chunks/tslib.es6.js";import"../../geometry.js";import e from"../../Graphic.js";import{JSONSupport as r}from"../../core/JSONSupport.js";import{isSome as o}from"../../core/maybe.js";import{property as s}from"../../core/accessorSupport/decorators/property.js";import"../../core/arrayUtils.js";import"../../core/accessorSupport/ensureType.js";import{reader as p}from"../../core/accessorSupport/decorators/reader.js";import{subclass as i}from"../../core/accessorSupport/decorators/subclass.js";import{writer as a}from"../../core/accessorSupport/decorators/writer.js";import{typeKebabDictionary as u}from"../../geometry/support/typeUtils.js";let m=class extends r{constructor(t){super(t),this.displayFieldName=null,this.feature=null,this.foundFieldName=null,this.layerId=null,this.layerName=null,this.value=void 0}readFeature(t,r){const o={attributes:{}};return r.attributes&&(o.attributes=r.attributes),r.geometry&&(o.geometry=r.geometry),e.fromJSON(o)}writeFeature(t,e){if(!t)return;const{attributes:r,geometry:s}=t;r&&(e.attributes={...r}),o(s)&&(e.geometry=s.toJSON(),e.geometryType=u.toJSON(s.type))}};t([s({type:String,json:{write:!0}})],m.prototype,"displayFieldName",void 0),t([s({type:e})],m.prototype,"feature",void 0),t([p("feature",["attributes","geometry"])],m.prototype,"readFeature",null),t([a("feature")],m.prototype,"writeFeature",null),t([s({type:String,json:{write:!0}})],m.prototype,"foundFieldName",void 0),t([s({type:Number,json:{write:!0}})],m.prototype,"layerId",void 0),t([s({type:String,json:{write:!0}})],m.prototype,"layerName",void 0),t([s({json:{write:!0}})],m.prototype,"value",void 0),m=t([i("esri.rest.support.FindResult")],m);const y=m;export{y as default};
