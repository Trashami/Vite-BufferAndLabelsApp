/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../core/Error.js";import{HandleOwnerMixin as r}from"../../../core/HandleOwner.js";import has from"../../../core/has.js";import o from"../../../core/Loadable.js";import{isSome as s,unwrap as a}from"../../../core/maybe.js";import{debounce as i,eachAlways as n}from"../../../core/promiseUtils.js";import{open as c}from"../../../core/workers/workers.js";import{property as p}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{featureGeometryTypeKebabDictionary as u}from"../../../geometry/support/typeUtils.js";import{createCapabilities as m,createDrawingInfo as y}from"./support/clientSideDefaults.js";import{getCapabilities as d,getWFSLayerInfo as f,prepareWFSLayerFields as h,findFeatureType as w}from"../../ogc/wfsUtils.js";import g from"../../../rest/support/FeatureSet.js";import S from"../../../geometry/Extent.js";let F=class extends(r(o)){constructor(){super(...arguments),this._connection=null,this.capabilities=m(!1,!1),this.type="wfs",this.refresh=i((async e=>{await this.load();const{extent:t}=await this._connection.invoke("refresh",e);return t&&(this.sourceJSON.extent=t),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){const t=s(e)?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return g.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:r.count,extent:S.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _createLoadOptions(e){const{url:r,customParameters:o,name:s,namespaceUri:i,spatialReference:n,fields:c,geometryType:p,swapXY:l}=this.layer;if(!r)throw new t("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await d(r,{customParameters:o,...e}));const m=["fields","geometryType","name","namespaceUri","spatialReference","swapXY"].some((e=>null==this.layer[e])),y=m?await f(this.wfsCapabilities,s,i,{spatialReference:n,customParameters:o,signal:e?.signal}):{...h(c??[]),geometryType:p,name:s,namespaceUri:i,spatialReference:n,swapXY:l},g=a(w(this.wfsCapabilities.readFeatureTypes(),y.name,y.namespaceUri)),S=u.toJSON(y.geometryType);return{customParameters:o,featureType:g,fields:y.fields?.map((e=>e.toJSON()))??[],geometryField:y.geometryField,geometryType:S,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:y.objectIdField,spatialReference:y.spatialReference.toJSON(),swapXY:!!y.swapXY}}async _startWorker(e){const[t,r]=await n([this._createLoadOptions(e),c("WFSSourceWorker",{...e,strategy:has("feature-layers-workers")?"dedicated":"local"})]),o=t.error||r.error||null,s=r.value||null;if(o)throw s&&s.close(),o;const a=t.value;this._connection=r.value;const{extent:i}=await this._connection.invoke("load",a,e);this.sourceJSON={extent:i,fields:a.fields,geometryType:a.geometryType,objectIdField:a.objectIdField,geometryField:a.geometryField,drawingInfo:y(a.geometryType),name:a.featureType.title,wfsInfo:{name:a.featureType.name,featureUrl:a.getFeatureUrl,maxFeatures:3e3,swapXY:a.swapXY,supportedSpatialReferences:a.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:a.featureType.namespaceUri}}}};e([p()],F.prototype,"capabilities",void 0),e([p({constructOnly:!0})],F.prototype,"layer",void 0),e([p()],F.prototype,"sourceJSON",void 0),e([p()],F.prototype,"type",void 0),e([p()],F.prototype,"wfsCapabilities",void 0),F=e([l("esri.layers.graphics.sources.WFSSource")],F);export{F as WFSSource};
