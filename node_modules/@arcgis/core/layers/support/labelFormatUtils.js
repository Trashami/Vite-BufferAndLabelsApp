/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../../core/Error.js";import r from"../../core/Logger.js";import{isNone as t}from"../../core/maybe.js";import{formatDate as a,convertDateFormatToIntlOptions as n}from"../../intl/date.js";import{formatNumber as o}from"../../intl/number.js";import{isNumericField as i}from"./fieldUtils.js";import{getLabelExpression as l,getSingleFieldArcadeExpression as u}from"./labelUtils.js";import{createLabelExpression as s}from"../../support/arcadeOnDemand.js";const c=r.getLogger("esri.layers.support.labelFormatUtils"),f={type:"simple",evaluate:()=>null},p={getAttribute:(e,r)=>e.field(r)};async function m(r,a,n){if(!r||!r.symbol)return f;const o=r.where,i=l(r),m=o?await import("../../core/sql/WhereClause.js"):null;let g;if("arcade"===i.type){const r=await s(i.expression,n,a);if(t(r))return f;g={type:"arcade",evaluate(t){try{const e=r.evaluate({$feature:"attributes"in t?r.repurposeFeature(t):t});if(null!=e)return e.toString()}catch(a){c.error(new e("arcade-expression-error","Encountered an error when evaluating label expression for feature",{feature:t,expression:i}))}return null},needsHydrationToEvaluate:()=>null==u(i.expression)}}else g={type:"simple",evaluate:e=>i.expression.replace(/{[^}]*}/g,(r=>{const t=r.slice(1,-1),n=a.get(t);if(!n)return r;let o=null;if("attributes"in e){e&&e.attributes&&(o=e.attributes[n.name])}else o=e.field(n.name);return null==o?"":d(o,n)}))};if(o){let r;try{r=m.WhereClause.create(o,a)}catch(y){return c.error(new e("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:o,error:y})),f}const t=g.evaluate;g.evaluate=a=>{const n="attributes"in a?void 0:p;try{if(r.testFeature(a,n))return t(a)}catch(y){c.error(new e("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:o,feature:a,error:y}))}return null}}return g}function d(e,r){if(null==e)return"";const t=r.domain;if(t)if("codedValue"===t.type||"coded-value"===t.type){const r=e;for(const e of t.codedValues)if(e.code===r)return e.name}else if("range"===t.type){const r=+e,a="range"in t?t.range[0]:t.minValue,n="range"in t?t.range[1]:t.maxValue;if(a<=r&&r<=n)return t.name}let l=e;return"date"===r.type||"esriFieldTypeDate"===r.type?l=a(l,n("short-date")):i(r)&&(l=o(+l)),l||""}export{m as createLabelFunction,d as formatField};
