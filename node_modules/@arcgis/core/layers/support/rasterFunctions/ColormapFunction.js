/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as r}from"../../../chunks/tslib.es6.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import s from"./BaseRasterFunction.js";import e from"./ColormapFunctionArguments.js";import{convertColorRampToColors as n}from"../../../renderers/support/colorRampUtils.js";let i=class extends s{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const r=this.sourceRasterInfos[0];if(r.bandCount>1)return{success:!1,error:"colormap-function: source data must be single band"};let{colormap:o,colorRamp:t}=this.functionArguments;if(o?.length||t&&(o=n(t,256,!0)),!o?.length)return{success:!1,error:"colormap-function: missing colormap argument"};this.outputPixelType=this._getOutputPixelType("u8");const s=r.clone();return s.pixelType=this.outputPixelType,s.colormap=o,this.rasterInfo=s,{success:!0}}_processPixels(r){return r.pixelBlocks?.[0]}};r([o({json:{write:!0,name:"rasterFunction"}})],i.prototype,"functionName",void 0),r([o({type:e,json:{write:!0,name:"rasterFunctionArguments"}})],i.prototype,"functionArguments",void 0),r([o()],i.prototype,"rasterArgumentNames",void 0),r([o({json:{write:!0}})],i.prototype,"indexedColormap",void 0),i=r([t("esri.layers.support.rasterFunctions.ColormapFunction")],i);const p=i;export{p as default};
