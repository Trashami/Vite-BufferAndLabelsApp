/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{isNone as s}from"../../../core/maybe.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import o from"./BandArithmeticFunctionArguments.js";import{calculateBandIndex as n}from"./bandIndexUtils.js";import i from"./BaseRasterFunction.js";let u=class extends i{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0],s=t.clone();return s.pixelType=this.outputPixelType,s.statistics=null,s.histograms=null,s.bandCount="sultan"===this.functionArguments.method?t.bandCount:1,this.rasterInfo=s,{success:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(s(e))return e;const{method:r,bandIndexes:o}=this.functionArguments,i=o.split(" ").map((t=>parseFloat(t)));return n(e,{method:r,bandIndexes:i,equation:o})}};t([e({json:{write:!0,name:"rasterFunction"}})],u.prototype,"functionName",void 0),t([e({type:o,json:{write:!0,name:"rasterFunctionArguments"}})],u.prototype,"functionArguments",void 0),t([e()],u.prototype,"rasterArgumentNames",void 0),u=t([r("esri.layers.support.rasterFunctions.BandArithmeticFunction")],u);const a=u;export{a as default};
