/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{JSONMap as t}from"../../../core/jsonMap.js";import{isNone as e,unwrap as n,isSome as r}from"../../../core/maybe.js";import o from"../PixelBlock.js";import{isValidPixelBlock as i}from"./pixelUtils.js";const s=new Map;s.set("meter-per-second",1),s.set("kilometer-per-hour",.277778),s.set("knots",.514444),s.set("feet-per-second",.3048),s.set("mile-per-hour",.44704);const a=180/Math.PI,h=5,c=new t({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function l(t,e){return s.get(t)/s.get(e)||1}function u(t){return(450-t)%360}function f(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let i=Math.atan2(r,n)*a;return i=(360+i)%360,"geographic"===e&&(i=u(i)),[o,i]}function p(t,e="geographic"){let n=t[1];"geographic"===e&&(n=u(n)),n%=360;const r=t[0];return[r*Math.cos(n/a),r*Math.sin(n/a)]}function m(t,r,o,s="geographic"){if(!i(t)||e(o))return t;const a="vector-magdir"===r?t.clone():n(d(t,r)),h=a.pixels[1];for(let e=0;e<h.length;e++)h[e]="geographic"===s?(h[e]+o[e]+270)%360:(h[e]+360-o[e])%360;return"vector-magdir"===r?a:d(a,"vector-magdir")}function d(t,e,n="geographic",r=1){if(!i(t))return t;const{pixels:s,width:a,height:h}=t,c=a*h,l=s[0],u=s[1],m=t.pixelType.startsWith("f")?t.pixelType:"f32",d=o.createEmptyBand(m,c),g=o.createEmptyBand(m,c);let x=0;for(let o=0;o<h;o++)for(let t=0;t<a;t++)"vector-uv"===e?([d[x],g[x]]=f([l[x],u[x]],n),d[x]*=r):([d[x],g[x]]=p([l[x],u[x]],n),d[x]*=r,g[x]*=r),x++;const M=new o({pixelType:m,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[d,g]});return M.updateStatistics(),M}function g(t,e,n=1){if(1===n||!i(t))return t;const r=t.clone(),{pixels:o,width:s,height:a}=r,h=o[0],c=o[1];let l=0;for(let i=0;i<a;i++)for(let t=0;t<s;t++)"vector-uv"===e?(h[l]*=n,c[l]*=n):h[l]*=n,l++;return r.updateStatistics(),r}function x(t,n,r,o,i){if(e(i)||!i.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(n/o),height:Math.round(r/o),resolution:t.width/n};const s=i.xmin,a=i.ymax,h=(t.xmax-t.xmin)/n*o,c=(t.ymax-t.ymin)/r*o,l=(h+c)/2;return t.xmin=s+Math.floor((t.xmin-s)/h)*h,t.xmax=s+Math.ceil((t.xmax-s)/h)*h,t.ymin=a+Math.floor((t.ymin-a)/c)*c,t.ymax=a+Math.ceil((t.ymax-a)/c)*c,{extent:t,width:Math.round(t.width/h),height:Math.round(t.height/c),resolution:l}}const M=k(0,0,0);function k(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,i=13*o,s=-7*o,a=-2*o,h=-16*o,c=21.75,[l,u]=y(0,e+i,n,c),[f,p]=y(t-5.5,e+s,n,c),[m,d]=y(t+5.5,e+s,n,c),[g,x]=y(t-1.5,e+a,n,c),[M,k]=y(t+1.5,e+a,n,c),[w,P]=y(t-1.5,e+h,n,c),[b,v]=y(t+1.5,e+h,n,c);return[l,u,f,p,g,x,M,k,m,d,w,P,b,v]}function w(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=10,o=n?-1:1,i=5*o,s=20*o,a=25*o,c=45,l=0,u=0,f=2,p=0,m=f*o,d=n?1:-1,g=r/2*d;let[x,M]=[l+g,u-s],[k,w]=[x+f*d,M],[P,b]=[k-p*d,w+m],[v,I]=[l-g,u-a],[A,_]=[v+p*d,I-m],U=Math.ceil(t/h),S=Math.floor(U/10);U-=8*S;const D=[],F=[];for(let h=0;h<U/2;h++,S--){S<=0&&U%2==1&&h===(U-1)/2&&(v=l,A=v+p*d,I=(I+M)/2,_=I-m);const[t,n]=y(v,I,e,c);if(S>0){const[r,o]=y(k,I,e,c),[i,s]=y(x,M,e,c);D.push(r),D.push(o),D.push(t),D.push(n),D.push(i),D.push(s)}else{const[r,o]=y(k,w,e,c),[i,s]=y(P,b,e,c),[a,h]=y(A,_,e,c);F.push(t),F.push(n),F.push(a),F.push(h),F.push(i),F.push(s),F.push(r),F.push(o)}I+=i,M+=i,w+=i,b+=i,_+=i}const[j,N]=y(l+g,u+s,e,c),J=(r/2+f)*d,[O,q]=y(l+J,u+s,e,c),[B,E]=y(l+g,u-a,e,c),[T,C]=y(l+J,u-a,e,c);return{pennants:D,barbs:F,shaft:[j,N,O,q,B,E,T,C]}}function y(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,i=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+i-n)%(2*Math.PI)]}const P=[0,1,3,6,10,16,21,27,33,40,47,55,63],b=[0,.5,1,1.5,2],v=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function I(t,e,n,r){const o=l(r||"knots",n);let i;for(i=1;i<e.length;i++)if(i===e.length-1){if(t<e[i]*o)break}else if(t<=e[i]*o)break;return Math.min(i-1,e.length-2)}function A(t,e,n,r,o){let i=0;switch(e){case"beaufort_kn":i=I(t,P,"knots",n);break;case"beaufort_km":i=I(t,P,"kilometer-per-hour",n);break;case"beaufort_ft":i=I(t,P,"feet-per-second",n);break;case"beaufort_m":i=I(t,P,"meter-per-second",n);break;case"classified_arrow":i=I(t,o??[],r,n);break;case"ocean_current_m":i=I(t,b,"meter-per-second",n);break;case"ocean_current_kn":i=I(t,v,"knots",n)}return i}function _(t,e){const{style:n,inputUnit:o,outputUnit:i,breakValues:s}=e,a=c.fromJSON(o),h=c.fromJSON(i),l=7*6,u=15;let f=0,p=0;const{width:m,height:d,mask:g}=t,x=t.pixels[0],w=t.pixels[1],y=r(g)?g.filter((t=>t>0)).length:m*d,P=new Float32Array(y*l),b=new Uint32Array(u*y),v=e.invertDirection?k(0,0,0,!1):M;for(let r=0;r<d;r++)for(let t=0;t<m;t++){const e=r*m+t;if(!g||g[r*m+t]){const o=(w[e]+360)%360/180*Math.PI,i=A(x[e],n,a,h,s);for(let n=0;n<v.length;n+=2)P[f++]=(t+.5)/m,P[f++]=(r+.5)/d,P[f++]=v[n],P[f++]=v[n+1]+o,P[f++]=i,P[f++]=x[e];const c=7*(f/l-1);b[p++]=c,b[p++]=c+1,b[p++]=c+2,b[p++]=c+0,b[p++]=c+4,b[p++]=c+3,b[p++]=c+0,b[p++]=c+2,b[p++]=c+3,b[p++]=c+2,b[p++]=c+5,b[p++]=c+3,b[p++]=c+5,b[p++]=c+6,b[p++]=c+3}}return{vertexData:P,indexData:b}}const U=[];function S(t,e){if(0===U.length)for(let h=0;h<30;h++)U.push(w(5*h,0,!e.invertDirection));const n=l(c.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:i}=t,s=t.pixels[0],a=t.pixels[1],u=6,f=[],p=[];let m=0,d=0;for(let c=0;c<o;c++)for(let t=0;t<r;t++){const e=c*r+t,l=s[e]*n;if((!i||i[c*r+t])&&l>=h){const n=(a[e]+360)%360/180*Math.PI,{pennants:i,barbs:s,shaft:h}=U[Math.min(Math.floor(l/5),29)];if(i.length+s.length===0)continue;let g=f.length/u;const x=(t+.5)/r,M=(c+.5)/o;for(let t=0;t<i.length;t+=2)f[m++]=x,f[m++]=M,f[m++]=i[t],f[m++]=i[t+1]+n,f[m++]=0,f[m++]=l;for(let t=0;t<s.length;t+=2)f[m++]=x,f[m++]=M,f[m++]=s[t],f[m++]=s[t+1]+n,f[m++]=0,f[m++]=l;for(let t=0;t<h.length;t+=2)f[m++]=x,f[m++]=M,f[m++]=h[t],f[m++]=h[t+1]+n,f[m++]=0,f[m++]=l;for(let t=0;t<i.length/6;t++)p[d++]=g,p[d++]=g+1,p[d++]=g+2,g+=3;for(let t=0;t<s.length/8;t++)p[d++]=g,p[d++]=g+1,p[d++]=g+2,p[d++]=g+1,p[d++]=g+2,p[d++]=g+3,g+=4;p[d++]=g+0,p[d++]=g+1,p[d++]=g+2,p[d++]=g+1,p[d++]=g+3,p[d++]=g+2,g+=4}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function D(t,e){const n=4*6;let r=0,o=0;const{width:i,height:s,mask:a}=t,u=t.pixels[0],f=[],p=[],m=l(c.fromJSON(e.inputUnit),"knots"),d="wind_speed"===e.style?h:Number.MAX_VALUE;for(let h=0;h<s;h++)for(let t=0;t<i;t++){const e=u[h*i+t]*m;if((!a||a[h*i+t])&&e<d){for(let n=0;n<4;n++)f[r++]=(t+.5)/i,f[r++]=(h+.5)/s,f[r++]=n<2?-.5:.5,f[r++]=n%2==0?-.5:.5,f[r++]=0,f[r++]=e;const a=4*(r/n-1);p[o++]=a,p[o++]=a+1,p[o++]=a+2,p[o++]=a+1,p[o++]=a+2,p[o++]=a+3}}return{vertexData:new Float32Array(f),indexData:new Uint32Array(p)}}function F(t,e){return"simple_scalar"===e.style?D(t,e):"wind_speed"===e.style?S(t,e):_(t,e)}function j(t,e,n,r=[0,0],i=.5){const{width:s,height:a,mask:h}=t,[c,l]=t.pixels,[u,m]=r,d=Math.round((s-u)/n),g=Math.round((a-m)/n),x=d*g,M=new Float32Array(x),k=new Float32Array(x),w=new Uint8Array(x),y="vector-uv"===e;for(let o=0;o<g;o++)for(let t=0;t<d;t++){let e=0;const r=o*d+t,g=Math.max(0,o*n+m),x=Math.max(0,t*n+u),P=Math.min(a,g+n),b=Math.min(s,x+n);for(let t=g;t<P;t++)for(let n=x;n<b;n++){const o=t*s+n;if(!h||h[o]){e++;const t=y?[c[o],l[o]]:[c[o],(360+l[o])%360],[n,i]=y?t:p(t);M[r]+=n,k[r]+=i}}if(e>=(P-g)*(b-x)*(1-i)){w[r]=1;const[t,n]=f([M[r]/e,k[r]/e]);M[r]=t,k[r]=n}else w[r]=0,M[r]=0,k[r]=0}const P=new o({width:d,height:g,pixels:[M,k],mask:w});return P.updateStatistics(),P}export{m as convertToLocalDirections,d as convertVectorFieldData,g as convertVectorFieldUnit,F as createVFMesh,D as createVFMeshScalar,l as getUnitConversionFactor,j as sampleVectorField,x as snapImageToSymbolTile,c as unitKebabDict,f as uvComponentToVector};
