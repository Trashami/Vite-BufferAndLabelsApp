/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{isSome as t,isNone as e,unwrap as n}from"../../../core/maybe.js";import l from"../PixelBlock.js";var i,o;function r(e){return t(e)&&"esri.layers.support.PixelBlock"===e.declaredClass&&e.pixels&&e.pixels.length>0}function s(t,e){if(!e?.length||!r(t))return t;const n=t.pixels.length;return e&&e.some((t=>t>=n))||1===n&&1===e.length&&0===e[0]?t:n!==e.length||e.some(((t,e)=>t!==e))?new l({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function h(e){if(!e?.length||e.some((t=>!r(t))))return null;if(1===e.length)return t(e[0])?e[0].clone():null;const n=e,{width:i,height:o,pixelType:s}=n[0];if(n.some((t=>t.width!==i||t.height!==o)))return null;const h=n.map((({mask:t})=>t)).filter((t=>null!=t));let a=null;h.length&&(a=new Uint8Array(i*o),a.set(h[0]),h.length>1&&g(h.slice(1),a));const f=[];n.forEach((({pixels:t})=>f.push(...t)));const c=n.map((({statistics:t})=>t)).filter((t=>t?.length)),u=[];return c.forEach((t=>u.push(...t))),new l({pixelType:s,width:i,height:o,mask:a,pixels:f,statistics:u.length?u:null})}function a(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let l=0;n[0][0]<0&&(l=n[0][0]);const i=Math.max(256,n[n.length-1][0]-l+1),o=new Uint8Array(4*i),r=[];let s,h=0,a=0;const f=5===n[0].length;if(i>65536)return n.forEach((t=>{r[t[0]-l]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:l,alphaSpecified:f};if(t.fillUnspecified)for(s=n[a],h=s[0]-l;h<i;h++)o[4*h]=s[1],o[4*h+1]=s[2],o[4*h+2]=s[3],o[4*h+3]=f?s[4]:255,h===s[0]-l&&(s=a===n.length-1?s:n[++a]);else for(h=0;h<n.length;h++)s=n[h],a=4*(s[0]-l),o[a]=s[1],o[a+1]=s[2],o[a+2]=s[3],o[a+3]=f?s[4]:255;return{indexedColormap:o,offset:l,alphaSpecified:f}}function f(e,n){if(!r(e))return e;if(!n||!n.indexedColormap&&!n.indexed2DColormap)return e;const l=e.clone(),i=l.pixels;let o=l.mask;const s=l.width*l.height;if(1!==i.length)return e;const{indexedColormap:h,indexed2DColormap:a,offset:f,alphaSpecified:c}=n;let u=0;const p=i[0],x=new Uint8Array(p.length),m=new Uint8Array(p.length),d=new Uint8Array(p.length);let g,y=0;if(h){const e=h.length-1;if(t(o))for(u=0;u<s;u++)o[u]&&(y=4*(p[u]-f),y<f||y>e?o[u]=0:(x[u]=h[y],m[u]=h[y+1],d[u]=h[y+2],o[u]=h[y+3]));else{for(o=new Uint8Array(s),u=0;u<s;u++)y=4*(p[u]-f),y<f||y>e?o[u]=0:(x[u]=h[y],m[u]=h[y+1],d[u]=h[y+2],o[u]=h[y+3]);l.mask=o}}else if(a)if(t(o))for(u=0;u<s;u++)o[u]&&(g=a[p[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],o[u]=g[3]);else{for(o=new Uint8Array(s),u=0;u<s;u++)g=a[p[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],o[u]=g[3];l.mask=o}return l.pixels=[x,m,d],l.statistics=null,l.pixelType="u8",l.maskIsAlpha=c,l}function c(t,e){if(!r(t))return null;const{pixels:n,mask:i}=t,o=n.length;let s=e.lut;const{offset:h}=e;s&&1===s[0].length&&(s=n.map((()=>s)));const a=[],f=e.outputPixelType||"u8";for(let l=0;l<o;l++){const t=u(n[l],i,s[l],h||0,f);a.push(t)}const c=new l({width:t.width,height:t.height,pixels:a,mask:i,pixelType:f});return c.updateStatistics(),c}function u(t,e,n,i,o){const r=t.length,s=l.createEmptyBand(o,r);if(e)for(let l=0;l<r;l++)e[l]&&(s[l]=n[t[l]-i]);else for(let l=0;l<r;l++)s[l]=n[t[l]-i];return s}function p(t,e){if(!r(t))return null;const n=t.clone(),{pixels:l}=n,i=n.width*n.height,o=e.length,s=Math.floor(o/2),h=e[Math.floor(s)],a=l[0];let f,c,u,p,x,m,d=!1;const g=new Uint8Array(i),y=new Uint8Array(i),w=new Uint8Array(i);let k=n.mask;const M=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(i),k.fill(M?255:1),n.mask=k),x=0;x<i;x++)if(k[x]){for(f=a[x],d=!1,m=s,c=h,u=0,p=o-1;p-u>1;){if(f===c.value){d=!0;break}f>c.value?u=m:p=m,m=Math.floor((u+p)/2),c=e[Math.floor(m)]}d||(f===e[u].value?(c=e[u],d=!0):f===e[p].value?(c=e[p],d=!0):f<e[u].value?(d=!1,c=null):f>e[u].value&&(f<e[p].value?(c=e[u],d=!0):p===o-1?(d=!1,c=null):(c=e[p],d=!0))),d?(g[x]=c.mappedColor[0],y[x]=c.mappedColor[1],w[x]=c.mappedColor[2],k[x]=c.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return n.pixels=[g,y,w],n.mask=k,n.pixelType="u8",n.maskIsAlpha=M,n}function x(t,e){if(!r(t))return null;const{width:n,height:i}=t,{inputRanges:o,outputValues:s,outputPixelType:h,noDataRanges:a,allowUnmatched:f}=e,c=t.pixels[0],u=l.createEmptyBand(h,c.length);f&&u.set(c);const p=t.mask,x=o.length/2;for(let l=0;l<i;l++)for(let t=0;t<n;t++){const e=l*n+t;if(!p||p[e]){const t=c[e];for(let n=x-1;n>=0;n--)if(t>=o[2*n]&&t<=o[2*n+1]){u[e]=s[n];break}}}let m=p;if(a?.length){m=new Uint8Array(n*i),p&&m.set(p);for(let t=0;t<i;t++)for(let e=0;e<n;e++){const l=t*n+e;if(!p||p[l]){const t=c[l];for(let e=0;e<x;e+=2)if(t>=a[e]&&t<=a[e+1]){u[l]=0,m[l]=0;break}}}}return new l({width:n,height:i,pixelType:h,pixels:[u],mask:m})}function m(t,e,n,l){const i=null!=n&&n.length>=2?new Set(n):null,o=1===n?.length?n[0]:null,r=!!e?.length;for(let s=0;s<t.length;s++)if(l[s]){const n=t[s];if(r){let t=!1;for(let l=0;l<e.length;l+=2)if(n>=e[l]&&n<=e[l+1]){t=!0;break}t||(l[s]=0)}l[s]&&(n===o||i?.has(n))&&(l[s]=0)}}function d(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][l]){n=!0;break}n||(e[l]=0)}}function g(t,e){const n=t[0].length;for(let l=0;l<n;l++)if(e[l]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][l]){n=!0;break}n&&(e[l]=0)}}function y(t,e){if(!r(t))return null;const{width:n,height:i,pixels:o}=t,s=n*i,h=new Uint8Array(s);t.mask?h.set(t.mask):h.fill(255);const a=o.length,{includedRanges:f,noDataValues:c,outputPixelType:p,matchAll:x,lookup:y}=e;if(y){const t=[];for(let e=0;e<a;e++){const n=u(o[e],h,y.lut,y.offset||0,"u8");t.push(n)}1===t.length?h.set(t[0]):x?d(t,h):g(t,h)}else if(x){const t=[];for(let e=0;e<a;e++){const n=new Uint8Array(s);n.set(h),m(o[e],f,c,n),t.push(n)}1===t.length?h.set(t[0]):d(t,h)}else for(let l=0;l<a;l++)m(o[l],f,c,h);return new l({width:n,height:i,pixelType:p,pixels:o,mask:h})}function w(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const i=t.includes("16")?65536:256,o=t.includes("s")?-i/2:0,r=l.createEmptyBand(t,i);for(let l=0;l<e.length;l++){const t=n[l],i=Math.ceil(e[2*l]-o),s=Math.floor(e[2*l+1]-o);for(let e=i;e<=s;e++)r[e]=t}return{lut:r,offset:o}}function k(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const l=t.includes("16")?65536:256,i=t.includes("s")?-l/2:0,o=new Uint8Array(l);if(e)for(let r=0;r<e.length;r++){const t=Math.ceil(e[2*r]-i),n=Math.floor(e[2*r+1]-i);for(let e=t;e<=n;e++)o[e]=255}if(n)for(let r=0;r<n.length;r++)o[n[r]-i]=0;return{lut:o,offset:i}}function M(t,e,n,l,i,o,r,s){return{xmin:i<=n*t?0:i<n*t+t?i-n*t:t,ymin:o<=l*e?0:o<l*e+e?o-l*e:e,xmax:i+r<=n*t?0:i+r<n*t+t?i+r-n*t:t,ymax:o+s<=l*e?0:o+s<l*e+e?o+s-l*e:e}}function A(t,n){if(!t||0===t.length)return null;const l=t.find((t=>t.pixelBlock));if(!l||e(l.pixelBlock))return null;const i=(l.extent.xmax-l.extent.xmin)/l.pixelBlock.width,o=(l.extent.ymax-l.extent.ymin)/l.pixelBlock.height,r=.01*Math.min(i,o),s=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>r?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>r?t.extent.xmin-e.extent.xmin:0)),h=Math.min.apply(null,s.map((t=>t.extent.xmin))),a=Math.min.apply(null,s.map((t=>t.extent.ymin))),f=Math.max.apply(null,s.map((t=>t.extent.xmax))),c=Math.max.apply(null,s.map((t=>t.extent.ymax))),u={x:Math.round((n.xmin-h)/i),y:Math.round((c-n.ymax)/o)},p={width:Math.round((f-h)/i),height:Math.round((c-a)/o)},x={width:Math.round((n.xmax-n.xmin)/i),height:Math.round((n.ymax-n.ymin)/o)};if(Math.round(p.width/l.pixelBlock.width)*Math.round(p.height/l.pixelBlock.height)!==s.length||u.x<0||u.y<0||p.width<x.width||p.height<x.height)return null;return{extent:n,pixelBlock:T(s.map((t=>t.pixelBlock)),p,{clipOffset:u,clipSize:x})}}function U(t,e,n,l,i,o){const{width:r,height:s}=n.block,{x:h,y:a}=n.offset,{width:f,height:c}=n.mosaic,u=M(r,s,l,i,h,a,f,c);let p=0,x=0;if(o){const t=o.hasGCSSShiftTransform?360:o.halfWorldWidth??0,e=r*o.resolutionX,n=o.startX+l*e,i=n+e;n<t&&i>t?x=o.rightPadding:n>=t&&(p=o.leftMargin-o.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let m=u.ymin;m<u.ymax;m++){const n=(i*s+m-a)*f+(l*r-h)+p,o=m*r;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e[o+l]}else for(let m=u.ymin;m<u.ymax;m++){const n=(i*s+m-a)*f+(l*r-h)+p;for(let l=u.xmin;l<u.xmax;l++)t[n+l]=e}}function T(n,i,o={}){const{clipOffset:s,clipSize:h,alignmentInfo:a,blockWidths:f}=o;if(f)return C(n,i,{blockWidths:f});const c=n.find((t=>r(t)));if(e(c))return null;const u=h?h.width:i.width,p=h?h.height:i.height,x=c.width,m=c.height,d=i.width/x,g=i.height/m,y={offset:s||{x:0,y:0},mosaic:h||i,block:{width:x,height:m}},w=c.pixelType,k=l.getPixelArrayConstructor(w),M=c.pixels.length,A=[];let T,b;for(let t=0;t<M;t++){b=new k(u*p);for(let e=0;e<g;e++)for(let l=0;l<d;l++){const i=n[e*d+l];r(i)&&(T=i.pixels[t],U(b,T,y,l,e,a))}A.push(b)}let S;if(n.some((n=>e(n)||t(n.mask)&&n.mask.length>0))){S=new Uint8Array(u*p);for(let e=0;e<g;e++)for(let l=0;l<d;l++){const i=n[e*d+l],o=t(i)?i.mask:null;t(o)?U(S,o,y,l,e,a):U(S,i?1:0,y,l,e,a)}}const B=new l({width:u,height:p,pixels:A,pixelType:w,mask:S});return B.updateStatistics(),B}function C(i,o,s){const h=i.find((e=>t(e)));if(e(h))return null;const a=i.some((e=>!t(e)||!!e.mask)),{width:f,height:c}=o,u=a?new Uint8Array(f*c):null,{blockWidths:p}=s,x=[],m=h.getPlaneCount(),d=l.getPixelArrayConstructor(h.pixelType);if(a)for(let t=0,e=0;t<i.length;e+=p[t],t++){const l=i[t];if(!r(l))continue;const o=n(l.mask);for(let n=0;n<c;n++)for(let i=0;i<p[t];i++)u[n*f+i+e]=null==o?255:o[n*l.width+i]}for(let t=0;t<m;t++){const e=new d(f*c);for(let n=0,l=0;n<i.length;l+=p[n],n++){const o=i[n];if(!r(o))continue;const s=o.pixels[t];if(null!=s)for(let t=0;t<c;t++)for(let i=0;i<p[n];i++)e[t*f+i+l]=s[t*o.width+i]}x.push(e)}const g=new l({width:f,height:c,mask:u,pixels:x,pixelType:h.pixelType});return g.updateStatistics(),g}function b(t,e,n){if(!r(t))return null;const{width:l,height:i}=t,o=e.x,s=e.y,h=n.width+o,a=n.height+s;if(o<0||s<0||h>l||a>i)return t;if(0===o&&0===s&&h===l&&a===i)return t;t.mask||(t.mask=new Uint8Array(l*i));const f=t.mask;for(let r=0;r<i;r++){const t=r*l;for(let e=0;e<l;e++)f[t+e]=r<s||r>=a||e<o||e>=h?0:1}return t.updateStatistics(),t}function S(t){if(!r(t))return null;const e=t.clone(),{width:l,height:i,pixels:o}=t,s=o[0],h=e.pixels[0],a=n(t.mask);for(let n=2;n<i-1;n++){const t=new Map;for(let i=n-2;i<n+2;i++)for(let e=0;e<4;e++){const n=i*l+e;v(t,s[n],a?a[n]:1)}h[n*l]=B(t),h[n*l+1]=h[n*l+2]=h[n*l];let e=3;for(;e<l-1;e++){let i=(n-2)*l+e+1;v(t,s[i],a?a[i]:1),i=(n-1)*l+e+1,v(t,s[i],a?a[i]:1),i=n*l+e+1,v(t,s[i],a?a[i]:1),i=(n+1)*l+e+1,v(t,s[i],a?a[i]:1),i=(n-2)*l+e-3,P(t,s[i],a?a[i]:1),i=(n-1)*l+e-3,P(t,s[i],a?a[i]:1),i=n*l+e-3,P(t,s[i],a?a[i]:1),i=(n+1)*l+e-3,P(t,s[i],a?a[i]:1),h[n*l+e]=B(t)}h[n*l+e+1]=h[n*l+e]}for(let n=0;n<l;n++)h[n]=h[l+n]=h[2*l+n],h[(i-1)*l+n]=h[(i-2)*l+n];return e.updateStatistics(),e}function B(t){if(0===t.size)return 0;let e=0,n=-1,l=0;const i=t.keys();let o=i.next();for(;!o.done;)l=t.get(o.value),l>e&&(n=o.value,e=l),o=i.next();return n}function P(t,e,n){if(0===n)return;const l=t.get(e);1===l?t.delete(e):t.set(e,l-1)}function v(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function _(t,e,i){let{x:o,y:s}=e;const{width:h,height:a}=i;if(0===o&&0===s&&a===t.height&&h===t.width)return t;const{width:f,height:c}=t,u=Math.max(0,s),p=Math.max(0,o),x=Math.min(o+h,f),m=Math.min(s+a,c);if(x<0||m<0||!r(t))return null;o=Math.max(0,-o),s=Math.max(0,-s);const{pixels:d}=t,g=h*a,y=d.length,w=[];for(let n=0;n<y;n++){const e=d[n],i=l.createEmptyBand(t.pixelType,g);for(let t=u;t<m;t++){const n=t*f;let l=(t+s-u)*h+o;for(let t=p;t<x;t++)i[l++]=e[n+t]}w.push(i)}const k=new Uint8Array(g),M=n(t.mask);for(let n=u;n<m;n++){const t=n*f;let e=(n+s-u)*h+o;for(let n=p;n<x;n++)k[e++]=M?M[t+n]:1}const A=new l({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function E(e,n=!0){if(!r(e))return null;const{pixels:i,width:o,height:s,mask:h,pixelType:a}=e,f=[],c=Math.round(o/2),u=Math.round(s/2),p=s-1,x=o-1;for(let t=0;t<i.length;t++){const e=i[t],r=l.createEmptyBand(a,c*u);let h=0;for(let t=0;t<s;t+=2)for(let l=0;l<o;l+=2){const i=e[t*o+l];if(n){const n=l===x?i:e[t*o+l+1],s=t===p?i:e[t*o+l+o],a=l===x?s:t===p?n:e[t*o+l+o+1];r[h++]=(i+n+s+a)/4}else r[h++]=i}f.push(r)}let m=null;if(t(h)){m=new Uint8Array(c*u);let t=0;for(let e=0;e<s;e+=2)for(let l=0;l<o;l+=2){const i=h[e*o+l];if(n){const n=l===x?i:h[e*o+l+1],r=e===p?i:h[e*o+l+o],s=l===x?r:e===p?n:h[e*o+l+o+1];m[t++]=i*n*r*s?1:0}else m[t++]=i}}return new l({width:c,height:u,pixelType:a,pixels:f,mask:m})}function W(t,e,n){if(!r(t))return null;const{width:l,height:i}=e;let{width:o,height:s}=t;const h=new Map,a={x:0,y:0},f=null==n?1:1+n;let c=t;for(let r=0;r<f;r++){const t=Math.ceil(o/l),n=Math.ceil(s/i);for(let o=0;o<n;o++){a.y=o*i;for(let n=0;n<t;n++){a.x=n*l;const t=_(c,a,e);h.set(`${r}/${o}/${n}`,t)}}r<f-1&&(c=E(c)),o=Math.round(o/2),s=Math.round(s/2)}return h}function I(t,e,n,l,i=.5){const{width:o,height:r}=t,{width:s,height:h}=e,a=l.cols,f=l.rows,c=Math.ceil(s/a-.1/a),u=Math.ceil(h/f-.1/f);let p,x,m,d,g,y,w;const k=c*a,M=k*u*f,A=new Float32Array(M),U=new Float32Array(M),T=new Uint32Array(M),C=new Uint32Array(M);let b,S,B=0;for(let P=0;P<u;P++)for(let t=0;t<c;t++){p=12*(P*c+t),x=n[p],m=n[p+1],d=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){B=(P*f+e)*k+t*a,S=(e+.5)/f;for(let t=0;t<e;t++)b=(t+.5)/a,A[B+t]=(x*b+m*S+d)*o-i,U[B+t]=(g*b+y*S+w)*r-i,T[B+t]=Math.round(A[B+t]),C[B+t]=Math.round(U[B+t])}p+=6,x=n[p],m=n[p+1],d=n[p+2],g=n[p+3],y=n[p+4],w=n[p+5];for(let e=0;e<f;e++){B=(P*f+e)*k+t*a,S=(e+.5)/f;for(let t=e;t<a;t++)b=(t+.5)/a,A[B+t]=(x*b+m*S+d)*o-i,U[B+t]=(g*b+y*S+w)*r-i,T[B+t]=Math.round(A[B+t]),C[B+t]=Math.round(U[B+t])}}return{offsets_x:A,offsets_y:U,offsets_xi:T,offsets_yi:C,gridWidth:k}}function j(t,e){const{coefficients:n,spacing:l}=e,{offsets_x:i,offsets_y:o,gridWidth:r}=I(t,t,n,{rows:l[0],cols:l[1]},.5),{width:s,height:h}=t,a=new Float32Array(s*h),f=180/Math.PI;for(let c=0;c<h;c++)for(let t=0;t<s;t++){const e=c*r+t,n=0===c?e:e-r,l=c===h-1?e:e+r,u=i[n]-i[l],p=o[l]-o[n];if(isNaN(u)||isNaN(p))a[c*s+t]=90;else{let e=Math.atan2(p,u)*f;e=(360+e)%360,a[c*s+t]=e}}return a}function D(e,n,i,o,s="nearest"){if(!r(e))return null;"majority"===s&&(e=S(e));const{pixels:h,mask:a,pixelType:f}=e,c=e.width,u=e.height,p=l.getPixelArrayConstructor(f),x=h.length,{width:m,height:d}=n;let g=!1;for(let t=0;t<i.length;t+=3)-1===i[t]&&-1===i[t+1]&&-1===i[t+2]&&(g=!0);const{offsets_x:y,offsets_y:w,offsets_xi:k,offsets_yi:M,gridWidth:A}=I({width:c,height:u},n,i,o,"majority"===s?0:.5);let U;const T=(t,e,n)=>{const l=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let i=0;i<d;i++){U=i*A;for(let o=0;o<m;o++){if(y[U]<0||w[U]<0)t[i*m+o]=0;else if(n)t[i*m+o]=e[k[U]+M[U]*c];else{const n=Math.floor(y[U]),r=Math.floor(w[U]),s=Math.ceil(y[U]),h=Math.ceil(w[U]),f=y[U]-n,u=w[U]-r;if(!a||a[n+r*c]&&a[n+r*c]&&a[n+h*c]&&a[s+h*c]){const a=(1-f)*e[n+r*c]+f*e[s+r*c],p=(1-f)*e[n+h*c]+f*e[s+h*c];t[i*m+o]=(1-u)*a+u*p+l}else t[i*m+o]=e[k[U]+M[U]*c]}U++}}},C=[];let b;for(let t=0;t<x;t++)b=new p(m*d),T(b,h[t],"nearest"===s||"majority"===s),C.push(b);const B=new l({width:m,height:d,pixelType:f,pixels:C});if(t(a))B.mask=new Uint8Array(m*d),T(B.mask,a,!0);else if(g){B.mask=new Uint8Array(m*d);for(let t=0;t<m*d;t++)B.mask[t]=y[t]<0||w[t]<0?0:1}return B.updateStatistics(),B}!function(t){t[t.matchAny=0]="matchAny",t[t.matchAll=1]="matchAll"}(i||(i={})),function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(o||(o={}));export{o as MissingBandAction,i as NoDataInterpretation,D as approximateTransform,_ as clip,f as colorize,h as compositeBands,a as createColormapLUT,k as createMaskLUT,w as createRemapLUT,s as extractBands,M as getClipBounds,j as getLocalArithmeticNorthRotations,r as isValidPixelBlock,u as lookupBandValues,c as lookupPixels,y as mask,T as mosaic,A as mosaicPixelData,x as remap,p as remapColor,S as resampleByMajority,b as setValidBoundary,W as split};
