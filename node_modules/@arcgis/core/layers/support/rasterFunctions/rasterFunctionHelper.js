/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import t from"../../../core/Error.js";import r from"./AspectFunction.js";import e from"./BandArithmeticFunction.js";import s from"./ColormapFunction.js";import n from"./CompositeBandFunction.js";import o from"./ConvolutionFunction.js";import a from"./ExtractBandFunction.js";import c from"./LocalFunction.js";import i from"./MaskFunction.js";import u from"./NDVIFunction.js";import m from"./RemapFunction.js";import p from"./SlopeFunction.js";import f from"./StatisticsHistogramsFunction.js";import F from"./StretchFunction.js";const d=new Map;function A(t,r,e=["raster"],s=""){d.set(t,{desc:s,ctor:r,rasterArgumentNames:e})}function g(){const t=new Set;return d.forEach(((r,e)=>t.add(e))),t}function l(r,e){if("rasterFunction"in r)return h(r,e??{});throw new t("raster-function-helper","unsupported raster function json.")}function N(t,r){return"rasters"===r[0]&&Array.isArray(t.rasters)?t.rasters:r.map((r=>t[r]))}function h(r,e){const{rasterFunction:s,rasterFunctionArguments:n}=r,o=r.outputPixelType?.toLowerCase();if(null==s||!d.has(s))throw new t("raster-function-helper",`unsupported raster function: ${s}`);const a=d.get(s),c=("function"==typeof a.ctor?a.ctor:a.ctor.default).fromJSON({...r,outputPixelType:o}),{rasterArgumentNames:i}=c,u=[],m=N(n,i),p="rasters"===i[0],f=[];for(let t=0;t<m.length;t++){const r=m[t];let s;null==r||"string"==typeof r&&r.startsWith("$")?u.push(e?.raster):"string"==typeof r?e[r]&&u.push(e[r]):"number"!=typeof r&&"rasterFunction"in r&&(s=h(r,e),p||(c.functionArguments[i[t]]=s),u.push(s)),p&&f.push(s??r)}if(p&&(c.functionArguments.rasters=f),e){c.sourceRasters=u;const t=e.raster?.url;t&&(c.mainPrimaryRasterId=t)}return c}d.set("Aspect",{desc:"Aspect Function",ctor:r,rasterArgumentNames:["raster"]}),d.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:e,rasterArgumentNames:["raster"]}),d.set("Colormap",{desc:"Colormap Function",ctor:s,rasterArgumentNames:["raster"]}),d.set("CompositeBand",{desc:"CompositeBand Function",ctor:n,rasterArgumentNames:["rasters"]}),d.set("Convolution",{desc:"Convolution Function",ctor:o,rasterArgumentNames:["raster"]}),d.set("ExtractBand",{desc:"ExtractBand Function",ctor:a,rasterArgumentNames:["raster"]}),d.set("Local",{desc:"Local Function",ctor:c,rasterArgumentNames:["rasters"]}),d.set("Mask",{desc:"Mask Function",ctor:i,rasterArgumentNames:["raster"]}),d.set("NDVI",{desc:"NDVI Function",ctor:u,rasterArgumentNames:["raster"]}),d.set("Remap",{desc:"Remap Function",ctor:m,rasterArgumentNames:["raster"]}),d.set("Slope",{desc:"Slope Function",ctor:p,rasterArgumentNames:["raster"]}),d.set("StatisticsHistograms",{desc:"Statistics Histograms Function",ctor:f,rasterArgumentNames:["raster"]}),d.set("Stretch",{desc:"Stretch Function",ctor:F,rasterArgumentNames:["raster"]});export{l as create,N as getRasterValues,g as getSupportedFunctions,A as register};
