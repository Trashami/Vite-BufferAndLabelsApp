/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../PixelBlock.js";var t;!function(e){e[e.UserDefined=-1]="UserDefined",e[e.LineDetectionHorizontal=0]="LineDetectionHorizontal",e[e.LineDetectionVertical=1]="LineDetectionVertical",e[e.LineDetectionLeftDiagonal=2]="LineDetectionLeftDiagonal",e[e.LineDetectionRightDiagonal=3]="LineDetectionRightDiagonal",e[e.GradientNorth=4]="GradientNorth",e[e.GradientWest=5]="GradientWest",e[e.GradientEast=6]="GradientEast",e[e.GradientSouth=7]="GradientSouth",e[e.GradientNorthEast=8]="GradientNorthEast",e[e.GradientNorthWest=9]="GradientNorthWest",e[e.SmoothArithmeticMean=10]="SmoothArithmeticMean",e[e.Smoothing3x3=11]="Smoothing3x3",e[e.Smoothing5x5=12]="Smoothing5x5",e[e.Sharpening3x3=13]="Sharpening3x3",e[e.Sharpening5x5=14]="Sharpening5x5",e[e.Laplacian3x3=15]="Laplacian3x3",e[e.Laplacian5x5=16]="Laplacian5x5",e[e.SobelHorizontal=17]="SobelHorizontal",e[e.SobelVertical=18]="SobelVertical",e[e.Sharpen=19]="Sharpen",e[e.Sharpen2=20]="Sharpen2",e[e.PointSpread=21]="PointSpread",e[e.None=255]="None"}(t||(t={}));const n=new Map;function o(e){const t=Math.sqrt(e.length),n=e.slice(0,t),o=[1];for(let i=1;i<t;i++){let n=null;for(let o=0;o<t;o++){const r=e[o+i*t],a=e[o];if(null==n)if(0===a){if(r)return{separable:!1,row:null,col:null}}else n=r/a;else if(r/a!==n)return{separable:!1,row:null,col:null}}if(null==n)return{separable:!1,row:null,col:null};o.push(n)}return{separable:!0,row:n,col:o}}function i(e,t,n,o,i,r,a){const l=new Float32Array(t*n),s=r.length,h=a?0:o,c=a?o:0,p=a?1:t;for(let f=h;f<n-h;f++){const n=f*t;for(let a=c;a<t-c;a++){if(i&&!i[n+a])continue;let t=0;for(let i=0;i<s;i++)t+=e[n+a+(i-o)*p]*r[i];l[n+a]=t}}return l}function r(e,t,n,o,i,r,a){const l=new Float32Array(t*n),s=Math.floor(o/2),h=Math.floor(i/2);for(let c=s;c<n-s;c++){const n=c*t;for(let c=h;c<t-h;c++){if(r&&!r[n+c])continue;let p=0;for(let r=0;r<o;r++)for(let o=0;o<i;o++)p+=e[n+c+(r-s)*t+o-h]*a[r*i+o];l[n+c]=p}}return l}function a(t,n,o=!0){const{pixels:i,width:a,height:s,pixelType:h,mask:c}=t,p=i.length,f=[],{kernel:u,rows:S,cols:g}=n;for(let e=0;e<p;e++){const t=r(i[e],a,s,S,g,c,u);o&&l(t,a,s,S,g),f.push(t)}return new e({width:a,height:s,pixelType:h,pixels:f,mask:c})}function l(e,t,n,o,i){const r=Math.floor(o/2);for(let l=0;l<r;l++)for(let o=0;o<t;o++)e[l*t+o]=e[(i-1-l)*t+o],e[(n-1-l)*t+o]=e[(n-i+l)*t+o];const a=Math.floor(i/2);for(let l=0;l<n;l++){const n=l*t;for(let o=0;o<a;o++)e[n+o]=e[n+i-1-o],e[n+t-o-1]=e[n+t+o-i]}}function s(t,n,o,r=!0){const{pixels:a,width:s,height:h,pixelType:c,mask:p}=t,f=a.length,u=[],S=n.length,g=o.length,x=Math.floor(S/2),d=Math.floor(g/2);for(let e=0;e<f;e++){let t=i(a[e],s,h,x,p,n,!0);t=i(t,s,h,d,p,o,!1),r&&l(t,s,h,S,g),u.push(t)}return new e({width:s,height:h,pixelType:c,pixels:u,mask:p})}function h(e,t){const n=o(t.kernel),i=!1!==t.mirrorEdges,r=n.separable?s(e,n.row,n.col,i):a(e,t,i),{outputPixelType:l}=t;return l&&r.clamp(l),r}n.set(t.None,[0,0,0,0,1,0,0,0,0]),n.set(t.LineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),n.set(t.LineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),n.set(t.LineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),n.set(t.LineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),n.set(t.GradientNorth,[-1,-2,-1,0,0,0,1,2,1]),n.set(t.GradientWest,[-1,0,1,-2,0,2,-1,0,1]),n.set(t.GradientEast,[1,0,-1,2,0,-2,1,0,-1]),n.set(t.GradientSouth,[1,2,1,0,0,0,-1,-2,-1]),n.set(t.GradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),n.set(t.GradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),n.set(t.SmoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),n.set(t.Smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),n.set(t.Smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),n.set(t.Sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),n.set(t.Sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),n.set(t.Laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),n.set(t.Laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),n.set(t.SobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),n.set(t.SobelVertical,[-1,0,1,-2,0,2,-1,0,1]),n.set(t.Sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),n.set(t.Sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),n.set(t.PointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);export{t as ConvolutionKernel,h as convolute,s as convoluteSeparable,n as convolutionKernels,o as separateKernels};
