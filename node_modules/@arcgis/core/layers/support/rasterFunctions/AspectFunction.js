/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{isNone as s}from"../../../core/maybe.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as r}from"../../../core/accessorSupport/decorators/subclass.js";import o from"./AspectFunctionArguments.js";import i from"./BaseRasterFunction.js";import{aspect as n}from"./surfaceUtils.js";let c=class extends i{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference.isGeographic,this.outputPixelType=this._getOutputPixelType("f32");const s=t.clone();return s.pixelType=this.outputPixelType,s.statistics=null,s.histograms=null,this.rasterInfo=s,{success:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(s(e))return null;const{extent:r}=t,o=r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1};return n(e,{resolution:o})}};t([e({json:{write:!0,name:"rasterFunction"}})],c.prototype,"functionName",void 0),t([e({type:o,json:{write:!0,name:"rasterFunctionArguments"}})],c.prototype,"functionArguments",void 0),t([e()],c.prototype,"rasterArgumentNames",void 0),t([e({json:{write:!0}})],c.prototype,"isGCS",void 0),c=t([r("esri.layers.support.rasterFunctions.AspectFunction")],c);const p=c;export{p as default};
