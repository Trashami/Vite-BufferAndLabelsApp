/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{clone as r}from"../../../core/lang.js";import{property as s}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as t}from"../../../core/accessorSupport/decorators/subclass.js";import o from"./BaseFunctionArguments.js";import{convolutionKernels as n,ConvolutionKernel as p}from"./convolutionUtils.js";var i;let c=i=class extends o{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set kernelType(e){this._set("kernelType",e);const r=n.get(e);if(!r||e===p.UserDefined||e===p.None)return;const s=Math.sqrt(r.length);this._set("kernel",r),this._set("cols",s),this._set("rows",s)}clone(){return new i({cols:this.cols,rows:this.rows,kernel:[...this.kernel],kernelType:this.kernelType,raster:r(this.raster)})}};e([s({json:{type:Number,write:!0}})],c.prototype,"rows",void 0),e([s({json:{type:Number,write:!0}})],c.prototype,"cols",void 0),e([s({json:{name:"type",type:Number,write:!0}})],c.prototype,"kernelType",null),e([s({json:{type:[Number],write:!0}})],c.prototype,"kernel",void 0),c=i=e([t("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],c);const l=c;export{l as default};
