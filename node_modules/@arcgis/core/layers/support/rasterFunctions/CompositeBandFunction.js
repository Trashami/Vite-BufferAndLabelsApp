/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../../chunks/tslib.es6.js";import{isSome as s,isNone as r}from"../../../core/maybe.js";import{property as e}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../../core/accessorSupport/decorators/subclass.js";import n from"./BaseRasterFunction.js";import i from"./CompositeBandFunctionArguments.js";import{compositeBands as c}from"./pixelUtils.js";let p=class extends n{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,r=t[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const e=r.clone();if(e.attributeTable=null,e.colormap=null,e.pixelType=this.outputPixelType,e.bandCount=t.map((({bandCount:t})=>t)).reduce(((t,s)=>t+s)),t.every((({statistics:t})=>s(t)&&t.length))){const r=[];t.forEach((({statistics:t})=>s(t)&&r.push(...t))),e.statistics=r}if(t.every((({histograms:t})=>s(t)&&t.length))){const r=[];t.forEach((({histograms:t})=>s(t)&&r.push(...t))),e.histograms=r}return this.rasterInfo=e,{success:!0}}_processPixels(t){const{pixelBlocks:s}=t;if(!s)return null;const e=s?.[0];return r(e)?null:c(s)}};t([e({json:{write:!0,name:"rasterFunction"}})],p.prototype,"functionName",void 0),t([e({type:i,json:{write:!0,name:"rasterFunctionArguments"}})],p.prototype,"functionArguments",void 0),t([e()],p.prototype,"rasterArgumentNames",void 0),p=t([o("esri.layers.support.rasterFunctions.CompositeBandFunction")],p);const u=p;export{u as default};
