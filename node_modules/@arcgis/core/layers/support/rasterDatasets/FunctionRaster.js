/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as r}from"../../../chunks/tslib.es6.js";import t from"../../../core/Error.js";import{isNone as s,isSome as e}from"../../../core/maybe.js";import{property as o}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as a}from"../../../core/accessorSupport/decorators/subclass.js";import i from"./BaseRaster.js";let n=class extends i{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._primaryRasters=null}async open(r){await this.init();const{rasterFunction:s}=this,{rasters:e,rasterIds:o}=s.getPrimaryRasters(),a=e.map((t=>t.rasterInfo?void 0:t.open(r)));await Promise.all(a);const i=e.map((({rasterInfo:r})=>r)),n=s.bind({rasterInfos:i,rasterIds:o});if(!n.success)throw new t("raster-function:open",`cannot bind the function: ${n.error??""}`);await this.syncJobHandler(),this.set("sourceJSON",e[0].sourceJSON),this.set("rasterInfo",s.rasterInfo)}async syncJobHandler(){const{rasterFunction:r}=this;if(this._primaryRasters=r.getPrimaryRasters(),this.rasterJobHandler)return this.rasterJobHandler.updateRasterFunction(r)}async fetchPixels(r,t,o,a={}){const{rasters:i,rasterIds:n}=this._primaryRasters,c=i.map((s=>s.fetchPixels(r,t,o,a))),p=await Promise.all(c),l=p.map((r=>r.pixelBlock));if(l.every((r=>s(r))))return p[0];const m=p.find((r=>e(r.pixelBlock)))?.extent??r,u=this.rasterJobHandler?await this.rasterJobHandler.process({extent:m,primaryPixelBlocks:l,primaryRasterIds:n}):this.rasterFunction.process({extent:m,primaryPixelBlocks:l,primaryRasterIds:n});return{...p[0],pixelBlock:u}}};r([o({type:String,json:{write:!0}})],n.prototype,"datasetFormat",void 0),r([o()],n.prototype,"tileType",void 0),r([o()],n.prototype,"rasterFunction",void 0),n=r([a("esri.layers.support.rasterDatasets.FunctionRaster")],n);const c=n;export{c as default};
