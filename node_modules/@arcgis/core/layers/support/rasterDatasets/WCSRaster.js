/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import"../../../geometry.js";import t from"../../../core/Error.js";import i from"../../../core/Logger.js";import{isSome as s,isNone as n,unwrap as o}from"../../../core/maybe.js";import{isAbortError as r}from"../../../core/promiseUtils.js";import{property as a}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as l}from"../../../core/accessorSupport/decorators/subclass.js";import{isAxesOrderReversedForWkid as c}from"../../ogc/crsUtils.js";import d from"../DimensionalDefinition.js";import p from"./BaseRaster.js";import{parse as h}from"./multipartParser.js";import{parseCapabilities as f}from"./wcsCapabilitiesParser.js";import{standardizeInterpolations as u,parseCoverages as g}from"./wcsCoverageParser.js";import{getFormat as m}from"../rasterFormats/RasterCodec.js";import{clip as v}from"../rasterFunctions/pixelUtils.js";import w from"../../../geometry/Extent.js";const y=["nearest neighbor","bilinear","bicubic"],x=["nearest","linear","cubic"],C="response is not a supported multipart/related mediaType with inline tiff,  switching to compability mode",I="response is not a supported multipart mediaType with inline tiff",b="response is base64 encoded which may impact layer display performance",$="server returns an exception";let S=class extends p{constructor(){super(...arguments),this.datasetFormat="WCSServer"}async open(e){await this.init();const i=e?.signal,s=await this._getCapabilities(i);if(this.capabilities=s,!this.version){let e=s.capabilitiesVersion?.slice(0,3);"2.0"===e||"1.1"===e||"1.0"===e?this.version=s.capabilitiesVersion:(e=s.supportedVersions.find((e=>"2.0.1"===e))||s.supportedVersions.find((e=>"2.0"===e.slice(0,3)))||s.supportedVersions.find((e=>"1.1"===e.slice(0,3)))||s.supportedVersions.find((e=>"1.0"===e.slice(0,3)))||"1.0.0",this.version=e)}const n=s.coverages.filter((e=>null==e.coverageSubType||""===e.coverageSubType||e.coverageSubType?.toLowerCase().startsWith("rectifiedgrid")));null==this.coverageId&&(this.coverageId=n[0].id);const o=n.find((e=>e.id===this.coverageId));if(null==o)throw new t("wcsraster-open",`the coverageId ${this.coverageId} does not exist in capabilities`);const r=await this._describeCoverage(i);this.coverageInfo=r[0],"2.0"===this.version.slice(0,3)&&(this.coverageInfo.lonLatEnvelope=o.lonLatEnvelope,this.coverageInfo.supportedInterpolations=u(s.supportedInterpolations)),this.datasetName=this.coverageInfo.title;const{rasterInfo:a}=this.coverageInfo;if(this.createRemoteDatasetStorageInfo(a,512,512),this._set("rasterInfo",a),null==a.spatialReference)throw new t("wcsraster-open",`coverage without spatial referernce is not supported: ${this.coverageId}`);const{pixelType:l,bandCount:c}=await this._getPixelTypeAndBandCount(i);a.pixelType=l,1===a.bandCount&&c>1&&(a.bandCount=c),this.updateTileInfo()}async fetchRawTile(e,i,o,r={}){if(this.isBlockOutside(e,i,o))return null;const{nativePixelSize:a,spatialReference:l}=this.rasterInfo,c=2**e,d=a.x*c,p=a.y*c,{blockWidth:h,blockHeight:f}=this.getBlockWidthHeight(e),{origin:u}=this.rasterInfo.storageInfo.tileInfo,g=this.getTileExtent({x:d,y:p},i,o,u,l,[h,f]),m=this.rasterInfo.extent,w=g.xmax>m.xmax,y=g.ymin<m.ymin,x=w||y;let C=g,I=h,b=f;if(x&&(C=g.clone().intersection(m),s(C)&&(w&&(I=Math.floor((C.xmax-C.xmin)/d),C.xmax=C.xmin+d*I),y&&(b=Math.floor((C.ymax-C.ymin)/p),C.ymin=C.ymax-p*b))),n(C)||I<=1||b<=1)return null;const $=await this._getCoverage(C,I,b,c,r);if(!$)return null;const{coverageDescription:S}=this.coverageInfo;let{noDataValue:T,multidimensionalInfo:j}=this.rasterInfo;const{multidimensionalDefinition:_}=r;if(s(j)&&s(_)&&_.length){const e=_[0].variableName;if("2.0"===S.version){T=S.rangeType[0].find((t=>t.name===e))?.nilValue}else if("1.1"===S.version){T=S.range.find((t=>t.identifier===e))?.nullValues}}const L=await this.decodePixelBlock($,{width:I,height:b,planes:null,pixelType:null,noDataValue:Array.isArray(T)?T[0]:T});if(L&&(L.width!==I||L.height!==b))throw new t("wcsraster-fetch",`the reponse has unexpected dimension width: ${L.width}, height: {pixelBlock.height}`);return x?v(L,{x:0,y:0},{width:f,height:f}):L}async _getCapabilities(e){const i={service:"WCS",request:"GetCapabilities"};this.version&&(i.version=this.version,i.acceptVersions=this.version);try{const{data:t}=await this.request(this.url,{query:i,responseType:"xml",signal:e});return f(t)}catch(s){if(!r(s))throw new t("wcslayer:open","wcs capabilities is not valid or supported");throw s}}async _describeCoverage(e){const i={service:"WCS",request:"DescribeCoverage",version:this.version},s=this.version?.slice(0,3);"1.0"===s?i.coverage=this.coverageId:"1.1"===s?i.identifiers=this.coverageId:"2.0"===s&&(i.coverageId=this.coverageId);try{const{data:t}=await this.request(this.url,{query:i,responseType:"xml",signal:e});return g(t,this.version)}catch(n){if(!r(n))throw new t("wcslayer:open","wcs coverage description is not valid or supported");throw n}}async _getPixelTypeAndBandCount(e){const{pixelSize:n,extent:r,multidimensionalInfo:a}=this.rasterInfo,l=r.center,c=new w({xmin:l.x-n.x,xmax:l.x+n.x,ymin:l.y-n.y,ymax:l.y+n.y,spatialReference:r.spatialReference});let p=[];if(s(a)){const e=a.variables[0];p=[],e.dimensions.forEach((t=>{p.push(new d({variableName:e.name,dimensionName:t.name,values:t.hasRegularIntervals?t.extent[0]:t.values?.[0],isSlice:!0}))}))}const{coverageDescription:h}=this.coverageInfo,f={interpolation:"nearest",multidimensionalDefinition:p,signal:o(e)},{version:u}=h,{ioConfig:g}=this,m="2.0"===u&&null==g.allowAnyMediaType||"1.1"===u&&null==g.use2GridOffsets;let v;try{v=await this._getCoverage(c,2,2,1,f,!0)}catch(x){if(!m)throw x;if("1.1"===u){if(!x.details?.isResolutionMismatch)throw x;g.use2GridOffsets=!0}}if(!v&&m&&("2.0"===u&&(g.allowAnyMediaType=!0),v=await this._getCoverage(c,2,2,1,f),v&&i.getLogger(this.declaredClass).warn("wcsraster:getcoverage",C)),!v)throw new t("wcsraster-open","unable to determine pixel type");const y=await this.decodePixelBlock(v,{width:2,height:2,planes:null,pixelType:null});return{pixelType:y.pixelType,bandCount:y.getPlaneCount()??0}}async _getCoverage(e,s,n,o,r,a=!1){const{coverageDescription:l}=this.coverageInfo,{version:c}=l,d="2.0"===c?this._getCoverage201Parameters(e,s,n,o,r,l):"1.1"===c?this._getCoverage110Parameters(e,s,n,r,l):this._getCoverage100Parameters(e,s,n,r),p="2.0"===c?await this.request(this._constructWCS201Url(d),{signal:r.signal,responseType:"array-buffer"}):await this.request(this.url,{query:d,signal:r.signal,responseType:"array-buffer"});if("1.0"===c)return p.data;if("2.0"===c&&!1!==this.ioConfig.allowAnyMediaType){if("tiff"===m(p.data))return a&&(this.ioConfig.allowAnyMediaType=!0,i.getLogger(this.declaredClass).warn("wcsraster:getcoverage",C)),p.data}const f=h(p);if(f.isMultipart&&f.data){const e=f.data.find((e=>e.contentType?.toLowerCase().includes("image")&&null!=e.contentData));return a&&"base64"===e?.contentTransferEncoding&&i.getLogger(this.declaredClass).warn("wcsraster:getcoverage",b),e?.contentData}const u=new Uint8Array(p.data,0,Math.min(p.data.byteLength,2e3)),g=String.fromCharCode.apply(null,u).toLowerCase().includes("exception"),v=g&&String.fromCharCode.apply(null,u).includes("A non-zero RESX/RESY or WIDTH/HEIGHT is required but neither was provided");if(g)throw new t("wcsraster:getcoverage",$,{isResolutionMismatch:v});throw new t("wcsraster:getcoverage",I)}_getInterpolationIndex(e){return e&&this.coverageInfo.supportedInterpolations?.includes(e)?"nearest"===e?0:"bilinear"===e?1:"cubic"===e?2:0:0}_getCoverage100Parameters(e,t,i,n){const o=`${e.xmin},${e.ymin},${e.xmax},${e.ymax}`,r=e.spatialReference.wkid,a=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().includes("tiff")))||"GEOTIFF",{bandIds:l,interpolation:c}=n,d=this._getInterpolationIndex(c),p=l?l.map((e=>this.coverageInfo.bandNames[e])):null,h=y[d],{multidimensionalDefinition:f}=n;let u;if(s(f)&&s(this.rasterInfo.multidimensionalInfo)){let e=f.find((e=>"StdTime"===e.dimensionName))?.values;e&&e.length>0&&(e[0]instanceof Array&&(e=e[0]),u=e.map((e=>this._convertToISOTime(e))).join(","))}return{service:"WCS",request:"GetCoverage",version:this.version,coverage:this.coverageId,format:a,crs:`EPSG:${r}`,bbox:o,width:t,height:i,time:u,interpolation:h,band:p?.join(",")}}_getCoverage110Parameters(e,t,i,n,o){const{multidimensionalDefinition:r,bandIds:a,interpolation:l}=n,d=e.spatialReference.wkid,p=`urn:ogc:def:crs:EPSG::${d}`,h=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().includes("tiff")))||"image/tiff",f=this._getInterpolationIndex(l),u=x[f],g=null==l||0===this.coverageInfo.supportedInterpolations?.indexOf(l),m=o.domain.spatialDomain,v=m.origin.x<=m.envelope.xmin&&m.origin.y<=m.envelope.ymin,w=e.width/t,y=e.height/i*(v?1:-1),C=v?[e.xmin,e.ymin]:[e.xmin,e.ymax],I=m.useEPSGAxis&&c(d),b=I?`${C[1]},${C[0]}`:`${C[0]},${C[1]}`,$=this.ioConfig.use2GridOffsets,S=I?$?`${y},${w}`:`${y},0,0,${w}`:$?`${w},${y}`:`${w},0,0,${y}`,T=w/2,j=e.xmin+T,_=e.xmax-T,L=Math.abs(y)/2,D=e.ymin+L,E=e.ymax-L,P=I?`${D},${j},${E},${_},${p}`:`${j},${D},${_},${E},${p}`,R=o.range.find((e=>e.axis.some((e=>e.identifier.toLowerCase().includes("band")))));let A,G=R&&u&&a?g?`${R.identifier}[${R.axis[0].identifier}[${a.join(",")}]]`:`${R.identifier}:${u}[${R.axis[0].identifier}[${a.join(",")}]]`:null;if(s(r)&&r.length)for(let s=0;s<r.length;s++){let e=r[s].values;const t=r[s].dimensionName.toLowerCase(),i=r[s].variableName.toLowerCase();if(e.length>0)if(e[0]instanceof Array&&(e=e[0]),"stdtime"===t)A=e.map((e=>this._convertToISOTime(e))).join(",");else{const s=o.range.find((e=>e.identifier.toLowerCase()===i));if(s){const i=s.axis.find((e=>e.identifier.toLowerCase()===t));i&&(G=g?s.identifier+"["+i.identifier+"["+e.join(",")+"]]":s.identifier+":"+u+"["+i.identifier+"["+e.join(",")+"]]")}}}return{service:"WCS",request:"GetCoverage",version:this.version,identifier:this.coverageId,format:h,crs:`EPSG:${d}`,boundingbox:P,gridCS:"urn:ogc:def:cs:OGC:0.0:Grid2dSquareCS",gridType:"urn:ogc:def:method:WCS:1.1:2dGridIn2dCrs",gridOrigin:b,gridOffsets:S,gridBaseCRS:p,timeSequence:A,rangeSubset:G}}_convertToISOTime(e,t=!1){return(t?new Date(24*(e-25569)*60*60*1e3):new Date(e)).toISOString()}_getCoverage201Parameters(e,t,i,n,o,r){const{multidimensionalDefinition:a,interpolation:l}=o,c=this._getInterpolationIndex(l);let d=null;const{supportedInterpolations:p}=this.capabilities;if(p?.length)switch(c){case 0:d=p.find((e=>e.toLowerCase().includes("nearest")));break;case 1:d=p.find((e=>e.toLowerCase().includes("linear")));break;case 2:d=p.find((e=>e.toLowerCase().includes("cubic")||e.toLowerCase().includes("quadratic")))}const h=(this.coverageInfo.supportedFormats||[]).find((e=>e.toLowerCase().includes("tiff")))||"image/tiff",{bandNames:f}=this.coverageInfo,{boundedBy:u,domainSet:g,rangeType:m}=r,v=u.isEastFirst?0:1,w=1-v,{axisLabels:y}=u,x=y[v],C=y[w],I=`http://www.opengis.net/def/crs/EPSG/0/${e.spatialReference.wkid}`,b=I,$=[];$.push(`${x}(${e.xmin},${e.xmax})`),$.push(`${C}(${e.ymin},${e.ymax})`);const S=[];if(y.length>2)for(let s=2;s<y.length;s++){const e=g.origin[s];if(y[s].toLowerCase().includes("time")){let t=e.toString();u.uomLabels?.[s].toLowerCase().includes("ole")&&(S.push(y[s]),t=this._convertToISOTime(e,!0)),$.push(y[s]+",http://www.opengis.net("+t+")")}else $.push(y[s]+",http://www.opengis.net("+e+")")}let T=null;if(s(a)&&a.length){const e=[];m.forEach((t=>t.forEach((t=>e.push(t.name)))));const t=[];for(let i=0;i<a.length;i++){const s=y.find((e=>e===a[i].dimensionName)),n=e.find((e=>e===a[i].variableName));if(t.includes(n)||t.push(n),s){let e=a[i].values;if(e.length>0){Array.isArray(e[0])&&(e=e[0]);let t="";t=s.toLowerCase().includes("time")?e.map((e=>this._convertToISOTime(e))).join(","):e.join(",");const i=$.findIndex((e=>0===e.indexOf(s+",http://www.opengis.net")));-1===i&&$.push(s+",http://www.opengis.net("+t+")"),-1===i||$[i].includes("("+t+")")||$.splice(i,1,s+",http://www.opengis.net("+t+")")}}}t.length&&(T=t.join(","))}else if(f?.length>=2){T=(o.bandIds?o.bandIds.map((e=>f[e])):f).join(",")}const j=$.join("&subset="),_=!r.domainSet.hasSameAxisLabelsAsBoundedBy&&!1!==this.ioConfig.allowScaleFactor,L=_?null:`${x}(${t}),${C}(${i})`,D=_?1/n:null;return{service:"WCS",request:"GetCoverage",version:this.version,coverageId:this.coverageId,rangesubset:T,interpolation:d,scaleSize:L,scaleFactor:D,subset:j,format:h,mediaType:this.ioConfig.allowAnyMediaType?null:"multipart/related",outputcrs:I,subsettingcrs:b}}_constructWCS201Url(e){const t={...this.ioConfig.customFetchParameters,...e},i=[];Object.keys(t).forEach((e=>{const s=t[e];null!=s&&("subset"===e?s.split("&subset=").forEach((e=>{e&&i.push(`subset=${encodeURIComponent(e)}`)})):i.push(`${e}=${encodeURIComponent(s)}`))}));return`${encodeURI(this.url)}?${i.join("&")}`}};e([a({type:String,json:{write:!0}})],S.prototype,"datasetFormat",void 0),e([a()],S.prototype,"tileType",void 0),e([a({type:String,json:{write:!0}})],S.prototype,"version",void 0),e([a({type:String,json:{write:!0}})],S.prototype,"coverageId",void 0),S=e([l("esri.layers.support.rasterDatasets.WCSRaster")],S);const T=S;export{T as default};
