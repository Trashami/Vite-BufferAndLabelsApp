/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import"../../../../core/Logger.js";import"../../../../core/accessorSupport/ensureType.js";import"../../../../core/arrayUtils.js";import"../../../../core/Error.js";import"../../../../core/has.js";import{subclass as s}from"../../../../core/accessorSupport/decorators/subclass.js";import{CONTENT as e}from"../css.js";import{TooltipContent as o}from"./TooltipContent.js";import{TooltipField as r}from"../support/TooltipField.js";import{ValueByValue as i}from"../support/ValueByValue.js";import"../../../../widgets/support/widgetUtils.js";import{tsx as p}from"../../../../widgets/support/jsxFactory.js";const l={base:`${e} ${`${e}--extent-scale`}`};let a=class extends o{render(){const t=this.info,{visibleElements:s}=t.tooltipOptions,e=this._messagesTooltip.sketch;return p("div",{class:l.base},s.size&&p(r,{title:e.size,value:p(i,{left:this._formatLength(t.xSize),right:this._formatLength(t.ySize)})}),s.scale&&p(r,{title:e.scale,value:p(i,{left:this._formatScale(t.xScale),right:this._formatScale(t.yScale)})}))}};a=t([s("esri.views.interactive.tooltip.content.TooltipContentExtentScale")],a);export{a as TooltipContentExtentScale};
