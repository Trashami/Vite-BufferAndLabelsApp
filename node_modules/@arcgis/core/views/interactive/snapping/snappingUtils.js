/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{isSome as t,isNone as e}from"../../../core/maybe.js";import{d as n}from"../../../chunks/vec3.js";import{c as r}from"../../../chunks/vec3f64.js";import{elevationInfoLikeEquals as o,getConvertedElevationFromVector as c,absoluteHeightElevationInfo as s}from"../../../support/elevationInfoUtils.js";function i(t,e){const n=t.length===e.length&&t[0]===e[0]&&t[1]===e[1];switch(t.length){case 2:return n;case 3:return n&&t[2]===e[2];case 4:return n&&t[2]===e[2]&&t[3]===e[3]}return!1}function u(t,e){const n=t.x-e.x,r=t.y-e.y;return n*n+r*r}function E(t,e){return Math.sqrt(u(t,e))}function a(t,e,r){const o=r.toXYZ(t,f);e.sort(((t,e)=>{const c=r.toXYZ(t.targetPoint,p),s=n(c,o),i=r.toXYZ(e.targetPoint,p);return s-n(i,o)}))}const f=r(),p=r();var l;function h(e,n){return{point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),distance:e.distance,types:e.types,query:t(n)?n.toJSON():{where:"1=1"}}}function R(t,n,r,s){const{coordinateHelper:i,elevationInfo:u}=r;if(!i.hasZ()||e(n)||"3d"!==n.type||e(t)||o(u,s))return t;const E=c(n,t,i.spatialReference,u,s),a=i.clone(t);return a[2]=E,a}function N(t,e,n,r=s){return{left:R(t.leftVertex.pos,e,n,r),right:R(t.rightVertex.pos,e,n,r)}}function m(t){return t.createQuery()}!function(t){t[t.TARGET=0]="TARGET",t[t.REFERENCE=1]="REFERENCE",t[t.REFERENCE_EXTENSION=2]="REFERENCE_EXTENSION"}(l||(l={}));export{l as LineSegmentHintType,R as convertPointElevation,N as editEdgeToSnappingEdge,m as makeFilter,h as makeSnappingQuery,i as objectEqual,E as screenDistance,a as sortCandidatesInPlace,u as squaredScreenDistance};
