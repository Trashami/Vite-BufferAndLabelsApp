/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{isSome as o}from"../../../../core/maybe.js";import{throwIfAborted as r,whenOrAbort as i}from"../../../../core/promiseUtils.js";import{watch as n,initial as a}from"../../../../core/reactiveUtils.js";import{property as s}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../../core/accessorSupport/decorators/subclass.js";import{elevationContextAffectsAlignment as l,absoluteHeightElevationInfo as y}from"../../../../support/elevationInfoUtils.js";import{makeFilter as c,makeSnappingQuery as g}from"../snappingUtils.js";import{convertSnappingCandidate as u,makeGetGroundElevation as h}from"./queryEngineUtils.js";import{getSnappingCandidateElevationAligner as m}from"./snappingCandidateElevationAlignment.js";import{getSnappingCandidateElevationFilter as d}from"./snappingCandidateElevationFilter.js";import{getSymbologySnappingCandidatesFetcher as v}from"./symbologySnappingCandidates.js";let f=class extends t{constructor(e){super(e),this.view=null,this._layerView3D=null}get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,r=o(e)&&"3d"===e.type;if(!r||"subtype-group"===t.type)return m();const n=async(o,r)=>(await i(e.whenLayerView(t),r)).elevationAlignPointsInFeatures(o,r);return m(r,{elevationInfo:t.elevationInfo,alignPointsInFeatures:n,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=o(e)&&"3d"===e.type&&"subtype-group"!==this.layerSource.layer.type;return d(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return o(e)&&"3d"===e.type&&"subtype-group"!==t.type?v(this._symbologySnappingSupported,(async(o,i)=>{const n=await e.whenLayerView(t);return r(i),n.queryForSymbologySnapping({candidates:o,spatialReference:e.spatialReference},i)})):v()}get _symbologySnappingSupported(){return o(this._layerView3D)&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;o(e)&&"3d"===e.type&&"subtype-group"!==t.type&&(e.whenLayerView(t).then((e=>this._layerView3D=e)),this.addHandles([e.elevationProvider.on("elevation-change",(({context:e})=>{const{elevationInfo:o}=t;l(e,o)&&this._snappingElevationAligner.notifyElevationSourceChange()})),n((()=>t.elevationInfo),(()=>this._snappingElevationAligner.notifyElevationSourceChange()),a),n((()=>o(this._layerView3D)?this._layerView3D.processor?.renderer:null),(()=>this._symbologySnappingFetcher.notifySymbologyChange()),a)]))}refresh(){}async fetchCandidates(e,t){const{layer:o}=this.layerSource,{coordinateHelper:i,elevationInfo:n}=e,a=o.source;if(!a.querySnapping)return[];const s=c(o),p=g(e,s),l=await a.querySnapping(p,{signal:t});r(t);const h=await this._snappingElevationAligner.alignCandidates(l.candidates,t);r(t);const m=await this._symbologySnappingFetcher.fetch(h,t);r(t);const d=0===m.length?h:[...h,...m],v=this._snappingElevationFilter.filter(p,d),f=i.hasZ()?y:n,S=this._getGroundElevation;return v.map((e=>u(e,i,f,S)))}get _getGroundElevation(){return h(this.view)}};e([s({constructOnly:!0})],f.prototype,"layerSource",void 0),e([s({constructOnly:!0})],f.prototype,"view",void 0),e([s()],f.prototype,"_snappingElevationAligner",null),e([s()],f.prototype,"_snappingElevationFilter",null),e([s()],f.prototype,"_symbologySnappingFetcher",null),e([s()],f.prototype,"_layerView3D",void 0),e([s()],f.prototype,"_symbologySnappingSupported",null),e([s()],f.prototype,"_getGroundElevation",null),f=e([p("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],f);export{f as FeatureCollectionSnappingSource};
