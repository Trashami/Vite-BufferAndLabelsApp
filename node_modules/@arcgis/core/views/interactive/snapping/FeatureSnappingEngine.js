/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import{HandleOwner as t}from"../../../core/HandleOwner.js";import r from"../../../core/Handles.js";import{someMap as o}from"../../../core/MapUtils.js";import{isSome as n,isNone as s,unwrap as a}from"../../../core/maybe.js";import{eachAlwaysValues as i,throwIfAborted as c}from"../../../core/promiseUtils.js";import{sync as u,watch as l,syncAndInitial as p}from"../../../core/reactiveUtils.js";import{property as d}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as h}from"../../../core/accessorSupport/decorators/subclass.js";import{o as g}from"../../../chunks/vec2.js";import{c as y}from"../../../chunks/vec3.js";import{c as S}from"../../../chunks/vec3f64.js";import{SnappingTypes as m}from"../../../layers/graphics/data/QueryEngineResult.js";import{absoluteHeightElevationInfo as f,getConvertedElevationFromVector as v}from"../../../support/elevationInfoUtils.js";import{VerticalHalfPlaneConstraint as w}from"./SnappingConstraint.js";import{SnappingDomain as _}from"./SnappingDomain.js";import{sortCandidatesInPlace as j,convertPointElevation as C,screenDistance as F}from"./snappingUtils.js";import{EdgeSnappingCandidate as x}from"./candidates/EdgeSnappingCandidate.js";import{FeatureSnappingCandidate as H}from"./candidates/FeatureSnappingCandidate.js";import{RightAngleSnappingCandidate as b,OtherVertexType as R}from"./candidates/RightAngleSnappingCandidate.js";import{vectorToScreenPoint as L}from"../support/viewUtils.js";let M=class extends t{constructor(e){super(e),this.options=null,this._domain=_.FEATURE,this._sourceModules={featureService:{module:null,loader:null},featureCollection:{module:null,loader:null},graphics:{module:null,loader:null},notes:{module:null,loader:null},scene:{module:null,loader:null}}}get updating(){return o(this.snappingSources,(({snappingSource:e})=>e.updating))||this.updatingHandles.updating}get snappingSources(){const e=this._get("snappingSources")||new Map,t=new Map;if(n(this.options)&&n(this.options.featureSources))for(const r of this.options.featureSources.items){const o=r.layer.uid,s=e.get(o);if(s){e.delete(o),t.set(o,s);continue}if(!r.layer.loaded){this.updatingHandles.addPromise(r.layer.load());continue}const a=this._createSourceInfo(r);n(a)&&t.set(o,a)}for(const[,r]of e)r.destroy();return t}initialize(){this.updatingHandles.add((()=>this.snappingSources),(()=>this.notifyChange("updating")),u),n(this.view)&&this.handles.add([this.view.on("layerview-create",(e=>this._updateLayerView(e.layer,e.layerView))),this.view.on("layerview-destroy",(e=>this._updateLayerView(e.layer,null)))])}_updateLayerView(e,t){for(const[,r]of this.snappingSources)r.snappingSource.layerSource.layer===e&&(r.layerView=t)}destroy(){this._set("options",null);for(const[,e]of this.snappingSources)e.destroy()}async fetchCandidates(e,t,r,o){if(!(t&this._domain)||s(this.options)||!this.options.effectiveFeatureEnabled)return[];const a=[],u=this._computeScreeenSizeDistanceParameters(e,r),l={distance:u,point:e,coordinateHelper:r.coordinateHelper,types:this._types};for(const[,{snappingSource:s,layerView:i}]of this.snappingSources)!s.layerSource.enabled||n(i)&&i.suspended||a.push(s.fetchCandidates(l,o).then((e=>e.filter((e=>!this._candidateIsExcluded(s,e,r.excludeFeature))))));const p=(await i(a)).flat();return this._addRightAngleCandidates(p,e,u,r),c(o),j(e,p,r.coordinateHelper),p}_addRightAngleCandidates(e,t,r,o){const s=n(o.vertexHandle)?o.vertexHandle.rightEdge?.rightVertex?.pos:n(o.editGeometryOperations)&&"polygon"===o.editGeometryOperations.data.type?a(o.editGeometryOperations.data.components[0]?.getFirstVertex())?.pos:null,i=n(o.vertexHandle)?o.vertexHandle.leftEdge?.leftVertex?.pos:n(o.editGeometryOperations)?a(o.editGeometryOperations.data.components[0]?.getLastVertex())?.pos:null,{view:c}=this,u=C(s,c,o),l=C(i,c,o),p=e.length;for(let n=0;n<p;n++)this._addRightAngleCandidate(e[n],l,t,r,o,e),this._addRightAngleCandidate(e[n],u,t,r,o,e)}_addRightAngleCandidate(e,t,r,o,n,a){const i=e instanceof x,c=i&&g(e.constraint.start,e.constraint.end);if(s(t)||!i||c)return;const u=e.constraint.closestTo(t),l=(u[0]-r[0])/o.x,p=(u[1]-r[1])/o.y;if(l*l+p*p<=1){const r=n.coordinateHelper,o=new b({coordinateHelper:r,targetPoint:u,otherVertex:t,otherVertexType:R.NEXT,previousVertex:e.constraint.start,constraint:new w(r,t,u),objectId:e.objectId,elevationInfo:e.elevationInfo});a.push(o)}}_computeScreeenSizeDistanceParameters(e,t){let r=n(this.options)?this.options.distance*("touch"===t.pointer?this.options.touchSensitivityMultiplier:1):0;return s(this.view)?{x:r,y:r,z:r,distance:r}:"2d"===this.view.type?(r*=this.view.resolution,{x:r,y:r,z:r,distance:r}):this._computeScreenSizeDistanceParameters3D(e,r,this.view,t)}_computeScreenSizeDistanceParameters3D(e,t,r,o){const{coordinateHelper:n,elevationInfo:s}=o,{spatialReference:a}=n,i=n.hasZ()?f:s,c=n.toXYZ(e,E);c[2]=v(r,c,a,i,f),r.renderCoordsHelper.toRenderCoords(c,a,G);const u=r.state.camera.computeScreenPixelSizeAt(G),l=u*r.renderCoordsHelper.unitInMeters/r.mapCoordsHelper.unitInMeters,p=t*l,d=L(c,a,f,r),h=V(d,c,l,0,0,r,o),g=V(d,c,0,l,0,r,o),y=V(d,c,0,0,l,r,o);return{x:0===h?0:p/h,y:0===g?0:p/g,z:0===y?0:p/y,distance:u*t}}get _types(){return m.EDGE|m.VERTEX}_candidateIsExcluded(e,t,r){if(s(r))return!1;const o=this._getCandidateObjectId(t);if(s(o))return!1;const n=e.layerSource.layer;return"graphics"===n.type?r.uid===o:r.sourceLayer===n&&(!(!r.attributes||!("objectIdField"in n))&&r.attributes[n.objectIdField]===o)}_getCandidateObjectId(e){return e instanceof H?e.objectId:null}_createSourceInfo(e){const t=this._createFeatureSnappingSourceType(e);if(s(t))return null;if("loading"in t)return this.updatingHandles.addPromise(t.loading.then((()=>{this.destroyed||this.notifyChange("snappingSources")}))),null;const r=n(this.view)?this.view.allLayerViews.find((t=>t.layer===e.layer)):null;return new I(t.source,r)}_createFeatureSnappingSourceType(e){switch(e.layer.type){case"feature":case"geojson":case"csv":case"oriented-imagery":case"subtype-group":case"wfs":return this._createFeatureSnappingSourceFeatureLayer(e);case"graphics":return this._createFeatureSnappingSourceGraphicsLayer(e);case"map-notes":return this._createFeatureSnappingSourceMapNotesLayer(e);case"scene":case"building-scene":return this._createFeatureSnappingSourceSceneLayer(e)}return null}_createFeatureSnappingSourceSceneLayer(e){const{view:t}=this;if(s(t)||"3d"!==t.type)return null;const r=this._getSourceModule("scene");return n(r.module)?{source:new r.module.SceneLayerSnappingSource({layerSource:e,view:t})}:{loading:r.loader}}_createFeatureSnappingSourceFeatureLayer(e){switch(e.layer.source.type){case"feature-layer":case"oriented-imagery":{const t=this._getSourceModule("featureService");return n(t.module)?{source:new t.module.FeatureServiceSnappingSource({spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}case"memory":case"csv":case"geojson":case"wfs":{if("mesh"===e.layer.geometryType)return null;const t=this._getSourceModule("featureCollection");return n(t.module)?{source:new t.module.FeatureCollectionSnappingSource({layerSource:e,view:this.view})}:{loading:t.loader}}}return null}_createFeatureSnappingSourceGraphicsLayer(e){const t=this._getSourceModule("graphics");return n(t.module)?{source:new t.module.GraphicsSnappingSource({getGraphicsLayers:()=>[e.layer],spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}_createFeatureSnappingSourceMapNotesLayer(e){const t=this._getSourceModule("notes");return n(t.module)?{source:new t.module.GraphicsSnappingSource({getGraphicsLayers:()=>n(e.layer.sublayers)?e.layer.sublayers.toArray():[],spatialReference:this.spatialReference,view:this.view,layerSource:e})}:{loading:t.loader}}_getSourceModule(e){const t=this._sourceModules[e];if(s(t.loader)){const r=this._loadSourceModule(e).then((e=>{t.module=e}));return t.loader=r,{module:t.module,loader:r}}return{module:t.module,loader:t.loader}}_loadSourceModule(e){const t=this.updatingHandles;switch(e){case"featureService":return t.addPromise(import("./featureSources/FeatureServiceSnappingSource.js"));case"featureCollection":return t.addPromise(import("./featureSources/FeatureCollectionSnappingSource.js"));case"graphics":case"notes":return t.addPromise(import("./featureSources/GraphicsSnappingSource.js"));case"scene":return t.addPromise(import("./featureSources/SceneLayerSnappingSource.js"))}return null}};e([d({constructOnly:!0})],M.prototype,"spatialReference",void 0),e([d({constructOnly:!0})],M.prototype,"view",void 0),e([d()],M.prototype,"options",void 0),e([d({readOnly:!0})],M.prototype,"updating",null),e([d({readOnly:!0})],M.prototype,"snappingSources",null),M=e([h("esri.views.interactive.snapping.FeatureSnappingEngine")],M);class I{constructor(e,t){this.snappingSource=e,this.layerView=t,this.handles=new r;const o=this.snappingSource.layerSource.layer;if("refresh"in o){const t=o;this.handles.add(t.on("refresh",(()=>e.refresh())))}this.handles.add([l((()=>e.updating),(t=>e.layerSource.updating=t),p),l((()=>e.availability),(t=>e.layerSource.availability=t),p)])}destroy(){this.snappingSource.destroy(),this.handles.destroy()}}function V(e,t,r,o,n,s,{coordinateHelper:a}){const i=y(O,t);i[0]+=r,i[1]+=o,i[2]+=n;const c=L(i,a.spatialReference,f,s);return F(c,e)}const E=S(),G=S(),O=S();export{M as FeatureSnappingEngine};
