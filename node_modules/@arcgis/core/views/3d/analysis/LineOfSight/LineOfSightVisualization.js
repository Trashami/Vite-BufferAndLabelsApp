/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as i}from"../../../../chunks/tslib.es6.js";import e from"../../../../Color.js";import t from"../../../../core/Accessor.js";import n from"../../../../core/Handles.js";import{makeHandle as o}from"../../../../core/handleUtils.js";import{destroyMaybe as s,isNone as a}from"../../../../core/maybe.js";import{initial as l}from"../../../../core/reactiveUtils.js";import{property as r}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as u}from"../../../../core/accessorSupport/decorators/subclass.js";import{c}from"../../../../chunks/mat4f64.js";import{b as d}from"../../../../chunks/vec3.js";import{d as m,c as h}from"../../../../chunks/vec3f64.js";import{WatchUpdatingTracking as p}from"../../../../core/support/WatchUpdatingTracking.js";import{LineVisualElement as v}from"../../interactive/visualElements/LineVisualElement.js";import{PointVisualElement as g}from"../../interactive/visualElements/PointVisualElement.js";let f=class extends t{constructor(i){super(i),this._lineOfSightVisualizations=[],this._computationHandles=new n,this._updatingHandles=new p}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=s(this._updatingHandles),this._computationHandles=s(this._computationHandles),this._observerVisualElement=s(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get testInfo(){return{visualizations:this._lineOfSightVisualizations}}get _configuration(){return this.analysisViewData.configuration}_createLineOfSightVisualization(){const i=this._configuration,t=this.view,n={view:t,attached:!0,width:i.outerWidth,innerWidth:i.innerWidth},o=e.toUnitRGBA(i.visibleOuterColor),s=e.toUnitRGBA(i.visibleInnerColor),a=e.toUnitRGBA(i.occludedOuterColor),l=e.toUnitRGBA(i.occludedInnerColor),r=e.toUnitRGBA(i.undefinedOuterColor),u=e.toUnitRGBA(i.undefinedInnerColor),c={visibleLineVisualElement:new v({...n,color:o,innerColor:s}),occludedLineVisualElement:new v({...n,color:a,innerColor:l}),undefinedLineVisualElement:new v({...n,color:r,innerColor:u}),targetVisualElement:new g({view:t,attached:!0,...b,size:8})};return this._lineOfSightVisualizations.push(c),c}_destroyLineOfSightVisualization(i){i.visibleLineVisualElement=s(i.visibleLineVisualElement),i.occludedLineVisualElement=s(i.occludedLineVisualElement),i.undefinedLineVisualElement=s(i.undefinedLineVisualElement),i.targetVisualElement=s(i.targetVisualElement),this._lineOfSightVisualizations.splice(this._lineOfSightVisualizations.indexOf(i),1)}_updateLineOfSightVisualization(i,t,n){const o=this._configuration,{computationResult:s,inputPoints:l}=i,{start:r,end:u,intersection:c,isValid:h,isTargetVisible:p}=s,{observer:v}=l,g=C;g[12]=v[0],g[13]=v[1],g[14]=v[2];const f=d(V,r,v),b=d(_,u,v),O=d(y,c,v),{visibleLineVisualElement:E,occludedLineVisualElement:A,undefinedLineVisualElement:L,targetVisualElement:w}=t,z=a(this.analysisViewData.elevationAlignedObserver)||a(i.elevationAlignedTargetLocation),S=this.visible&&!z;E.visible=S,A.visible=S,L.visible=S,w.visible=S,w.attached=!n.interactiveAndEditable,S&&(E.geometry=null,A.geometry=null,L.geometry=null,w.geometry=i.elevationAlignedTargetLocation,h?p?(E.geometry=[[m(f),m(b)]],E.transform=g,E.color=e.toUnitRGBA(o.visibleOuterColor),w.color=e.toUnitRGBA(o.visibleInnerColor)):(E.geometry=[[m(f),m(O)]],E.transform=g,E.color=e.toUnitRGBA(o.occludedOuterColor),A.geometry=[[m(O),m(b)]],A.transform=g,w.color=e.toUnitRGBA(o.occludedInnerColor)):(L.geometry=[[m(f),m(b)]],L.transform=g,w.color=e.toUnitRGBA(o.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(i){const{computationResult:e}=i,{occludedOuterColor:t,visibleOuterColor:n}=this._configuration;return{computationResult:e,occludedOuterColor:t,visibleOuterColor:n,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(i){const e=this._computationHandles;if(e.has(i))return;const t=this._createLineOfSightVisualization();e.add([this._updatingHandles.add((()=>this._getLineOfSightVisualizationDependencies(i)),(e=>this._updateLineOfSightVisualization(i,t,e)),{initial:!0,equals:()=>!1}),o((()=>this._destroyLineOfSightVisualization(t)))],i)}_disconnectComputation(i){this._computationHandles.remove(i)}_connectComputations(){return this._updatingHandles.addOnCollectionChange((()=>this.analysisViewData.computations),(i=>this._onComputationsCollectionChange(i)),{initial:!0,final:!0})}_onComputationsCollectionChange({added:i,removed:e}){for(const t of e)this._disconnectComputation(t);for(const t of i)this._connectComputation(t)}_createObserverVisualization(){const i=e.toUnitRGBA(this._configuration.visibleInnerColor),t=new g({view:this.view,attached:!1,color:i,...b});this._observerVisualElement=t,this.addHandles(this._updatingHandles.add((()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible})),(({observer:i,interactiveAndEditable:e,visible:n})=>{a(i)||e||!n?t.attached=!1:(t.geometry=i,this._observerVisualElement.attached=!0)}),l))}};i([r({constructOnly:!0})],f.prototype,"analysis",void 0),i([r({constructOnly:!0})],f.prototype,"analysisViewData",void 0),i([r({constructOnly:!0})],f.prototype,"view",void 0),i([r({readOnly:!0})],f.prototype,"visible",null),i([r()],f.prototype,"updating",null),i([r()],f.prototype,"interactiveAndEditable",null),i([r()],f.prototype,"testInfo",null),i([r()],f.prototype,"_configuration",null),f=i([u("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],f);const b={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},V=h(),_=h(),y=h(),C=c();export{f as LineOfSightVisualization};
