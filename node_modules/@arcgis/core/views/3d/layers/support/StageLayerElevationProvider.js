/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import o from"../../../../core/Evented.js";import r from"../../../../core/Handles.js";import s from"../../../../core/Logger.js";import{unwrapOr as n,isNone as i,isSome as a}from"../../../../core/maybe.js";import{getMetersPerVerticalUnitForSR as c}from"../../../../core/unitUtils.js";import{property as l}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as d}from"../../../../core/accessorSupport/decorators/subclass.js";import{c as m}from"../../../../chunks/vec3.js";import{c as p}from"../../../../chunks/vec3f64.js";import{empty as h,toRect as u,expandWithVec3 as f}from"../../../../geometry/support/aaBoundingBox.js";import{empty as _}from"../../../../geometry/support/aaBoundingRect.js";import{getMetersPerUnit as y}from"../../../../symbols/support/unitConversionUtils.js";import{newIntersector as g}from"../../webgl-engine/lib/Intersector.js";import{StoreResults as j}from"../../webgl-engine/lib/IntersectorInterfaces.js";const v=1;let b=class extends(o.EventedMixin(t)){constructor(e){super(e),this._elevationOffset=0,this._layerHandes=new r}get spatialReference(){return this.view?.spatialReference}initialize(){this._renderCoordsHelper=this.view.renderCoordsHelper,this._intersectLayers=[this.stageLayer],this._intersector=g(this.view.state.viewingMode),this._intersector.options.store=j.MIN;const e=this._computeLayerExtent(this.spatialReference,this.stageLayer);this._zmin=e[2],this._zmax=e[5];const t=this.stageLayer.events;this._layerHandes.add([t.on("layerObjectAdded",(e=>this._objectChanged(e.object))),t.on("layerObjectRemoved",(e=>this._objectChanged(e.object))),t.on("objectGeometryAdded",(e=>this._objectChanged(e.object))),t.on("objectGeometryRemoved",(e=>this._objectChanged(e.object))),t.on("vertexAttrsUpdated",(e=>this._objectChanged(e.object))),t.on("objectTransformation",(e=>this._objectChanged(e)))])}dispose(){this._layerHandes.destroy()}elevationInfoChanged(){const e=null!=this.layer?this.layer.elevationInfo:null;if(null!=e&&"on-the-ground"!==e.mode){const t=c(this.layer.spatialReference),o=y(e.unit);this._elevationOffset=n(e.offset,0)*o/t}else this._elevationOffset=0}getElevation(e,t,o,r){if(R[0]=e,R[1]=t,R[2]=o,!this._renderCoordsHelper.toRenderCoords(R,r,R))return s.getLogger(this.declaredClass).error("could not project point for elevation alignment"),null;const n=this._elevationOffset,i=this._zmin+n,a=this._zmax+n;this._renderCoordsHelper.setAltitude(H,a,R),this._renderCoordsHelper.setAltitude(L,i,R);const c=e=>e.metadata&&e.metadata.isElevationSource;return this._intersector.reset(H,L,null),this._intersector.intersect(this._intersectLayers,null,v,null,c),this._intersector.results.min.getIntersectionPoint(R)?this._renderCoordsHelper.getAltitude(R):null}_objectChanged(e){const t=this.spatialReference;if(!e.metadata?.isElevationSource||i(t))return;h(x);const{lastValidElevationBB:o}=e.metadata;o.isEmpty()||this._expandExtent(t,o.min,o.max,x);const{min:r,max:s}=e.boundingVolumeWorldSpace;this._expandExtent(t,r,s,x),u(x,C),this._zmin=Math.min(this._zmin,x[2]),this._zmax=Math.max(this._zmax,x[5]),E.extent=C,E.spatialReference=t,this.emit("elevation-change",E),m(o.min,r),m(o.max,s)}_computeLayerExtent(e,t){return h(x),a(e)&&t.objects.forAll((t=>this._expandExtent(e,t.boundingVolumeWorldSpace.min,t.boundingVolumeWorldSpace.max,x))),x}_expandExtent(e,t,o,r){for(let s=0;s<8;++s)R[0]=1&s?t[0]:o[0],R[1]=2&s?t[1]:o[1],R[2]=4&s?t[2]:o[2],this._renderCoordsHelper.fromRenderCoords(R,R,e),f(r,R);return r}};e([l({constructOnly:!0})],b.prototype,"layer",void 0),e([l({constructOnly:!0})],b.prototype,"stageLayer",void 0),e([l({constructOnly:!0})],b.prototype,"view",void 0),e([l()],b.prototype,"spatialReference",null),b=e([d("esri.views.3d.layers.support.StageLayerElevationProvider")],b);const x=h(),C=_(),E={spatialReference:null,extent:C,context:"scene"},R=p(),H=p(),L=p();export{b as StageLayerElevationProvider};
