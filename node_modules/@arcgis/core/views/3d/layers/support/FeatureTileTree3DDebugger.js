/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as t}from"../../../../chunks/tslib.es6.js";import"../../../../geometry.js";import e from"../../../../core/Handles.js";import{initial as r}from"../../../../core/reactiveUtils.js";import{property as i}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as o}from"../../../../core/accessorSupport/decorators/subclass.js";import{WatchUpdatingTracking as s}from"../../../../core/support/WatchUpdatingTracking.js";import{TileTreeDebugger as a}from"../../../support/TileTreeDebugger.js";import p from"../../../../geometry/Polygon.js";let n=class extends a{constructor(t){super(t),this._watchUpdatingTracking=new s,this._handles=new e}get updating(){return this._watchUpdatingTracking?.updating??!1}initialize(){const{featureTiles:t}=this.view;this._handles.add(t.addClient()),this._watchUpdatingTracking.addOnCollectionChange((()=>t?.tiles),(()=>this.update()),r)}destroy(){this._handles&&(this._handles.destroy(),this._handles=null),this._watchUpdatingTracking.destroy()}getTiles(){const t=t=>{const[e,r,i]=t.lij;return p.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(e,r,i))};return this.view.featureTiles.tiles.toArray().sort(((t,e)=>t.loadPriority-e.loadPriority)).map((e=>({...e,geometry:t(e)})))}};t([i()],n.prototype,"_watchUpdatingTracking",void 0),t([i()],n.prototype,"updating",null),t([i()],n.prototype,"view",void 0),n=t([o("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],n);export{n as FeatureTileTree3DDebugger};
