/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import{isSome as t,isNone as r,unwrap as o}from"../../../../core/maybe.js";import{getMetersPerUnitForSR as i}from"../../../../core/unitUtils.js";import{e as s}from"../../../../chunks/earcut.js";import{I as n}from"../../../../chunks/mat4f64.js";import{s as a}from"../../../../chunks/vec2.js";import{f as l,a as c}from"../../../../chunks/vec2f64.js";import{b as h,s as m}from"../../../../chunks/vec4.js";import{t as u}from"../../../../chunks/common.js";import{create as p,empty as d,expandWithBuffer as g,intersectsClippingArea as y,expandWithAABB as f}from"../../../../geometry/support/aaBoundingBox.js";import{create as _,empty as v,expandPointInPlace as x}from"../../../../geometry/support/aaBoundingRect.js";import{perVertexElevationAligner as D}from"./ElevationAligners.js";import{SymbolUpdateType as b,elevationModeChangeUpdateType as C,needsElevationUpdates2D as E}from"./elevationAlignmentUtils.js";import{ElevationContext as S}from"./ElevationContext.js";import w from"./Graphics3DDrapedGraphicLayer.js";import{Graphics3DObject3DGraphicLayer as G}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DSymbolLayer as j}from"./Graphics3DSymbolLayer.js";import{geometryAsPolygon as T,createWaterGeometry as A,PolygonCreationDataBase as P}from"./polygonUtils.js";import{geometryToRenderInfo as U,geometryToRenderInfoDraped as R}from"../../support/renderInfoUtils/polygon.js";import{Object3D as O}from"../../webgl-engine/lib/Object3D.js";import{RenderGeometry as L}from"../../webgl-engine/lib/RenderGeometry.js";import{WaterMaterialParameters as M,WaterMaterial as B}from"../../webgl-engine/materials/WaterMaterial.js";import{wavePresets as V}from"../../webgl-engine/materials/internal/waterMaterialUtils.js";const F=["polyline","polygon","extent"];class I extends j{constructor(e,t,r,o){super(e,t,r,o)}async doLoad(){}destroy(){super.destroy(),this._context.stage.remove(this._material),this._material=null}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,F,this.symbolLayer.type))return null;const r=this.setGraphicElevationContext(t,new S);return this.ensureDrapedStatus("on-the-ground"===r.mode),this.ensureMaterial(),this.draped?this._createAsOverlay(t):this._createAs3DShape(t,r,t.uid)}ensureMaterial(){if(t(this._material))return;const r=new M,o=this.symbolLayer.color;t(o)&&(r.color=e.toUnitRGBA(o));const i=this._getCombinedOpacity(o,{hasIntrinsicColor:!0});r.color=[r.color[0],r.color[1],r.color[2],i],r.transparent=i<1||this.needsDrivenTransparentPass,r.waveDirection=t(this.symbolLayer.waveDirection)?I.headingVectorFromAngle(this.symbolLayer.waveDirection):l(0,0);const s=this.symbolLayer.waveStrength+"-"+this.symbolLayer.waterbodySize,n=V[s];r.waveStrength=n.waveStrength,r.waveTextureRepeat=n.textureRepeat,r.waveVelocity=n.waveVelocity,r.flowStrength=n.perturbationStrength,r.hasSlicePlane=this._context.slicePlaneEnabled,r.isDraped=this.draped,this._material=new B(r),this._context.stage.add(this._material)}layerOpacityChanged(){if(r(this._material))return;const e=this._material.parameters.color,t=this._getCombinedOpacity(this.symbolLayer.color,{hasIntrinsicColor:!0}),o=t<1||this.needsDrivenTransparentPass;this._material.setParameters({color:[e[0],e[1],e[2],t],transparent:o})}layerElevationInfoChanged(e,t,r){const o=this._elevationContext.mode,i=C(I.elevationModeChangeTypes,r,o);if(i!==b.UPDATE)return i;const s=E(o);return this.updateGraphics3DGraphicElevationInfo(e,t,(()=>s))}slicePlaneEnabledChanged(){return t(this._material)&&this._material.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return!0}pixelRatioChanged(){return!0}_createAs3DShape(e,t,o){const i=T(e.geometry);if(r(i))return null;const s=U(i,this._context.elevationProvider,this._context.renderCoordsHelper,t),n=s.position.length/3,a=new Float64Array(2*n),l=new Y(s,a);if(this._create3DShapeGeometries(l),this._logGeometryCreationWarnings(l.renderData,i.rings,"rings","WaterSymbol3DLayer"),0===l.outGeometries.length)return null;this._createUVCoordsFromVertices(l.uvCoords,l.renderData.mapPosition,n,this._context.elevationProvider.spatialReference);const c=new O({geometries:l.outGeometries,materials:l.outMaterials,transformations:l.outTransforms,castShadow:!1,metadata:{layerUid:this._context.layer.uid,graphicUid:o}}),h=new G(this,c,l.outGeometries,null,null,D,t);return h.alignedSampledElevation=l.renderData.sampledElevation,h.needsElevationUpdates=E(t.mode),h}_createUVCoordsFromVertices(e,t,r,o){const s=i(o);v(k);for(let i=0;i<r;i++)a(z,t[3*i+0],t[3*i+1]),x(k,z);h(k,k,s);const n=k[0]%I.unitSizeOfTexture,l=k[1]%I.unitSizeOfTexture;W[0]=k[0]-n,W[1]=k[1]-l;for(let i=0;i<r;i++)e[2*i+0]=(t[3*i+0]*s-W[0])/I.unitSizeOfTexture,e[2*i+1]=(t[3*i+1]*s-W[1])/I.unitSizeOfTexture}_create3DShapeGeometries(e){const r=e.renderData.polygons,i=e.uvCoords;for(const{count:a,index:l,position:c,mapPosition:h,holeIndices:m}of r){if(t(this._context.clippingExtent)&&(d(N),g(N,h),!y(N,this._context.clippingExtent)))continue;const r=s(h,m,3);if(0===r.length)continue;const u=new Float64Array(i.buffer,2*l*i.BYTES_PER_ELEMENT,2*a),p=A({indices:r,attributeData:{position:c,uv0:u,mapPosition:h}});e.outGeometries.push(p),e.outMaterials.push(o(this._material)),e.outTransforms.push(n)}}_createAsOverlay(e){const t=T(e.geometry);if(r(t))return null;o(this._material).renderPriority=this._renderPriority;const i=R(t,this._context.overlaySR),s=i.position.length/3,n=new Float64Array(2*s),a=new q(i,n,this._context.layer.uid,e.uid);return a.outBoundingBox=d(),this._createAsOverlayWater(a),this._logGeometryCreationWarnings(a.renderData,t.rings,"rings","WaterSymbol3DLayer"),0===a.outGeometries.length?null:(this._createUVCoordsFromVertices(a.uvCoords,a.renderData.position,s,this._context.overlaySR),new w(this,a.outGeometries,a.outBoundingBox,this._context.drapeSourceRenderer))}_createAsOverlayWater(e){const t=e.uvCoords,r=e.renderData.polygons;for(const{position:i,holeIndices:n,index:a,count:l}of r){if(d(N),g(N,i),!y(N,this._context.clippingExtent))continue;f(e.outBoundingBox,N);const r=s(i,n,3);if(0===r.length)continue;const c=new Float64Array(t.buffer,2*a*t.BYTES_PER_ELEMENT,2*l),h=A({indices:r,attributeData:{position:i,uv0:c}}),u=new L(h,o(this._material),{layerUid:e.layerUid,graphicUid:e.graphicsUid}),p=N;m(u.boundingSphere,.5*(p[0]+p[3]),.5*(p[1]+p[4]),0,.5*Math.sqrt((p[3]-p[0])*(p[3]-p[0])+(p[4]-p[1])*(p[4]-p[1]))),e.outGeometries.push(u)}}static headingVectorFromAngle(e){const t=c(),r=u(e);return t[0]=Math.sin(r),t[1]=Math.cos(r),t}test(){return{...super.test(),create3DShape:e=>this._createAs3DShape(e.graphic,e.elevationContext,e.graphicUid),ensureMaterial:()=>this.ensureMaterial()}}}I.unitSizeOfTexture=100,I.elevationModeChangeTypes={definedChanged:b.RECREATE,staysOnTheGround:b.NONE,onTheGroundChanged:b.RECREATE};const W=c(),k=_(),z=c(),N=p();class Y extends P{constructor(e,t){super(e,null,null),this.uvCoords=t}}class q extends P{constructor(e,t,r,o){super(e,r,o),this.uvCoords=t}}export{I as Graphics3DWaterSymbolLayer};
