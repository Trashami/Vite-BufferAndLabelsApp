/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import{forEach as s,result as l}from"../../../../core/asyncUtils.js";import i from"../../../../core/Handles.js";import a from"../../../../core/Logger.js";import{someMap as r}from"../../../../core/MapUtils.js";import{destroyMaybe as o,disposeMaybe as n,isSome as c,isNone as h,unwrap as b}from"../../../../core/maybe.js";import{throwIfAborted as d,isAbortError as p}from"../../../../core/promiseUtils.js";import{watch as u}from"../../../../core/reactiveUtils.js";import{property as g}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as y}from"../../../../core/accessorSupport/decorators/subclass.js";import{hydrateGraphic as f}from"../../../../layers/graphics/hydratedFeatures.js";import{createLabelFunction as m}from"../../../../layers/support/labelFormatUtils.js";import{areLabelsVisible as _}from"../../../../layers/support/layerUtils.js";import{hasCalloutSupport as C}from"../../../../symbols/callouts/calloutUtils.js";import{VisibilityFlag as x,VisibilityGroup as v}from"./enums.js";import{make as L}from"./Graphics3DCalloutSymbolLayerFactory.js";import T from"./Graphics3DGraphicCreationContext.js";import{getGraphics3DSymbol as G}from"./graphicSymbolUtils.js";import{get as D}from"./labelPlacement.js";import{horizontalPlacementFromAnchor as R,verticalPlacementFromAnchor as A,textRenderAlignmentFromHorizontalPlacement as w}from"./placementUtils.js";import S from"../../support/debugFlags.js";import{MaterialCollection as I}from"../../webgl-engine/lib/MaterialCollection.js";import{TextRenderer as O}from"../../webgl-engine/lib/TextRenderer.js";import{TextRenderParameters as P}from"../../webgl-engine/lib/TextRenderParameters.js";import{TextTextureAtlas as j}from"../../webgl-engine/lib/TextTextureAtlas.js";import{WebGLLayer as E}from"../../webgl-engine/lib/WebGLLayer.js";import{TaskPriority as U}from"../../../support/Scheduler.js";let V=class extends t{constructor(e){super(e),this._dirty=!1,this._labels=new Map,this._labelsToAdd=new Map,this._labelsToRemove=new Map,this._labelingContexts=new Array}setup(){this.dispose(),this._handles=new i,this._handles.add([u((()=>this.view.state?.camera),(()=>this.setDirty())),u((()=>this.view.state?.pixelRatio),(()=>this._resetAllLabels())),this.view.resourceController.scheduler.registerTask(U.LABELER,this)]),this._textTextureAtlas=new j({view:this.view}),this._hudMaterialCollection=new I(this.view._stage),this._calloutMaterialCollection=new I(this.view._stage)}dispose(){this._handles=o(this._handles),this._textTextureAtlas=n(this._textTextureAtlas),this._hudMaterialCollection=n(this._hudMaterialCollection),this._calloutMaterialCollection=n(this._calloutMaterialCollection),this._labelingContexts.length=0,this._labels.clear(),this._labelsToAdd.clear(),this._labelsToRemove.clear()}_activateLabelingContext(e){e.labels.forEach(((e,t)=>{this._labels.set(t,e),e.graphics3DGraphic.setVisibilityFlag(x.USER_SETTING,!0,v.LABEL)})),e.active=!0}_deactivateLabelingContext(e){e.labels.forEach(((e,t)=>{e.graphics3DGraphic.setVisibilityFlag(x.USER_SETTING,!1,v.LABEL),this.setLabelGraphicVisibility(e.graphics3DGraphic,!1),this._labels.delete(t)})),e.active=!1}_addLabelTextureToAtlas(e){for(const t of e.graphics3DGraphic.labelGraphics){if(!t._labelClass)continue;const s=e.textTextureResources.textRenderers[t._labelIndex];c(s)&&this._textTextureAtlas.addTextTexture(s,t.stageObject)}e.rendered=!0}_removeLabelTextureFromAtlas(e){for(const t of e.graphics3DGraphic.labelGraphics){if(!t._labelClass)continue;const s=e.textTextureResources.textRenderers[t._labelIndex];c(s)&&this._textTextureAtlas.removeTextTexture(s,t.stageObject)}e.rendered=!1}get running(){return this.view.ready&&(this._dirty||this._textTextureAtlas?.updating||this.deconflictor.running)}runTask(e){this._updateLabels(e),!this._dirty&&this.deconflictor.running&&this.deconflictor.runTask(e)}_updateLabels(e){if(this._dirty){this._dirty=!1;for(const t of this._labelingContexts)if(F(t)){if(!z(t)){if(B(t)){this._deactivateLabelingContext(t);continue}if(this._createLabelClassContext(t),M(t)){this._dirty=!0;continue}if(!z(t))continue}r(t.labelsToInitialize,((s,l)=>(this._ensureGraphics3DResources(s)&&(this._labels.set(l,s),this.deconflictor.setDirty(),e.madeProgress()),(s.visible&&s.textTextureResources.initialized||!s.visible&&s.hasGraphics3DResources)&&(t.labelsToInitialize.delete(l),e.madeProgress()),e.done)))&&(this._dirty=!0)}this._labelsToRemove.forEach((e=>this._removeLabelTextureFromAtlas(e))),this._labelsToAdd.forEach((e=>this._addLabelTextureToAtlas(e))),this._labelsToRemove.clear(),this._labelsToAdd.clear(),this._dirty||this.notifyChange("updating")}}async _createLabelClassContextAsync(e){const t=e.labelClassAbortController.signal;await e.layer.when(),d(t),e.scaleVisibility&&e.scaleVisibility.updateScaleRangeActive();const i=e.graphics3DCore,r=i.layer,o=r.labelingInfo&&r.labelingInfo.filter((e=>!!e.symbol));if(!o||0===o.length)return;const n=new Array(o.length);let c=!1;await s(o,(async(s,r)=>{const o=s.symbol,b=G(i.getOrCreateGraphics3DSymbol(o));if(h(b))return void a.getLogger(this.declaredClass).error("Failed to create Graphics3DSymbol for label");await b.load(),d(t);let p=null;C(o)&&o.hasVisibleCallout()&&(p=L(o,i.symbolCreationContext),await p.load(),d(t));const u=await l(m(s,e.layer.fieldsIndex,this.view.spatialReference));if(d(t),!0===u.ok){const e=await this._createTextRenderParameters(b.symbol);d(t),n[r]={labelClass:s,labelFunction:u.value,graphics3DSymbol:b,graphics3DCalloutSymbolLayer:p,calloutSymbolLayerIndex:0,textRenderParameters:e}}else a.getLogger(this.declaredClass).error(`Label expression failed to evaluate: ${u.error}`),c=!0})),d(t),c||(e.labelClassContexts=n)}async _createLabelClassContext(e){return e.labelClassPromise||(e.labelClassPromise=this._createLabelClassContextAsync(e).catch((t=>{if(p(t))throw t;e.labelClassContexts=null})).then((()=>{e.labelClassAbortController=null,this.notifyChange("updating")})).catch((()=>{})),this.notifyChange("updating")),e.labelClassPromise}async _createTextRenderParameters(e){const t=e.symbolLayers.getItemAt(0);return t&&"text"===t.type?P.fromSymbol(t,this.view.state.pixelRatio):null}_destroyLabelClassContext(e){for(const s of e.labelClassContexts)--s.graphics3DSymbol.referenced,s.graphics3DSymbol=null;const t=e.labelClassAbortController;e.labelClassAbortController=new AbortController,t&&t.abort(),e.labelClassContexts=[],e.labelClassPromise=null,this.notifyChange("updating")}_createTextSymbolGraphic(e,t,s,l,i){const a={text:e.text,centerOffset:s.centerOffset,translation:s.translation,elevationOffset:s.elevationOffset,screenOffset:s.screenOffset,centerOffsetUnits:s.centerOffsetUnits,horizontalPlacement:R(s.anchor),verticalPlacement:A(s.anchor),verticalOffset:s.verticalOffset,debugDrawLabelBorder:S.LABELS_SHOW_BORDER,displayWidth:e.displayWidth,displayHeight:e.displayHeight};return k.graphic=t,k.renderingInfo=null,k.layer=l,i.createLabel(k,a,this._hudMaterialCollection,this._textTextureAtlas)}_createLineCalloutGraphic(e,t,s,l,i){const a={symbol:t,translation:l.translation,elevationOffset:l.elevationOffset,screenOffset:l.screenOffset,centerOffset:l.centerOffset,centerOffsetUnits:l.centerOffsetUnits,materialCollection:this._calloutMaterialCollection};return k.graphic=e,k.renderingInfo=a,k.layer=i,s.createGraphics3DGraphic(k)}_ensureGraphics3DResources(e){if(e.hasGraphics3DResources)return!1;const t=e.graphics3DGraphic;if(t.destroyed)return!1;this._ensureTextTextureResources(e);const{textTextureResources:s}=e,l=e.labelingContext,i=l.labelClassContexts;if(!i||0===i.length||!l.emptySymbolLabelSupported&&0===t.graphics.length)return!1;let a=!1;const r=t.graphic,o=l.layer,n=_(l.layer),b=this.view._stage;for(let d=0;d<i.length;d++){const e=s.textRenderers[d],p=s.labelPlacements[d];if(h(e)||h(p))continue;const u=i[d],g=u.graphics3DSymbol,y=g.symbol&&"label-3d"===g.symbol.type?g.symbol:null,f=g.symbolLayers[0];if(!f)continue;f.setElevationInfoOverride(l.elevationInfoOverride);const m=this._createTextSymbolGraphic(e,r,p,o,f);if(!m)return!1;m._labelClass=u.labelClass,m._labelIndex=d,t.addLabelGraphic(m,b,l.stageLayer),t.setVisibilityFlag(x.USER_SETTING,n,v.LABEL),t.clearVisibilityFlag(x.SCALE_RANGE,v.LABEL),t.setVisibilityFlag(x.DECONFLICTION,!1,v.LABEL),a=!0;const _=u.graphics3DCalloutSymbolLayer;if(_&&p.hasLabelVerticalOffset){_.setElevationInfoOverride(l.elevationInfoOverride);const e=this._createLineCalloutGraphic(r,y,_,p,o);c(e)&&(u.calloutSymbolLayerIndex=t.labelGraphics.length,t.addLabelGraphic(e,b,l.stageLayer))}break}return l.scaleVisibility&&a&&l.scaleVisibility.updateGraphicLabelScaleVisibility(t),e.hasGraphics3DResources=!0,!0}_destroyGraphics3DResources(e){const t=e.labelingContext.labelClassContexts;for(const s of e.graphics3DGraphic.labelGraphics){if(null==s._labelClass)continue;const e=t[s._labelIndex].graphics3DSymbol.symbolLayers[0];null!=e&&e.onRemoveGraphic(s)}e.graphics3DGraphic.clearLabelGraphics(),e.hasGraphics3DResources=!1}_ensureTextTextureResources(e){const{textTextureResources:t}=e;if(t.initialized)return;const s=e.labelingContext,l=s.labelClassContexts;if(!l||0===l.length)return;const i=e.graphics3DGraphic.graphic;for(let r=0;r<l.length;r++){const o=l[r];if(t.textRenderers[r]=null,t.labelPlacements[r]=null,!o.textRenderParameters)continue;const n=o.labelFunction;let c;if("arcade"===n.type)try{const e=n.needsHydrationToEvaluate()?f(i,s.layer):i;c=n.evaluate(e)}catch(a){c=null}else c=n.evaluate(i);if(h(c)||""===c||/^\s+$/.test(c))continue;const b=o.graphics3DSymbol,d=b.symbol&&"label-3d"===b.symbol.type?b.symbol:null;if(!b.symbolLayers[0])continue;const p=e.graphics3DGraphic,u=o.labelClass,g=s.disablePlacement,y=D({graphics3DGraphic:p,labelSymbol:d,labelClass:u,disablePlacement:g});if(h(y))continue;const m=R(y.anchor),_=w(m);t.textRenderers[r]=new O(c,_,o.textRenderParameters),t.labelPlacements[r]=y}t.initialized=!0}_destroyTextTextureResources(e){const{textTextureResources:t}=e;t.initialized=!1,t.textRenderers=[],t.labelPlacements=[]}_addGraphic(e,t){const s={hasGraphics3DResources:!1,visible:!1,rendered:!1,labelingContext:e,graphics3DGraphic:t,textTextureResources:{initialized:!1,textRenderers:[],labelPlacements:[]}},l=t.graphic.uid;e.labels.set(l,s),e.labelsToInitialize.set(l,s),this.setDirty(),this.deconflictor.setDirty()}_removeGraphic(e,t){const s=t.graphic.uid,l=e.labels.get(s);l&&(this._destroyGraphic(l,s),e.labels.delete(s),e.labelsToInitialize.delete(s),this.setDirty(),this.deconflictor.setDirty())}_destroyGraphic(e,t){this._labels.has(t)&&(this._labels.delete(t),this._labelsToAdd.delete(t),this._labelsToRemove.delete(t)),e.textTextureResources.initialized&&(this._removeLabelTextureFromAtlas(e),this._destroyTextTextureResources(e)),e.hasGraphics3DResources&&this._destroyGraphics3DResources(e)}async _labelingInfoChange(e,t){if(!t)return this._visibilityInfoChange(e),this._resetLabels(e),this._createLabelClassContext(e);for(const s of t){const t=e.labels.get(s);t&&(this._removeGraphic(e,t.graphics3DGraphic),this._addGraphic(e,t.graphics3DGraphic))}}_globalPropertyChanged(e,t){for(const s of t.labelClassContexts){const l=new Map;t.labels.forEach((e=>{const t=e.graphics3DGraphic;l.set(t.graphic.uid,t)}));const i=e=>e.labelGraphics[0];if(b(s.graphics3DSymbol.symbolLayers[0]).globalPropertyChanged(e,l,i),s.graphics3DCalloutSymbolLayer){const t=e=>e.labelGraphics[s.calloutSymbolLayerIndex];s.graphics3DCalloutSymbolLayer.globalPropertyChanged(e,l,t)}}}_visibilityInfoChange(e){const t=e.layer.labelsVisible;t&&!e.active&&this._activateLabelingContext(e),!t&&e.active&&this._deactivateLabelingContext(e),this.setDirty()}_resetAllLabels(){for(const e of this._labelingContexts)this._resetLabels(e)}_resetLabels(e){e.labels.forEach(((t,s)=>{this._destroyGraphic(t,s),t.visible=!1,t.rendered=!1,e.labelsToInitialize.set(s,t)})),this._destroyLabelClassContext(e),this.setDirty(),this.deconflictor.setDirty()}_findLabelingContext(e){for(const t of this._labelingContexts)if(t.graphics3DCore===e)return t;return null}addGraphicsOwner(e,t,s){const l=s&&s.emptySymbolLabelSupported||!1,i=s&&s.elevationInfoOverride||null,a=s&&s.disablePlacement||null;if(this._findLabelingContext(e))return;const r=e.layer,o={graphics3DCore:e,layer:r,scaleVisibility:t,emptySymbolLabelSupported:l,elevationInfoOverride:i,disablePlacement:a,active:r.labelsVisible,labelClassPromise:null,labelClassAbortController:new AbortController,labelClassContexts:[],labels:new Map,labelsToInitialize:new Map,stageLayer:new E({isPickable:!0},r.uid)};return this.view._stage.add(o.stageLayer),this._labelingContexts.push(o),this.setDirty(),{addGraphic:e=>this._addGraphic(o,e),removeGraphic:e=>this._removeGraphic(o,e),featureReductionChange:()=>{},layerLabelsEnabled:()=>_(o.layer),labelingInfoChange:e=>this._labelingInfoChange(o,e),elevationInfoChange:()=>this._globalPropertyChanged("elevationInfo",o),slicePlaneEnabledChange:()=>this._globalPropertyChanged("slicePlaneEnabled",o),visibilityInfoChange:()=>this._visibilityInfoChange(o),reset:()=>this._resetLabels(o),clear:()=>{}}}removeGraphicsOwner(e){const t=this._findLabelingContext(e);if(!t)return;const s=this._labelingContexts.indexOf(t);this._labelingContexts.splice(s,1),t.labels.forEach((e=>this._removeGraphic(t,e.graphics3DGraphic))),this.view._stage.remove(t.stageLayer),t.stageLayer=null,this.setDirty()}setLabelGraphicVisibility(e,t){const s=e.graphic.uid,l=this._labels.get(s);l&&l.visible!==t&&(t&&!l.rendered?(this._labelsToAdd.set(s,l),this._labelsToRemove.delete(s),l.textTextureResources.initialized||l.labelingContext.labelsToInitialize.set(s,l)):!t&&l.rendered&&(this._labelsToRemove.set(s,l),this._labelsToAdd.delete(s)),l.visible=t,this.setDirty())}setDirty(){!this._dirty&&this._labelingContexts.length>0&&(this._dirty=!0,this.notifyChange("updating"))}get updating(){return this._dirty||this._textTextureAtlas?.updating||this.deconflictor.updating||this._labelingContexts.some((e=>M(e)))}get updatingProgress(){if(!this.updating||!this._textTextureAtlas)return 1;const e=this._labelingContexts.length>0?this._labelingContexts.reduce(((e,t)=>e+(M(t)?0:1)),0)/this._labelingContexts.length:1;return(this._dirty?0:.3)+(this._textTextureAtlas.updating?0:.1)+.1*e+.5*this.deconflictor.updatingProgress}get test(){return{textTextureAtlas:this._textTextureAtlas,resetAllLabels:()=>this._resetAllLabels()}}};function F(e){return e.active&&_(e.layer)}function M(e){return e.labelClassPromise&&!!e.labelClassAbortController}function z(e){return e.labelClassContexts&&e.labelClassContexts.length}function B(e){return null===e.labelClassContexts}e([g({constructOnly:!0})],V.prototype,"view",void 0),e([g({constructOnly:!0})],V.prototype,"deconflictor",void 0),e([g()],V.prototype,"_textTextureAtlas",void 0),e([g({type:Boolean,readOnly:!0})],V.prototype,"updating",null),V=e([y("esri.views.3d.layers.graphics.Labeler")],V);const k=new T(null,null,null);export{V as Labeler};
