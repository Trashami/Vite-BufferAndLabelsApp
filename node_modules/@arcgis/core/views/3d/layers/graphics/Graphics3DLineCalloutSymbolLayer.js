/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../../../../Color.js";import{isSome as t,isNone as r}from"../../../../core/maybe.js";import{pt2px as i}from"../../../../core/screenUtils.js";import{Z as a}from"../../../../chunks/vec2f64.js";import{textSymbolLayerSupportsVerticalOffset as n}from"../../../../symbols/callouts/calloutUtils.js";import{perObjectElevationAligner as s}from"./ElevationAligners.js";import{SymbolUpdateType as o,elevationModeChangeUpdateType as l,needsElevationUpdates2D as c}from"./elevationAlignmentUtils.js";import{ElevationContext as m}from"./ElevationContext.js";import{Graphics3DObject3DGraphicLayer as d}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DSymbolLayer as h}from"./Graphics3DSymbolLayer.js";import{computeCentroid as p}from"./graphicUtils.js";import{createStageObjectForHUD as u,extendPointGraphicElevationContext as f}from"./pointUtils.js";import{emptySymbolComplexity as g}from"./symbolComplexity.js";import{PrimitiveType as y}from"../../webgl-engine/lib/basicInterfaces.js";import{Geometry as v}from"../../webgl-engine/lib/Geometry.js";import{RenderOccludedFlag as _}from"../../webgl-engine/lib/Material.js";import{VertexAttribute as x}from"../../webgl-engine/lib/VertexAttribute.js";import{LineCalloutMaterial as O}from"../../webgl-engine/materials/LineCalloutMaterial.js";class b extends h{constructor(e,t){super(e,null,t,U),this._elevationOptions={supportsOffsetAdjustment:!0,supportsOnTheGround:!1},this.ensureDrapedStatus(!1)}async doLoad(){this._material=new O(this._materialParameters),this._context.stage.add(this._material)}destroy(){super.destroy(),this._context.stage.remove(this._material),this._material=null}_perInstanceMaterialParameters(e){const t=this._materialParameters;return t.screenOffset=e.screenOffset||a,t.centerOffsetUnits=e.centerOffsetUnits||"world",t}get _materialParameters(){const r=this.symbol,a=r.callout,n=t(a.color)?e.toUnitRGBA(a.color):[0,0,0,0];n[3]*=this._getLayerOpacity();const s=i(a.size||0);let o=null;if(r.verticalOffset){const{screenLength:e,minWorldLength:a,maxWorldLength:n}=r.verticalOffset;o={screenLength:i(e),minWorldLength:a||0,maxWorldLength:t(n)?n:1/0}}const l=t(a.border)&&t(a.border.color)?e.toUnitRGBA(a.border.color):null,c="object"===r.symbolLayers.getItemAt(0).type,m=!c,d=c?0:void 0,h="label-3d"===r.type;return{color:n,size:s,verticalOffset:o,screenSizePerspective:this._context.screenSizePerspectiveEnabled?this._context.sharedResources.screenSizePerspectiveSettings:null,screenOffset:[0,0],centerOffsetUnits:"world",borderColor:l,occlusionTest:m,shaderPolygonOffset:d,depthHUDAlignStart:h,hasSlicePlane:this._context.slicePlaneEnabled,renderOccluded:_.Occlude,__tagStrict:"NoParameters"}}_defaultElevationInfoNoZ(){return E}createGraphics3DGraphic(e){const t=e.renderingInfo,i=e.graphic,a=this.setGraphicElevationContext(i,new m,t.elevationOffset||0),s=t.symbol,o="on-the-ground"===this._elevationContext.mode&&("cim"===s.type||!s.symbolLayers.some((e=>"object"===e.type||"text"===e.type)));if("label-3d"!==s.type&&o)return null;if("point-3d"===s.type&&s.symbolLayers.every((e=>"text"===e.type&&!n(e))))return null;const l=p(i.geometry);return r(l)?null:this._createAs3DShape(l,a,t,i.uid)}layerOpacityChanged(){t(this._material)&&this._material.setParameters(this._materialParameters)}layerElevationInfoChanged(e,r,i){const a=this._elevationContext.mode,n=l(b.elevationModeChangeTypes,i,a);return n!==o.UPDATE||e.forEach((e=>{const i=r(e);t(i)&&this.updateGraphicElevationContext(e.graphic,i)})),n}slicePlaneEnabledChanged(){return r(this._material)||this._material.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),!0}physicalBasedRenderingChanged(){return!0}pixelRatioChanged(){return!0}setGraphicElevationContext(e,t,r=0){const i=super.setGraphicElevationContext(e,t);return i.addOffsetRenderUnits(r),i}updateGraphicElevationContext(e,t){this.setGraphicElevationContext(e,t.elevationContext,t.metadata.elevationOffset),t.needsElevationUpdates=c(t.elevationContext.mode)}computeComplexity(){return{primitivesPerFeature:2,primitivesPerCoordinate:0,drawCallsPerFeature:0,estimated:!1,memory:g.memory}}_createVertexData(e){const{translation:t,centerOffset:r}=e,i=t?{size:3,data:[t[0],t[1],t[2]],exclusive:!0}:{size:3,data:[0,0,0],exclusive:!0},a=r?{size:4,data:[r[0],r[1],r[2],r[3]],exclusive:!0}:{size:4,data:[0,0,0,1],exclusive:!0};return[[x.POSITION,i],[x.NORMAL,{size:3,data:[0,0,1],exclusive:!0}],[x.AUXPOS1,a]]}_getOrCreateMaterial(e){const i=this._perInstanceMaterialParameters(e),a=O.uniqueMaterialIdentifier(i);if(t(this._material)&&a===this._material.uniqueMaterialIdentifier)return{material:this._material,isUnique:!1};if(e.materialCollection){let t=e.materialCollection.get(a);return r(t)&&(t=new O(i),e.materialCollection.add(a,t)),{material:t,isUnique:!1}}return{material:new O(i),isUnique:!0}}_createAs3DShape(e,t,r,i){const a=this._context.stage.renderView._getObjectAndLayerIdColor({graphicUid:i,layerUid:this._context.layer.uid}),n=[new v(this._createVertexData(r),P,y.Point,a)],o=this._getOrCreateMaterial(r),l=u(this._context,e,n,[o.material],t,this._context.layer.uid,i);if(null===l)return null;const m=new d(this,l.object,n,o.isUnique?[o.material]:null,null,s,t);return m.metadata={elevationOffset:r.elevationOffset||0},m.alignedSampledElevation=l.sampledElevation,m.needsElevationUpdates=c(t.mode),f(m,e,this._context.elevationProvider),m}}b.elevationModeChangeTypes={definedChanged:o.UPDATE,staysOnTheGround:o.UPDATE,onTheGroundChanged:o.RECREATE};const C=[0],P=[[x.POSITION,C],[x.NORMAL,C],[x.AUXPOS1,C]],E={mode:"relative-to-ground",offset:0},U={ignoreDrivers:!0,renderPriority:0,renderPriorityStep:1};export{b as Graphics3DLineCalloutSymbolLayer};
