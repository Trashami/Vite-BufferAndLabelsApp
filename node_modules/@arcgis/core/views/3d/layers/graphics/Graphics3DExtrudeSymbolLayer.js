/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import"../../../../core/has.js";import e from"../../../../core/Error.js";import{clone as t}from"../../../../core/lang.js";import{get as r,isSome as s,isNone as n}from"../../../../core/maybe.js";import{getMetersPerVerticalUnitForSR as i}from"../../../../core/unitUtils.js";import{e as o}from"../../../../chunks/earcut.js";import{b as a}from"../../../../chunks/mat3.js";import{c as l}from"../../../../chunks/mat3f64.js";import{a as c}from"../../../../chunks/mat4.js";import{I as h,c as p}from"../../../../chunks/mat4f64.js";import{c as m,n as d,s as g,b as u,f,m as y}from"../../../../chunks/vec3.js";import{d as _,c as b}from"../../../../chunks/vec3f64.js";import{computeTranslationToOriginAndRotation as x}from"../../../../geometry/projection.js";import{create as E,empty as P,expandWithBuffer as S,intersectsClippingArea as j}from"../../../../geometry/support/aaBoundingBox.js";import{BufferViewVec3f64 as v}from"../../../../geometry/support/buffer/BufferView.js";import{t as w,a as A}from"../../../../chunks/vec32.js";import{makeVertexCandidate as L,makeEdgeCandidate as M}from"../../../../layers/graphics/data/SnappingCandidate.js";import{getDriverAxisSizeValue as I}from"../../../../renderers/support/renderingInfoUtils.js";import{ViewingMode as O}from"../../../ViewingMode.js";import{needsElevationUpdates3D as C,evaluateElevationInfoAtPoint as B,SampleElevationInfo as z}from"./elevationAlignmentUtils.js";import{ElevationContext as R}from"./ElevationContext.js";import{Graphics3DObject3DGraphicLayer as T}from"./Graphics3DObject3DGraphicLayer.js";import{Graphics3DSymbolLayer as D}from"./Graphics3DSymbolLayer.js";import{validateSymbolLayerSize as G,computeCentroid as U}from"./graphicUtils.js";import{ApplyRendererDiffResult as k}from"./interfaces.js";import{geometryAsPolygon as N}from"./polygonUtils.js";import{createMaterial as F}from"../support/edgeUtils.js";import V from"../../support/debugFlags.js";import{SamplePosition as H}from"../../support/ElevationProvider.js";import{geometryToRenderInfo as Y}from"../../support/renderInfoUtils/polygon.js";import{CullFaceOptions as Z,PrimitiveType as W}from"../../webgl-engine/lib/basicInterfaces.js";import{Geometry as q}from"../../webgl-engine/lib/Geometry.js";import{Object3D as J}from"../../webgl-engine/lib/Object3D.js";import{VertexAttribute as K}from"../../webgl-engine/lib/VertexAttribute.js";import{DefaultMaterial as Q}from"../../webgl-engine/materials/DefaultMaterial.js";const X=["polygon","extent"];class $ extends D{constructor(e,t,r,s){super(e,t,r,s),this.ensureDrapedStatus(!1)}async doLoad(){if(!this._drivenProperties.size){const t=G(this._getSymbolSize());if(t)throw new e("graphics3dextrudesymbollayer:invalid-size",t)}const t=r(this.symbolLayer,"material","color"),s=this._getCombinedOpacityAndColor(t),n=_(s),i=s[3],o=i<1||this.needsDrivenTransparentPass,a={usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0,diffuse:n,ambient:n,opacity:i,transparent:o,cullFace:o?Z.None:Z.Back,hasVertexColors:!0,hasSlicePlane:this._context.slicePlaneEnabled,castShadows:this.symbolLayer.castShadows,offsetTransparentBackfaces:!0};this._material=new Q(a),this._bottomMaterial=new Q({...a,cullFace:Z.Back}),this._context.stage.add(this._material),this._context.stage.add(this._bottomMaterial)}destroy(){super.destroy(),this._material&&(this._context.stage.remove(this._material),this._context.stage.remove(this._bottomMaterial))}createGraphics3DGraphic(e){const t=e.graphic;if(!this._validateGeometry(t.geometry,X,this.symbolLayer.type))return null;const r=this._getVertexOpacityAndColor(e.renderingInfo,255),s=this.setGraphicElevationContext(t,new R);return this._createAs3DShape(t,e.renderingInfo,r,s,t.uid)}layerOpacityChanged(e,t){const n=r(this.symbolLayer,"material","color"),i=this._getCombinedOpacity(n),o=i<1||this.needsDrivenTransparentPass;this._material.setParameters({opacity:i,transparent:o}),this._bottomMaterial.setParameters({opacity:i,transparent:o});const a=this._getLayerOpacity();e.forEach((e=>{const r=t(e);s(r)&&r.layerOpacityChanged(a,this._context.isAsync)}))}layerElevationInfoChanged(e,t){return this.updateGraphics3DGraphicElevationInfo(e,t,C)}slicePlaneEnabledChanged(e,t){return this._material.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),this._bottomMaterial.setParameters({hasSlicePlane:this._context.slicePlaneEnabled}),e.forEach((e=>{const r=t(e);s(r)&&r.slicePlaneEnabledChanged(this._context.slicePlaneEnabled,this._context.isAsync)})),!0}physicalBasedRenderingChanged(){return this._material.setParameters({usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0}),this._bottomMaterial.setParameters({usePBR:this._context.physicalBasedRenderingEnabled,isSchematic:!0}),!0}pixelRatioChanged(){return!0}_getExtrusionSize(e){let t;return t=e.size&&this._drivenProperties.size?I(e.size,2)??0:this._getSymbolSize(),t/=this._context.renderCoordsHelper.unitInMeters,t}applyRendererDiff(e,t){return this._drivenPropertiesChanged(t)?k.Recreate_Symbol:k.Recreate_Graphics}async queryForSnapping(e,r,s,n){const o=this._getExtrusionSize(s)*this._context.renderCoordsHelper.unitInMeters/i(r),{objectId:a,target:l}=e,c=t(l);switch(c.z=(c.z??0)+o,e.type){case"edge":{const{start:r,end:s}=e,n=t(r),i=t(s);return n.z=(n.z??0)+o,i.z=(i.z??0)+o,[M(a,c,1/0,n,i)]}case"vertex":return[L(a,c,1/0),M(a,l,1/0,l,c)];default:return[]}}_getSymbolSize(){return this.symbolLayer.size??1}_createAs3DShape(e,t,r,i,m){const d=N(e.geometry);if(n(d))return null;if(0===d.rings.length||!d.rings.some((e=>e.length>0)))return this._logGeometryValidationWarnings(d.rings,"rings","ExtrudeSymbol3DLayer"),null;const g=Y(d,this._context.elevationProvider,this._context.renderCoordsHelper,i);this._logGeometryCreationWarnings(g,d.rings,"rings","ExtrudeSymbol3DLayer");const u=U(d);if(n(u))return null;const f=new Array,y=new Array,_=new Array,L=E(),M=p(),I=b(),B=this._context.renderCoordsHelper.viewingMode===O.Global;B||this._context.renderCoordsHelper.worldUpAtPosition(null,I),x(d.spatialReference,[u.x,u.y,0],M,this._context.renderCoordsHelper.spatialReference);const z=p();c(z,M);const R=l();a(R,z);const{polygons:D,mapPosition:G,position:k}=g,V=k.length/3,H=new Float64Array(3*V*6),Z=new Float64Array(3*V*6),W=new Float64Array(3*V*6),q=new Float64Array(1*V*6);let K=0;for(let s=0;s<D.length;++s){const e=D[s],n=e.count;if(this._context.clippingExtent&&(P(L),S(L,e.mapPosition),!j(L,this._context.clippingExtent)))continue;const i=o(e.mapPosition,e.holeIndices,3);if(0===i.length)continue;const a=3*n*2+i.length,l=new Array(a),c=new Array(i.length),p=6*n,d=3*H.BYTES_PER_ELEMENT,g=new v(H.buffer,K*d,d,(K+p)*d),u=3*Z.BYTES_PER_ELEMENT,b=new v(Z.buffer,K*u,u,(K+p)*u),x=new Float64Array(W.buffer,3*K*W.BYTES_PER_ELEMENT,3*p),E=new Float64Array(q.buffer,1*K*q.BYTES_PER_ELEMENT,1*p),M=this._getExtrusionSize(t);te(k,G,i,e,g.typedBuffer,x,b.typedBuffer,E,l,c,M,I,B),w(g,g,z),A(b,b,R),K+=6*n;const O=this._context.stage.renderView._getObjectAndLayerIdColor({graphicUid:m,layerUid:this._context.layer.uid}),C=ee(l,l.length-c.length,{positions:g.typedBuffer,elevation:x,normals:b.typedBuffer,heights:E},r,O);f.push(C),y.push(this._material),_.push(h);const T=ee(c,0,{positions:g.typedBuffer,elevation:x,normals:b.typedBuffer,heights:E},r,O);f.push(T),y.push(this._bottomMaterial),_.push(h)}if(0===f.length)return null;const Q=new J({geometries:f,materials:y,transformations:_,metadata:{layerUid:this._context.layer.uid,graphicUid:m,isElevationSource:!0}});Q.transformation=M;const X=F(this.symbolLayer,{opacity:this._getLayerOpacity()}),$=s(X)?{baseMaterial:this._material,edgeMaterials:[X],properties:{mergeGeometries:!0,hasSlicePlane:this._context.slicePlaneEnabled}}:null,re=new T(this,Q,f,null,null,de,i,$);return re.alignedSampledElevation=g.sampledElevation,re.needsElevationUpdates=C(i.mode),re}}function ee(e,t,r,s,n){const i=new Array(e.length).fill(0),o=[[K.POSITION,{size:3,data:r.positions,exclusive:!0}],[K.NORMAL,{size:3,data:r.normals,exclusive:!0}],[K.COLOR,{size:4,data:s,exclusive:!0}],[K.SIZE,{size:1,data:r.heights,exclusive:!0}]],a=[[K.POSITION,e],[K.NORMAL,e],[K.COLOR,i]];return r.elevation&&(o.push([K.MAPPOS,{size:3,data:r.elevation}]),a.push([K.MAPPOS,e])),new q(o,a,W.Triangle,n,t)}function te(e,t,r,s,n,i,o,a,l,c,h,p,m){const d=r.length/3;let g=0,u=2*s.count;re(e,t,s.index,s.count,r,0,d,n,i,o,a,l,c,u,h,p,m);let f=2*s.count;u=0,ie(n,i,a,o,g,s.pathLengths[0],s.count,f,l,u,h),f+=4*s.pathLengths[0],u+=2*s.pathLengths[0],g+=s.pathLengths[0];for(let y=1;y<s.pathLengths.length;++y)ie(n,i,a,o,g,s.pathLengths[y],s.count,f,l,u,h),f+=4*s.pathLengths[y],u+=2*s.pathLengths[y],g+=s.pathLengths[y]}function re(e,t,r,s,n,i,o,a,l,c,h,p,g,u,f,y,_){m(ue,y);const b=f>0?1:-1;let x=3*r,E=0,P=3*E,S=s,j=3*S;for(let m=0;m<s;++m)_&&(ue[0]=e[x+0],ue[1]=e[x+1],ue[2]=e[x+2],d(ue,ue)),a[P+0]=e[x+0],a[P+1]=e[x+1],a[P+2]=e[x+2],l[P+0]=t[x+0],l[P+1]=t[x+1],l[P+2]=t[x+2],c[P+0]=-b*ue[0],c[P+1]=-b*ue[1],c[P+2]=-b*ue[2],h[E]=0,a[j+0]=e[x+0]+f*ue[0],a[j+1]=e[x+1]+f*ue[1],a[j+2]=e[x+2]+f*ue[2],l[j+0]=t[x+0],l[j+1]=t[x+1],l[j+2]=t[x+2],c[j+0]=b*ue[0],c[j+1]=b*ue[1],c[j+2]=b*ue[2],h[S]=f,P+=3,j+=3,x+=3,E+=1,S+=1;x=3*i,P=0,j=3*u;const v=f<0?_e:ye,w=f<0?ye:_e;for(let m=0;m<o;++m)g[P+0]=n[x+v[0]],g[P+1]=n[x+v[1]],g[P+2]=n[x+v[2]],p[j+0]=n[x+w[0]]+s,p[j+1]=n[x+w[1]]+s,p[j+2]=n[x+w[2]]+s,P+=3,j+=3,x+=3}function se(e,t,r,s,n,i,o){s[i]=s[o],o*=3,e[(i*=3)+0]=e[o+0],e[i+1]=e[o+1],e[i+2]=e[o+2],t[i+0]=t[o+0],t[i+1]=t[o+1],t[i+2]=t[o+2],r[i+0]=n[0],r[i+1]=n[1],r[i+2]=n[2]}const ne=b();function ie(e,t,r,s,n,i,o,a,l,c,h){let p=n,m=n+1,d=n+o,g=n+o+1,u=a,f=a+1,y=a+2*i,_=a+2*i+1;h<0&&(p=n+o+1,g=n),c*=3;for(let b=0;b<i;++b)b===i-1&&(h>0?(m=n,g=n+o):(m=n,p=n+o)),pe(e,p,m,d,ne),se(e,t,s,r,ne,u,p),se(e,t,s,r,ne,f,m),se(e,t,s,r,ne,y,d),se(e,t,s,r,ne,_,g),l[c++]=u,l[c++]=y,l[c++]=_,l[c++]=u,l[c++]=_,l[c++]=f,p++,m++,d++,g++,u+=2,f+=2,y+=2,_+=2}const oe=b(),ae=b(),le=b(),ce=b(),he=b();function pe(e,t,r,s,n){t*=3,r*=3,s*=3,g(oe,e[t++],e[t++],e[t++]),g(ae,e[r++],e[r++],e[r++]),g(le,e[s++],e[s++],e[s++]),u(ce,ae,oe),u(he,le,oe),f(n,he,ce),d(n,n)}const me=b();function de(e,t,r,n){const i=e.stageObject,o=i.geometryRecords,a=o.length,l="absolute-height"!==t.mode;let h=0;const m=i.transformation,d=c(p(),m);for(let c=0;c<a;c+=2){const e=o[c].geometry,a=e.getMutableAttribute(K.POSITION).data,p=e.vertexAttributes.get(K.SIZE).data,u=e.vertexAttributes.get(K.MAPPOS).data,f=new H(u),_=a.length/3;let b=0,x=!1,E=0;const P=r.spatialReference;for(let i=0;i<_;i++){me[0]=a[b],me[1]=a[b+1],me[2]=a[b+2],B(f,r,t,n,fe),l&&(E+=fe.sampledElevation),V.TESTS_DISABLE_OPTIMIZATIONS?(g(ge,f.array[f.offset+0],f.array[f.offset+1],fe.z+p[b/3]),s(P)&&n.toRenderCoords(ge,P,ge),y(ge,ge,d)):(g(ge,a[b+0],a[b+1],a[b+2]),y(ge,ge,m),n.setAltitude(ge,fe.z+p[b/3]),y(ge,ge,d)),a[b]=ge[0],a[b+1]=ge[1],a[b+2]=ge[2];const e=be/n.unitInMeters;(Math.abs(me[0]-a[b])>=e||Math.abs(me[1]-a[b+1])>=e||Math.abs(me[2]-a[b+2])>=e)&&(x=!0),f.offset+=3,b+=3}x&&(e.invalidateBoundingInfo(),i.geometryVertexAttrsUpdated(o[c]),o[c+1].geometry.invalidateBoundingInfo(),i.geometryVertexAttrsUpdated(o[c+1])),h+=E/_}return h/a}const ge=b(),ue=b(),fe=new z,ye=[0,2,1],_e=[0,1,2],be=.01;export{$ as Graphics3DExtrudeSymbolLayer};
