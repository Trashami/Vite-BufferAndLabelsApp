/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import"../../../../geometry.js";import t from"../../../../core/Accessor.js";import{PositionHint as r,indexOf as i}from"../../../../core/arrayUtils.js";import s from"../../../../core/Logger.js";import{clamp as n}from"../../../../core/mathUtils.js";import{isNone as o,isSome as a,unwrap as c}from"../../../../core/maybe.js";import{unwrapUpdating as l,updating as p,isUpdating as u}from"../../../../core/maybeUpdating.js";import{whenOnce as g}from"../../../../core/reactiveUtils.js";import{getUnitString as m}from"../../../../core/unitUtils.js";import{property as f}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as d}from"../../../../core/accessorSupport/decorators/subclass.js";import{t as y,a as h,s as j}from"../../../../chunks/vec3.js";import{WhereClause as S}from"../../../../core/sql/WhereClause.js";import{projectBoundingSphere as w,load as R,project as E,projectVectorToVector as b}from"../../../../geometry/projection.js";import{create as v}from"../../../../geometry/support/aaBoundingBox.js";import{fromValues as F,expandWithNestedArray as _,expand as k}from"../../../../geometry/support/aaBoundingRect.js";import{earth as I}from"../../../../geometry/support/Ellipsoid.js";import{isWGS84 as M,isWebMercator as T}from"../../../../geometry/support/spatialReferenceUtils.js";import{project as D}from"../../../../geometry/support/webMercatorUtils.js";import G from"../../../../layers/support/FeatureFilter.js";import{objectIdFilter as C,filterInPlace as A}from"./I3SUtil.js";import x from"../../../../geometry/SpatialReference.js";const O="esri.views.3d.layers.i3s.I3SMeshViewFilter",B=s.getLogger(O);let L=class extends t{constructor(e){super(e),this._projectionEngineLoaded=!1}initialize(){g((()=>c(this.viewFilter)?.geometry||a(this.layerFilter))).then((()=>this.loadAsyncModule(import("../../../../geometry/geometryEngine.js").then((e=>{this.destroyed||(this._geometryEngine=e)})))))}get sortedObjectIds(){if(o(this.viewFilter)||o(this.viewFilter.objectIds))return null;const e=new Float64Array(this.viewFilter.objectIds);return e.sort(),e}get parsedWhereClause(){const e=a(this.viewFilter)?this.viewFilter.where:null;if(o(e)||!e)return null;try{return S.create(e,this.layerFieldsIndex)}catch(t){B.error(`Failed to parse filter where clause: ${t}`)}return null}addFilters(e,t,r,i){const s=this.sortedObjectIds;a(s)&&e.push((e=>C(s,!0,e))),this.addSqlFilter(e,this.parsedWhereClause);const n=l(this._layerMaskGeometries),o=this._geometryEngine;if(a(n)&&a(this.layerFilter)&&a(o)){const s=this.layerFilter.spatialRelationship;e.push(((e,a)=>q(o,e,a,i,t,r,n,s)))}const c=l(this._viewMaskGeometries);if(a(c)&&a(this.viewFilter)&&a(o)){const s=this.viewFilter.spatialRelationship;e.push(((e,n)=>q(o,e,n,i,t,r,c,s)))}}isMBSGeometryVisible(e,t,r){const i=l(this._layerMaskGeometries),s=this._geometryEngine;if(a(i)&&a(this.layerFilter)&&a(s)){const n=this.layerFilter.spatialRelationship,o=i[0].spatialReference||t;if(!w(e,r,N,o))return B.warnOnce("SceneLayer.mask geometry is using unsupported SpatialReference, skipping geometry filter for MBS"),!0;return V(s,N,i,o,n)}const n=l(this._viewMaskGeometries);if(a(n)&&a(this.viewFilter)&&a(s)){const i=this.viewFilter.spatialRelationship,o=n[0].spatialReference||t;if(!w(e,r,N,o))return B.warnOnce("SceneLayerView.filter.geometry is using unsupported SpatialReference, skipping geometry filter for MBS"),!0;return V(s,N,n,o,i)}return!0}get parsedGeometry(){const e=l(this._viewMaskGeometries),t=l(this._layerMaskGeometries);return o(e)||o(t)?e||t:t.concat(e)}get _layerMaskGeometries(){const e=this.layerFilter;return o(e)?null:o(this._geometryEngine)?p:"disjoint"===e.spatialRelationship?e.geometries.map((e=>({type:"polygon",rings:e.rings,spatialReference:e.spatialReference,cache:{}}))):[e.geometries.reduce(((e,t)=>(e.rings=e.rings.concat(t.rings),e)),{type:"polygon",rings:[],spatialReference:e.geometries[0].spatialReference,cache:{}})]}get _viewMaskGeometries(){if(o(this.viewFilter))return null;const{geometry:e}=this.viewFilter;if(o(e))return null;if(o(this.viewFilter)||o(this._geometryEngine))return p;const{distance:t,units:r}=this.viewFilter,i=this.viewFilter.spatialRelationship,s="mesh"===e.type?e.extent:e;if(o(t)||0===t)return W(this._geometryEngine,s,i);const n=r||m(s.spatialReference);if(s.spatialReference.isWGS84){const e=this._geometryEngine.geodesicBuffer(s,t,n);return W(this._geometryEngine,e,i)}const c=D(s,x.WGS84);if(a(c)){const e=D(this._geometryEngine.geodesicBuffer(c,t,n),s.spatialReference);return W(this._geometryEngine,e,i)}if(!this._projectionEngineLoaded&&(this.loadAsyncModule(R().then((()=>this._projectionEngineLoaded=!0))),!this._projectionEngineLoaded))return null;let l=null;try{l=E(s,x.WGS84)}catch(u){}if(l)try{l=E(this._geometryEngine.geodesicBuffer(l,t,n),s.spatialReference)}catch(u){l=null}return l||B.error(`Filter by geodesic buffer (distance) unsupported, failed to project input geometry (${s.spatialReference.wkid}) to WGS84.`),W(this._geometryEngine,l,i)}get updating(){return u(this._layerMaskGeometries)||u(this._viewMaskGeometries)}static checkSupport(e){return!o(e)&&(e.timeExtent?(B.warn("Filters with a timeExtent are not supported for mesh scene layers"),!1):!!K(e.spatialRelationship)||(B.warn(`Filters with spatialRelationship other than ${P.join(", ")} are not supported for mesh scene layers`),!1))}};e([f()],L.prototype,"layerFilter",void 0),e([f({type:G})],L.prototype,"viewFilter",void 0),e([f()],L.prototype,"layerFieldsIndex",void 0),e([f()],L.prototype,"loadAsyncModule",void 0),e([f()],L.prototype,"addSqlFilter",void 0),e([f({readOnly:!0})],L.prototype,"sortedObjectIds",null),e([f({readOnly:!0})],L.prototype,"parsedWhereClause",null),e([f({readOnly:!0})],L.prototype,"parsedGeometry",null),e([f({readOnly:!0})],L.prototype,"_layerMaskGeometries",null),e([f({readOnly:!0})],L.prototype,"_viewMaskGeometries",null),e([f()],L.prototype,"updating",null),e([f()],L.prototype,"_projectionEngineLoaded",void 0),e([f()],L.prototype,"_geometryEngine",void 0),L=e([d(O)],L);const P=(e=>e)(["contains","intersects","disjoint"]);function K(e){return null!=e&&P.includes(e)}var U;function W(e,t,s){if(o(t))return null;if("disjoint"===s&&"polygon"===t.type){const s=t.rings.length,n=t.spatialReference,o=new Array(s);for(let e=0;e<s;++e){const r=F(1/0,1/0,-1/0,-1/0);_(r,t.rings[e]),o[e]={type:"polygon",rings:[t.rings[e]],spatialReference:n,cache:{},aabr:r}}o.sort(((e,t)=>e.aabr[0]-t.aabr[0]));const a=new Set,c=new r;for(let t=0;t<o.length;++t){const r=o[t],s=r.aabr[0];a.forEach((t=>{if(s>=t.aabr[2])return void a.delete(t);if(r.aabr[1]>t.aabr[3]||r.aabr[3]<t.aabr[1]||!e.intersects(r,t))return;r.rings=r.rings.concat(t.rings),k(r.aabr,t.aabr,r.aabr),r.cache={},a.delete(t);const n=i(o,t,o.length,c);o.splice(n,1)})),a.add(r)}for(const e of o)delete e.aabr;return o}return[t]}function V(e,t,r,i,s){const n=z(e,t,i);return r.every((t=>H(e,t,n,s)!==U.DISCARD))}function q(e,t,r,i,s,n,o,a){const c=o[0].spatialReference||s.spatialReference;if(!w(r.node.mbs,n,N,c))return void B.warnOnce("SceneLayerView.filter.geometry is using unsupported SpatialReference, skipping geometry filter");const l=z(e,N,c),p=$(a,s,c,i,r.objectHandle);for(const u of o){if(0===t.length)return;switch(H(e,u,l,a)){case U.DISCARD:return void(t.length=0);case U.KEEP:continue}A(t,r.featureIds,(t=>Q(e,u,t,p)))}}!function(e){e[e.KEEP=0]="KEEP",e[e.DISCARD=1]="DISCARD",e[e.TEST=2]="TEST"}(U||(U={}));const N=[0,0,0,0];function $(e,t,r,i,s){const n=t.renderSpatialReference,o=new Map,a={type:"polygon",rings:[[[0,0,0],[0,0,0],[0,0,0],[0,0,0]]],spatialReference:r};a.rings[0][3]=a.rings[0][0];const c={indices:null,data:null,stride:0,startIndex:0,endIndex:0};let l,p;switch(e){case"intersects":l=(e,t,r)=>e.intersects(t,r)?U.KEEP:U.TEST,p=Z;break;case"contains":l=(e,t,r)=>e.contains(t,r)?U.TEST:U.DISCARD,p=Z;break;default:l=(e,t,r)=>e.disjoint(t,r)?U.TEST:U.DISCARD,p=J}return{collection:i,object:s,type:e,maskSR:r,renderSR:n,aabbCache:o,triangle:a,positions:c,triangleTest:l,geometryTest:p}}function z(e,t,r){const i={type:"point",x:t[0],y:t[1],hasZ:!1,hasM:!1,spatialReference:r},s=!M(r)&&!T(r),o=Number.isNaN(t[3])?0:n(t[3],0,2*I.radius),a=s?e.buffer(i,o,1):e.geodesicBuffer(i,o,1);return a.type="polygon",a}function H(e,t,r,i){switch(i){case"intersects":case"contains":return Z(e,t,r);case"disjoint":return J(e,t,r)}}function Z(e,t,r){return e.intersects(t,r)?e.contains(t,r)?U.KEEP:U.TEST:U.DISCARD}function J(e,t,r){return e.intersects(t,r)?e.contains(t,r)?U.DISCARD:U.TEST:U.KEEP}function Q(e,t,r,i){const{collection:s,object:n,renderSR:o,maskSR:a,geometryTest:c,aabbCache:l}=i;let p=l.get(r);if(!p){const e=s.getObjectTransform(n);s.getComponentAabb(n,r,X);const t=[[X[0],X[1],0],[X[0],X[4],0],[X[3],X[4],0],[X[3],X[1],0]];for(let r=0;r<4;++r)y(t[r],t[r],e.rotationScale),h(t[r],t[r],e.position),b(t[r],o,t[r],a);p={type:"polygon",rings:[t],spatialReference:a,cache:{}},p.rings[0][4]=p.rings[0][0],l.set(r,p)}switch(c(e,t,p)){case U.DISCARD:return!1;case U.KEEP:return!0}const{triangle:u,triangleTest:g,positions:m}=i,f=u.rings[0][0],d=u.rings[0][1],S=u.rings[0][2],w=s.getObjectTransform(n);s.getComponentPositions(n,r,m);const{indices:R,data:E,stride:v,startIndex:F,endIndex:_}=m;for(let k=F;k<_;k+=3){const r=v*R[k+0],i=v*R[k+1],s=v*R[k+2];switch(j(f,E[r+0],E[r+1],E[r+2]),j(d,E[i+0],E[i+1],E[i+2]),j(S,E[s+0],E[s+1],E[s+2]),y(f,f,w.rotationScale),y(d,d,w.rotationScale),y(S,S,w.rotationScale),h(f,f,w.position),h(d,d,w.position),h(S,S,w.position),b(f,o,f,a),b(d,o,d,a),b(S,o,S,a),g(e,t,u)){case U.DISCARD:return!1;case U.KEEP:return!0}}return"intersects"!==i.type}const X=v();export{L as I3SMeshViewFilter};
