/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as r}from"../../../chunks/tslib.es6.js";import e from"../../../core/Accessor.js";import{Identifiable as s}from"../../../core/Identifiable.js";import{destroyMaybe as o,isSome as t}from"../../../core/maybe.js";import{property as i}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as p}from"../../../core/accessorSupport/decorators/subclass.js";import{GraphicsProcessor as c}from"./graphics/GraphicsProcessor.js";import{GraphicsView as a}from"../../layers/GraphicsView.js";let h=class extends(a(e)){constructor(r){super(r),this.processor=null,this.slicePlaneEnabled=!1,this.layer=new n}initialize(){this._set("processor",new c({owner:this}))}destroy(){this._set("processor",o(this.processor))}get graphics(){return this.view.graphics}get loadedGraphics(){return this.graphics}get updating(){return!!this.processor?.updating}get symbolUpdateType(){return this.processor.graphicsCore.symbolUpdateType}getHit(r){return this.processor.getHit(r)}whenGraphicBounds(r,e){return this.processor.whenGraphicBounds(r,e)}graphicChanged(r){this.processor.graphicsCore.graphicUpdateHandler(r)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}async queryGraphics(){return this.loadedGraphics}async fetchPopupFeatures(r,e){return t(e)?e.clientGraphics:null}highlight(r){return this.processor.highlight(r)}maskOccludee(r){return this.processor.maskOccludee(r)}};r([i({readOnly:!0})],h.prototype,"graphics",null),r([i()],h.prototype,"loadedGraphics",null),r([i({readOnly:!0})],h.prototype,"updating",null),r([i({constructOnly:!0})],h.prototype,"view",void 0),r([i()],h.prototype,"processor",void 0),r([i({type:Boolean})],h.prototype,"slicePlaneEnabled",void 0),r([i()],h.prototype,"layer",void 0),h=r([p("esri.views.3d.layers.GraphicsView3D")],h);class n extends s{constructor(){super(),this.type="graphics-view-3d-dummy",this.id=this.uid}}const l=h;export{l as default};
