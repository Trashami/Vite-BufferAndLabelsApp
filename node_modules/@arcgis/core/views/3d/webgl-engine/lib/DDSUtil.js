/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{isPowerOfTwo as r}from"../../../../core/mathUtils.js";import{unwrapOrThrow as t}from"../../../../core/maybe.js";import{TextureSamplingMode as o,CompressedTextureFormat as n}from"../../../webgl/enums.js";import{Texture as a}from"../../../webgl/Texture.js";const i=e.getLogger("esri.views.3d.webgl-engine.lib.DDSUtil"),s=542327876,l=131072,m=4;function u(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function c(e){return String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255)}const h=u("DXT1"),p=u("DXT3"),d=u("DXT5"),g=31,f=0,C=1,w=2,D=3,_=4,T=7,A=20,E=21;function S(e,r,n){const{textureData:i,internalFormat:s,width:l,height:m}=t(M(n,r.hasMipmap??!1));return r.samplingMode=i.levels.length>1?o.LINEAR_MIPMAP_LINEAR:o.LINEAR,r.hasMipmap=i.levels.length>1,r.internalFormat=s,r.width=l,r.height=m,new a(e,r,i)}function M(e,t){const o=new Int32Array(e,0,g);if(o[f]!==s)return i.error("Invalid magic number in DDS header"),null;if(!(o[A]&m))return i.error("Unsupported format, must contain a FourCC code"),null;const a=o[E];let u,S;switch(a){case h:u=8,S=n.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case p:u=16,S=n.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case d:u=16,S=n.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return i.error("Unsupported FourCC code:",c(a)),null}let M=1,R=o[_],b=o[D];0==(3&R)&&0==(3&b)||(i.warn("Rounding up compressed texture size to nearest multiple of 4."),R=R+3&-4,b=b+3&-4);const x=R,X=b;let I,j;o[w]&l&&!1!==t&&(M=Math.max(1,o[T])),1===M||r(R)&&r(b)||(i.warn("Ignoring mipmaps of non power of two sized compressed texture."),M=1);let v=o[C]+4;const F=[];for(let r=0;r<M;++r)j=(R+3>>2)*(b+3>>2)*u,I=new Uint8Array(e,v,j),F.push(I),v+=j,R=Math.max(1,R>>1),b=Math.max(1,b>>1);return{textureData:{type:"compressed",levels:F},internalFormat:S,width:x,height:X}}export{S as createDDSTexture,M as createDDSTextureData};
