/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{a as i}from"../../../../chunks/vec2f64.js";import{CloudsFadeParameters as t}from"../../environment/CloudsCompositionParameters.js";import{MultipassGeometryUniforms as e}from"../core/shaderLibrary/shading/MultipassGeometryTest.glsl.js";import{MultipassTerrainUniforms as s}from"../core/shaderLibrary/shading/MultipassTerrainTest.glsl.js";import{SSRUniforms as r}from"../core/shaderLibrary/shading/ScreenSpaceReflections.glsl.js";import{RenderSlot as h}from"./RenderSlot.js";import{SceneLighting as n}from"../lighting/SceneLighting.js";class g{constructor(g,a,o){this.shadowMap=g,this.ssaoHelper=a,this.slicePlane=o,this.slot=h.OPAQUE_MATERIAL,this.hasOccludees=!1,this.enableFillLights=!0,this._inverseViewport=i(),this.oldLighting=new n,this.newLighting=new n,this._fadedLighting=new n,this._lighting=this.newLighting,this.ssr=new r,this.multipassTerrain=new s,this.multipassGeometry=new e,this.overlays=[],this.cloudsFade=new t}get camera(){return this._camera}set camera(i){this._camera=this.ssr.camera=i,this._inverseViewport[0]=1/i.fullViewport[2],this._inverseViewport[1]=1/i.fullViewport[3]}get inverseViewport(){return this._inverseViewport}get lighting(){return this._lighting}get weatherFading(){return this._lighting===this._fadedLighting}fadeLighting(i){const{oldLighting:t,newLighting:e}=this;i>=1?this._lighting=e:(this._fadedLighting.lerpLighting(t,e,i),this._lighting=this._fadedLighting)}}export{g as BindParameters};
