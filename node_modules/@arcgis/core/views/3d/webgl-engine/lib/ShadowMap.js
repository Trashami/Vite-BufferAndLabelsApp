/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import has from"../../../../core/has.js";import{clamp as t,acosClamped as e,lerp as s}from"../../../../core/mathUtils.js";import{isSome as a,disposeMaybe as r}from"../../../../core/maybe.js";import{c as i}from"../../../../chunks/mat3f64.js";import{v as c,m as h,w as o,a as n,q as _}from"../../../../chunks/mat4.js";import{c as m}from"../../../../chunks/mat4f64.js";import{s as u,j as d,b as p,l,k as f,a as x,h as T,n as g,f as b,c as w}from"../../../../chunks/vec2.js";import{a as S}from"../../../../chunks/vec2f64.js";import{k as M,c as C,o as D,m as E,s as j}from"../../../../chunks/vec3.js";import{c as v}from"../../../../chunks/vec3f64.js";import{s as z,t as R}from"../../../../chunks/vec4.js";import{c as U}from"../../../../chunks/vec4f64.js";import{ViewingMode as F}from"../../../ViewingMode.js";import{Camera as y}from"./Camera.js";import{assert as N,logWithBase as O,verify as A,rayRay2D as k}from"./Util.js";import{TextureType as L,ClearBufferBit as P,PixelFormat as B,PixelType as G,TextureWrapMode as I,TextureSamplingMode as X,TargetType as H,DepthStencilTargetType as q}from"../../../webgl/enums.js";import{FramebufferObject as Y}from"../../../webgl/FramebufferObject.js";import{Texture as V}from"../../../webgl/Texture.js";import{getGpuMemoryUsage as W}from"../../../webgl/Util.js";var J;!function(t){t[t.Highlight=0]="Highlight",t[t.Default=1]="Default"}(J||(J={}));class K{constructor(){this.camera=new y,this.lightMat=m()}}class Q{constructor(t,e){this._rctx=t,this._viewingMode=e,this._enabled=!1,this._snapshots=new Array,this._textureSize=0,this._numCascades=1,this._maxNumCascades=4,this._splitSchemeLambda=0,this._warp=!0,this._cascadeDistances=[0,0,0,0,0],this._usedCascadeDistances=U(),this._cascades=[new K,new K,new K,new K],this._maxTextureSize=Math.min(has("esri-mobile")?2048:8192,this._rctx.parameters.maxTextureSize)}get depthTexture(){return this._depthTexture}get textureSize(){return this._textureSize}get numCascades(){return this._numCascades}get cascadeDistances(){return z(this._usedCascadeDistances,this._cascadeDistances[0],this._numCascades>1?this._cascadeDistances[1]:1/0,this._numCascades>2?this._cascadeDistances[2]:1/0,this._numCascades>3?this._cascadeDistances[3]:1/0)}dispose(){this._discardDepthTexture(),this._discardAllSnapshots()}set maxCascades(e){this._maxNumCascades=t(Math.floor(e),1,4)}get maxCascades(){return this._maxNumCascades}set enabled(t){this._enabled=t,t||(this._discardDepthTexture(),this._discardAllSnapshots())}get enabled(){return this._enabled}get ready(){return this._enabled&&a(this._depthTexture)}getSnapshot(t){return this.enabled?this._snapshots[t]:null}getCascades(){for(let t=0;t<this._numCascades;++t)ut[t]=this._cascades[t];return ut.length=this._numCascades,ut}start(t,e,s){N(this.enabled),this._textureSize=this._computeTextureSize(t.fullWidth,t.fullHeight),this._ensureDepthTexture();const{near:a,far:r}=this._clampNearFar(s);this._computeCascadeDistances(r,a),this._setupMatrices(t,e);const i=t.viewMatrix,c=t.projectionMatrix;for(let h=0;h<this._numCascades;++h)this._constructCascade(h,c,i,e);this._lastOrigin=null,this.clear()}finish(t){N(this.enabled),this._rctx.bindFramebuffer(t)}getShadowMapMatrices(t){if(!this._lastOrigin||!M(t,this._lastOrigin)){this._lastOrigin=this._lastOrigin||v(),C(this._lastOrigin,t);for(let e=0;e<this._numCascades;++e){c(dt,this._cascades[e].lightMat,t);for(let t=0;t<16;++t)pt[16*e+t]=dt[t]}}return pt}takeCascadeSnapshotTo(t,e){N(this.enabled);const s=this._ensureSnapshot(e);this._bindFbo();const a=this._rctx,r=a.bindTexture(s,V.TEXTURE_UNIT_FOR_UPDATES);a.gl.copyTexSubImage2D(L.TEXTURE_2D,0,t.camera.viewport[0],t.camera.viewport[1],t.camera.viewport[0],t.camera.viewport[1],t.camera.viewport[2],t.camera.viewport[3]),a.bindTexture(r,V.TEXTURE_UNIT_FOR_UPDATES)}clear(){const t=this._rctx;this._bindFbo(),t.setClearColor(1,1,1,1),t.clearSafe(P.COLOR_BUFFER_BIT|P.DEPTH_BUFFER_BIT)}_computeTextureSize(t,e){const s=.5*Math.log(t*t+e*e)*Math.LOG2E,a=.35,r=2**Math.round(s+a);return Math.min(this._maxTextureSize,2*r)}_ensureDepthTexture(){if(a(this._depthTexture)&&this._depthTexture.descriptor.width===this._textureSize)return;this._discardDepthTexture();const t={target:L.TEXTURE_2D,pixelFormat:B.RGBA,dataType:G.UNSIGNED_BYTE,wrapMode:I.CLAMP_TO_EDGE,samplingMode:X.NEAREST,flipped:!0,width:this._textureSize,height:this._textureSize};this._depthTexture=new V(this._rctx,t),this._fbo=new Y(this._rctx,{colorTarget:H.TEXTURE,depthStencilTarget:q.DEPTH_RENDER_BUFFER,width:this._textureSize,height:this._textureSize},this._depthTexture)}_ensureSnapshot(t){let e=this._snapshots[t];if(a(e)&&e.descriptor.width===this._textureSize)return e;this._discardSnapshot(t);const s={target:L.TEXTURE_2D,pixelFormat:B.RGBA,dataType:G.UNSIGNED_BYTE,wrapMode:I.CLAMP_TO_EDGE,samplingMode:X.NEAREST,flipped:!0,width:this._textureSize,height:this._textureSize};return e=new V(this._rctx,s),this._snapshots[t]=e,e}_discardDepthTexture(){this._fbo=r(this._fbo),this._depthTexture=r(this._depthTexture)}_discardSnapshot(t){this._snapshots[t]=r(this._snapshots[t])}_discardAllSnapshots(){for(let t=0;t<this._snapshots.length;++t)this._discardSnapshot(t);this._snapshots.length=0}_bindFbo(){const t=this._rctx;t.unbindTexture(this._depthTexture),t.bindFramebuffer(this._fbo)}_constructCascade(t,e,s,a){const r=this._cascades[t],i=-this._cascadeDistances[t],o=-this._cascadeDistances[t+1],n=(e[10]*i+e[14])/Math.abs(e[11]*i+e[15]),_=(e[10]*o+e[14])/Math.abs(e[11]*o+e[15]);N(n<_);for(let c=0;c<8;++c){z(et,c%4==0||c%4==3?-1:1,c%4==0||c%4==1?-1:1,c<4?n:_,1),R(st[c],et,tt);for(let t=0;t<3;++t)st[c][t]/=st[c][3]}D(mt,st[0]),c(Z,_t,mt),r.camera.viewMatrix=Z;for(let c=0;c<8;++c)E(st[c],st[c],r.camera.viewMatrix);C(at,st[0]),C(rt,st[0]);for(let c=1;c<8;++c)for(let t=0;t<3;++t)at[t]=Math.min(at[t],st[c][t]),rt[t]=Math.max(rt[t],st[c][t]);at[2]-=200,rt[2]+=200,r.camera.near=-rt[2],r.camera.far=-at[2],this._warp?this._constructTrapezoidalProjection(s,a,r):this._constructOrthogonalProjection(r),h(r.lightMat,r.camera.projectionMatrix,r.camera.viewMatrix);const m=this._textureSize/2;r.camera.viewport[0]=t%2==0?0:m,r.camera.viewport[1]=0===Math.floor(t/2)?0:m,r.camera.viewport[2]=m,r.camera.viewport[3]=m}_constructOrthogonalProjection(t){o(t.camera.projectionMatrix,at[0],rt[0],at[1],rt[1],t.camera.near,t.camera.far)}_constructTrapezoidalProjection(t,s,a){const r=1/st[0][3],i=1/st[4][3];N(r<i);let c=r+Math.sqrt(r*i);const h=Math.sin(e(t[2]*s[0]+t[6]*s[1]+t[10]*s[2]));c/=h,Dt(st,c,h,it,ct,ht,ot,nt),Ut(it,ct,ot,nt,a.camera.projectionMatrix),a.camera.projectionMatrix[10]=2/(at[2]-rt[2]),a.camera.projectionMatrix[14]=-(at[2]+rt[2])/(at[2]-rt[2])}_setupMatrices(t,e){h($,t.projectionMatrix,t.viewMatrix),n(tt,$);const s=this._viewingMode===F.Global?t.eye:j(mt,0,0,1);_(_t,[0,0,0],[-e[0],-e[1],-e[2]],s)}_clampNearFar(t){let{near:e,far:s}=t;return e<2&&(e=2),s<2&&(s=2),e>=s&&(e=2,s=4),{near:e,far:s}}_computeCascadeDistances(t,e){this._numCascades=Math.min(1+Math.floor(O(t/e,4)),this._maxNumCascades);const a=(t-e)/this._numCascades,r=(t/e)**(1/this._numCascades);let i=e,c=e;for(let h=0;h<this._numCascades+1;++h)this._cascadeDistances[h]=s(i,c,this._splitSchemeLambda),i*=r,c+=a}get gpuMemoryUsage(){return this._snapshots.reduce(((t,e)=>t+W(e)),this._fbo?.gpuMemoryUsage??0)}get test(){const t=this;return{maxNumCascades:this._maxNumCascades,cascades:this._cascades,textureSize:this._textureSize,set splitSchemeLambda(e){t._splitSchemeLambda=e},get splitSchemeLambda(){return t._splitSchemeLambda},set warp(e){t._warp=e},get warp(){return t._warp}}}}const Z=m(),$=m(),tt=m(),et=U(),st=[];for(let Ft=0;Ft<8;++Ft)st.push(U());const at=v(),rt=v(),it=S(),ct=S(),ht=S(),ot=S(),nt=S(),_t=m(),mt=v(),ut=[],dt=m(),pt=new Float32Array(64),lt=S(),ft=S(),xt=[S(),S(),S(),S()],Tt=S(),gt=S(),bt=S(),wt=S(),St=S(),Mt=S(),Ct=S();function Dt(t,e,s,a,r,i,c,h){u(lt,0,0);for(let u=0;u<4;++u)d(lt,lt,t[u]);p(lt,lt,.25),u(ft,0,0);for(let u=4;u<8;++u)d(ft,ft,t[u]);p(ft,ft,.25),l(xt[0],t[4],t[5],.5),l(xt[1],t[5],t[6],.5),l(xt[2],t[6],t[7],.5),l(xt[3],t[7],t[4],.5);let o=0,n=f(xt[0],lt);for(let u=1;u<4;++u){const t=f(xt[u],lt);t<n&&(n=t,o=u)}x(Tt,xt[o],t[o+4]);const _=Tt[0];let m,S;Tt[0]=-Tt[1],Tt[1]=_,x(gt,ft,lt),T(gt,Tt)<0&&g(Tt,Tt),l(Tt,Tt,gt,s),b(Tt,Tt),m=S=T(x(bt,t[0],lt),Tt);for(let u=1;u<8;++u){const e=T(x(bt,t[u],lt),Tt);e<m?m=e:e>S&&(S=e)}w(a,lt),p(bt,Tt,m-e),d(a,a,bt);let M=-1,C=1,D=0,E=0;for(let u=0;u<8;++u){x(wt,t[u],a),b(wt,wt);const e=Tt[0]*wt[1]-Tt[1]*wt[0];e>0?e>M&&(M=e,D=u):e<C&&(C=e,E=u)}A(M>0,"leftArea"),A(C<0,"rightArea"),p(St,Tt,m),d(St,St,lt),p(Mt,Tt,S),d(Mt,Mt,lt),Ct[0]=-Tt[1],Ct[1]=Tt[0];const j=k(a,t[E],Mt,d(bt,Mt,Ct),1,r),v=k(a,t[D],Mt,bt,1,i),z=k(a,t[D],St,d(bt,St,Ct),1,c),R=k(a,t[E],St,bt,1,h);A(j,"rayRay"),A(v,"rayRay"),A(z,"rayRay"),A(R,"rayRay")}function Et(t,e){return 3*e+t}const jt=S();function vt(t,e){return u(jt,t[e],t[e+3]),jt}const zt=S(),Rt=i();function Ut(t,e,s,a,r){x(zt,s,a),p(zt,zt,.5),Rt[0]=zt[0],Rt[1]=zt[1],Rt[2]=0,Rt[3]=zt[1],Rt[4]=-zt[0],Rt[5]=0,Rt[6]=zt[0]*zt[0]+zt[1]*zt[1],Rt[7]=zt[0]*zt[1]-zt[1]*zt[0],Rt[8]=1,Rt[Et(0,2)]=-T(vt(Rt,0),t),Rt[Et(1,2)]=-T(vt(Rt,1),t);let i=T(vt(Rt,0),s)+Rt[Et(0,2)],c=T(vt(Rt,1),s)+Rt[Et(1,2)],h=T(vt(Rt,0),a)+Rt[Et(0,2)],o=T(vt(Rt,1),a)+Rt[Et(1,2)];i=-(i+h)/(c+o),Rt[Et(0,0)]+=Rt[Et(1,0)]*i,Rt[Et(0,1)]+=Rt[Et(1,1)]*i,Rt[Et(0,2)]+=Rt[Et(1,2)]*i,i=1/(T(vt(Rt,0),s)+Rt[Et(0,2)]),c=1/(T(vt(Rt,1),s)+Rt[Et(1,2)]),Rt[Et(0,0)]*=i,Rt[Et(0,1)]*=i,Rt[Et(0,2)]*=i,Rt[Et(1,0)]*=c,Rt[Et(1,1)]*=c,Rt[Et(1,2)]*=c,Rt[Et(2,0)]=Rt[Et(1,0)],Rt[Et(2,1)]=Rt[Et(1,1)],Rt[Et(2,2)]=Rt[Et(1,2)],Rt[Et(1,2)]+=1,i=T(vt(Rt,1),e)+Rt[Et(1,2)],c=T(vt(Rt,2),e)+Rt[Et(2,2)],h=T(vt(Rt,1),s)+Rt[Et(1,2)],o=T(vt(Rt,2),s)+Rt[Et(2,2)],i=-.5*(i/c+h/o),Rt[Et(1,0)]+=Rt[Et(2,0)]*i,Rt[Et(1,1)]+=Rt[Et(2,1)]*i,Rt[Et(1,2)]+=Rt[Et(2,2)]*i,i=T(vt(Rt,1),e)+Rt[Et(1,2)],c=T(vt(Rt,2),e)+Rt[Et(2,2)],h=-c/i,Rt[Et(1,0)]*=h,Rt[Et(1,1)]*=h,Rt[Et(1,2)]*=h,r[0]=Rt[0],r[1]=Rt[1],r[2]=0,r[3]=Rt[2],r[4]=Rt[3],r[5]=Rt[4],r[6]=0,r[7]=Rt[5],r[8]=0,r[9]=0,r[10]=1,r[11]=0,r[12]=Rt[6],r[13]=Rt[7],r[14]=0,r[15]=Rt[8]}export{Q as ShadowMap,J as SnapshotSlot};
