/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import t from"../../../../../core/Evented.js";import{f as e,e as s,t as i}from"../../../../../chunks/mat3.js";import{c as a}from"../../../../../chunks/mat3f64.js";import{m as r}from"../../../../../chunks/mat4.js";import{c as o}from"../../../../../chunks/mat4f64.js";import{s as n}from"../../../../../chunks/vec3.js";import{c as h}from"../../../../../chunks/vec3f64.js";import{BufferViewMat4f64 as l,BufferViewVec3f64 as c,BufferViewMat3f as f,BufferViewVec2f as m,BufferViewVec4f64 as g,BufferViewVec4f as d,BufferViewUint8 as _,BufferViewVec4u8 as T}from"../../../../../geometry/support/buffer/BufferView.js";import{scaleFromMatrix as u}from"../../../support/mathUtils.js";import{newLayout as L}from"../../../support/buffer/InterleavedLayout.js";import{assert as A}from"../Util.js";import{VertexAttribute as E}from"../VertexAttribute.js";var O;function F(t){let e=L().mat4f64(E.LOCALTRANSFORM).mat4f64(E.GLOBALTRANSFORM).vec4f64(E.BOUNDINGSPHERE).vec3f64(E.MODELORIGIN).mat3f(E.MODEL).mat3f(E.MODELNORMAL).vec2f(E.MODELSCALEFACTORS);return t.includes("color")&&(e=e.vec4f(E.COLOR)),t.includes("featureAttribute")&&(e=e.vec4f(E.FEATUREATTRIBUTE)),e=e.u8(E.STATE).u8(E.LODLEVEL),t.includes(E.OBJECTANDLAYERIDCOLOR)&&(e=e.vec4u8(E.OBJECTANDLAYERIDCOLOR)),e.alignTo(8),e}!function(t){t[t.ALLOCATED=1]="ALLOCATED",t[t.DEFAULT_ACTIVE=2]="DEFAULT_ACTIVE",t[t.VISIBLE=4]="VISIBLE",t[t.HIGHLIGHT=8]="HIGHLIGHT",t[t.HIGHLIGHT_ACTIVE=16]="HIGHLIGHT_ACTIVE",t[t.REMOVE=32]="REMOVE",t[t.TRANSFORM_CHANGED=64]="TRANSFORM_CHANGED",t[t.ACTIVE=18]="ACTIVE"}(O||(O={}));class v{constructor(t){this.localTransform=t.getField(E.LOCALTRANSFORM,l),this.globalTransform=t.getField(E.GLOBALTRANSFORM,l),this.modelOrigin=t.getField(E.MODELORIGIN,c),this.model=t.getField(E.MODEL,f),this.modelNormal=t.getField(E.MODELNORMAL,f),this.modelScaleFactors=t.getField(E.MODELSCALEFACTORS,m),this.boundingSphere=t.getField(E.BOUNDINGSPHERE,g),this.color=t.getField(E.COLOR,d),this.featureAttribute=t.getField(E.FEATUREATTRIBUTE,d),this.state=t.getField(E.STATE,_),this.lodLevel=t.getField(E.LODLEVEL,_),this.objectAndLayerIdColor=t.getField(E.OBJECTANDLAYERIDCOLOR,T)}}class M extends t{constructor(t,e){super(),this._capacity=0,this._size=0,this._next=0,this._buffer=null,this._view=null,this._layout=F(t),this._shaderTransformation=e}get capacity(){return this._capacity}get size(){return this._size}get buffer(){return this._buffer.buffer}get view(){return this._view}addInstance(){this._size+1>this._capacity&&this._grow();const t=this._findSlot();return this._view.state.set(t,O.ALLOCATED),this._size++,this.emit("instance-added",{index:t}),t}removeInstance(t){const e=this._view.state;A(t>=0&&t<this._capacity&&e.get(t)&O.ALLOCATED,"invalid instance handle"),this._getStateFlag(t,O.ACTIVE)?this._setStateFlags(t,O.REMOVE):this.freeInstance(t),this.emit("instance-removed",{index:t})}freeInstance(t){const e=this._view.state;A(t>=0&&t<this._capacity&&e.get(t)&O.ALLOCATED,"invalid instance handle"),e.set(t,0),this._size--}setLocalTransform(t,e,s=!0){this._view.localTransform.setMat(t,e),s&&this.updateModelTransform(t)}getLocalTransform(t,e){this._view.localTransform.getMat(t,e)}setGlobalTransform(t,e,s=!0){this._view.globalTransform.setMat(t,e),s&&this.updateModelTransform(t)}getGlobalTransform(t,e){this._view.globalTransform.getMat(t,e)}updateModelTransform(t){const a=this._view,o=C,h=b;a.localTransform.getMat(t,R),a.globalTransform.getMat(t,w);const l=r(w,w,R);n(o,l[12],l[13],l[14]),a.modelOrigin.setVec(t,o),e(h,l),a.model.setMat(t,h);const c=u(C,l);c.sort(),a.modelScaleFactors.set(t,0,c[1]),a.modelScaleFactors.set(t,1,c[2]),s(h,h),i(h,h),a.modelNormal.setMat(t,h),this._setStateFlags(t,O.TRANSFORM_CHANGED),this.emit("instance-transform-changed",{index:t})}getModelTransform(t,e){const s=this._view;s.model.getMat(t,b),s.modelOrigin.getVec(t,C),e[0]=b[0],e[1]=b[1],e[2]=b[2],e[3]=0,e[4]=b[3],e[5]=b[4],e[6]=b[5],e[7]=0,e[8]=b[6],e[9]=b[7],e[10]=b[8],e[11]=0,e[12]=C[0],e[13]=C[1],e[14]=C[2],e[15]=1}applyShaderTransformation(t,e){this._shaderTransformation&&this._shaderTransformation.applyTransform(this,t,e)}getCombinedModelTransform(t,e){return this.getModelTransform(t,e),this._shaderTransformation&&this._shaderTransformation.applyTransform(this,t,e),e}getCombinedLocalTransform(t,e){return this._view.localTransform.getMat(t,e),this._shaderTransformation&&this._shaderTransformation.applyTransform(this,t,e),e}getCombinedMaxScaleFactor(t){let e=this._view.modelScaleFactors.get(t,1);if(this._shaderTransformation){const s=this._shaderTransformation.scaleFactor(C,this,t);e*=Math.max(s[0],s[1],s[2])}return e}getCombinedMedianScaleFactor(t){let e=this._view.modelScaleFactors.get(t,0);if(this._shaderTransformation){const s=this._shaderTransformation.scaleFactor(C,this,t);e*=I(s[0],s[1],s[2])}return e}getModel(t,e){this._view.model.getMat(t,e)}setFeatureAttribute(t,e){this._view.featureAttribute.setVec(t,e)}getFeatureAttribute(t,e){this._view.featureAttribute.getVec(t,e)}setColor(t,e){this._view.color.setVec(t,e)}setObjectAndLayerIdColor(t,e){this._view.objectAndLayerIdColor.setVec(t,e)}getColor(t,e){this._view.color.getVec(t,e)}setVisible(t,e){e!==this.getVisible(t)&&(this._setStateFlag(t,O.VISIBLE,e),this.emit("instance-visibility-changed",{index:t}))}getVisible(t){return this._getStateFlag(t,O.VISIBLE)}setHighlight(t,e){e!==this.getHighlight(t)&&(this._setStateFlag(t,O.HIGHLIGHT,e),this.emit("instance-highlight-changed",{index:t}))}getHighlight(t){return this._getStateFlag(t,O.HIGHLIGHT)}getState(t){return this._view.state.get(t)}getLodLevel(t){return this._view.lodLevel.get(t)}countFlags(t){let e=0;for(let s=0;s<this._capacity;++s){this.getState(s)&t&&++e}return e}_setStateFlags(t,e){const s=this._view.state;e=s.get(t)|e,s.set(t,e)}_clearStateFlags(t,e){const s=this._view.state;e=s.get(t)&~e,s.set(t,e)}_setStateFlag(t,e,s){s?this._setStateFlags(t,e):this._clearStateFlags(t,e)}_getStateFlag(t,e){return!!(this._view.state.get(t)&e)}_grow(){const t=Math.max(S,Math.floor(this._capacity*p)),e=this._layout.createBuffer(t);if(this._buffer){const t=new Uint8Array(this._buffer.buffer);new Uint8Array(e.buffer).set(t)}this._capacity=t,this._buffer=e,this._view=new v(this._buffer)}_findSlot(){const t=this._view.state;let e=this._next;for(;t.get(e)&O.ALLOCATED;)e=e+1===this._capacity?0:e+1;return this._next=e+1===this._capacity?0:e+1,e}}function I(t,e,s){return Math.max(Math.min(t,e),Math.min(Math.max(t,e),s))}const S=1024,p=2,C=h(),b=a(),R=o(),w=o();export{M as InstanceData,v as InstanceDataView,O as StateFlags};
