/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{isNone as t}from"../../../../core/maybe.js";import{s as e,k as r}from"../../../../chunks/vec2.js";import{a as s}from"../../../../chunks/vec2f64.js";import{isVec2 as i}from"../../../../core/libs/gl-matrix-2/types/vec2.js";import{newLayout as o}from"../../support/buffer/InterleavedLayout.js";import{ShaderOutput as a}from"../core/shaderLibrary/ShaderOutput.js";import n from"../lib/GLMaterial.js";import{Material as u}from"../lib/Material.js";import{RenderSlot as c}from"../lib/RenderSlot.js";import{VertexAttribute as l}from"../lib/VertexAttribute.js";import{writePosition as f,writeBufferFloat as m}from"./internal/bufferWriterUtils.js";import{HeatmapDensityPassParameters as p,HeatmapDensityTechniqueConfiguration as h,HeatmapDensityTechnique as d}from"../shaders/HeatmapDensityTechnique.js";export{RadiusMode}from"../shaders/HeatmapDensityTechnique.js";const T=2;class b extends p{constructor(){super(...arguments),this.isAttributeDriven=!1,this.usesHalfFloats=!1}}class A extends u{constructor(t){super(t,new b),this._configuration=new h}requiresSlot(t,e){return t===c.DRAPED_MATERIAL&&e===a.Color}getConfiguration(){return this._configuration.isAttributeDriven=this.parameters.isAttributeDriven,this._configuration.usesHalfFloat=this.parameters.usesHalfFloats,this._configuration}createGLMaterial(t){return new g(t)}intersect(s,o,a,n,u,c,f,m,p){if(t(p)||!i(c))return;const h=s.vertexAttributes.get(l.POSITION),{parameters:d}=this,{searchRadius:b}=d,{screenToWorldRatio:A}=s,g=b*A+T*A,I=g*g,v=h.data.length/h.size;for(let t=0;t<v;t++){const s=t*h.size,i=e(R,h.data[s],h.data[s+1]);r(i,c)<I&&f(p.dist,p.normal,-1,!1)}}createBufferWriter(){return new I(this.parameters.isAttributeDriven?j:v)}}class g extends n{beginSlot(t){return this.ensureTechnique(d,t)}}class I{constructor(t){this.vertexBufferLayout=t}allocate(t){return this.vertexBufferLayout.createBuffer(t)}elementCount(t){return t.indices.get(l.POSITION).length*O}write(t,e,r,s,i){f(r.indices.get(l.POSITION),r.vertexAttributes.get(l.POSITION).data,t,s.position,i,O);const o=r.indices.get(l.POSITION).length,a=s.uv0;let n=i;for(let c=0;c<o;++c)a.setValues(n++,-1,-1),a.setValues(n++,1,-1),a.setValues(n++,1,1),a.setValues(n++,1,1),a.setValues(n++,-1,1),a.setValues(n++,-1,-1);const u="featureAttribute"in s?s.featureAttribute:null;u&&m(r.indices.get(l.FEATUREATTRIBUTE),r.vertexAttributes.get(l.FEATUREATTRIBUTE).data,u,i,O)}}const v=o().vec3f(l.POSITION).vec2f(l.UV0),j=v.clone().f32(l.FEATUREATTRIBUTE),O=6;function x(t){return t instanceof A}const R=s();export{A as HeatmapDensityMaterial,b as HeatmapDensityMaterialParameters,x as isHeatMapDensityMaterial};
