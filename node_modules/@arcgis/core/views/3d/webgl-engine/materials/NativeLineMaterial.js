/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../../../../core/Logger.js";import{isSome as t,isNone as r}from"../../../../core/maybe.js";import{createRenderScreenPointArray3 as s}from"../../../../core/screenUtils.js";import{c as i}from"../../../../chunks/vec2.js";import{s as o,b as n,e as a,g as c,a as l,c as u,l as p,i as f,m}from"../../../../chunks/vec3.js";import{c as h}from"../../../../chunks/vec3f64.js";import{O as d}from"../../../../chunks/vec4f64.js";import{PlaneIndex as g}from"../../../../geometry/support/frustum.js";import{create as _,distance2 as A,fromPoints as O,closestLineSegmentPoint as S}from"../../../../geometry/support/lineSegment.js";import{create as j,fromPoints as P,signedDistance as T,normal as y}from"../../../../geometry/support/plane.js";import{BufferViewVec3f as b,BufferViewVec2f as x}from"../../../../geometry/support/buffer/BufferView.js";import{ShaderOutput as R}from"../core/shaderLibrary/ShaderOutput.js";import{computeAttachmentOriginLines as v}from"../lib/geometryDataUtils.js";import N from"../lib/GLMaterial.js";import{Material as E,MaterialParameters as I}from"../lib/Material.js";import{RenderSlot as L}from"../lib/RenderSlot.js";import{isTranslationMatrix as w}from"../lib/Util.js";import{VertexAttribute as C}from"../lib/VertexAttribute.js";import{writeDefaultAttributes as U}from"./internal/bufferWriterUtils.js";import{PositionColorLayout as B,PositionLayout as V,DefaultBufferWriter as M}from"./internal/DefaultBufferWriter.js";import{intersectDrapedRenderLineGeometry as D}from"./internal/MaterialUtil.js";import{isInstanceHidden as k}from"./renderers/utils.js";import{NativeLineTechnique as q}from"../shaders/NativeLineTechnique.js";import{NativeLineTechniqueConfiguration as G}from"../shaders/NativeLineTechniqueConfiguration.js";var X;!function(e){e[e.START=0]="START",e[e.END=1]="END"}(X||(X={}));class F extends E{constructor(e){super(e,new Q),this._configuration=new G}getConfiguration(e,r){this._configuration.output=e,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.hasVertexColors=this.parameters.hasVertexColors,this._configuration.transparent=this.parameters.color[3]<1||this.parameters.width<1,this._configuration.draped=r.slot===L.DRAPED_MATERIAL;const s=t(this.parameters.stipplePattern);return this._configuration.stippleEnabled=s,this._configuration.stippleOffColorEnabled=s&&t(this.parameters.stippleOffColor),this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.stipplePreferContinuous=this.parameters.stipplePreferContinuous,this._configuration}intersect(e,r,s,i,o,n,a,c,l){t(l)?D(e,i,l,n,1,a):this._intersectLineGeometry(e,r,s,i,a)}_intersectLineGeometry(t,r,s,m,h){if(!m.options.selectionMode||k(r))return;if(!w(s))return void e.getLogger("esri.views.3d.webgl-engine.materials.NativeLineMaterial").error("intersection assumes a translation-only matrix");const d=t.vertexAttributes.get(C.POSITION).data,_=m.camera,j=ie;i(j,m.point);const b=2;o(oe[0],j[0]-b,j[1]+b,0),o(oe[1],j[0]+b,j[1]+b,0),o(oe[2],j[0]+b,j[1]-b,0),o(oe[3],j[0]-b,j[1]-b,0);for(let e=0;e<4;e++)if(!_.unprojectFromRenderScreen(oe[e],ne[e]))return;P(_.eye,ne[0],ne[1],ae),P(_.eye,ne[1],ne[2],ce),P(_.eye,ne[2],ne[3],le),P(_.eye,ne[3],ne[0],ue);let x=Number.MAX_VALUE,R=0;for(let e=0;e<d.length-5;e+=3){if(z[0]=d[e]+s[12],z[1]=d[e+1]+s[13],z[2]=d[e+2]+s[14],J[0]=d[e+3]+s[12],J[1]=d[e+4]+s[13],J[2]=d[e+5]+s[14],T(ae,z)<0&&T(ae,J)<0||T(ce,z)<0&&T(ce,J)<0||T(le,z)<0&&T(le,J)<0||T(ue,z)<0&&T(ue,J)<0)continue;if(_.projectToRenderScreen(z,Z),_.projectToRenderScreen(J,$),Z[2]<0&&$[2]>0){n(K,z,J);const e=_.frustum,t=-T(e[g.NEAR],z)/a(K,y(e[g.NEAR]));c(K,K,t),l(z,z,K),_.projectToRenderScreen(z,Z)}else if(Z[2]>0&&$[2]<0){n(K,J,z);const e=_.frustum,t=-T(e[g.NEAR],J)/a(K,y(e[g.NEAR]));c(K,K,t),l(J,J,K),_.projectToRenderScreen(J,$)}else if(Z[2]<0&&$[2]<0)continue;Z[2]=0,$[2]=0;const t=A(O(Z,$,re),j);t<x&&(x=t,u(ee,z),u(te,J),R=e/3)}const v=m.rayBegin,N=m.rayEnd;if(x<b*b){let e=Number.MAX_VALUE;if(S(O(ee,te,re),O(v,N,se),Y)){n(Y,Y,v);const t=p(Y);c(Y,Y,1/t),e=t/f(v,N)}h(e,Y,R,!1)}}computeAttachmentOrigin(e,t){const r=e.vertexAttributes;if(!r)return!1;const s=r.get(C.POSITION);return v(s,null,!1,t)}requiresSlot(e,t){return!(t!==R.Color&&t!==R.Highlight&&t!==R.ObjectAndLayerIdColor||e!==L.OPAQUE_MATERIAL&&e!==L.DRAPED_MATERIAL)}createGLMaterial(e){return new W(e)}createBufferWriter(){const e=this.parameters.hasVertexColors?B:V;return r(this.parameters.stipplePattern)?new M(e):new H(e.clone().vec3f(C.AUXPOS1).vec2f(C.UV0))}}class W extends N{constructor(){super(...arguments),this._stipplePattern=null}dispose(){super.dispose(),this._stippleTextureRepository.release(this._stipplePattern),this._stipplePattern=null}_updateOccludeeState(e){e.hasOccludees!==this._material.parameters.hasOccludees&&this._material.setParameters({hasOccludees:e.hasOccludees})}beginSlot(e){this._output===R.Color&&this._updateOccludeeState(e);const t=this._material.parameters.stipplePattern;return this._stipplePattern!==t&&(this._material.setParameters(this._stippleTextureRepository.swap(this._stipplePattern,t)),this._stipplePattern=t),this.ensureTechnique(q,e)}}class H{constructor(e){this.vertexBufferLayout=e}allocate(e){return this.vertexBufferLayout.createBuffer(e)}elementCount(e){return e.indices.get(C.POSITION).length}write(e,t,r,s,i){U(r,this.vertexBufferLayout,e,t,s,i),this._writeAuxpos1(e,r,s,i),this._writeUV0(e,r,s,i)}_writeAuxpos1(e,t,r,s){const i=r.getField(C.AUXPOS1,b),o=t.indices.get(C.POSITION),n=t.vertexAttributes.get(C.POSITION).data,a=e,c=i.typedBufferStride,l=i.typedBuffer;s*=c;for(let u=0;u<o.length-1;u+=2)for(const e of[1,0]){const t=3*o[u+e],r=n[t],i=n[t+1],p=n[t+2],f=a[0]*r+a[4]*i+a[8]*p+a[12],m=a[1]*r+a[5]*i+a[9]*p+a[13],h=a[2]*r+a[6]*i+a[10]*p+a[14];l[s]=f,l[s+1]=m,l[s+2]=h,s+=c}}_writeUV0(e,t,r,s){const i=r.getField(C.UV0,x),n=t.indices.get(C.POSITION),a=t.vertexAttributes.get(C.POSITION).data,c=t.vertexAttributes.get(C.DISTANCETOSTART)?.data,l=i.typedBufferStride,p=i.typedBuffer;let h=0;p[s*=l]=X.START,p[s+1]=h,s+=l;const d=3*n[0],g=o(z,a[d],a[d+1],a[d+2]);e&&m(g,g,e);const _=J,A=n.length-1;let O=1;const S=c?(e,t,r)=>h=c[r]:(e,t,r)=>h+=f(e,t);for(let f=1;f<A;f+=2){const t=3*n[f];o(_,a[t],a[t+1],a[t+2]),e&&m(_,_,e),S(g,_,O++);for(let e=0;e<2;++e)p[s]=1-e,p[s+1]=h,s+=l;u(g,_)}const j=3*n[A];o(_,a[j],a[j+1],a[j+2]),e&&m(_,_,e),S(g,_,O),p[s]=X.END,p[s+1]=h}}class Q extends I{constructor(){super(...arguments),this.color=d,this.hasVertexColors=!1,this.hasSlicePlane=!1,this.width=1,this.stipplePreferContinuous=!0,this.hasOccludees=!1,this.stippleTexture=null}}const z=h(),J=h(),K=h(),Y=h(),Z=s(),$=s(),ee=h(),te=h(),re=_(),se=_(),ie=h(),oe=[s(),s(),s(),s()],ne=[h(),h(),h(),h()],ae=j(),ce=j(),le=j(),ue=j();export{F as NativeLineMaterial,Q as Parameters};
