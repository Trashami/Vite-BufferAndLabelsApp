/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import{ViewingMode as t}from"../../../ViewingMode.js";import{ShaderOutput as o}from"../core/shaderLibrary/ShaderOutput.js";import{PBRMode as r}from"../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js";import{WaterDistortionPassParameters as i}from"../core/shaderLibrary/shading/WaterDistortion.glsl.js";import{doublePrecisionRequiresObfuscation as s}from"../core/shaderLibrary/util/DoublePrecision.glsl.js";import{ReloadableShaderModule as a}from"../core/shaderTechnique/ReloadableShaderModule.js";import{ShaderTechnique as n}from"../core/shaderTechnique/ShaderTechnique.js";import{parameter as p}from"../core/shaderTechnique/ShaderTechniqueConfiguration.js";import{Default3D as l}from"../lib/DefaultVertexAttributeLocations.js";import{blendingDefault as c,oitBlending as u,oitDepthTest as h,oitDepthWrite as d,getOITPolygonOffset as f}from"../lib/OrderIndependentTransparency.js";import{Program as m}from"../lib/Program.js";import{TransparencyPassType as y}from"../lib/TransparencyPassType.js";import{DefaultTechniqueConfiguration as b}from"./DefaultTechniqueConfiguration.js";import{W as g}from"../../../../chunks/WaterSurface.glsl.js";import{ContextType as v}from"../../../webgl/context-util.js";import{makePipelineState as j,defaultDepthWriteParams as S,defaultColorWriteParams as T}from"../../../webgl/renderState.js";class P extends i{}class O extends n{initializeConfiguration(e,o){o.hasWebGL2Context=e.rctx.type===v.WEBGL2,o.spherical=e.viewingMode===t.Global,o.doublePrecisionRequiresObfuscation=s(e.rctx)}initializeProgram(e){return new m(e.rctx,O.shader.get().build(this.configuration),l)}_setPipelineState(e){const t=this.configuration,r=e===y.NONE,i=e===y.FrontFace;return j({blending:t.output!==o.Normal&&t.output!==o.Highlight&&t.transparent?r?c:u(e):null,depthTest:{func:h(e)},depthWrite:r?t.writeDepth&&S:d(e),colorWrite:T,polygonOffset:r||i?null:f(t.enableOffset)})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}O.shader=new a(g,(()=>import("../shaders/WaterSurface.glsl.js")));class w extends b{constructor(){super(...arguments),this.output=o.Color,this.transparencyPassType=y.NONE,this.spherical=!1,this.receiveShadows=!1,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!1,this.hasScreenSpaceReflections=!1,this.doublePrecisionRequiresObfuscation=!1,this.hasCloudsReflections=!1,this.isDraped=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}e([p({count:o.COUNT})],w.prototype,"output",void 0),e([p({count:y.COUNT})],w.prototype,"transparencyPassType",void 0),e([p()],w.prototype,"spherical",void 0),e([p()],w.prototype,"receiveShadows",void 0),e([p()],w.prototype,"hasSlicePlane",void 0),e([p()],w.prototype,"transparent",void 0),e([p()],w.prototype,"enableOffset",void 0),e([p()],w.prototype,"writeDepth",void 0),e([p()],w.prototype,"hasScreenSpaceReflections",void 0),e([p()],w.prototype,"doublePrecisionRequiresObfuscation",void 0),e([p()],w.prototype,"hasCloudsReflections",void 0),e([p()],w.prototype,"isDraped",void 0),e([p()],w.prototype,"hasMultipassTerrain",void 0),e([p()],w.prototype,"cullAboveGround",void 0),e([p({constValue:r.Water})],w.prototype,"pbrMode",void 0),e([p({constValue:!0})],w.prototype,"useCustomDTRExponentForWater",void 0),e([p({constValue:!0})],w.prototype,"highStepCount",void 0),e([p({constValue:!1})],w.prototype,"useFillLights",void 0);export{P as WaterMaterialPassParameters,O as WaterTechnique,w as WaterTechniqueConfiguration};
