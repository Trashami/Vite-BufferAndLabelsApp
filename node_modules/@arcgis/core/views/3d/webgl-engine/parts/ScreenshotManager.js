/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{disposeMaybe as e}from"../../../../core/maybe.js";import{createResolver as t}from"../../../../core/promiseUtils.js";import{d as r}from"../../../../chunks/vec4f64.js";import{AutoDisposable as s}from"../lib/AutoDisposable.js";import{RenderRequestType as i,Decorations as o}from"../lib/basicInterfaces.js";import{resampleHermite as n}from"../../../support/screenshotUtils.js";import{PixelFormat as a,DataType as h,TargetType as c,DepthStencilTargetType as l}from"../../../webgl/enums.js";import{FramebufferObject as d}from"../../../webgl/FramebufferObject.js";import{createEmptyImageData as f}from"../../../../core/imageUtils.js";class u{constructor(e,t){this.viewCamera=e,this.frameHasDecorations=t}}class m extends s{constructor(e,t,r,s){super(),this._rctx=e,this._renderFunctions=t,this._forceCameraHook=r,this._disposeOffscreenBuffers=s,this.supersample=!0,this._screenshotQueue=new Array}dispose(){this._rctx=null}async takeScreenshot(e){await this._renderFunctions.prepareOverlay(),this._renderFunctions.requestRenderScene(i.BACKGROUND);const r=t();return this._screenshotQueue.push({settings:e,resolver:r}),r.promise}update(e,t){for(const r of this._screenshotQueue){if(this.isDisposed){r.resolver.reject();continue}const s={...r.settings,pixelRatio:r.settings.pixelRatio*e.viewCamera.pixelRatio},i=this._renderScreenshot(e,s,t);r.resolver(i)}this._screenshotQueue.length=0}_renderScreenshotOverlay(e,t,r){e.width=t.width,e.height=t.height;const s=e.getContext("2d"),i=r.pixelRatio;return s.save(),s.translate(0,t.height),s.scale(1,-1),r.region&&s.translate(-r.region.x,-r.region.y),s.scale(i,i),t=this._renderFunctions.renderOverlay(e,t),s.restore(),t}_readbackScreenshot(e,t){return e.resample?this._readbackScreenshotResampled(e,t):this._readbackScreenshotImmediate(e,t)}_readbackScreenshotResampled(e,t){const{framebufferWidth:r,framebufferHeight:s,region:i,resample:o}=e,c=this._ensureScreenshotEncodeCanvas();let l=f(r,s,c);this._rctx.gl.readPixels(0,0,r,s,a.RGBA,h.UNSIGNED_BYTE,new Uint8Array(l.data.buffer)),t(),l=this._renderScreenshotOverlay(c,l,{...e,region:null});const d=f(i.width,i.height,c);return n(l,d,!0,o.region.x,s-(o.region.y+o.region.height),o.region.width,o.region.height)}_readbackScreenshotImmediate(e,t){const{framebufferHeight:r,region:s}=e,i=this._ensureScreenshotEncodeCanvas(),o=f(s.width,s.height,i);return this._rctx.gl.readPixels(s.x,r-(s.y+s.height),s.width,s.height,a.RGBA,h.UNSIGNED_BYTE,new Uint8Array(o.data.buffer)),t(),this._renderScreenshotOverlay(i,o,e)}_renderScreenshot(t,s,i){let n=null,a=null;const h=t.viewCamera,{framebufferWidth:f,framebufferHeight:u}=s;let m=!1;const _=s.disableDecorations&&t.frameHasDecorations,g=f!==h.fullWidth||u!==h.fullHeight,p=s.ignorePadding&&h.pixelRatio!==s.pixelRatio,b=g||_||p||s.objectAndLayerIdColor;if(s.objectAndLayerIdColor&&(a=new d(this._rctx,{width:f,height:u,colorTarget:c.TEXTURE,depthStencilTarget:l.DEPTH_STENCIL_RENDER_BUFFER})),b){const e=h.clone();if(s.ignorePadding){const t=r(e.padding);for(let r=0;r<4;r++)t[r]=Math.round(t[r]/e.pixelRatio*s.pixelRatio);e.padding=t}e.fullWidth=f,e.fullHeight=u,e.pixelRatio=s.pixelRatio;const t=h.fovX-e.fovX,_=h.fovY-e.fovY;t<0&&t<_?e.fovX=h.fovX:_<0&&_<t&&(e.fovY=h.fovY),this._forceCameraHook(e),m=!0,n=new d(this._rctx,{width:e.fullWidth,height:e.fullHeight,colorTarget:c.TEXTURE,depthStencilTarget:l.DEPTH_STENCIL_RENDER_BUFFER}),this._renderFunctions.renderScene(n,a,e,s.disableDecorations?o.OFF:o.ON,i),this._disposeOffscreenBuffers()}const x=()=>{this._rctx.bindFramebuffer(null),e(n)},v=this._readbackScreenshot(s,x);x();let E=null;if(s.objectAndLayerIdColor){const t=()=>{this._rctx.bindFramebuffer(null),e(a)};this._rctx.bindFramebuffer(a),E=this._readbackScreenshot(s,t),this._rctx.bindFramebuffer(null),t()}if(b&&!this._rctx.contextAttributes.alpha)for(let e=3;e<v.data.length;e+=4)v.data[e]=255;if(E&&!this._rctx.contextAttributes.alpha)for(let e=3;e<E.data.length;e+=4)E.data[e]=255;return m&&this._forceCameraHook(h),[v,E]}_ensureScreenshotEncodeCanvas(){return this._screenshotEncodeCanvas||(this._screenshotEncodeCanvas=document.createElement("canvas")),this._screenshotEncodeCanvas}}export{u as ScreenshotContext,m as ScreenshotManager};
