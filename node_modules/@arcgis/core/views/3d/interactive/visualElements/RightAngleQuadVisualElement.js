/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../../../../core/Handles.js";import{isSome as t}from"../../../../core/maybe.js";import{watch as i}from"../../../../core/reactiveUtils.js";import{f as r,k as s}from"../../../../chunks/mat4.js";import{c as a}from"../../../../chunks/mat4f64.js";import{i as o,n as l,b as n,c as u,k as h,a as d}from"../../../../chunks/vec3.js";import{c as _,Z as c}from"../../../../chunks/vec3f64.js";import{c as m}from"../../../../chunks/vec4.js";import{f as p}from"../../../../chunks/vec4f32.js";import{sv3d as M}from"../../../../geometry/support/vectorStacks.js";import{Object3DVisualElement as g}from"./Object3DVisualElement.js";import{Geometry as f}from"../../webgl-engine/lib/Geometry.js";import{createPolylineGeometry as O}from"../../webgl-engine/lib/GeometryUtil.js";import{RenderOccludedFlag as z}from"../../webgl-engine/lib/Material.js";import{VertexAttribute as j}from"../../webgl-engine/lib/VertexAttribute.js";import{ColorMaterial as y}from"../../webgl-engine/materials/ColorMaterial.js";import{RibbonLineMaterial as b}from"../../webgl-engine/materials/RibbonLineMaterial.js";class S extends g{constructor(t){super(t),this._handles=new e,this._quadMaterial=null,this._outlineMaterial=null,this._maxSize=0,this._position=_(),this._up=_(),this._right=_(),this._renderOccluded=z.OccludeAndTransparent,this._color=p(1,0,0,1),this._outlineColor=p(0,0,0,1),this._outlineSize=0,this._size=32,this._outlineRenderOccluded=z.Opaque,this.applyProps(t)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateQuadMaterial())}get color(){return this._color}set color(e){m(this._color,e),this._updateQuadMaterial()}get outlineColor(){return this._outlineColor}set outlineColor(e){m(this._outlineColor,e),this._updateOutlineMaterial()}get outlineSize(){return this._outlineSize}set outlineSize(e){const t=0===this._outlineSize!=(0===e);this._outlineSize=e,t?this.recreateGeometry():this._updateOutlineMaterial()}get size(){return this._size}set size(e){e!==this._size&&(this._size=e,this._updateTransform())}get outlineRenderOccluded(){return this._outlineRenderOccluded}set outlineRenderOccluded(e){this._outlineRenderOccluded=e,this._updateOutlineMaterial()}set geometry({previous:e,center:t,next:i}){this._maxSize=Math.min(o(t,e),o(t,i))/3,l(this._up,n(this._up,e,t)),l(this._right,n(this._right,i,t)),u(this._position,t),this.recreateGeometry()}createExternalResources(){this._quadMaterial=new y(this._quadMaterialParameters),this._outlineMaterial=new b(this._outlineMaterialParameters),this._handles.add(i((()=>this.view.state.camera),(()=>this._updateTransform())))}destroyExternalResources(){this._quadMaterial=null,this._outlineMaterial=null,this._handles.removeAll()}forEachExternalMaterial(e){e(this._quadMaterial),e(this._outlineMaterial)}createGeometries(e){h(this._up,c)&&h(this._right,c)||(this._createQuadGeometry(e),this._createOutlineGeometry(e),this._updateTransform(e))}_createQuadGeometry(e){const t=this._quadGeometryData(this._up,this._right);e.addGeometry(t,this._quadMaterial)}_createOutlineGeometry(e){if(0===this._outlineSize)return;const t=d(M.get(),this._up,this._right),i=O([this._up,t,this._right]);e.addGeometry(i,this._outlineMaterial)}_updateTransform(e=this.object){const i=this.view.state.camera,a=this._size*i.computeScreenPixelSizeAt(this._position),o=Math.min(this._maxSize,a);r(w,this._position),s(w,w,[o,o,o]),t(e)&&(e.transformation=w)}_quadGeometryData(e,t){const i=d(M.get(),e,t);return new f([[j.POSITION,{size:3,data:[0,0,0,...t,...e,...i],exclusive:!0}]],[[j.POSITION,[0,1,2,1,2,3]]])}get _quadMaterialParameters(){return{color:this._color,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:this._renderOccluded}}_updateQuadMaterial(){this._quadMaterial&&this._quadMaterial.setParameters(this._quadMaterialParameters)}get _outlineMaterialParameters(){return{color:this._outlineColor,width:this._outlineSize,renderOccluded:this._outlineRenderOccluded}}_updateOutlineMaterial(){this._outlineMaterial&&this._outlineMaterial.setParameters(this._outlineMaterialParameters)}}const w=a();export{S as RightAngleQuadVisualElement};
