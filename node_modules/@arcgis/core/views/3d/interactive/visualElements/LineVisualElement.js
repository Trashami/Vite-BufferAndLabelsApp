/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t,unwrap as r}from"../../../../core/maybe.js";import{f as s}from"../../../../chunks/mat4.js";import{c as i}from"../../../../chunks/mat4f64.js";import{s as a,m as o}from"../../../../chunks/vec3.js";import{Z as l,c as n}from"../../../../chunks/vec3f64.js";import{f as h,a as m}from"../../../../chunks/vec4f32.js";import{Object3DVisualElement as p}from"./Object3DVisualElement.js";import{lineStripsToParameters as _,createGeometry as f}from"../../support/engineContent/line.js";import{RenderOccludedFlag as d}from"../../webgl-engine/lib/Material.js";import{RibbonLineMaterial as u}from"../../webgl-engine/materials/RibbonLineMaterial.js";class c extends p{constructor(t,r){super(t),this._hasExternalMaterial=!1,this._renderOccluded=d.OccludeAndTransparent,this._width=1,this._color=h(1,0,1,1),this._innerWidth=1,this._innerColor=null,this._stipplePattern=null,this._stippleOffColor=null,this._stipplePreferContinuous=!0,this._writeDepthEnabled=!0,this._falloff=0,this._polygonOffset=!1,this._material=r,this._hasExternalMaterial=e(r),this.applyProps(t)}setGeometryFromRenderSpacePoint(e,t=1e3){const r=[];r.push([[e[0]-t,e[1]+0,e[2]+0],[e[0]+t,e[1]+0,e[2]+0]]),r.push([[e[0]-0,e[1]-t,e[2]+0],[e[0]+0,e[1]+t,e[2]+0]]),r.push([[e[0]-0,e[1]+0,e[2]-t],[e[0]+0,e[1]+0,e[2]+t]]),this.geometry=r}setGeometryFromExtent(e){const t=this.view.spatialReference,r=n(),s=n(),i=100,o=[];a(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),a(r,e[2],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),a(r,e[2],e[3],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),a(r,e[0],e[3],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),a(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),a(r,e[0],e[1],i),this.view.renderCoordsHelper.toRenderCoords(r,t,s),o.push([s[0],s[1],s[2]]),this.geometry=[o]}setGeometryFromFrustum(e){const t=[];e.lines.forEach((e=>{t.push([e.origin[0],e.origin[1],e.origin[2]]),t.push([e.endpoint[0],e.endpoint[1],e.endpoint[2]])})),this.geometry=[t]}setGeometryFromBoundedPlane(e){const t=[],r=e.origin,s=e.basis1,i=e.basis2,a=.5,o=n(),l=n(),h=n(),m=n();o[0]=r[0]-s[0]*a-i[0]*a,o[1]=r[1]-s[1]*a-i[1]*a,o[2]=r[2]-s[2]*a-i[2]*a,l[0]=r[0]-s[0]*a+i[0]*a,l[1]=r[1]-s[1]*a+i[1]*a,l[2]=r[2]-s[2]*a+i[2]*a,h[0]=r[0]+s[0]*a+i[0]*a,h[1]=r[1]+s[1]*a+i[1]*a,h[2]=r[2]+s[2]*a+i[2]*a,m[0]=r[0]+s[0]*a-i[0]*a,m[1]=r[1]+s[1]*a-i[1]*a,m[2]=r[2]+s[2]*a-i[2]*a,t.push([o[0],o[1],o[2]]),t.push([l[0],l[1],l[2]]),t.push([h[0],h[1],h[2]]),t.push([m[0],m[1],m[2]]),t.push([o[0],o[1],o[2]]),this.geometry=[t]}setGeometryFromSegment(e){const t=e.endRenderSpace;this.transform=s(g,t);const{points:r}=e.createRenderGeometry(t,this.view.renderCoordsHelper);this.geometry=[r]}setGeometryFromSegments(e,t=l){this.transform=s(g,t),this.geometry=e.map((e=>e.createRenderGeometry(t,this.view.renderCoordsHelper).points))}getTransformedGeometry(){return t(this._geometry)?null:this._geometry.map((e=>e.map((e=>o(n(),e,this.transform)))))}get renderOccluded(){return e(this._material)?this._material.parameters.renderOccluded:this._renderOccluded}set renderOccluded(t){this._renderOccluded=t,e(this._material)&&this._material.setParameters({renderOccluded:t})}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get width(){return e(this._material)?this._material.parameters.width:this._width}set width(t){this._width=t,e(this._material)&&this._material.setParameters({width:t})}get color(){return e(this._material)?this._material.parameters.color:this._color}set color(t){this._color=m(t),e(this._material)&&this._material.setParameters({color:this._color})}get innerWidth(){return e(this._material)?this._material.parameters.innerWidth:this._innerWidth}set innerWidth(t){this._innerWidth=t,e(this._material)&&this._material.setParameters({innerWidth:t})}get innerColor(){return e(this._material)?this._material.parameters.innerColor:this._innerColor}set innerColor(t){this._innerColor=e(t)?m(t):t,e(this._material)&&this._material.setParameters({innerColor:this._innerColor})}get stipplePattern(){return e(this._material)?this._material.parameters.stipplePattern:this._stipplePattern}set stipplePattern(t){this._stipplePattern=t,e(this._material)&&this._material.setParameters({stipplePattern:t})}get stippleOffColor(){return e(this._material)?this._material.parameters.stippleOffColor:this._stippleOffColor}set stippleOffColor(t){this._stippleOffColor=e(t)?m(t):null,e(this._material)&&this._material.setParameters({stippleOffColor:this._stippleOffColor})}get stipplePreferContinuous(){return e(this._material)?this._material.parameters.stipplePreferContinuous:this._stipplePreferContinuous}set stipplePreferContinuous(t){this._stipplePreferContinuous=t,e(this._material)&&this._material.setParameters({stipplePreferContinuous:t})}get writeDepthEnabled(){return e(this._material)?this._material.parameters.writeDepth:this._writeDepthEnabled}set writeDepthEnabled(t){this._writeDepthEnabled=t,e(this._material)&&this._material.setParameters({writeDepth:t})}get falloff(){return e(this._material)?this._material.parameters.falloff:this._falloff}set falloff(t){this._falloff=t,e(this._material)&&this._material.setParameters({falloff:t})}get polygonOffset(){return e(this._material)?this._material.parameters.hasPolygonOffset:this._polygonOffset}set polygonOffset(t){this._polygonOffset=t,e(this._material)&&this._material.setParameters({hasPolygonOffset:t})}createExternalResources(){this._hasExternalMaterial||(this._material=new u({width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,isClosed:!1,falloff:this._falloff,innerColor:this._innerColor,innerWidth:this._innerWidth,hasPolygonOffset:this._polygonOffset,renderOccluded:this._renderOccluded,writeDepth:this._writeDepthEnabled}))}destroyExternalResources(){this._hasExternalMaterial||(this._material=null)}createGeometries(e){for(const t of _(this.geometry)){const s=f(t);e.addGeometry(s,r(this._material))}}forEachExternalMaterial(e){this._hasExternalMaterial||e(r(this._material))}}const g=i();export{c as LineVisualElement};
