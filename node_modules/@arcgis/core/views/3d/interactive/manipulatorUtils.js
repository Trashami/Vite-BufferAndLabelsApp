/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{isSome as e,isNone as t}from"../../../core/maybe.js";import{a as r}from"../../../chunks/mat4.js";import{b as a,f as n,m as o,n as i}from"../../../chunks/vec3.js";import{f as c}from"../../../chunks/vec3f64.js";import{f as s}from"../../../chunks/vec4f64.js";import{sv3d as l,sm4d as m}from"../../../geometry/support/vectorStacks.js";import{hydrateGeometry as u}from"../../../layers/graphics/hydratedFeatures.js";import{Manipulator3D as d}from"./Manipulator3D.js";import{computeCentroid as p}from"../layers/graphics/graphicUtils.js";import{CullFaceOptions as f}from"../webgl-engine/lib/basicInterfaces.js";import{Geometry as g}from"../webgl-engine/lib/Geometry.js";import{createPolylineGeometry as h,createSphereGeometry as b}from"../webgl-engine/lib/GeometryUtil.js";import{RenderOccludedFlag as w}from"../webgl-engine/lib/Material.js";import{VertexAttribute as j}from"../webgl-engine/lib/VertexAttribute.js";import{ColorMaterial as O}from"../webgl-engine/materials/ColorMaterial.js";import{ImageMaterial as y}from"../webgl-engine/materials/ImageMaterial.js";import{NativeLineMaterial as M}from"../webgl-engine/materials/NativeLineMaterial.js";import{RibbonLineMaterial as k}from"../webgl-engine/materials/RibbonLineMaterial.js";import{ShadedColorMaterial as v}from"../webgl-engine/materials/ShadedColorMaterial.js";import{ManipulatorStateCustomFlags as S,ManipulatorStateFlags as F}from"../../interactive/interfaces.js";function A(e,t=w.OccludeAndTransparent,r=!0){const a=s(e[0],e[1],e[2],e.length>3?e[3]:1),n=e[3]<1;return r?new v({color:a,transparent:n,writeDepth:!0,cullFace:f.Back,renderOccluded:t}):new O({color:a,transparent:n,writeDepth:!0,cullFace:f.Back,renderOccluded:t})}function I(e,t=w.OccludeAndTransparent){const r=s(e[0],e[1],e[2],4===e.length?e[3]:1);return new O({color:r,transparent:!0,writeDepth:!0,cullFace:f.Front,renderOccluded:t})}const L=Object.freeze({calloutLength:40,calloutWidth:1,discRadius:27,focusMultiplier:1.1,calloutColor:c(1,.5,0)});function R(e,t){const r=new d({view:e,autoScaleRenderObjects:!1,collisionPriority:1,metadata:t.metadata});return T(r,t),r}function T(e,t){const r=t.material??new y({transparent:!0,writeDepth:!1,textureId:t.texture?.id,renderOccluded:w.Opaque}),a=t.focusMultiplier??L.focusMultiplier,n=t.calloutLength??L.calloutLength,o=L.discRadius*(t.discScale??1),i=o*a,c=e=>{const t=[0,1,2,2,3,0];return new g([[j.POSITION,{size:3,data:[n-e,-e,0,n+e,-e,0,n+e,e,0,n-e,e,0],exclusive:!0}],[j.UV0,{size:2,data:[0,0,1,0,1,1,0,1]}]],[[j.POSITION,t],[j.UV0,t]])},l=h([[0,0,0],[n-o,0,0]]),m=h([[0,0,0],[n-i,0,0]]),u=L.calloutColor,d=t.calloutWidth??L.calloutWidth,p=new(d>1?k:M)({width:d,color:s(u[0],u[1],u[2],t.calloutOpacity??1),renderOccluded:w.OccludeAndTransparent}),f=t.customStateMask??S.None;e.collisionType={type:"disc",direction:[0,0,1],offset:[n,0,0]},e.focusMultiplier=a,e.metadata=t.metadata,e.radius=o,e.renderObjects=[{geometry:c(o),material:r,stateMask:F.Unfocused|f},{geometry:l,material:p,stateMask:F.Unfocused|f},{geometry:c(i),material:r,stateMask:F.Focused|f},{geometry:m,material:p,stateMask:F.Focused|f}]}function U(e,t,r,a=S.None){return new d({view:e,renderObjects:[{geometry:b(1,32,32),material:A(s(t[0],t[1],t[2],null!=r?r:1)),stateMask:a}]})}const x=Object.freeze({autoScaleRenderObjects:!1,worldSized:!0});function z(e,t,i,c){const s=a(l.get(),e,i),u=D(s,n(l.get(),c,s),i,m.get());r(u,u);const d=o(l.get(),t,u);return Math.atan2(d[1],d[0])}function D(e,t,r,a){const o=i(l.get(),e),c=i(l.get(),t),s=n(l.get(),o,c);return a[0]=o[0],a[1]=o[1],a[2]=o[2],a[3]=0,a[4]=c[0],a[5]=c[1],a[6]=c[2],a[7]=0,a[8]=s[0],a[9]=s[1],a[10]=s[2],a[11]=0,a[12]=r[0],a[13]=r[1],a[14]=r[2],a[15]=1,a}function N(t,r){const a=t.getViewForGraphic(r);return e(a)&&"computeAttachmentOrigin"in a?a.computeAttachmentOrigin(r,t.spatialReference):null}function C(t,r,a){const n=N(t,a);e(n)?r.elevationAlignedLocation=n:V(r,a.geometry)}function V(e,r){if(t(r))return;const a="mesh"===r.type?r.anchor:p(r);t(a)||(e.location=u(a))}export{z as calculateInputRotationTransform,D as calculateTranslateRotateFromBases,A as createManipulatorMaterial,I as createManipulatorOutlineMaterial,R as createRotateManipulator,U as createSphereManipulator,N as getGraphicAttachmentOrigin,C as placeAtGraphic,T as updateRotateManipulator,x as worldScaledManipulatorSettings};
