/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{isSome as e,isNone as o}from"../../../core/maybe.js";import{b as t}from"../../../chunks/mat4f64.js";import{DefaultErrorContext as r}from"./DefaultErrorContext.js";import{makeMaterialParameters as s,makeTextureSource as a}from"./LoaderResult.js";import{GLTFResource as n}from"./internal/Resource.js";import{TextureSamplingMode as i,PrimitiveType as l}from"../../webgl/enums.js";let u=0;async function m(r,s,a={},i=!0){const m=await n.load(r,x,s,a),p="gltf_"+u++,T={lods:[],materials:new Map,textures:new Map,meta:c(m)},h=!(!m.json.asset.extras||"symbolResource"!==m.json.asset.extras.ESRI_type),g=new Map;await d(m,(async(r,s,n,u)=>{const c=g.get(n)??0;g.set(n,c+1);const d=void 0!==r.mode?r.mode:l.TRIANGLES,h=d===l.TRIANGLES||d===l.TRIANGLE_STRIP||d===l.TRIANGLE_FAN?d:null;if(o(h))return void x.warnUnsupported("Unsupported primitive mode ("+l[d]+"). Skipping primitive.");if(!m.hasPositions(r))return void x.warn("Skipping primitive without POSITION vertex attribute.");const R=m.getPositionData(r,a),w=m.getMaterial(r,a,i),v=m.hasNormals(r)?m.getNormalData(r,a):null,S=m.hasTangents(r)?m.getTangentData(r,a):null,_=m.hasTextureCoordinates(r)?m.getTextureCoordinates(r,a):null,E=m.hasVertexColors(r)?m.getVertexColors(r,a):null,I=m.getIndexData(r,a),M={transform:t(s),attributes:{position:await R,normal:v?await v:null,texCoord0:_?await _:null,color:E?await E:null,tangent:S?await S:null},indices:await I,primitiveType:h,material:f(T,await w,p)};let F=null;e(T.meta)&&e(T.meta.ESRI_lod)&&"screenSpaceRadius"===T.meta.ESRI_lod.metric&&(F=T.meta.ESRI_lod.thresholds[n]),T.lods[n]=T.lods[n]||{parts:[],name:u,lodThreshold:F},T.lods[n].parts[c]=M}));for(const e of T.lods)e.parts=e.parts.filter((e=>!!e));const R=await m.getLoadedBuffersSize();return{model:T,meta:{isEsriSymbolResource:h,uri:m.uri},customMeta:{},size:R}}function c(o){const t=o.json;let r=null;return t.nodes.forEach((o=>{const t=o.extras;e(t)&&(t.ESRI_proxyEllipsoid||t.ESRI_lod)&&(r=t)})),r}async function d(e,o){const t=e.json,r=t.scenes[t.scene||0].nodes,s=r.length>1,a=[];for(const i of r){const e=t.nodes[i];if(a.push(n(i,0)),p(e)&&!s){e.extensions.MSFT_lod.ids.forEach(((e,o)=>n(e,o+1)))}}async function n(r,s){const i=t.nodes[r],l=e.getNodeTransform(r);if(x.warnUnsupportedIf(null!=i.weights,"Morph targets are not supported."),null!=i.mesh){const e=t.meshes[i.mesh];for(const t of e.primitives)a.push(o(t,l,s,e.name))}for(const e of i.children||[])a.push(n(e,s))}await Promise.all(a)}function p(e){return e.extensions&&e.extensions.MSFT_lod&&Array.isArray(e.extensions.MSFT_lod.ids)}function f(e,o,t){const r=o=>{const r=`${t}_tex_${o&&o.id}${o&&o.name?"_"+o.name:""}`;if(o&&!e.textures.has(r)){const t=a(o.data,{wrap:{s:o.wrapS,t:o.wrapT},mipmap:T.includes(o.minFilter),noUnpackFlip:!0});e.textures.set(r,t)}return r},n=`${t}_mat_${o.id}_${o.name}`;if(!e.materials.has(n)){const t=s({color:[o.color[0],o.color[1],o.color[2]],opacity:o.color[3],alphaMode:o.alphaMode,alphaCutoff:o.alphaCutoff,doubleSided:o.doubleSided,colorMixMode:o.ESRI_externalColorMixMode,textureColor:o.colorTexture?r(o.colorTexture):void 0,textureNormal:o.normalTexture?r(o.normalTexture):void 0,textureOcclusion:o.occlusionTexture?r(o.occlusionTexture):void 0,textureEmissive:o.emissiveTexture?r(o.emissiveTexture):void 0,textureMetallicRoughness:o.metallicRoughnessTexture?r(o.metallicRoughnessTexture):void 0,emissiveFactor:[o.emissiveFactor[0],o.emissiveFactor[1],o.emissiveFactor[2]],colorTextureTransform:o.colorTextureTransform,normalTextureTransform:o.normalTextureTransform,occlusionTextureTransform:o.occlusionTextureTransform,emissiveTextureTransform:o.emissiveTextureTransform,metallicRoughnessTextureTransform:o.metallicRoughnessTextureTransform,metallicFactor:o.metallicFactor,roughnessFactor:o.roughnessFactor});e.materials.set(n,t)}return n}const x=new r,T=[i.LINEAR_MIPMAP_LINEAR,i.LINEAR_MIPMAP_NEAREST];export{m as loadGLTF};
