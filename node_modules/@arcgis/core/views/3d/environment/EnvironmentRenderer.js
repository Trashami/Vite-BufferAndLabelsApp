/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../chunks/tslib.es6.js";import t from"../../../core/Accessor.js";import"../../../core/has.js";import s from"../../../core/Handles.js";import{lerp as r}from"../../../core/mathUtils.js";import{destroyMaybe as i,isSome as a,isNone as o}from"../../../core/maybe.js";import{when as n,syncAndInitial as h,watch as p,initial as m}from"../../../core/reactiveUtils.js";import{Milliseconds as d}from"../../../core/time.js";import{property as l}from"../../../core/accessorSupport/decorators/property.js";import"../../../core/arrayUtils.js";import"../../../core/accessorSupport/ensureType.js";import{subclass as _}from"../../../core/accessorSupport/decorators/subclass.js";import{l as c,c as u,h as g}from"../../../chunks/vec3.js";import{f as w}from"../../../chunks/vec3f64.js";import{getReferenceEllipsoid as f}from"../../../geometry/projectionEllipsoid.js";import{isMoon as y,isEarth as v}from"../../../geometry/support/spatialReferenceUtils.js";import{AtmosphereType as P}from"./AtmosphereType.js";import{ChapmanAtmosphere as b}from"./ChapmanAtmosphere.js";import{CloudsComposition as R}from"./CloudsComposition.js";import{FadeInStages as x,FadeInOutStages as z}from"./CloudsCompositionParameters.js";import{isReadyCloudsData as W,CloudsRenderingStages as j}from"./CloudsData.js";import{CloudsGenerator as N}from"./CloudsGenerator.js";import{cloudPresets as E}from"./CloudsPresets.js";import{Fog as C,FogParameters as A}from"./Fog.js";import{PanoramicAtmosphere as T}from"./PanoramicAtmosphere.js";import{Precipitation as O}from"./Precipitation.js";import S from"./SimpleAtmosphere.js";import{SimpleHaze as F,HazeParameters as I}from"./SimpleHaze.js";import{Stars as H}from"./Stars.js";import{weatherHeightLimit as L}from"./weather.js";import{updateWeatherFading as M,weatherfadingNeedsRender as U}from"./weatherUtils.js";import{ShaderOutput as q}from"../webgl-engine/core/shaderLibrary/ShaderOutput.js";import{RenderSlot as k}from"../webgl-engine/lib/RenderSlot.js";import{Update as G}from"../webgl-engine/lib/Update.js";var V;const B=[k.POSTPROCESSING_ENVIRONMENT_OPAQUE,k.POSTPROCESSING_ENVIRONMENT_TRANSPARENT];let D=V=class extends t{constructor(e){super(e),this._handles=new s,this._context=null,this._atmosphere=null,this._oldWeatherParameters=new Q,this._newWeatherParameters=new Q,this._fadedWeatherParameters=new Q,this._weatherParameters=this._newWeatherParameters}initialize(){this.view._stage.addRenderPlugin(B,this)}destroy(){null!=this.view?._stage&&this.view._stage.removeRenderPlugin(this),this._handles=i(this._handles),this._set("view",null)}get atmosphereType(){return a(this._atmosphere)?this._atmosphere.type:P.None}get canRender(){return!!this.view.basemapTerrain?.renderer.canRender||"global"!==this.view.viewingMode}get needsLinearDepth(){return a(this._atmosphere)&&this._atmosphere.type===P.Realistic}updateAnimation(e){return!!a(this._precipitation)&&this._precipitation.update(e)}get updating(){return a(this._stars)&&this._stars.updating||a(this._clouds)&&this._clouds.running}get weatherVisible(){return c(this.view.state.camera.eye)-f(this.view.spatialReference).radius<=L}get _stars(){const e=this.view,t=e.environment?.starsEnabled??!1,s=this._get("_stars");return!t||o(this._context)?(i(s),null):a(s)?s:new H({view:e,requestRender:()=>this._setNeedsRender()})}get _precipitation(){const e=this._get("_precipitation");if(!this._precipitationEnabled||o(this._context))return i(e),null;const t=this.view,s=this._context;return a(e)&&e.context===s?e:(i(e),new O({context:s,view:t}))}get _clouds(){const e=this._get("_clouds");if(!this.weatherEnabled||o(this._context))return i(e),null;if(a(e))return e;const t=this.view,s=this._context;return i(e),new N({context:s,view:t,requestRender:()=>this._setNeedsRender()})}get _cloudsComposition(){const e=this._get("_cloudsComposition");if(!this.weatherEnabled||o(this._context))return i(e),null;const t=this.view.state.viewingMode,s=this._context.renderContext.rctx,r=f(this.view.spatialReference).radius;return a(e)&&e.viewingMode===t&&e.planetRadius===r?e:(i(e),new R({rctx:s,viewingMode:t,planetRadius:r,requestRender:()=>this._setNeedsRender()}))}get _fog(){const e=this._get("_fog");if(!this.weatherEnabled||o(this._context))return i(e),null;if(a(e))return e;const t=this.view,s=this._context;return new C({context:s,view:t})}get _simpleHaze(){const e=this._get("_simpleHaze");if(!this.weatherEnabled||o(this._context))return i(e),null;if(a(e))return e;const t=this.view,s=this._context;return new F({context:s,view:t})}get weatherEnabled(){return!!this.view?.environmentManager?.weatherEnabled}get _precipitationEnabled(){return this.weatherEnabled&&("rainy"===this.view.environment.weather.type||"snowy"===this.view.environment.weather.type)}initializeRenderContext(e=null){this._context=e;const t=()=>this._setNeedsRender();this._handles.add([n((()=>this.view?.basemapTerrain),(()=>this._updateBasemapTerrain()),h),p((()=>({viewingMode:this.view.viewingMode,atmosphereEnabled:this.view.environment.atmosphereEnabled,atmosphereQuality:this.view.environment.atmosphere.quality})),(()=>this._updateAtmosphere()),h),p((()=>this._stars),t),p((()=>this._precipitation),t),p((()=>this._clouds),(()=>this._updateWeather()),m),p((()=>this._fog),(()=>this._updateFogHaze()),m),p((()=>this._simpleHaze),(()=>this._updateFogHaze()),m),p((()=>this._weatherUpdateParameters),(()=>{this._updateWeather(),this._updateFogHaze()}),h)])}uninitializeRenderContext(){this._context=null,this._atmosphere=i(this._atmosphere),this._set("_stars",i(this._stars)),this._set("_precipitation",i(this._precipitation)),this._set("_clouds",i(this._clouds)),this._set("_cloudsComposition",i(this._cloudsComposition)),this._set("_fog",i(this._fog)),this._set("_simpleHaze",i(this._simpleHaze))}prepareRender(e){e.bindParameters.cloudsFade.data=W(this._clouds)?this._clouds:null,"local"!==this.view.viewingMode&&(M(e.bindParameters.cloudsFade,e.bindParameters.camera,this.view.state.mode,V.test.time||e.time,this.view.qualitySettings.weatherFadeDuration),this._updateWeatherFading(e.bindParameters),e.bindParameters.cloudsFade.renderingStage===j.FINISHED&&a(this._clouds)&&0===this._clouds.coverage&&!1===this._clouds.running&&this._clouds.destroyFrameBufferCube())}render(e){if(e.output===q.Color)switch(e.bindParameters.slot){case k.POSTPROCESSING_ENVIRONMENT_OPAQUE:a(this._stars)&&this._stars.render(e),a(this._atmosphere)&&(this._atmosphere.render(e),a(this._cloudsComposition)&&a(e.bindParameters.cloudsFade.data)&&(this.weatherVisible&&a(this._clouds)&&this._clouds.updateWeatherTile(),this._cloudsComposition.render(e)),U(e.bindParameters.cloudsFade)&&a(this._context)&&this._context.requestRender());break;case k.POSTPROCESSING_ENVIRONMENT_TRANSPARENT:if(a(this._atmosphere)&&(this._atmosphere.renderHaze(e,this._weatherParameters.haze.amount),this._weatherParameters.haze.amount>0&&this._selectAtmosphereType()!==P.Realistic&&a(this._simpleHaze)&&this._simpleHaze.render(e,this._weatherParameters.haze),this._weatherParameters.fog.amount>0&&a(this._fog)&&this._fog.render(e,this._weatherParameters.fog),a(this._precipitation))){const t=this.view.environment.weather;"rainy"!==t.type&&"snowy"!==t.type||this._precipitation.render(e,t.precipitation,t.type)}}}updateLightSources(e,t,s,r){if(a(this._context)){const i=this._context.renderContext;i.bindParameters.oldLighting.copyFrom(i.bindParameters.lighting),i.bindParameters.newLighting.noonFactor=t,i.bindParameters.newLighting.globalFactor=s,i.bindParameters.newLighting.set(e);r===G.Faded||i.bindParameters.weatherFading?i.bindParameters.fadeLighting(0):i.bindParameters.fadeLighting(1),this._context.requestRender()}}get _weatherUpdateParameters(){const e=this.weatherEnabled?this.view.environment.weather:null;return o(e)?null:"rainy"===e.type||"snowy"===e.type?{type:e.type,weatherAdjustment:e.cloudCover,effect:e.precipitation}:{type:e.type,weatherAdjustment:"foggy"===e.type?e.fogStrength:e.cloudCover}}_updateWeatherFading(e){if(!e.weatherFading)return;const t=e.cloudsFade;return t.fadeIn.stage===x.FADE_IN?(e.fadeLighting(t.fadeIn.factor),void this._fadeWeather(t.fadeIn.factor)):t.fadeInOut.stage===z.FADE_IN?(e.fadeLighting(t.fadeInOut.factor),void this._fadeWeather(t.fadeInOut.factor)):t.crossFade.enabled?(e.fadeLighting(t.crossFade.factor),void this._fadeWeather(t.crossFade.factor)):(e.fadeLighting(0),void this._fadeWeather(0))}_fadeWeather(e){const{_newWeatherParameters:t,_oldWeatherParameters:s}=this;e>=1?this._weatherParameters=t:(this._fadedWeatherParameters.lerp(s,t,e),this._weatherParameters=this._fadedWeatherParameters)}_updateWeather(){const e=this._weatherUpdateParameters;o(e)||o(this._clouds)||(this._clouds.applyPreset(E[e.type],e.weatherAdjustment),this._setNeedsRender())}_setNeedsRender(){a(this._context)&&this._context.requestRender()}_updateFogHaze(){const e=this._weatherUpdateParameters;if(o(this._fog)||o(this._simpleHaze)||o(e)||o(this._context))return;const t=this._context.renderContext.bindParameters;switch(this._oldWeatherParameters.copyFrom(this._weatherParameters),e.type){case"foggy":this._newWeatherParameters.fog.strength=r(3e-5,.005,e.weatherAdjustment**3),u(this._newWeatherParameters.fog.color,K),this._newWeatherParameters.fog.amount=1,this._newWeatherParameters.haze.strength=0,this._newWeatherParameters.haze.amount=this._selectAtmosphereType()===P.Realistic?1:0,this._setNeedsRender();break;case"rainy":this._newWeatherParameters.fog.strength=r(4e-6,2e-4,e.effect**3),u(this._newWeatherParameters.fog.color,J),this._newWeatherParameters.fog.amount=1,this._newWeatherParameters.haze.strength=0,this._newWeatherParameters.haze.amount=0,this._setNeedsRender();break;case"snowy":this._newWeatherParameters.fog.strength=r(4e-6,2e-4,e.effect**3),u(this._newWeatherParameters.fog.color,K),this._newWeatherParameters.fog.amount=1,this._newWeatherParameters.haze.strength=0,this._newWeatherParameters.haze.amount=this._selectAtmosphereType()===P.Realistic?1:0,this._setNeedsRender();break;default:this._newWeatherParameters.fog.strength=0,this._newWeatherParameters.fog.amount=0,this._newWeatherParameters.haze.strength=4e-6,this._newWeatherParameters.haze.amount=1,this._setNeedsRender()}t.weatherFading?this._fadeWeather(0):this._fadeWeather(1)}_updateAtmosphere(){const e=this._selectAtmosphereType();if(this.atmosphereType===e)return;const t=this._getAtmosphereClass();if(!t)return a(this._atmosphere)&&(this._atmosphere.destroy(),this._atmosphere=null,this._setNeedsRender()),void this._updateBasemapTerrain();a(this._context)&&(i(this._atmosphere),this._atmosphere=new t(this.view),this._atmosphere.initializeRenderContext(this._context),this._setNeedsRender(),this._updateBasemapTerrain())}_getAtmosphereClass(){switch(this._selectAtmosphereType()){case P.None:return null;case P.Realistic:return b;case P.Panoramic:return T;case P.Simple:return S;default:return}}_selectAtmosphereType(){const e=this.view.get("environment.atmosphereEnabled"),t=this.view.get("environment.atmosphere.quality"),s=this.view.viewingMode;return!e||null==t||y(this.view.spatialReference)?P.None:"local"===s?P.Panoramic:"high"===t&&a(this._context)&&b.isSupported(this._context)&&v(this.view.spatialReference)?P.Realistic:P.Simple}_updateBasemapTerrain(){this.view.basemapTerrain&&(this.view.basemapTerrain.velvetOverground=a(this._atmosphere)&&this.atmosphereType===P.Simple)}get test(){return{atmosphere:this._atmosphere,clouds:this._clouds,selectAtmosphereType:()=>this._selectAtmosphereType(),stubGetAtmosphereClass:e=>{X=V.prototype._getAtmosphereClass,V.prototype._getAtmosphereClass=e},restoreGetAtmosphereClass:()=>{V.prototype._getAtmosphereClass=X}}}};D.test={time:d(0)},e([l({constructOnly:!0})],D.prototype,"view",void 0),e([l({type:Boolean,readOnly:!0})],D.prototype,"updating",null),e([l({readOnly:!0})],D.prototype,"weatherVisible",null),e([l()],D.prototype,"_context",void 0),e([l({readOnly:!0})],D.prototype,"_stars",null),e([l({readOnly:!0})],D.prototype,"_precipitation",null),e([l({readOnly:!0})],D.prototype,"_clouds",null),e([l({readOnly:!0})],D.prototype,"_cloudsComposition",null),e([l({readOnly:!0})],D.prototype,"_fog",null),e([l({readOnly:!0})],D.prototype,"_simpleHaze",null),e([l({readOnly:!0})],D.prototype,"weatherEnabled",null),e([l({readOnly:!0})],D.prototype,"_precipitationEnabled",null),e([l({readOnly:!0})],D.prototype,"_weatherUpdateParameters",null),D=V=e([_("esri.views.3d.environment.EnvironmentRenderer")],D);class Q{constructor(){this.fog=new A,this.haze=new I}copyFrom(e){this.fog.amount=e.fog.amount,this.haze.amount=e.haze.amount,this.fog.strength=e.fog.strength,this.haze.strength=e.haze.strength,u(this.fog.color,e.fog.color)}lerp(e,t,s){this.fog.amount=r(e.fog.amount,t.fog.amount,s),this.haze.amount=r(e.haze.amount,t.haze.amount,s),this.fog.strength=r(e.fog.strength,t.fog.strength,s),this.haze.strength=r(e.haze.strength,t.haze.strength,s),g(this.fog.color,e.fog.color,t.fog.color,s)}}const J=w(.5,.5,.5),K=w(1.5,1.5,1.5);let X;export{D as EnvironmentRenderer,Q as WeatherParameters};
