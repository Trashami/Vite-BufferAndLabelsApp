/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{rad2deg as t,asinClamped as n,deg2rad as o}from"../../../core/mathUtils.js";import{isNone as r}from"../../../core/maybe.js";import e from"../../../geometry/Point.js";import{getReferenceEllipsoid as i}from"../../../geometry/projectionEllipsoid.js";function s(t,n,o){if(r(n.longitude)||r(n.latitude)||r(o.longitude)||r(o.latitude))throw new Error("Invalid points: no lon/lat");return u(t,n.longitude,n.latitude,o.longitude,o.latitude)}function u(t,r,e,i,s){const u=o(e),a=o(s),c=u-a,l=o(r)-o(i),d=Math.sin(c/2),h=Math.sin(l/2),m=2*n(Math.sqrt(d*d+Math.cos(u)*Math.cos(a)*h*h))*t;return Math.round(1e4*m)/1e4}function a(t,n,o){const r=n.spatialReference,u=i(r),a=new e(n.x,t.y,r),c=new e(o.x,t.y,r),l=new e(t.x,n.y,r),d=new e(t.x,o.y,r);return{lon:s(u.radius,a,c),lat:s(u.radius,l,d)}}function c(r,e,i){const s=e/i,u=o(r),a=Math.sin(s/2),c=Math.cos(u),l=2*n(Math.sqrt(a*a/(c*c)));return t(l)}function l(n,o){return t(n/o)}function d(t,n){let o=t/15;return n||(o=Math.round(o)),o}function h(t,n){n||(n={hours:0,minutes:0,seconds:0}),n.hours=d(t[0],!0);const o=n.hours%1;n.hours-=o,n.minutes=60*o;const r=n.minutes%1;return n.minutes-=r,n.seconds=Math.round(60*r),n}export{u as getGreatCircleDistance,s as getGreatCircleDistanceFromPoints,a as getGreatCircleSpanAt,l as getLatDeltaForDistance,c as getLonDeltaForDistance,d as longitudeToTimezone,h as positionToTimezoneInfo};
