/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{_ as e}from"../../../../chunks/tslib.es6.js";import t from"../../../../core/Accessor.js";import r from"../../../../core/Evented.js";import s from"../../../../core/Handles.js";import{destroyMaybe as o,unwrap as n}from"../../../../core/maybe.js";import{property as i}from"../../../../core/accessorSupport/decorators/property.js";import"../../../../core/arrayUtils.js";import"../../../../core/accessorSupport/ensureType.js";import{subclass as c}from"../../../../core/accessorSupport/decorators/subclass.js";import{c as a}from"../../../../chunks/vec3f64.js";import{empty as p,expand as d,intersects as h}from"../../../../geometry/support/aaBoundingRect.js";import{TaskPriority as u}from"../../../support/Scheduler.js";let l=class extends t{constructor(e){super(e),this._handles=new s,this._tileGeometryUpdateExtent=p(),this._tileGeometryUpdateSpatialReference=null,this.events=new r,this.updating=!1}initialize(){this._handles.add([this.surface.on("elevation-change",(e=>this._tileGeometryChanged(e))),this.scheduler.registerTask(u.SURFACE_GEOMETRY_UPDATES,this)])}destroy(){this._handles=o(this._handles)}get running(){return this.updating}runTask(){this.updating&&(this._centerIntersectsExtent(this._tileGeometryUpdateExtent,this._tileGeometryUpdateSpatialReference)&&this.events.emit("request-update",m),p(this._tileGeometryUpdateExtent),this._set("updating",!1))}_tileGeometryChanged(e){this._tileGeometryUpdateSpatialReference=n(e.spatialReference),d(this._tileGeometryUpdateExtent,e.extent,this._tileGeometryUpdateExtent),this._set("updating",!0)}_furthestCenterOnSurface(){let e=this.centerOnSurfaces[0];for(let t=1;t<this.centerOnSurfaces.length;t++){const r=this.centerOnSurfaces[t];r.distance>e.distance&&(e=r)}return e}_centerIntersectsExtent(e,t){const r=this.state.camera.eye,s=_,o=this._furthestCenterOnSurface();return this.renderCoordsHelper.fromRenderCoords(r,y,t),this.renderCoordsHelper.fromRenderCoords(o.renderLocation,f,t),y[0]<f[0]?(s[0]=y[0],s[2]=f[0]):(s[0]=f[0],s[2]=y[0]),y[1]<f[1]?(s[1]=y[1],s[3]=f[1]):(s[1]=f[1],s[3]=y[1]),h(s,e)}};e([i({constructOnly:!0})],l.prototype,"state",void 0),e([i({constructOnly:!0})],l.prototype,"centerOnSurfaces",void 0),e([i({constructOnly:!0})],l.prototype,"renderCoordsHelper",void 0),e([i({constructOnly:!0})],l.prototype,"scheduler",void 0),e([i({constructOnly:!0})],l.prototype,"surface",void 0),e([i({readOnly:!0})],l.prototype,"updating",void 0),l=e([c("esri.views.3d.support.SurfaceGeometryUpdates")],l);const m={},y=a(),f=a(),_=p();export{l as SurfaceGeometryUpdates};
