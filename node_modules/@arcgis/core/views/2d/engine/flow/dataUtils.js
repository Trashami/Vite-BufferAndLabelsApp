/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import"../../../../geometry.js";import has from"../../../../core/has.js";import t from"../../../../core/Logger.js";import{deg2rad as e}from"../../../../core/mathUtils.js";import{isNone as n,isSome as r}from"../../../../core/maybe.js";import{throwIfAborted as o}from"../../../../core/promiseUtils.js";import i from"../../../../core/RandomLCG.js";import{getInfo as l}from"../../../../geometry/support/spatialReferenceUtils.js";import a from"../../../../geometry/Extent.js";const s=t.getLogger("esri.views.2d.engine.flow.dataUtils"),c=10;async function f(t,e,n,r){const i=performance.now(),l=u(e,n),a=performance.now(),f=m(e,l,n.width,n.height),h=performance.now(),d=w(f,!0),y=performance.now(),x="Streamlines"===t?p(d,c):g(d),M=performance.now();return has("esri-2d-profiler")&&(s.info("I.1","_createFlowFieldFromData (ms)",Math.round(a-i)),s.info("I.2","_getStreamlines (ms)",Math.round(h-a)),s.info("I.3","createAnimatedLinesData (ms)",Math.round(y-h)),s.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(M-y)),s.info("I.5","createFlowMesh (ms)",Math.round(M-i)),s.info("I.6","Mesh size (bytes)",x.vertexData.buffer.byteLength+x.indexData.buffer.byteLength)),await Promise.resolve(),o(r),x}function u(t,e){const n=d(e.data,e.width,e.height,t.smoothing);if(t.interpolate){return(t,r)=>{const o=Math.floor(t),i=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(i<0||i>=e.height)return[0,0];const l=t-o,a=r-i,s=o,c=i,f=o<e.width-1?o+1:o,u=i<e.height-1?i+1:i,h=n[2*(c*e.width+s)],m=n[2*(c*e.width+f)],d=n[2*(u*e.width+s)],w=n[2*(u*e.width+f)],p=n[2*(c*e.width+s)+1],g=n[2*(c*e.width+f)+1];return[(h*(1-a)+d*a)*(1-l)+(m*(1-a)+w*a)*l,(p*(1-a)+n[2*(u*e.width+s)+1]*a)*(1-l)+(g*(1-a)+n[2*(u*e.width+f)+1]*a)*l]}}return(t,r)=>{const o=Math.round(t),i=Math.round(r);return o<0||o>=e.width||i<0||i>=e.height?[0,0]:[n[2*(i*e.width+o)+0],n[2*(i*e.width+o)+1]]}}function h(t,e,n,r,o,i,l,a,s){const c=[];let f=n,u=r,h=0,[m,d]=e(f,u);m*=t.velocityScale,d*=t.velocityScale;const w=Math.sqrt(m*m+d*d);let p,g;c.push({x:f,y:u,t:h,speed:w});for(let y=0;y<t.verticesPerLine;y++){let[n,r]=e(f,u);n*=t.velocityScale,r*=t.velocityScale;const m=Math.sqrt(n*n+r*r);if(m<t.minSpeedThreshold)return c;const d=n/m,w=r/m;f+=d*t.segmentLength,u+=w*t.segmentLength;if(h+=t.segmentLength/m,Math.acos(d*p+w*g)>t.maxTurnAngle)return c;if(t.collisions){const t=Math.round(f*s),e=Math.round(u*s);if(t<0||t>l-1||e<0||e>a-1)return c;const n=i[e*l+t];if(-1!==n&&n!==o)return c;i[e*l+t]=o}c.push({x:f,y:u,t:h,speed:m}),p=d,g=w}return c}function m(t,e,n,r){const o=[],l=new i,a=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*a),c=Math.round(r*a),f=new Int32Array(s*c);for(let i=0;i<f.length;i++)f[i]=-1;const u=[];for(let i=0;i<r;i+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)u.push({x:e,y:i,sort:l.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:i,y:m}of u)if(l.getFloat()<t.density){const n=h(t,e,i,m,o.length,f,s,c,a);if(n.length<2)continue;o.push(n)}return o}function d(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),i=new Array(2*o+1);let l=0;for(let c=-o;c<=o;c++){const t=Math.exp(-c*c/(r*r));i[c+o]=t,l+=t}for(let c=-o;c<=o;c++)i[c+o]/=l;const a=new Float32Array(t.length);for(let c=0;c<n;c++)for(let n=0;n<e;n++){let r=0,l=0;for(let a=-o;a<=o;a++){if(n+a<0||n+a>=e)continue;const s=i[a+o];r+=s*t[2*(c*e+(n+a))+0],l+=s*t[2*(c*e+(n+a))+1]}a[2*(c*e+n)+0]=r,a[2*(c*e+n)+1]=l}const s=new Float32Array(t.length);for(let c=0;c<e;c++)for(let t=0;t<n;t++){let r=0,l=0;for(let s=-o;s<=o;s++){if(t+s<0||t+s>=n)continue;const f=i[s+o];r+=f*a[2*((t+s)*e+c)+0],l+=f*a[2*((t+s)*e+c)+1]}s[2*(t*e+c)+0]=r,s[2*(t*e+c)+1]=l}return s}function w(t,e){const n=new i,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),l=new Array(t.length);let a=0,s=0;for(const i of t){const t=a;for(const e of i)o[4*a+0]=e.x,o[4*a+1]=e.y,o[4*a+2]=e.t,o[4*a+3]=e.speed,a++;l[s++]={startVertex:t,numberOfVertices:i.length,totalTime:i[i.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:l}}function p(t,e){const n=9,{lineVertices:r,lineDescriptors:o}=t;let i=0,l=0;for(const m of o){i+=2*m.numberOfVertices;l+=6*(m.numberOfVertices-1)}const a=new Float32Array(i*n),s=new Uint32Array(l);let c=0,f=0;function u(){s[f++]=c-2,s[f++]=c,s[f++]=c-1,s[f++]=c,s[f++]=c+1,s[f++]=c-1}function h(t,e,r,o,i,l,s,f){const u=c*n;let h=0;a[u+h++]=t,a[u+h++]=e,a[u+h++]=1,a[u+h++]=r,a[u+h++]=l,a[u+h++]=s,a[u+h++]=o/2,a[u+h++]=i/2,a[u+h++]=f,c++,a[u+h++]=t,a[u+h++]=e,a[u+h++]=-1,a[u+h++]=r,a[u+h++]=l,a[u+h++]=s,a[u+h++]=-o/2,a[u+h++]=-i/2,a[u+h++]=f,c++}for(const m of o){const{totalTime:t,timeSeed:n}=m;let o=null,i=null,l=null,a=null,s=null,c=null;for(let f=0;f<m.numberOfVertices;f++){const d=r[4*(m.startVertex+f)+0],w=r[4*(m.startVertex+f)+1],p=r[4*(m.startVertex+f)+2],g=r[4*(m.startVertex+f)+3];let y=null,x=null,M=null,A=null;if(f>0){y=d-o,x=w-i;const r=Math.sqrt(y*y+x*x);if(y/=r,x/=r,f>1){let t=y+s,n=x+c;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*y+n*x),e);t*=o,n*=o,M=-n,A=t}else M=-x,A=y;null!==M&&null!==A&&(h(o,i,l,M,A,t,n,g),u())}o=d,i=w,l=p,s=y,c=x,a=g}h(o,i,l,-c,s,t,n,a)}return{vertexData:a,indexData:s}}function g(t){const e=16,n=1,r=2,{lineVertices:o,lineDescriptors:i}=t;let l=0,a=0;for(const j of i){const t=j.numberOfVertices-1;l+=4*t*2,a+=6*t*2}const s=new Float32Array(l*e),c=new Uint32Array(a);let f,u,h,m,d,w,p,g,y,x,M,A,I,V,F=0,D=0;function b(){c[D++]=F-8,c[D++]=F-7,c[D++]=F-6,c[D++]=F-7,c[D++]=F-5,c[D++]=F-6,c[D++]=F-4,c[D++]=F-3,c[D++]=F-2,c[D++]=F-3,c[D++]=F-1,c[D++]=F-2}function v(t,o,i,l,a,c,f,u,h,m,d,w,p,g){const y=F*e;let x=0;for(const e of[n,r])for(const n of[1,2,3,4])s[y+x++]=t,s[y+x++]=o,s[y+x++]=i,s[y+x++]=l,s[y+x++]=f,s[y+x++]=u,s[y+x++]=h,s[y+x++]=m,s[y+x++]=e,s[y+x++]=n,s[y+x++]=p,s[y+x++]=g,s[y+x++]=a/2,s[y+x++]=c/2,s[y+x++]=d/2,s[y+x++]=w/2,F++}function S(t,e){let n=y+M,r=x+A;const o=Math.sqrt(n*n+r*r);n/=o,r/=o;const i=y*n+x*r;n/=i,r/=i;let l=M+I,a=A+V;const s=Math.sqrt(l*l+a*a);l/=s,a/=s;const c=M*l+A*a;l/=c,a/=c,v(f,u,h,m,-r,n,d,w,p,g,-a,l,t,e),b()}function k(t,e,n,r,o,i){if(y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=d&&null!=w){I=t-d,V=e-w;const n=Math.sqrt(I*I+V*V);I/=n,V/=n}null!=y&&null!=x&&S(o,i),f=d,u=w,h=p,m=g,d=t,w=e,p=n,g=r}function L(t,e){y=M,x=A,M=I,A=V,null==y&&null==x&&(y=M,x=A),null!=y&&null!=x&&S(t,e)}for(const j of i){f=null,u=null,h=null,m=null,d=null,w=null,p=null,g=null,y=null,x=null,M=null,A=null,I=null,V=null;const{totalTime:t,timeSeed:e}=j;for(let n=0;n<j.numberOfVertices;n++){k(o[4*(j.startVertex+n)+0],o[4*(j.startVertex+n)+1],o[4*(j.startVertex+n)+2],o[4*(j.startVertex+n)+3],t,e)}L(t,e)}return{vertexData:s,indexData:c}}function y(t,n){const r=n.pixels,{width:o,height:i}=n,l=new Float32Array(o*i*2),a=n.mask||new Uint8Array(o*i*2);if(n.mask||a.fill(255),"vector-uv"===t)for(let e=0;e<o*i;e++)l[2*e+0]=r[0][e],l[2*e+1]=-r[1][e];else if("vector-magdir"===t)for(let s=0;s<o*i;s++){const t=r[0][s],n=e(r[1][s]),o=Math.cos(n-Math.PI/2),i=Math.sin(n-Math.PI/2);l[2*s+0]=o*t,l[2*s+1]=i*t}return{data:l,mask:a,width:o,height:i}}async function x(t,e,n,r,o,i){const c=performance.now(),f=l(e.spatialReference);if(!f){const l=await M(t,e,n,r,o,i);return has("esri-2d-profiler")&&s.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-c)),has("esri-2d-profiler")&&s.info("I.9","Number of parts",1),l}const[u,h]=f.valid,m=h-u,d=Math.ceil(e.width/m),w=e.width/d,p=Math.round(n/d);let g=e.xmin;const y=[],x=performance.now();for(let l=0;l<d;l++){const n=new a({xmin:g,xmax:g+w,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});y.push(M(t,n,p,r,o,i)),g+=w}const A=await Promise.all(y);has("esri-2d-profiler")&&s.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-x)),has("esri-2d-profiler")&&s.info("I.9","Number of parts",A.length);const I={data:new Float32Array(n*r*2),mask:new Uint8Array(n*r),width:n,height:r};let V=0;for(const l of A){for(let t=0;t<l.height;t++)for(let e=0;e<l.width;e++)V+e>=n||(I.data[2*(t*n+V+e)+0]=l.data[2*(t*l.width+e)+0],I.data[2*(t*n+V+e)+1]=l.data[2*(t*l.width+e)+1],I.mask[t*n+V+e]=l.mask[t*l.width+e]);V+=l.width}return has("esri-2d-profiler")&&s.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-c)),I}async function M(t,e,o,i,l,a){const s={requestProjectedLocalDirections:!0,signal:a};if(r(l)&&(s.timeExtent=l),"imagery"===t.type){await t.load({signal:a});const r=t.rasterInfo.dataType,l=await t.fetchImage(e,o,i,s);return!l||n(l.pixelData)||n(l.pixelData.pixelBlock)?{data:new Float32Array(o*i*2),mask:new Uint8Array(o*i),width:o,height:i}:y(r,l.pixelData.pixelBlock)}await t.load({signal:a});const c=t.rasterInfo.dataType,f=await t.fetchPixels(e,o,i,s);return!f||n(f.pixelBlock)?{data:new Float32Array(o*i*2),mask:new Uint8Array(o*i),width:o,height:i}:y(c,f.pixelBlock)}export{w as createAnimatedLinesData,f as createFlowMesh,g as createParticlesMesh,p as createStreamlinesMesh,x as loadImagery};
