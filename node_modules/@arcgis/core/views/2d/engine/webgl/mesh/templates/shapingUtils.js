/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{b as t,m as s,t as e,r as i}from"../../../../../../chunks/mat2d.js";import{c as n,t as o}from"../../../../../../chunks/mat2df32.js";import{s as h,t as r}from"../../../../../../chunks/vec2.js";import{c as a}from"../../../../../../chunks/vec2f32.js";import{VAlign as c}from"../../alignmentUtils.js";import{i1616to32 as f}from"../../number.js";import d from"../../Rect.js";import m from"../../collisions/BoundingBox.js";const l=26,u=4,g=l+u,_=l-6,p=3,x=8,w=Math.PI/180;class y{constructor(t,s,e,i){this._rotationT=n(),this._xBounds=0,this._yBounds=0,this.minZoom=0,this.maxZoom=255,this._bounds=null;const o=e.rect,h=new Float32Array(8);t*=i,s*=i;const r=e.code?o.width*i:e.metrics.width,a=e.code?o.height*i:e.metrics.height;h[0]=t,h[1]=s,h[2]=t+r,h[3]=s,h[4]=t,h[5]=s+a,h[6]=t+r,h[7]=s+a,this._data=h,this._setTextureCoords(o),this._scale=i,this._mosaic=e,this.x=t,this.y=s,this.maxOffset=Math.max(t+r,s+a)}get width(){return this._mosaic.metrics.width*this._scale}get mosaic(){return this._mosaic}set angle(s){this._angle=s,t(this._rotationT,-s),this._setOffsets(this._data)}get angle(){return this._angle}get xTopLeft(){return this._data[0]}get yTopLeft(){return this._data[1]}get xBottomRight(){return this._data[6]}get yBottomRight(){return this._data[7]}get texcoords(){return this._texcoords}get textureBinding(){return this._mosaic.textureBinding}get offsets(){return this._offsets||this._setOffsets(this._data),this._offsets}get char(){return String.fromCharCode(this._mosaic.code)}get code(){return this._mosaic.code}get bounds(){if(!this._bounds){const{height:t,width:e}=this._mosaic.metrics,i=e*this._scale,h=Math.abs(t)*this._scale,r=new Float32Array(8);r[0]=this.x,r[1]=this.y,r[2]=this.x+i,r[3]=this.y,r[4]=this.x,r[5]=this.y+h,r[6]=this.x+i,r[7]=this.y+h;const a=s(n(),this._rotationT,this._transform);o(r,r,a);let c=1/0,f=1/0,d=0,l=0;for(let s=0;s<4;s++){const t=r[2*s],e=r[2*s+1];c=Math.min(c,t),f=Math.min(f,e),d=Math.max(d,t),l=Math.max(l,e)}const u=d-c,g=l-f,_=c+u/2,p=f+g/2;this._bounds=new m(_,p,u,g)}return this._bounds}setTransform(t){this._transform=t,this._offsets=null}_setOffsets(t){this._offsets||(this._offsets={upperLeft:0,upperRight:0,lowerLeft:0,lowerRight:0});const e=this._offsets,i=new Float32Array(8),h=s(n(),this._rotationT,this._transform);o(i,t,h),e.upperLeft=f(i[0]*x,i[1]*x),e.upperRight=f(i[2]*x,i[3]*x),e.lowerLeft=f(i[4]*x,i[5]*x),e.lowerRight=f(i[6]*x,i[7]*x)}_setTextureCoords({x:t,y:s,width:e,height:i}){this._texcoords={upperLeft:f(t,s),upperRight:f(t+e,s),lowerLeft:f(t,s+i),lowerRight:f(t+e,s+i)}}}const M=(t,s)=>({code:0,page:0,sdf:!0,rect:new d(0,0,11,8),textureBinding:s,metrics:{advance:0,height:4,width:t,left:0,top:0}});class T{constructor(t,s,e){this._rotation=0,this._decorate(t,s,e),this.glyphs=t,this.bounds=this._createBounds(t),this.isMultiline=s.length>1,this._hasRotation=0!==e.angle,this._transform=this._createGlyphTransform(this.bounds,e);for(const i of t)i.setTransform(this._transform)}setRotation(e){if(0===e&&0===this._rotation)return;this._rotation=e;const i=this._transform,o=t(n(),e);s(i,o,i);for(const t of this.glyphs)t.setTransform(this._transform)}_decorate(t,s,e){if(!e.decoration||"none"===e.decoration||!t.length)return;const i=e.scale,n="underline"===e.decoration?g:_,o=t[0].textureBinding;for(const h of s){const s=h.startX*i,e=h.startY*i,r=(h.width+h.glyphWidthEnd)*i;t.push(new y(s,e+n*i,M(r,o),1))}}get boundsT(){const t=this.bounds,s=h(a(),t.x,t.y);if(r(s,s,this._transform),this._hasRotation){const e=Math.max(t.width,t.height);return new m(s[0],s[1],e,e)}return new m(s[0],s[1],t.width,t.height)}_createBounds(t){let s=1/0,e=1/0,i=0,n=0;for(const r of t)s=Math.min(s,r.xTopLeft),e=Math.min(e,r.yTopLeft),i=Math.max(i,r.xTopLeft+r.width),n=Math.max(n,r.yBottomRight);const o=i-s,h=n-e;return new m(s+o/2,e+h/2,o,h)}_createGlyphTransform(t,s){const o=w*s.angle,r=n(),c=a();return e(r,r,h(c,s.xOffset,-s.yOffset)),s.isCIM?i(r,r,o):(e(r,r,h(c,t.x,t.y)),i(r,r,o),e(r,r,h(c,-t.x,-t.y))),r}}class B{constructor(t,s,e,i,n,o){this.glyphWidthEnd=0,this.startX=0,this.startY=0,this.start=Math.max(0,Math.min(s,e)),this.end=Math.max(0,Math.max(s,e)),this.end<t.length&&(this.glyphWidthEnd=t[this.end].metrics.width),this.width=i,this.yMin=n,this.yMax=o}}const b=t=>10===t,R=t=>32===t;function L(t,s,e){const i=new Array,n=1/e.scale,o=e.maxLineWidth*n,h=s?t.length-1:0,r=s?-1:t.length,a=s?-1:1;let c=h,f=0,d=0,m=c,l=m,u=0,g=1/0,_=0;for(;c!==r;){const{code:s,metrics:e}=t[c],n=Math.abs(e.top);if(b(s)||R(s)||(g=Math.min(g,n),_=Math.max(_,n+e.height)),b(s))c!==h&&(i.push(new B(t,m,c-a,f,g,_)),g=1/0,_=0),f=0,m=c+a,l=c+a,d=0;else if(R(s))l=c+a,d=0,u=e.advance,f+=e.advance;else if(f>o){if(l!==m){const s=l-2*a;f-=u,i.push(new B(t,m,s,f-d,g,_)),g=1/0,_=0,m=l,f=d}else i.push(new B(t,m,c-a,f,g,_)),g=1/0,_=0,m=c,l=c,f=0;f+=e.advance,d+=e.advance}else f+=e.advance,d+=e.advance;c+=a}const p=new B(t,m,c-a,f,g,_);return p.start>=0&&p.end<t.length&&i.push(p),i}function v(t,s){let e=0;for(let o=0;o<t.length;o++){const{width:s}=t[o];e=Math.max(s,e)}const i="underline"===s.decoration?u:0,n=t[0].yMin;return{x:0,y:n,height:t[t.length-1].yMax+s.lineHeight*(t.length-1)+i-n,width:e}}function j(t,s,e){const i=e.scale,n=new Array,o=L(t,s,e),h=v(o,e),{vAlign:r,hAlign:a}=e,f=r===c.Baseline?1:0,d=f?0:r-1,m=(1-f)*-h.y+d*(h.height/2)+(f?1:0)*-l;for(let c=0;c<o.length;c++){const{start:s,end:h,width:r}=o[c];let f=-1*(a+1)*(r/2)-p;const d=c*e.lineHeight+m-p;o[c].startX=f,o[c].startY=d;for(let e=s;e<=h;e++){const s=t[e];if(b(s.code))continue;const o=new y(f+s.metrics.left,d-s.metrics.top,s,i);f+=s.metrics.advance,n.push(o)}}return new T(n,o,e)}export{y as ShapedGlyph,T as ShapingInfo,j as shapeGlyphs};
