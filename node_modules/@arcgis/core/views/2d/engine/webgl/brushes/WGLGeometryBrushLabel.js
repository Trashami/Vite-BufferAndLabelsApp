/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{isSome as e}from"../../../../../core/maybe.js";import{WGLGeometryType as t}from"../enums.js";import{createProgramDescriptor as o}from"../Utils.js";import a from"./WGLGeometryBrush.js";import{LabelMaterialKey as n}from"../materialKey/MaterialKey.js";import{CompareFunction as r,PrimitiveType as i,DataType as s}from"../../../../webgl/enums.js";const m=e=>o(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:s.SHORT},{location:1,name:"a_id",count:4,type:s.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:s.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_haloColor",count:4,type:s.UNSIGNED_BYTE,normalized:!0},{location:4,name:"a_texAndSize",count:4,type:s.UNSIGNED_BYTE},{location:5,name:"a_refSymbolAndPlacementOffset",count:4,type:s.UNSIGNED_BYTE},{location:6,name:"a_glyphData",count:4,type:s.UNSIGNED_BYTE},{location:7,name:"a_vertexOffset",count:2,type:s.SHORT},{location:8,name:"a_texCoords",count:2,type:s.UNSIGNED_SHORT}]});class l extends a{dispose(){}getGeometryType(){return t.LABEL}supportsSymbology(e){return!0}drawGeometry(t,o,a,l){const{context:d,painter:u,state:c,rendererInfo:f,requestRender:p,allowDelayedRender:y}=t,_=n.load(a.materialKey),E=_.mapAligned?1:0;if(!E&&Math.abs(o.key.level-Math.round(100*t.displayLevel)/100)>=1)return;const{bufferLayouts:N,attributes:S}=m(_),U=u.materialManager.getMaterialProgram(t,_,"materials/label",S,l);if(y&&e(p)&&!U.isCompiled)return void p();t.context.setStencilFunction(r.EQUAL,0,255),d.useProgram(U),this._setSharedUniforms(U,t,o),u.textureManager.bindTextures(d,U,_);const T=1===E?c.displayViewMat3:c.displayMat3;this._setSizeVVUniforms(_,U,f,o),U.setUniform1f("u_mapRotation",Math.floor(c.rotation/360*254)),U.setUniform1f("u_mapAligned",E),U.setUniformMatrix3fv("u_displayMat3",T),U.setUniform1f("u_opacity",1),U.setUniform2fv("u_screenSize",t.state.size),U.setUniform1f("u_isHalo",1);const g=a.target.getVAO(d,N,S),G=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;d.bindVAO(g),d.drawElements(i.TRIANGLES,a.indexCount,s.UNSIGNED_INT,G),U.setUniform1f("u_isHalo",0),d.drawElements(i.TRIANGLES,a.indexCount,s.UNSIGNED_INT,G),d.setStencilTestEnabled(!0),d.setBlendingEnabled(!0)}}export{l as default};
