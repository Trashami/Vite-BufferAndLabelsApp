/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import e from"../../../../config.js";import t from"../../../../request.js";import{bidiText as i}from"../../../../core/BidiText.js";import s from"../../../../core/Error.js";import{getFullyQualifiedFontName as r}from"../../../../core/fontUtils.js";import n from"../../../../core/Logger.js";import{isNone as o,isSome as a}from"../../../../core/maybe.js";import{throwIfAborted as h,isAbortError as c}from"../../../../core/promiseUtils.js";import{pt2px as u}from"../../../../core/screenUtils.js";import{s as d}from"../../../../chunks/vec2.js";import{c as m}from"../../../../chunks/vec2f32.js";import l from"../../../../symbols/cim/Rasterizer.js";import{TEXTURE_BINDING_GLYPH_ATLAS as g,TEXTURE_BINDING_SPRITE_ATLAS as p,PATTERN_FILL_RASTERIZATION_SCALE as f}from"./definitions.js";import{MosaicType as _}from"./enums.js";import w from"./GlyphMosaic.js";import y from"./GlyphSource.js";import M from"./SDFConverter.js";import I from"./SpriteMosaic.js";import{is3D as z,charCodes as R,isSimple as T,isSVGResource as v,isImageResource as x,isMarkerPlacementInsidePolygon as S,shouldRepeat as b,getUrl as j,getPMSResourceSize as P,isGIF as B,isPNG as U,isSVGImage as G}from"./Utils.js";import{AnimatableTextureResource as q}from"./animatedFormats/AnimatableTextureResource.js";import{ok as A}from"./util/Result.js";import{keyFromSymbol as C}from"./util/symbolUtils.js";import{QueueProcessor as E}from"../../../support/QueueProcessor.js";import{TextureSamplingMode as L}from"../../../webgl/enums.js";const F=m(),$="arial-unicode-ms-regular",N=126,k=n.getLogger("esri.views.2d.engine.webgl.TextureManager");function H(e,t){const i=Math.round(u(t)*window.devicePixelRatio),s=i>=128?2:4;return Math.min(e,i*s)}const Q=(e,t,i)=>k.error(new s(e,t,i));class O{constructor(e,t,i){this.mosaicType=e,this.page=t,this.sdf=i}static fromMosaic(e,t){return new O(e,t.page,t.sdf)}}class V{constructor(i,r){this._requestRender=i,this.resourceManager=r,this._invalidFontsMap=new Map,this._sdfConverter=new M(N),this._bindingInfos=new Array,this._hashToBindingIndex=new Map,this._ongoingRasterizations=new Map,this._imageRequestQueue=new E({concurrency:10,process:async(e,i)=>{h(i);try{return await t(e,{responseType:"image",signal:i})}catch(r){if(!c(r))throw new s("mapview-invalid-resource",`Could not fetch requested resource at ${e}`,r);throw r}}}),this._spriteMosaic=new I(2048,2048,500),this._glyphSource=new y(`${e.fontsUrl}/{fontstack}/{range}.pbf`),this._glyphMosaic=new w(1024,1024,this._glyphSource),this._rasterizer=new l(r)}dispose(){this._spriteMosaic.dispose(),this._glyphMosaic.dispose(),this._rasterizer.dispose(),this._sdfConverter.dispose(),this._spriteMosaic=null,this._glyphMosaic=null,this._sdfConverter=null,this._hashToBindingIndex.clear(),this._hashToBindingIndex=null,this._bindingInfos=null,this._ongoingRasterizations.clear(),this._ongoingRasterizations=null,this._imageRequestQueue.clear(),this._imageRequestQueue=null}get sprites(){return this._spriteMosaic}get glyphs(){return this._glyphMosaic}async rasterizeItem(e,t,i,s){if(o(e))return Q("mapview-null-resource","Unable to rasterize null resource"),null;switch(e.type){case"text":case"esriTS":{const t=await this._rasterizeText(e,i,s);return t.forEach((e=>this._setTextureBinding(_.GLYPH,e))),{glyphMosaicItems:t}}default:{if(z(e))return Q("mapview-invalid-type",`MapView does not support symbol type: ${e.type}`,e),null;const i=await this._rasterizeSpriteSymbol(e,t,s);return A(i)&&i&&this._setTextureBinding(_.SPRITE,i),{spriteMosaicItem:i}}}}bindTextures(e,t,i,s=!1){if(0===i.textureBinding)return;const r=this._bindingInfos[i.textureBinding-1],n=r.page,o=s?L.LINEAR_MIPMAP_LINEAR:L.LINEAR;switch(r.mosaicType){case _.SPRITE:{const i=this.sprites.getWidth(n),s=this.sprites.getHeight(n),r=d(F,i,s);return this._spriteMosaic.bind(e,o,n,p),t.setUniform1i("u_texture",p),void t.setUniform2fv("u_mosaicSize",r)}case _.GLYPH:{const i=this.glyphs.width,s=this.glyphs.height,r=d(F,i,s);return this._glyphMosaic.bind(e,o,n,g),t.setUniform1i("u_texture",g),void t.setUniform2fv("u_mosaicSize",r)}default:k.error("mapview-texture-manager",`Cannot handle unknown type ${r.mosaicType}`)}}_hashMosaic(e,t){return 1|e<<1|(t.sdf?1:0)<<2|t.page<<3}_setTextureBinding(e,t){const i=this._hashMosaic(e,t);if(!this._hashToBindingIndex.has(i)){const s=O.fromMosaic(e,t),r=this._bindingInfos.length+1;this._hashToBindingIndex.set(i,r),this._bindingInfos.push(s)}t.textureBinding=this._hashToBindingIndex.get(i)}async _rasterizeText(e,t,s){let n,o;if("cim"in e){const t=e;n=t.fontName,o=t.text}else{const t=e;n=r(t.font),o=t.text}const a=this._invalidFontsMap.has(n),h=t||R(i(o)[0]);try{return await this._glyphMosaic.getGlyphItems(a?$:n,h,s)}catch(c){return Q("mapview-invalid-resource",`Couldn't find font ${n}. Falling back to Arial Unicode MS Regular`),this._invalidFontsMap.set(n,!0),this._glyphMosaic.getGlyphItems($,h,s)}}async _rasterizeSpriteSymbol(e,t,i){if(T(e))return null;const r=C(e);if(this._spriteMosaic.has(r))return this._spriteMosaic.getSpriteItem(r);if(v(e)||x(e)&&!S(e))return this._handleAsyncResource(r,e,i);const n=f,o=this._rasterizer.rasterizeJSONResource(e,n);if(o){const{size:t,image:i,sdf:s,simplePattern:n,rasterizationScale:a}=o;return this._addItemToMosaic(r,t,{type:"static",data:i},b(e),s,n,a)}return new s("TextureManager","unrecognized or null rasterized image")}async _handleAsyncResource(e,t,i){if(this._ongoingRasterizations.has(e))return this._ongoingRasterizations.get(e);let s;s=v(t)?this._handleSVG(t,e,i):this._handleImage(t,e,i),this._ongoingRasterizations.set(e,s);try{await s,this._ongoingRasterizations.delete(e)}catch{this._ongoingRasterizations.delete(e)}return s}async _handleSVG(e,t,i){const s=[N,N],r=await this._sdfConverter.draw(e.path,i);return this._addItemToMosaic(t,s,{type:"static",data:new Uint32Array(r.buffer)},!1,!0,!0)}async _handleGIFOrPNG(e,t,i){const r=j(e);await this.resourceManager.fetchResource(r,i);const n=this.resourceManager.getResource(r);if(o(n))return new s("mapview-invalid-resource",`Could not fetch requested resource at ${r}.`);if(n instanceof HTMLImageElement){let i=n.width,s=n.height;"esriPMS"===e.type&&(i=Math.round(H(n.width,P(e))),s=Math.round(n.height*(i/n.width)));const r="cim"in e?e.cim.colorSubstitutions:void 0,{size:o,sdf:a,image:h}=this._rasterizer.rasterizeImageResource(i,s,n,r);return this._addItemToMosaic(t,o,{type:"static",data:h},b(e),a,!1)}const a=e.animatedSymbolProperties||{},h=e.objectId,c=new q(n,this._requestRender,a,h);return this._addItemToMosaic(t,[c.width,c.height],{type:"animated",data:c},b(e),!1,!1)}async _handleImage(e,t,i){if(B(e)||U(e))return this._handleGIFOrPNG(e,t,i);const r=j(e);try{let s;const n=this.resourceManager.getResource(r);if(a(n)&&n instanceof HTMLImageElement)s=n;else{const{data:e}=await this._imageRequestQueue.push(r,{...i});s=e}if(G(r))if("width"in e&&"height"in e)s.width=u(e.width),s.height=u(e.height);else if("cim"in e){const t=e.cim;s.width=u(t.width??t.scaleX*t.size),s.height=u(t.size)}if(!s.width||!s.height)return null;let o=s.width,h=s.height;"esriPMS"===e.type&&(o=Math.round(H(s.width,P(e))),h=Math.round(s.height*(o/s.width)));const c="cim"in e?e.cim.colorSubstitutions:void 0,{size:d,sdf:m,image:l}=this._rasterizer.rasterizeImageResource(o,h,s,c);return this._addItemToMosaic(t,d,{type:"static",data:l},b(e),m,!1)}catch(n){if(!c(n))return new s("mapview-invalid-resource",`Could not fetch requested resource at ${r}. ${n.message}`)}}_addItemToMosaic(e,t,i,s,r,n,o){return this._spriteMosaic.addSpriteItem(e,t,i,s,r,n,o)}}export{V as default};
