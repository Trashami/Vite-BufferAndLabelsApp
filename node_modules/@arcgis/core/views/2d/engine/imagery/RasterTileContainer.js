/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{create as e}from"../../../../geometry/support/aaBoundingRect.js";import{getWorldWidth as s}from"../../viewpointUtils.js";import{brushes as i}from"../brushes.js";import{RasterTile as t}from"./RasterTile.js";import{WGLDrawPhase as r}from"../webgl/enums.js";import o from"../webgl/TileContainer.js";class n extends o{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(e){const s=this._getTileBounds(e),[i,r]=this._tileInfoView.tileInfo.size,o=this._tileInfoView.getTileResolution(e.level);return new t(e,o,s[0],s[3],i,r)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"imagery (tile)",brushes:[i.raster],target:()=>this.children.map((e=>e.bitmap)),drawPhase:r.MAP});return[...super.prepareRenderPasses(e),s]}doRender(e){this.visible&&e.drawPhase===r.MAP&&super.doRender(e)}_getTileBounds(i){const t=this._tileInfoView.getTileBounds(e(),i);if(this.isCustomTilingScheme&&i.world){const{tileInfo:e}=this._tileInfoView,r=s(e.spatialReference);if(r){const{resolution:s}=e.lodAt(i.level),o=r/s%e.size[0],n=o?(e.size[0]-o)*s:0;t[0]-=n*i.world,t[2]-=n*i.world}}return t}}export{n as RasterTileContainer};
