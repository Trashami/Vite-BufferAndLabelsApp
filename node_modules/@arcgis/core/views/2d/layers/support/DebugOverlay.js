/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{g as e,h as t,d as s}from"../../../../chunks/mat3.js";import{c as r}from"../../../../chunks/mat3f32.js";import{BufferObject as a}from"../../../webgl/BufferObject.js";import"../../../webgl/FramebufferObject.js";import"../../../../core/arrayUtils.js";import"../../../../core/has.js";import"../../../webgl/checkWebGLError.js";import"../../../webgl/context-util.js";import{DataType as i,BlendFactor as o,PrimitiveType as n,Usage as m}from"../../../webgl/enums.js";import"../../../../chunks/builtins.js";import"../../../webgl/Texture.js";import{VertexArrayObject as f}from"../../../webgl/VertexArrayObject.js";import{DisplayObject as h}from"../../engine/DisplayObject.js";import{VertexElementDescriptor as c}from"../../../webgl/VertexElementDescriptor.js";const _={geometry:[new c("a_PositionAndFlags",3,i.SHORT,0,6)]},u=new Map;u.set("a_PositionAndFlags",0);const l={vsPath:"debug/overlay",fsPath:"debug/overlay",attributes:u};class d extends h{constructor(e){super(),this._conf=e}static makeFlags(e,t){return e|t<<2}_createTransforms(){return{dvs:r()}}doRender(e){this._updateTransforms(e),this._ensureResources(e);const{context:t}=e;t.useProgram(this._program),this._program.setUniformMatrix3fv("u_dvsMat3",this.transforms.dvs),this._program.setUniform4fv("u_colors",this._conf.getColors(e)),this._program.setUniform1fv("u_opacities",this._conf.getOpacities(e));const{vertexData:s,indexData:r}=this._conf.getMesh(e);this._vertexBuffer.setData(s),this._indexBuffer.setData(r),t.bindVAO(this._vertexArray),t.setBlendingEnabled(!0),t.setBlendFunction(o.ONE,o.ONE_MINUS_SRC_ALPHA),t.setDepthTestEnabled(!1),t.setStencilTestEnabled(!1),t.setColorMask(!0,!0,!0,!0),t.drawElements(n.TRIANGLES,r.length,i.UNSIGNED_INT,0)}onDetach(){this._vertexArray&&(this._vertexArray.dispose(),this._vertexArray=null)}_updateTransforms(r){e(this.transforms.dvs),t(this.transforms.dvs,this.transforms.dvs,[-1,1]),s(this.transforms.dvs,this.transforms.dvs,[2/r.state.size[0],-2/r.state.size[1],1])}_ensureResources(e){const{context:t}=e;this._program||(this._program=e.painter.materialManager.getProgram(l)),this._vertexBuffer||(this._vertexBuffer=a.createVertex(t,m.STREAM_DRAW)),this._indexBuffer||(this._indexBuffer=a.createIndex(t,m.STREAM_DRAW)),this._vertexArray||(this._vertexArray=new f(t,u,_,{geometry:this._vertexBuffer},this._indexBuffer))}}export{d as default};
