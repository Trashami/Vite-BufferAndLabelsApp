/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.25/esri/copyright.txt for details.
*/
import{isSome as n}from"../../core/maybe.js";import{euclideanHorizontalLength as r,euclideanLength as t,euclideanHorizontalDistanceBetweenPoints as e,euclideanDirectDistanceBetweenPoints as o,euclideanHorizontalDistance as u,euclideanDirectDistance as i}from"./euclideanLengthMeasurementUtils.js";import{geodesicLength as c,geodesicDistanceBetweenPoints as f,geodesicDistance as p}from"./geodesicLengthMeasurementUtils.js";function m(n,e){return y(t,c,r,e,n)}function s(n,r,t){return y(o,f,e,t,n,r)}function d(n,r,t,e){return y(i,p,u,e,n,r,t)}function a(n,r,t){return y(e,f,e,t,n,r)}function g(n,r,t,e){return y(u,p,u,e,n,r,t)}function l(n){return y(t,c,r,"on-the-ground",n)}function h(n,r){return y(e,f,e,"on-the-ground",n,r)}function y(r,t,e,o,...u){if("on-the-ground"===o){const r=t.apply(void 0,u);return n(r)?r:e.apply(void 0,u)}return r.apply(void 0,u)}export{d as autoDirectDistanceByElevationMode,s as autoDirectDistanceByElevationModeBetweenPoints,h as autoDistanceBetweenPoints2D,g as autoHorizontalDistanceByElevationMode,a as autoHorizontalDistanceByElevationModeBetweenPoints,l as autoLength2D,m as autoLengthByElevationMode};
